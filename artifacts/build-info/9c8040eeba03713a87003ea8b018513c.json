{"id":"9c8040eeba03713a87003ea8b018513c","_format":"hh-sol-build-info-1","solcVersion":"0.8.20","solcLongVersion":"0.8.20+commit.a1b79de6","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC5267.sol)\n\npragma solidity ^0.8.20;\n\ninterface IERC5267 {\n    /**\n     * @dev MAY be emitted to signal that the domain could have changed.\n     */\n    event EIP712DomainChanged();\n\n    /**\n     * @dev returns the fields and values that describe the domain separator used by this contract for EIP-712\n     * signature.\n     */\n    function eip712Domain()\n        external\n        view\n        returns (\n            bytes1 fields,\n            string memory name,\n            string memory version,\n            uint256 chainId,\n            address verifyingContract,\n            bytes32 salt,\n            uint256[] memory extensions\n        );\n}\n"},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * Both values are immutable: they can only be set once during construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/ERC20Burnable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC20} from \"../ERC20.sol\";\nimport {Context} from \"../../../utils/Context.sol\";\n\n/**\n * @dev Extension of {ERC20} that allows token holders to destroy both their own\n * tokens and those that they have an allowance for, in a way that can be\n * recognized off-chain (via event analysis).\n */\nabstract contract ERC20Burnable is Context, ERC20 {\n    /**\n     * @dev Destroys a `value` amount of tokens from the caller.\n     *\n     * See {ERC20-_burn}.\n     */\n    function burn(uint256 value) public virtual {\n        _burn(_msgSender(), value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, deducting from\n     * the caller's allowance.\n     *\n     * See {ERC20-_burn} and {ERC20-allowance}.\n     *\n     * Requirements:\n     *\n     * - the caller must have allowance for ``accounts``'s tokens of at least\n     * `value`.\n     */\n    function burnFrom(address account, uint256 value) public virtual {\n        _spendAllowance(account, _msgSender(), value);\n        _burn(account, value);\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/ERC20Permit.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20Permit} from \"./IERC20Permit.sol\";\nimport {ERC20} from \"../ERC20.sol\";\nimport {ECDSA} from \"../../../utils/cryptography/ECDSA.sol\";\nimport {EIP712} from \"../../../utils/cryptography/EIP712.sol\";\nimport {Nonces} from \"../../../utils/Nonces.sol\";\n\n/**\n * @dev Implementation of the ERC-20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[ERC-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC-20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n */\nabstract contract ERC20Permit is ERC20, IERC20Permit, EIP712, Nonces {\n    bytes32 private constant PERMIT_TYPEHASH =\n        keccak256(\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\");\n\n    /**\n     * @dev Permit deadline has expired.\n     */\n    error ERC2612ExpiredSignature(uint256 deadline);\n\n    /**\n     * @dev Mismatched signature.\n     */\n    error ERC2612InvalidSigner(address signer, address owner);\n\n    /**\n     * @dev Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\"1\"`.\n     *\n     * It's a good idea to use the same `name` that is defined as the ERC-20 token name.\n     */\n    constructor(string memory name) EIP712(name, \"1\") {}\n\n    /**\n     * @inheritdoc IERC20Permit\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) public virtual {\n        if (block.timestamp > deadline) {\n            revert ERC2612ExpiredSignature(deadline);\n        }\n\n        bytes32 structHash = keccak256(abi.encode(PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline));\n\n        bytes32 hash = _hashTypedDataV4(structHash);\n\n        address signer = ECDSA.recover(hash, v, r, s);\n        if (signer != owner) {\n            revert ERC2612InvalidSigner(signer, owner);\n        }\n\n        _approve(owner, spender, value);\n    }\n\n    /**\n     * @inheritdoc IERC20Permit\n     */\n    function nonces(address owner) public view virtual override(IERC20Permit, Nonces) returns (uint256) {\n        return super.nonces(owner);\n    }\n\n    /**\n     * @inheritdoc IERC20Permit\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view virtual returns (bytes32) {\n        return _domainSeparatorV4();\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Permit.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[ERC-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC-20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n *\n * ==== Security Considerations\n *\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n * generally recommended is:\n *\n * ```solidity\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n *     doThing(..., value);\n * }\n *\n * function doThing(..., uint256 value) public {\n *     token.safeTransferFrom(msg.sender, address(this), value);\n *     ...\n * }\n * ```\n *\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n * {SafeERC20-safeTransferFrom}).\n *\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n * contracts should have entry points that don't rely on permit.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     *\n     * CAUTION: See Security Considerations above.\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/cryptography/ECDSA.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n *\n * These functions can be used to verify that a message was signed by the holder\n * of the private keys of a given address.\n */\nlibrary ECDSA {\n    enum RecoverError {\n        NoError,\n        InvalidSignature,\n        InvalidSignatureLength,\n        InvalidSignatureS\n    }\n\n    /**\n     * @dev The signature derives the `address(0)`.\n     */\n    error ECDSAInvalidSignature();\n\n    /**\n     * @dev The signature has an invalid length.\n     */\n    error ECDSAInvalidSignatureLength(uint256 length);\n\n    /**\n     * @dev The signature has an S value that is in the upper half order.\n     */\n    error ECDSAInvalidSignatureS(bytes32 s);\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n     * return address(0) without also returning an error description. Errors are documented using an enum (error type)\n     * and a bytes32 providing additional information about the error.\n     *\n     * If no error is returned, then the address can be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     *\n     * Documentation for signature generation:\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n     */\n    function tryRecover(\n        bytes32 hash,\n        bytes memory signature\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        if (signature.length == 65) {\n            bytes32 r;\n            bytes32 s;\n            uint8 v;\n            // ecrecover takes the signature parameters, and the only way to get them\n            // currently is to use assembly.\n            assembly (\"memory-safe\") {\n                r := mload(add(signature, 0x20))\n                s := mload(add(signature, 0x40))\n                v := byte(0, mload(add(signature, 0x60)))\n            }\n            return tryRecover(hash, v, r, s);\n        } else {\n            return (address(0), RecoverError.InvalidSignatureLength, bytes32(signature.length));\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature`. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     */\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, signature);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n     *\n     * See https://eips.ethereum.org/EIPS/eip-2098[ERC-2098 short signatures]\n     */\n    function tryRecover(\n        bytes32 hash,\n        bytes32 r,\n        bytes32 vs\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        unchecked {\n            bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\n            // We do not check for an overflow here since the shift operation results in 0 or 1.\n            uint8 v = uint8((uint256(vs) >> 255) + 27);\n            return tryRecover(hash, v, r, s);\n        }\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n     */\n    function recover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, r, vs);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function tryRecover(\n        bytes32 hash,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\n        // the valid range for s in (301): 0 < s < secp256k1n ÷ 2 + 1, and for v in (302): v ∈ {27, 28}. Most\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\n        //\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\n        // these malleable signatures as well.\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\n            return (address(0), RecoverError.InvalidSignatureS, s);\n        }\n\n        // If the signature is valid (and not malleable), return the signer address\n        address signer = ecrecover(hash, v, r, s);\n        if (signer == address(0)) {\n            return (address(0), RecoverError.InvalidSignature, bytes32(0));\n        }\n\n        return (signer, RecoverError.NoError, bytes32(0));\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, v, r, s);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Optionally reverts with the corresponding custom error according to the `error` argument provided.\n     */\n    function _throwError(RecoverError error, bytes32 errorArg) private pure {\n        if (error == RecoverError.NoError) {\n            return; // no error: do nothing\n        } else if (error == RecoverError.InvalidSignature) {\n            revert ECDSAInvalidSignature();\n        } else if (error == RecoverError.InvalidSignatureLength) {\n            revert ECDSAInvalidSignatureLength(uint256(errorArg));\n        } else if (error == RecoverError.InvalidSignatureS) {\n            revert ECDSAInvalidSignatureS(errorArg);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/cryptography/EIP712.sol)\n\npragma solidity ^0.8.20;\n\nimport {MessageHashUtils} from \"./MessageHashUtils.sol\";\nimport {ShortStrings, ShortString} from \"../ShortStrings.sol\";\nimport {IERC5267} from \"../../interfaces/IERC5267.sol\";\n\n/**\n * @dev https://eips.ethereum.org/EIPS/eip-712[EIP-712] is a standard for hashing and signing of typed structured data.\n *\n * The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose\n * encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract\n * does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to\n * produce the hash of their typed data using a combination of `abi.encode` and `keccak256`.\n *\n * This contract implements the EIP-712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n * scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n * ({_hashTypedDataV4}).\n *\n * The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n * the chain id to protect against replay attacks on an eventual fork of the chain.\n *\n * NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n * https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n *\n * NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain\n * separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the\n * separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\n *\n * @custom:oz-upgrades-unsafe-allow state-variable-immutable\n */\nabstract contract EIP712 is IERC5267 {\n    using ShortStrings for *;\n\n    bytes32 private constant TYPE_HASH =\n        keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\");\n\n    // Cache the domain separator as an immutable value, but also store the chain id that it corresponds to, in order to\n    // invalidate the cached domain separator if the chain id changes.\n    bytes32 private immutable _cachedDomainSeparator;\n    uint256 private immutable _cachedChainId;\n    address private immutable _cachedThis;\n\n    bytes32 private immutable _hashedName;\n    bytes32 private immutable _hashedVersion;\n\n    ShortString private immutable _name;\n    ShortString private immutable _version;\n    // slither-disable-next-line constable-states\n    string private _nameFallback;\n    // slither-disable-next-line constable-states\n    string private _versionFallback;\n\n    /**\n     * @dev Initializes the domain separator and parameter caches.\n     *\n     * The meaning of `name` and `version` is specified in\n     * https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP-712]:\n     *\n     * - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n     * - `version`: the current major version of the signing domain.\n     *\n     * NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n     * contract upgrade].\n     */\n    constructor(string memory name, string memory version) {\n        _name = name.toShortStringWithFallback(_nameFallback);\n        _version = version.toShortStringWithFallback(_versionFallback);\n        _hashedName = keccak256(bytes(name));\n        _hashedVersion = keccak256(bytes(version));\n\n        _cachedChainId = block.chainid;\n        _cachedDomainSeparator = _buildDomainSeparator();\n        _cachedThis = address(this);\n    }\n\n    /**\n     * @dev Returns the domain separator for the current chain.\n     */\n    function _domainSeparatorV4() internal view returns (bytes32) {\n        if (address(this) == _cachedThis && block.chainid == _cachedChainId) {\n            return _cachedDomainSeparator;\n        } else {\n            return _buildDomainSeparator();\n        }\n    }\n\n    function _buildDomainSeparator() private view returns (bytes32) {\n        return keccak256(abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this)));\n    }\n\n    /**\n     * @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n     * function returns the hash of the fully encoded EIP712 message for this domain.\n     *\n     * This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n     *\n     * ```solidity\n     * bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     *     keccak256(\"Mail(address to,string contents)\"),\n     *     mailTo,\n     *     keccak256(bytes(mailContents))\n     * )));\n     * address signer = ECDSA.recover(digest, signature);\n     * ```\n     */\n    function _hashTypedDataV4(bytes32 structHash) internal view virtual returns (bytes32) {\n        return MessageHashUtils.toTypedDataHash(_domainSeparatorV4(), structHash);\n    }\n\n    /**\n     * @inheritdoc IERC5267\n     */\n    function eip712Domain()\n        public\n        view\n        virtual\n        returns (\n            bytes1 fields,\n            string memory name,\n            string memory version,\n            uint256 chainId,\n            address verifyingContract,\n            bytes32 salt,\n            uint256[] memory extensions\n        )\n    {\n        return (\n            hex\"0f\", // 01111\n            _EIP712Name(),\n            _EIP712Version(),\n            block.chainid,\n            address(this),\n            bytes32(0),\n            new uint256[](0)\n        );\n    }\n\n    /**\n     * @dev The name parameter for the EIP712 domain.\n     *\n     * NOTE: By default this function reads _name which is an immutable value.\n     * It only reads from storage if necessary (in case the value is too large to fit in a ShortString).\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function _EIP712Name() internal view returns (string memory) {\n        return _name.toStringWithFallback(_nameFallback);\n    }\n\n    /**\n     * @dev The version parameter for the EIP712 domain.\n     *\n     * NOTE: By default this function reads _version which is an immutable value.\n     * It only reads from storage if necessary (in case the value is too large to fit in a ShortString).\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function _EIP712Version() internal view returns (string memory) {\n        return _version.toStringWithFallback(_versionFallback);\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/cryptography/MessageHashUtils.sol)\n\npragma solidity ^0.8.20;\n\nimport {Strings} from \"../Strings.sol\";\n\n/**\n * @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n *\n * The library provides methods for generating a hash of a message that conforms to the\n * https://eips.ethereum.org/EIPS/eip-191[ERC-191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n * specifications.\n */\nlibrary MessageHashUtils {\n    /**\n     * @dev Returns the keccak256 digest of an ERC-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing a bytes32 `messageHash` with\n     * `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n     * hash signed when using the https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n     * keccak256, although any bytes32 value can be safely used because the final digest will\n     * be re-hashed.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes32 messageHash) internal pure returns (bytes32 digest) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, \"\\x19Ethereum Signed Message:\\n32\") // 32 is the bytes-length of messageHash\n            mstore(0x1c, messageHash) // 0x1c (28) is the length of the prefix\n            digest := keccak256(0x00, 0x3c) // 0x3c is the length of the prefix (0x1c) + messageHash (0x20)\n        }\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an ERC-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing an arbitrary `message` with\n     * `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n     * hash signed when using the https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes memory message) internal pure returns (bytes32) {\n        return\n            keccak256(bytes.concat(\"\\x19Ethereum Signed Message:\\n\", bytes(Strings.toString(message.length)), message));\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an ERC-191 signed data with version\n     * `0x00` (data with intended validator).\n     *\n     * The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n     * `validator` address. Then hashing the result.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toDataWithIntendedValidatorHash(address validator, bytes memory data) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(hex\"19_00\", validator, data));\n    }\n\n    /**\n     * @dev Variant of {toDataWithIntendedValidatorHash-address-bytes} optimized for cases where `data` is a bytes32.\n     */\n    function toDataWithIntendedValidatorHash(\n        address validator,\n        bytes32 messageHash\n    ) internal pure returns (bytes32 digest) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, hex\"19_00\")\n            mstore(0x02, shl(96, validator))\n            mstore(0x16, messageHash)\n            digest := keccak256(0x00, 0x36)\n        }\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an EIP-712 typed data (ERC-191 version `0x01`).\n     *\n     * The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n     * `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n     * https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32 digest) {\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            mstore(ptr, hex\"19_01\")\n            mstore(add(ptr, 0x02), domainSeparator)\n            mstore(add(ptr, 0x22), structHash)\n            digest := keccak256(ptr, 0x42)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\nimport {Panic} from \"../Panic.sol\";\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Return the 512-bit addition of two uint256.\n     *\n     * The result is stored in two 256 variables such that sum = high * 2²⁵⁶ + low.\n     */\n    function add512(uint256 a, uint256 b) internal pure returns (uint256 high, uint256 low) {\n        assembly (\"memory-safe\") {\n            low := add(a, b)\n            high := lt(low, a)\n        }\n    }\n\n    /**\n     * @dev Return the 512-bit multiplication of two uint256.\n     *\n     * The result is stored in two 256 variables such that product = high * 2²⁵⁶ + low.\n     */\n    function mul512(uint256 a, uint256 b) internal pure returns (uint256 high, uint256 low) {\n        // 512-bit multiply [high low] = x * y. Compute the product mod 2²⁵⁶ and mod 2²⁵⁶ - 1, then use\n        // the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n        // variables such that product = high * 2²⁵⁶ + low.\n        assembly (\"memory-safe\") {\n            let mm := mulmod(a, b, not(0))\n            low := mul(a, b)\n            high := sub(sub(mm, low), lt(mm, low))\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with a success flag (no overflow).\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a + b;\n            success = c >= a;\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with a success flag (no overflow).\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a - b;\n            success = c <= a;\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with a success flag (no overflow).\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a * b;\n            assembly (\"memory-safe\") {\n                // Only true when the multiplication doesn't overflow\n                // (c / a == b) || (a == 0)\n                success := or(eq(div(c, a), b), iszero(a))\n            }\n            // equivalent to: success ? c : 0\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            success = b > 0;\n            assembly (\"memory-safe\") {\n                // The `DIV` opcode returns zero when the denominator is 0.\n                result := div(a, b)\n            }\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            success = b > 0;\n            assembly (\"memory-safe\") {\n                // The `MOD` opcode returns zero when the denominator is 0.\n                result := mod(a, b)\n            }\n        }\n    }\n\n    /**\n     * @dev Unsigned saturating addition, bounds to `2²⁵⁶ - 1` instead of overflowing.\n     */\n    function saturatingAdd(uint256 a, uint256 b) internal pure returns (uint256) {\n        (bool success, uint256 result) = tryAdd(a, b);\n        return ternary(success, result, type(uint256).max);\n    }\n\n    /**\n     * @dev Unsigned saturating subtraction, bounds to zero instead of overflowing.\n     */\n    function saturatingSub(uint256 a, uint256 b) internal pure returns (uint256) {\n        (, uint256 result) = trySub(a, b);\n        return result;\n    }\n\n    /**\n     * @dev Unsigned saturating multiplication, bounds to `2²⁵⁶ - 1` instead of overflowing.\n     */\n    function saturatingMul(uint256 a, uint256 b) internal pure returns (uint256) {\n        (bool success, uint256 result) = tryMul(a, b);\n        return ternary(success, result, type(uint256).max);\n    }\n\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, uint256 a, uint256 b) internal pure returns (uint256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * SafeCast.toUint(condition));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n\n        // The following calculation ensures accurate ceiling division without overflow.\n        // Since a is non-zero, (a - 1) / b will not overflow.\n        // The largest possible result occurs when (a - 1) / b is type(uint256).max,\n        // but the largest value we can obtain is type(uint256).max - 1, which happens\n        // when a = type(uint256).max and b = 1.\n        unchecked {\n            return SafeCast.toUint(a > 0) * ((a - 1) / b + 1);\n        }\n    }\n\n    /**\n     * @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     *\n     * Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            (uint256 high, uint256 low) = mul512(x, y);\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (high == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return low / denominator;\n            }\n\n            // Make sure the result is less than 2²⁵⁶. Also prevents denominator == 0.\n            if (denominator <= high) {\n                Panic.panic(ternary(denominator == 0, Panic.DIVISION_BY_ZERO, Panic.UNDER_OVERFLOW));\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [high low].\n            uint256 remainder;\n            assembly (\"memory-safe\") {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                high := sub(high, gt(remainder, low))\n                low := sub(low, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly (\"memory-safe\") {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [high low] by twos.\n                low := div(low, twos)\n\n                // Flip twos such that it is 2²⁵⁶ / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from high into low.\n            low |= high * twos;\n\n            // Invert denominator mod 2²⁵⁶. Now that denominator is an odd number, it has an inverse modulo 2²⁵⁶ such\n            // that denominator * inv ≡ 1 mod 2²⁵⁶. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv ≡ 1 mod 2⁴.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹⁶\n            inverse *= 2 - denominator * inverse; // inverse mod 2³²\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁶⁴\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹²⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2²⁵⁶\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2²⁵⁶. Since the preconditions guarantee that the outcome is\n            // less than 2²⁵⁶, this is the final result. We don't need to compute the high bits of the result and high\n            // is no longer required.\n            result = low * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @dev Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        return mulDiv(x, y, denominator) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0);\n    }\n\n    /**\n     * @dev Calculates floor(x * y >> n) with full precision. Throws if result overflows a uint256.\n     */\n    function mulShr(uint256 x, uint256 y, uint8 n) internal pure returns (uint256 result) {\n        unchecked {\n            (uint256 high, uint256 low) = mul512(x, y);\n            if (high >= 1 << n) {\n                Panic.panic(Panic.UNDER_OVERFLOW);\n            }\n            return (high << (256 - n)) | (low >> n);\n        }\n    }\n\n    /**\n     * @dev Calculates x * y >> n with full precision, following the selected rounding direction.\n     */\n    function mulShr(uint256 x, uint256 y, uint8 n, Rounding rounding) internal pure returns (uint256) {\n        return mulShr(x, y, n) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, 1 << n) > 0);\n    }\n\n    /**\n     * @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n     *\n     * If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n     * If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n     *\n     * If the input value is not inversible, 0 is returned.\n     *\n     * NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n     * inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}.\n     */\n    function invMod(uint256 a, uint256 n) internal pure returns (uint256) {\n        unchecked {\n            if (n == 0) return 0;\n\n            // The inverse modulo is calculated using the Extended Euclidean Algorithm (iterative version)\n            // Used to compute integers x and y such that: ax + ny = gcd(a, n).\n            // When the gcd is 1, then the inverse of a modulo n exists and it's x.\n            // ax + ny = 1\n            // ax = 1 + (-y)n\n            // ax ≡ 1 (mod n) # x is the inverse of a modulo n\n\n            // If the remainder is 0 the gcd is n right away.\n            uint256 remainder = a % n;\n            uint256 gcd = n;\n\n            // Therefore the initial coefficients are:\n            // ax + ny = gcd(a, n) = n\n            // 0a + 1n = n\n            int256 x = 0;\n            int256 y = 1;\n\n            while (remainder != 0) {\n                uint256 quotient = gcd / remainder;\n\n                (gcd, remainder) = (\n                    // The old remainder is the next gcd to try.\n                    remainder,\n                    // Compute the next remainder.\n                    // Can't overflow given that (a % gcd) * (gcd // (a % gcd)) <= gcd\n                    // where gcd is at most n (capped to type(uint256).max)\n                    gcd - remainder * quotient\n                );\n\n                (x, y) = (\n                    // Increment the coefficient of a.\n                    y,\n                    // Decrement the coefficient of n.\n                    // Can overflow, but the result is casted to uint256 so that the\n                    // next value of y is \"wrapped around\" to a value between 0 and n - 1.\n                    x - y * int256(quotient)\n                );\n            }\n\n            if (gcd != 1) return 0; // No inverse exists.\n            return ternary(x < 0, n - uint256(-x), uint256(x)); // Wrap the result if it's negative.\n        }\n    }\n\n    /**\n     * @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n     *\n     * From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n     * prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n     * `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n     *\n     * NOTE: this function does NOT check that `p` is a prime greater than `2`.\n     */\n    function invModPrime(uint256 a, uint256 p) internal view returns (uint256) {\n        unchecked {\n            return Math.modExp(a, p - 2, p);\n        }\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n     *\n     * Requirements:\n     * - modulus can't be zero\n     * - underlying staticcall to precompile must succeed\n     *\n     * IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n     * sure the chain you're using it on supports the precompiled contract for modular exponentiation\n     * at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n     * the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n     * interpreted as 0.\n     */\n    function modExp(uint256 b, uint256 e, uint256 m) internal view returns (uint256) {\n        (bool success, uint256 result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n     * It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n     * to operate modulo 0 or if the underlying precompile reverted.\n     *\n     * IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n     * you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n     * https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n     * of a revert, but the result may be incorrectly interpreted as 0.\n     */\n    function tryModExp(uint256 b, uint256 e, uint256 m) internal view returns (bool success, uint256 result) {\n        if (m == 0) return (false, 0);\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            // | Offset    | Content    | Content (Hex)                                                      |\n            // |-----------|------------|--------------------------------------------------------------------|\n            // | 0x00:0x1f | size of b  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x20:0x3f | size of e  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x40:0x5f | size of m  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x60:0x7f | value of b | 0x<.............................................................b> |\n            // | 0x80:0x9f | value of e | 0x<.............................................................e> |\n            // | 0xa0:0xbf | value of m | 0x<.............................................................m> |\n            mstore(ptr, 0x20)\n            mstore(add(ptr, 0x20), 0x20)\n            mstore(add(ptr, 0x40), 0x20)\n            mstore(add(ptr, 0x60), b)\n            mstore(add(ptr, 0x80), e)\n            mstore(add(ptr, 0xa0), m)\n\n            // Given the result < m, it's guaranteed to fit in 32 bytes,\n            // so we can use the memory scratch space located at offset 0.\n            success := staticcall(gas(), 0x05, ptr, 0xc0, 0x00, 0x20)\n            result := mload(0x00)\n        }\n    }\n\n    /**\n     * @dev Variant of {modExp} that supports inputs of arbitrary length.\n     */\n    function modExp(bytes memory b, bytes memory e, bytes memory m) internal view returns (bytes memory) {\n        (bool success, bytes memory result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Variant of {tryModExp} that supports inputs of arbitrary length.\n     */\n    function tryModExp(\n        bytes memory b,\n        bytes memory e,\n        bytes memory m\n    ) internal view returns (bool success, bytes memory result) {\n        if (_zeroBytes(m)) return (false, new bytes(0));\n\n        uint256 mLen = m.length;\n\n        // Encode call args in result and move the free memory pointer\n        result = abi.encodePacked(b.length, e.length, mLen, b, e, m);\n\n        assembly (\"memory-safe\") {\n            let dataPtr := add(result, 0x20)\n            // Write result on top of args to avoid allocating extra memory.\n            success := staticcall(gas(), 0x05, dataPtr, mload(result), dataPtr, mLen)\n            // Overwrite the length.\n            // result.length > returndatasize() is guaranteed because returndatasize() == m.length\n            mstore(result, mLen)\n            // Set the memory pointer after the returned data.\n            mstore(0x40, add(dataPtr, mLen))\n        }\n    }\n\n    /**\n     * @dev Returns whether the provided byte array is zero.\n     */\n    function _zeroBytes(bytes memory byteArray) private pure returns (bool) {\n        for (uint256 i = 0; i < byteArray.length; ++i) {\n            if (byteArray[i] != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n     * using integer operations.\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        unchecked {\n            // Take care of easy edge cases when a == 0 or a == 1\n            if (a <= 1) {\n                return a;\n            }\n\n            // In this function, we use Newton's method to get a root of `f(x) := x² - a`. It involves building a\n            // sequence x_n that converges toward sqrt(a). For each iteration x_n, we also define the error between\n            // the current value as `ε_n = | x_n - sqrt(a) |`.\n            //\n            // For our first estimation, we consider `e` the smallest power of 2 which is bigger than the square root\n            // of the target. (i.e. `2**(e-1) ≤ sqrt(a) < 2**e`). We know that `e ≤ 128` because `(2¹²⁸)² = 2²⁵⁶` is\n            // bigger than any uint256.\n            //\n            // By noticing that\n            // `2**(e-1) ≤ sqrt(a) < 2**e → (2**(e-1))² ≤ a < (2**e)² → 2**(2*e-2) ≤ a < 2**(2*e)`\n            // we can deduce that `e - 1` is `log2(a) / 2`. We can thus compute `x_n = 2**(e-1)` using a method similar\n            // to the msb function.\n            uint256 aa = a;\n            uint256 xn = 1;\n\n            if (aa >= (1 << 128)) {\n                aa >>= 128;\n                xn <<= 64;\n            }\n            if (aa >= (1 << 64)) {\n                aa >>= 64;\n                xn <<= 32;\n            }\n            if (aa >= (1 << 32)) {\n                aa >>= 32;\n                xn <<= 16;\n            }\n            if (aa >= (1 << 16)) {\n                aa >>= 16;\n                xn <<= 8;\n            }\n            if (aa >= (1 << 8)) {\n                aa >>= 8;\n                xn <<= 4;\n            }\n            if (aa >= (1 << 4)) {\n                aa >>= 4;\n                xn <<= 2;\n            }\n            if (aa >= (1 << 2)) {\n                xn <<= 1;\n            }\n\n            // We now have x_n such that `x_n = 2**(e-1) ≤ sqrt(a) < 2**e = 2 * x_n`. This implies ε_n ≤ 2**(e-1).\n            //\n            // We can refine our estimation by noticing that the middle of that interval minimizes the error.\n            // If we move x_n to equal 2**(e-1) + 2**(e-2), then we reduce the error to ε_n ≤ 2**(e-2).\n            // This is going to be our x_0 (and ε_0)\n            xn = (3 * xn) >> 1; // ε_0 := | x_0 - sqrt(a) | ≤ 2**(e-2)\n\n            // From here, Newton's method give us:\n            // x_{n+1} = (x_n + a / x_n) / 2\n            //\n            // One should note that:\n            // x_{n+1}² - a = ((x_n + a / x_n) / 2)² - a\n            //              = ((x_n² + a) / (2 * x_n))² - a\n            //              = (x_n⁴ + 2 * a * x_n² + a²) / (4 * x_n²) - a\n            //              = (x_n⁴ + 2 * a * x_n² + a² - 4 * a * x_n²) / (4 * x_n²)\n            //              = (x_n⁴ - 2 * a * x_n² + a²) / (4 * x_n²)\n            //              = (x_n² - a)² / (2 * x_n)²\n            //              = ((x_n² - a) / (2 * x_n))²\n            //              ≥ 0\n            // Which proves that for all n ≥ 1, sqrt(a) ≤ x_n\n            //\n            // This gives us the proof of quadratic convergence of the sequence:\n            // ε_{n+1} = | x_{n+1} - sqrt(a) |\n            //         = | (x_n + a / x_n) / 2 - sqrt(a) |\n            //         = | (x_n² + a - 2*x_n*sqrt(a)) / (2 * x_n) |\n            //         = | (x_n - sqrt(a))² / (2 * x_n) |\n            //         = | ε_n² / (2 * x_n) |\n            //         = ε_n² / | (2 * x_n) |\n            //\n            // For the first iteration, we have a special case where x_0 is known:\n            // ε_1 = ε_0² / | (2 * x_0) |\n            //     ≤ (2**(e-2))² / (2 * (2**(e-1) + 2**(e-2)))\n            //     ≤ 2**(2*e-4) / (3 * 2**(e-1))\n            //     ≤ 2**(e-3) / 3\n            //     ≤ 2**(e-3-log2(3))\n            //     ≤ 2**(e-4.5)\n            //\n            // For the following iterations, we use the fact that, 2**(e-1) ≤ sqrt(a) ≤ x_n:\n            // ε_{n+1} = ε_n² / | (2 * x_n) |\n            //         ≤ (2**(e-k))² / (2 * 2**(e-1))\n            //         ≤ 2**(2*e-2*k) / 2**e\n            //         ≤ 2**(e-2*k)\n            xn = (xn + a / xn) >> 1; // ε_1 := | x_1 - sqrt(a) | ≤ 2**(e-4.5)  -- special case, see above\n            xn = (xn + a / xn) >> 1; // ε_2 := | x_2 - sqrt(a) | ≤ 2**(e-9)    -- general case with k = 4.5\n            xn = (xn + a / xn) >> 1; // ε_3 := | x_3 - sqrt(a) | ≤ 2**(e-18)   -- general case with k = 9\n            xn = (xn + a / xn) >> 1; // ε_4 := | x_4 - sqrt(a) | ≤ 2**(e-36)   -- general case with k = 18\n            xn = (xn + a / xn) >> 1; // ε_5 := | x_5 - sqrt(a) | ≤ 2**(e-72)   -- general case with k = 36\n            xn = (xn + a / xn) >> 1; // ε_6 := | x_6 - sqrt(a) | ≤ 2**(e-144)  -- general case with k = 72\n\n            // Because e ≤ 128 (as discussed during the first estimation phase), we know have reached a precision\n            // ε_6 ≤ 2**(e-144) < 1. Given we're operating on integers, then we can ensure that xn is now either\n            // sqrt(a) or sqrt(a) + 1.\n            return xn - SafeCast.toUint(xn > a / xn);\n        }\n    }\n\n    /**\n     * @dev Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && result * result < a);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 x) internal pure returns (uint256 r) {\n        // If value has upper 128 bits set, log2 result is at least 128\n        r = SafeCast.toUint(x > 0xffffffffffffffffffffffffffffffff) << 7;\n        // If upper 64 bits of 128-bit half set, add 64 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffffffffffff) << 6;\n        // If upper 32 bits of 64-bit half set, add 32 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffff) << 5;\n        // If upper 16 bits of 32-bit half set, add 16 to result\n        r |= SafeCast.toUint((x >> r) > 0xffff) << 4;\n        // If upper 8 bits of 16-bit half set, add 8 to result\n        r |= SafeCast.toUint((x >> r) > 0xff) << 3;\n        // If upper 4 bits of 8-bit half set, add 4 to result\n        r |= SafeCast.toUint((x >> r) > 0xf) << 2;\n\n        // Shifts value right by the current result and use it as an index into this lookup table:\n        //\n        // | x (4 bits) |  index  | table[index] = MSB position |\n        // |------------|---------|-----------------------------|\n        // |    0000    |    0    |        table[0] = 0         |\n        // |    0001    |    1    |        table[1] = 0         |\n        // |    0010    |    2    |        table[2] = 1         |\n        // |    0011    |    3    |        table[3] = 1         |\n        // |    0100    |    4    |        table[4] = 2         |\n        // |    0101    |    5    |        table[5] = 2         |\n        // |    0110    |    6    |        table[6] = 2         |\n        // |    0111    |    7    |        table[7] = 2         |\n        // |    1000    |    8    |        table[8] = 3         |\n        // |    1001    |    9    |        table[9] = 3         |\n        // |    1010    |   10    |        table[10] = 3        |\n        // |    1011    |   11    |        table[11] = 3        |\n        // |    1100    |   12    |        table[12] = 3        |\n        // |    1101    |   13    |        table[13] = 3        |\n        // |    1110    |   14    |        table[14] = 3        |\n        // |    1111    |   15    |        table[15] = 3        |\n        //\n        // The lookup table is represented as a 32-byte value with the MSB positions for 0-15 in the last 16 bytes.\n        assembly (\"memory-safe\") {\n            r := or(r, byte(shr(r, x), 0x0000010102020202030303030303030300000000000000000000000000000000))\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 10 ** result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 x) internal pure returns (uint256 r) {\n        // If value has upper 128 bits set, log2 result is at least 128\n        r = SafeCast.toUint(x > 0xffffffffffffffffffffffffffffffff) << 7;\n        // If upper 64 bits of 128-bit half set, add 64 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffffffffffff) << 6;\n        // If upper 32 bits of 64-bit half set, add 32 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffff) << 5;\n        // If upper 16 bits of 32-bit half set, add 16 to result\n        r |= SafeCast.toUint((x >> r) > 0xffff) << 4;\n        // Add 1 if upper 8 bits of 16-bit half set, and divide accumulated result by 8\n        return (r >> 3) | SafeCast.toUint((x >> r) > 0xff);\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << (result << 3) < value);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SafeCast.sol)\n// This file was procedurally generated from scripts/generate/templates/SafeCast.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n * checks.\n *\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n * easily result in undesired exploitation or bugs, since developers usually\n * assume that overflows raise errors. `SafeCast` restores this intuition by\n * reverting the transaction when such an operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeCast {\n    /**\n     * @dev Value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedUintDowncast(uint8 bits, uint256 value);\n\n    /**\n     * @dev An int value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedIntToUint(int256 value);\n\n    /**\n     * @dev Value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedIntDowncast(uint8 bits, int256 value);\n\n    /**\n     * @dev An uint value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedUintToInt(uint256 value);\n\n    /**\n     * @dev Returns the downcasted uint248 from uint256, reverting on\n     * overflow (when the input is greater than largest uint248).\n     *\n     * Counterpart to Solidity's `uint248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toUint248(uint256 value) internal pure returns (uint248) {\n        if (value > type(uint248).max) {\n            revert SafeCastOverflowedUintDowncast(248, value);\n        }\n        return uint248(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint240 from uint256, reverting on\n     * overflow (when the input is greater than largest uint240).\n     *\n     * Counterpart to Solidity's `uint240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toUint240(uint256 value) internal pure returns (uint240) {\n        if (value > type(uint240).max) {\n            revert SafeCastOverflowedUintDowncast(240, value);\n        }\n        return uint240(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint232 from uint256, reverting on\n     * overflow (when the input is greater than largest uint232).\n     *\n     * Counterpart to Solidity's `uint232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toUint232(uint256 value) internal pure returns (uint232) {\n        if (value > type(uint232).max) {\n            revert SafeCastOverflowedUintDowncast(232, value);\n        }\n        return uint232(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint224 from uint256, reverting on\n     * overflow (when the input is greater than largest uint224).\n     *\n     * Counterpart to Solidity's `uint224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toUint224(uint256 value) internal pure returns (uint224) {\n        if (value > type(uint224).max) {\n            revert SafeCastOverflowedUintDowncast(224, value);\n        }\n        return uint224(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint216 from uint256, reverting on\n     * overflow (when the input is greater than largest uint216).\n     *\n     * Counterpart to Solidity's `uint216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toUint216(uint256 value) internal pure returns (uint216) {\n        if (value > type(uint216).max) {\n            revert SafeCastOverflowedUintDowncast(216, value);\n        }\n        return uint216(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint208 from uint256, reverting on\n     * overflow (when the input is greater than largest uint208).\n     *\n     * Counterpart to Solidity's `uint208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toUint208(uint256 value) internal pure returns (uint208) {\n        if (value > type(uint208).max) {\n            revert SafeCastOverflowedUintDowncast(208, value);\n        }\n        return uint208(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint200 from uint256, reverting on\n     * overflow (when the input is greater than largest uint200).\n     *\n     * Counterpart to Solidity's `uint200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toUint200(uint256 value) internal pure returns (uint200) {\n        if (value > type(uint200).max) {\n            revert SafeCastOverflowedUintDowncast(200, value);\n        }\n        return uint200(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint192 from uint256, reverting on\n     * overflow (when the input is greater than largest uint192).\n     *\n     * Counterpart to Solidity's `uint192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toUint192(uint256 value) internal pure returns (uint192) {\n        if (value > type(uint192).max) {\n            revert SafeCastOverflowedUintDowncast(192, value);\n        }\n        return uint192(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint184 from uint256, reverting on\n     * overflow (when the input is greater than largest uint184).\n     *\n     * Counterpart to Solidity's `uint184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toUint184(uint256 value) internal pure returns (uint184) {\n        if (value > type(uint184).max) {\n            revert SafeCastOverflowedUintDowncast(184, value);\n        }\n        return uint184(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint176 from uint256, reverting on\n     * overflow (when the input is greater than largest uint176).\n     *\n     * Counterpart to Solidity's `uint176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toUint176(uint256 value) internal pure returns (uint176) {\n        if (value > type(uint176).max) {\n            revert SafeCastOverflowedUintDowncast(176, value);\n        }\n        return uint176(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint168 from uint256, reverting on\n     * overflow (when the input is greater than largest uint168).\n     *\n     * Counterpart to Solidity's `uint168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toUint168(uint256 value) internal pure returns (uint168) {\n        if (value > type(uint168).max) {\n            revert SafeCastOverflowedUintDowncast(168, value);\n        }\n        return uint168(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint160 from uint256, reverting on\n     * overflow (when the input is greater than largest uint160).\n     *\n     * Counterpart to Solidity's `uint160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toUint160(uint256 value) internal pure returns (uint160) {\n        if (value > type(uint160).max) {\n            revert SafeCastOverflowedUintDowncast(160, value);\n        }\n        return uint160(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint152 from uint256, reverting on\n     * overflow (when the input is greater than largest uint152).\n     *\n     * Counterpart to Solidity's `uint152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toUint152(uint256 value) internal pure returns (uint152) {\n        if (value > type(uint152).max) {\n            revert SafeCastOverflowedUintDowncast(152, value);\n        }\n        return uint152(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint144 from uint256, reverting on\n     * overflow (when the input is greater than largest uint144).\n     *\n     * Counterpart to Solidity's `uint144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toUint144(uint256 value) internal pure returns (uint144) {\n        if (value > type(uint144).max) {\n            revert SafeCastOverflowedUintDowncast(144, value);\n        }\n        return uint144(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint136 from uint256, reverting on\n     * overflow (when the input is greater than largest uint136).\n     *\n     * Counterpart to Solidity's `uint136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toUint136(uint256 value) internal pure returns (uint136) {\n        if (value > type(uint136).max) {\n            revert SafeCastOverflowedUintDowncast(136, value);\n        }\n        return uint136(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint128 from uint256, reverting on\n     * overflow (when the input is greater than largest uint128).\n     *\n     * Counterpart to Solidity's `uint128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toUint128(uint256 value) internal pure returns (uint128) {\n        if (value > type(uint128).max) {\n            revert SafeCastOverflowedUintDowncast(128, value);\n        }\n        return uint128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint120 from uint256, reverting on\n     * overflow (when the input is greater than largest uint120).\n     *\n     * Counterpart to Solidity's `uint120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toUint120(uint256 value) internal pure returns (uint120) {\n        if (value > type(uint120).max) {\n            revert SafeCastOverflowedUintDowncast(120, value);\n        }\n        return uint120(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint112 from uint256, reverting on\n     * overflow (when the input is greater than largest uint112).\n     *\n     * Counterpart to Solidity's `uint112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toUint112(uint256 value) internal pure returns (uint112) {\n        if (value > type(uint112).max) {\n            revert SafeCastOverflowedUintDowncast(112, value);\n        }\n        return uint112(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint104 from uint256, reverting on\n     * overflow (when the input is greater than largest uint104).\n     *\n     * Counterpart to Solidity's `uint104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toUint104(uint256 value) internal pure returns (uint104) {\n        if (value > type(uint104).max) {\n            revert SafeCastOverflowedUintDowncast(104, value);\n        }\n        return uint104(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint96 from uint256, reverting on\n     * overflow (when the input is greater than largest uint96).\n     *\n     * Counterpart to Solidity's `uint96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toUint96(uint256 value) internal pure returns (uint96) {\n        if (value > type(uint96).max) {\n            revert SafeCastOverflowedUintDowncast(96, value);\n        }\n        return uint96(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint88 from uint256, reverting on\n     * overflow (when the input is greater than largest uint88).\n     *\n     * Counterpart to Solidity's `uint88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toUint88(uint256 value) internal pure returns (uint88) {\n        if (value > type(uint88).max) {\n            revert SafeCastOverflowedUintDowncast(88, value);\n        }\n        return uint88(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint80 from uint256, reverting on\n     * overflow (when the input is greater than largest uint80).\n     *\n     * Counterpart to Solidity's `uint80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toUint80(uint256 value) internal pure returns (uint80) {\n        if (value > type(uint80).max) {\n            revert SafeCastOverflowedUintDowncast(80, value);\n        }\n        return uint80(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint72 from uint256, reverting on\n     * overflow (when the input is greater than largest uint72).\n     *\n     * Counterpart to Solidity's `uint72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toUint72(uint256 value) internal pure returns (uint72) {\n        if (value > type(uint72).max) {\n            revert SafeCastOverflowedUintDowncast(72, value);\n        }\n        return uint72(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint64 from uint256, reverting on\n     * overflow (when the input is greater than largest uint64).\n     *\n     * Counterpart to Solidity's `uint64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toUint64(uint256 value) internal pure returns (uint64) {\n        if (value > type(uint64).max) {\n            revert SafeCastOverflowedUintDowncast(64, value);\n        }\n        return uint64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint56 from uint256, reverting on\n     * overflow (when the input is greater than largest uint56).\n     *\n     * Counterpart to Solidity's `uint56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toUint56(uint256 value) internal pure returns (uint56) {\n        if (value > type(uint56).max) {\n            revert SafeCastOverflowedUintDowncast(56, value);\n        }\n        return uint56(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint48 from uint256, reverting on\n     * overflow (when the input is greater than largest uint48).\n     *\n     * Counterpart to Solidity's `uint48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toUint48(uint256 value) internal pure returns (uint48) {\n        if (value > type(uint48).max) {\n            revert SafeCastOverflowedUintDowncast(48, value);\n        }\n        return uint48(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint40 from uint256, reverting on\n     * overflow (when the input is greater than largest uint40).\n     *\n     * Counterpart to Solidity's `uint40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toUint40(uint256 value) internal pure returns (uint40) {\n        if (value > type(uint40).max) {\n            revert SafeCastOverflowedUintDowncast(40, value);\n        }\n        return uint40(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint32 from uint256, reverting on\n     * overflow (when the input is greater than largest uint32).\n     *\n     * Counterpart to Solidity's `uint32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toUint32(uint256 value) internal pure returns (uint32) {\n        if (value > type(uint32).max) {\n            revert SafeCastOverflowedUintDowncast(32, value);\n        }\n        return uint32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint24 from uint256, reverting on\n     * overflow (when the input is greater than largest uint24).\n     *\n     * Counterpart to Solidity's `uint24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toUint24(uint256 value) internal pure returns (uint24) {\n        if (value > type(uint24).max) {\n            revert SafeCastOverflowedUintDowncast(24, value);\n        }\n        return uint24(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint16 from uint256, reverting on\n     * overflow (when the input is greater than largest uint16).\n     *\n     * Counterpart to Solidity's `uint16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toUint16(uint256 value) internal pure returns (uint16) {\n        if (value > type(uint16).max) {\n            revert SafeCastOverflowedUintDowncast(16, value);\n        }\n        return uint16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint8 from uint256, reverting on\n     * overflow (when the input is greater than largest uint8).\n     *\n     * Counterpart to Solidity's `uint8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toUint8(uint256 value) internal pure returns (uint8) {\n        if (value > type(uint8).max) {\n            revert SafeCastOverflowedUintDowncast(8, value);\n        }\n        return uint8(value);\n    }\n\n    /**\n     * @dev Converts a signed int256 into an unsigned uint256.\n     *\n     * Requirements:\n     *\n     * - input must be greater than or equal to 0.\n     */\n    function toUint256(int256 value) internal pure returns (uint256) {\n        if (value < 0) {\n            revert SafeCastOverflowedIntToUint(value);\n        }\n        return uint256(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int248 from int256, reverting on\n     * overflow (when the input is less than smallest int248 or\n     * greater than largest int248).\n     *\n     * Counterpart to Solidity's `int248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toInt248(int256 value) internal pure returns (int248 downcasted) {\n        downcasted = int248(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(248, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int240 from int256, reverting on\n     * overflow (when the input is less than smallest int240 or\n     * greater than largest int240).\n     *\n     * Counterpart to Solidity's `int240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toInt240(int256 value) internal pure returns (int240 downcasted) {\n        downcasted = int240(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(240, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int232 from int256, reverting on\n     * overflow (when the input is less than smallest int232 or\n     * greater than largest int232).\n     *\n     * Counterpart to Solidity's `int232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toInt232(int256 value) internal pure returns (int232 downcasted) {\n        downcasted = int232(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(232, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int224 from int256, reverting on\n     * overflow (when the input is less than smallest int224 or\n     * greater than largest int224).\n     *\n     * Counterpart to Solidity's `int224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toInt224(int256 value) internal pure returns (int224 downcasted) {\n        downcasted = int224(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(224, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int216 from int256, reverting on\n     * overflow (when the input is less than smallest int216 or\n     * greater than largest int216).\n     *\n     * Counterpart to Solidity's `int216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toInt216(int256 value) internal pure returns (int216 downcasted) {\n        downcasted = int216(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(216, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int208 from int256, reverting on\n     * overflow (when the input is less than smallest int208 or\n     * greater than largest int208).\n     *\n     * Counterpart to Solidity's `int208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toInt208(int256 value) internal pure returns (int208 downcasted) {\n        downcasted = int208(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(208, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int200 from int256, reverting on\n     * overflow (when the input is less than smallest int200 or\n     * greater than largest int200).\n     *\n     * Counterpart to Solidity's `int200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toInt200(int256 value) internal pure returns (int200 downcasted) {\n        downcasted = int200(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(200, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int192 from int256, reverting on\n     * overflow (when the input is less than smallest int192 or\n     * greater than largest int192).\n     *\n     * Counterpart to Solidity's `int192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toInt192(int256 value) internal pure returns (int192 downcasted) {\n        downcasted = int192(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(192, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int184 from int256, reverting on\n     * overflow (when the input is less than smallest int184 or\n     * greater than largest int184).\n     *\n     * Counterpart to Solidity's `int184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toInt184(int256 value) internal pure returns (int184 downcasted) {\n        downcasted = int184(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(184, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int176 from int256, reverting on\n     * overflow (when the input is less than smallest int176 or\n     * greater than largest int176).\n     *\n     * Counterpart to Solidity's `int176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toInt176(int256 value) internal pure returns (int176 downcasted) {\n        downcasted = int176(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(176, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int168 from int256, reverting on\n     * overflow (when the input is less than smallest int168 or\n     * greater than largest int168).\n     *\n     * Counterpart to Solidity's `int168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toInt168(int256 value) internal pure returns (int168 downcasted) {\n        downcasted = int168(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(168, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int160 from int256, reverting on\n     * overflow (when the input is less than smallest int160 or\n     * greater than largest int160).\n     *\n     * Counterpart to Solidity's `int160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toInt160(int256 value) internal pure returns (int160 downcasted) {\n        downcasted = int160(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(160, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int152 from int256, reverting on\n     * overflow (when the input is less than smallest int152 or\n     * greater than largest int152).\n     *\n     * Counterpart to Solidity's `int152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toInt152(int256 value) internal pure returns (int152 downcasted) {\n        downcasted = int152(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(152, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int144 from int256, reverting on\n     * overflow (when the input is less than smallest int144 or\n     * greater than largest int144).\n     *\n     * Counterpart to Solidity's `int144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toInt144(int256 value) internal pure returns (int144 downcasted) {\n        downcasted = int144(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(144, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int136 from int256, reverting on\n     * overflow (when the input is less than smallest int136 or\n     * greater than largest int136).\n     *\n     * Counterpart to Solidity's `int136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toInt136(int256 value) internal pure returns (int136 downcasted) {\n        downcasted = int136(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(136, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int128 from int256, reverting on\n     * overflow (when the input is less than smallest int128 or\n     * greater than largest int128).\n     *\n     * Counterpart to Solidity's `int128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toInt128(int256 value) internal pure returns (int128 downcasted) {\n        downcasted = int128(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(128, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int120 from int256, reverting on\n     * overflow (when the input is less than smallest int120 or\n     * greater than largest int120).\n     *\n     * Counterpart to Solidity's `int120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toInt120(int256 value) internal pure returns (int120 downcasted) {\n        downcasted = int120(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(120, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int112 from int256, reverting on\n     * overflow (when the input is less than smallest int112 or\n     * greater than largest int112).\n     *\n     * Counterpart to Solidity's `int112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toInt112(int256 value) internal pure returns (int112 downcasted) {\n        downcasted = int112(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(112, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int104 from int256, reverting on\n     * overflow (when the input is less than smallest int104 or\n     * greater than largest int104).\n     *\n     * Counterpart to Solidity's `int104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toInt104(int256 value) internal pure returns (int104 downcasted) {\n        downcasted = int104(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(104, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int96 from int256, reverting on\n     * overflow (when the input is less than smallest int96 or\n     * greater than largest int96).\n     *\n     * Counterpart to Solidity's `int96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toInt96(int256 value) internal pure returns (int96 downcasted) {\n        downcasted = int96(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(96, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int88 from int256, reverting on\n     * overflow (when the input is less than smallest int88 or\n     * greater than largest int88).\n     *\n     * Counterpart to Solidity's `int88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toInt88(int256 value) internal pure returns (int88 downcasted) {\n        downcasted = int88(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(88, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int80 from int256, reverting on\n     * overflow (when the input is less than smallest int80 or\n     * greater than largest int80).\n     *\n     * Counterpart to Solidity's `int80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toInt80(int256 value) internal pure returns (int80 downcasted) {\n        downcasted = int80(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(80, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int72 from int256, reverting on\n     * overflow (when the input is less than smallest int72 or\n     * greater than largest int72).\n     *\n     * Counterpart to Solidity's `int72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toInt72(int256 value) internal pure returns (int72 downcasted) {\n        downcasted = int72(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(72, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int64 from int256, reverting on\n     * overflow (when the input is less than smallest int64 or\n     * greater than largest int64).\n     *\n     * Counterpart to Solidity's `int64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toInt64(int256 value) internal pure returns (int64 downcasted) {\n        downcasted = int64(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(64, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int56 from int256, reverting on\n     * overflow (when the input is less than smallest int56 or\n     * greater than largest int56).\n     *\n     * Counterpart to Solidity's `int56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toInt56(int256 value) internal pure returns (int56 downcasted) {\n        downcasted = int56(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(56, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int48 from int256, reverting on\n     * overflow (when the input is less than smallest int48 or\n     * greater than largest int48).\n     *\n     * Counterpart to Solidity's `int48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toInt48(int256 value) internal pure returns (int48 downcasted) {\n        downcasted = int48(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(48, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int40 from int256, reverting on\n     * overflow (when the input is less than smallest int40 or\n     * greater than largest int40).\n     *\n     * Counterpart to Solidity's `int40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toInt40(int256 value) internal pure returns (int40 downcasted) {\n        downcasted = int40(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(40, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int32 from int256, reverting on\n     * overflow (when the input is less than smallest int32 or\n     * greater than largest int32).\n     *\n     * Counterpart to Solidity's `int32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toInt32(int256 value) internal pure returns (int32 downcasted) {\n        downcasted = int32(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(32, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int24 from int256, reverting on\n     * overflow (when the input is less than smallest int24 or\n     * greater than largest int24).\n     *\n     * Counterpart to Solidity's `int24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toInt24(int256 value) internal pure returns (int24 downcasted) {\n        downcasted = int24(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(24, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int16 from int256, reverting on\n     * overflow (when the input is less than smallest int16 or\n     * greater than largest int16).\n     *\n     * Counterpart to Solidity's `int16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toInt16(int256 value) internal pure returns (int16 downcasted) {\n        downcasted = int16(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(16, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int8 from int256, reverting on\n     * overflow (when the input is less than smallest int8 or\n     * greater than largest int8).\n     *\n     * Counterpart to Solidity's `int8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toInt8(int256 value) internal pure returns (int8 downcasted) {\n        downcasted = int8(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(8, value);\n        }\n    }\n\n    /**\n     * @dev Converts an unsigned uint256 into a signed int256.\n     *\n     * Requirements:\n     *\n     * - input must be less than or equal to maxInt256.\n     */\n    function toInt256(uint256 value) internal pure returns (int256) {\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\n        if (value > uint256(type(int256).max)) {\n            revert SafeCastOverflowedUintToInt(value);\n        }\n        return int256(value);\n    }\n\n    /**\n     * @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump.\n     */\n    function toUint(bool b) internal pure returns (uint256 u) {\n        assembly (\"memory-safe\") {\n            u := iszero(iszero(b))\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, int256 a, int256 b) internal pure returns (int256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * int256(SafeCast.toUint(condition)));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // Formula from the \"Bit Twiddling Hacks\" by Sean Eron Anderson.\n            // Since `n` is a signed integer, the generated bytecode will use the SAR opcode to perform the right shift,\n            // taking advantage of the most significant (or \"sign\" bit) in two's complement representation.\n            // This opcode adds new most significant bits set to the value of the previous most significant bit. As a result,\n            // the mask will either be `bytes32(0)` (if n is positive) or `~bytes32(0)` (if n is negative).\n            int256 mask = n >> 255;\n\n            // A `bytes32(0)` mask leaves the input unchanged, while a `~bytes32(0)` mask complements it.\n            return uint256((n + mask) ^ mask);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Nonces.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Nonces.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides tracking nonces for addresses. Nonces will only increment.\n */\nabstract contract Nonces {\n    /**\n     * @dev The nonce used for an `account` is not the expected current nonce.\n     */\n    error InvalidAccountNonce(address account, uint256 currentNonce);\n\n    mapping(address account => uint256) private _nonces;\n\n    /**\n     * @dev Returns the next unused nonce for an address.\n     */\n    function nonces(address owner) public view virtual returns (uint256) {\n        return _nonces[owner];\n    }\n\n    /**\n     * @dev Consumes a nonce.\n     *\n     * Returns the current value and increments nonce.\n     */\n    function _useNonce(address owner) internal virtual returns (uint256) {\n        // For each account, the nonce has an initial value of 0, can only be incremented by one, and cannot be\n        // decremented or reset. This guarantees that the nonce never overflows.\n        unchecked {\n            // It is important to do x++ and not ++x here.\n            return _nonces[owner]++;\n        }\n    }\n\n    /**\n     * @dev Same as {_useNonce} but checking that `nonce` is the next valid for `owner`.\n     */\n    function _useCheckedNonce(address owner, uint256 nonce) internal virtual {\n        uint256 current = _useNonce(owner);\n        if (nonce != current) {\n            revert InvalidAccountNonce(owner, current);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Panic.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Panic.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Helper library for emitting standardized panic codes.\n *\n * ```solidity\n * contract Example {\n *      using Panic for uint256;\n *\n *      // Use any of the declared internal constants\n *      function foo() { Panic.GENERIC.panic(); }\n *\n *      // Alternatively\n *      function foo() { Panic.panic(Panic.GENERIC); }\n * }\n * ```\n *\n * Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n *\n * _Available since v5.1._\n */\n// slither-disable-next-line unused-state\nlibrary Panic {\n    /// @dev generic / unspecified error\n    uint256 internal constant GENERIC = 0x00;\n    /// @dev used by the assert() builtin\n    uint256 internal constant ASSERT = 0x01;\n    /// @dev arithmetic underflow or overflow\n    uint256 internal constant UNDER_OVERFLOW = 0x11;\n    /// @dev division or modulo by zero\n    uint256 internal constant DIVISION_BY_ZERO = 0x12;\n    /// @dev enum conversion error\n    uint256 internal constant ENUM_CONVERSION_ERROR = 0x21;\n    /// @dev invalid encoding in storage\n    uint256 internal constant STORAGE_ENCODING_ERROR = 0x22;\n    /// @dev empty array pop\n    uint256 internal constant EMPTY_ARRAY_POP = 0x31;\n    /// @dev array out of bounds access\n    uint256 internal constant ARRAY_OUT_OF_BOUNDS = 0x32;\n    /// @dev resource error (too large allocation or too large array)\n    uint256 internal constant RESOURCE_ERROR = 0x41;\n    /// @dev calling invalid internal function\n    uint256 internal constant INVALID_INTERNAL_FUNCTION = 0x51;\n\n    /// @dev Reverts with a panic code. Recommended to use with\n    /// the internal constants with predefined codes.\n    function panic(uint256 code) internal pure {\n        assembly (\"memory-safe\") {\n            mstore(0x00, 0x4e487b71)\n            mstore(0x20, code)\n            revert(0x1c, 0x24)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Pausable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/Pausable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    bool private _paused;\n\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    /**\n     * @dev The operation failed because the contract is paused.\n     */\n    error EnforcedPause();\n\n    /**\n     * @dev The operation failed because the contract is not paused.\n     */\n    error ExpectedPause();\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        if (paused()) {\n            revert EnforcedPause();\n        }\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        if (!paused()) {\n            revert ExpectedPause();\n        }\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/ReentrancyGuard.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n * consider using {ReentrancyGuardTransient} instead.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant NOT_ENTERED = 1;\n    uint256 private constant ENTERED = 2;\n\n    uint256 private _status;\n\n    /**\n     * @dev Unauthorized reentrant call.\n     */\n    error ReentrancyGuardReentrantCall();\n\n    constructor() {\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\n        if (_status == ENTERED) {\n            revert ReentrancyGuardReentrantCall();\n        }\n\n        // Any calls to nonReentrant after this point will fail\n        _status = ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == ENTERED;\n    }\n}\n"},"@openzeppelin/contracts/utils/ShortStrings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/ShortStrings.sol)\n\npragma solidity ^0.8.20;\n\nimport {StorageSlot} from \"./StorageSlot.sol\";\n\n// | string  | 0xAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA   |\n// | length  | 0x                                                              BB |\ntype ShortString is bytes32;\n\n/**\n * @dev This library provides functions to convert short memory strings\n * into a `ShortString` type that can be used as an immutable variable.\n *\n * Strings of arbitrary length can be optimized using this library if\n * they are short enough (up to 31 bytes) by packing them with their\n * length (1 byte) in a single EVM word (32 bytes). Additionally, a\n * fallback mechanism can be used for every other case.\n *\n * Usage example:\n *\n * ```solidity\n * contract Named {\n *     using ShortStrings for *;\n *\n *     ShortString private immutable _name;\n *     string private _nameFallback;\n *\n *     constructor(string memory contractName) {\n *         _name = contractName.toShortStringWithFallback(_nameFallback);\n *     }\n *\n *     function name() external view returns (string memory) {\n *         return _name.toStringWithFallback(_nameFallback);\n *     }\n * }\n * ```\n */\nlibrary ShortStrings {\n    // Used as an identifier for strings longer than 31 bytes.\n    bytes32 private constant FALLBACK_SENTINEL = 0x00000000000000000000000000000000000000000000000000000000000000FF;\n\n    error StringTooLong(string str);\n    error InvalidShortString();\n\n    /**\n     * @dev Encode a string of at most 31 chars into a `ShortString`.\n     *\n     * This will trigger a `StringTooLong` error is the input string is too long.\n     */\n    function toShortString(string memory str) internal pure returns (ShortString) {\n        bytes memory bstr = bytes(str);\n        if (bstr.length > 31) {\n            revert StringTooLong(str);\n        }\n        return ShortString.wrap(bytes32(uint256(bytes32(bstr)) | bstr.length));\n    }\n\n    /**\n     * @dev Decode a `ShortString` back to a \"normal\" string.\n     */\n    function toString(ShortString sstr) internal pure returns (string memory) {\n        uint256 len = byteLength(sstr);\n        // using `new string(len)` would work locally but is not memory safe.\n        string memory str = new string(32);\n        assembly (\"memory-safe\") {\n            mstore(str, len)\n            mstore(add(str, 0x20), sstr)\n        }\n        return str;\n    }\n\n    /**\n     * @dev Return the length of a `ShortString`.\n     */\n    function byteLength(ShortString sstr) internal pure returns (uint256) {\n        uint256 result = uint256(ShortString.unwrap(sstr)) & 0xFF;\n        if (result > 31) {\n            revert InvalidShortString();\n        }\n        return result;\n    }\n\n    /**\n     * @dev Encode a string into a `ShortString`, or write it to storage if it is too long.\n     */\n    function toShortStringWithFallback(string memory value, string storage store) internal returns (ShortString) {\n        if (bytes(value).length < 32) {\n            return toShortString(value);\n        } else {\n            StorageSlot.getStringSlot(store).value = value;\n            return ShortString.wrap(FALLBACK_SENTINEL);\n        }\n    }\n\n    /**\n     * @dev Decode a string that was encoded to `ShortString` or written to storage using {toShortStringWithFallback}.\n     */\n    function toStringWithFallback(ShortString value, string storage store) internal pure returns (string memory) {\n        if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {\n            return toString(value);\n        } else {\n            return store;\n        }\n    }\n\n    /**\n     * @dev Return the length of a string that was encoded to `ShortString` or written to storage using\n     * {toShortStringWithFallback}.\n     *\n     * WARNING: This will return the \"byte length\" of the string. This may not reflect the actual length in terms of\n     * actual characters as the UTF-8 encoding of a single character can span over multiple bytes.\n     */\n    function byteLengthWithFallback(ShortString value, string storage store) internal view returns (uint256) {\n        if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {\n            return byteLength(value);\n        } else {\n            return bytes(store).length;\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/StorageSlot.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC-1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n *\n * TIP: Consider using this library along with {SlotDerivation}.\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct Int256Slot {\n        int256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Int256Slot` with member `value` located at `slot`.\n     */\n    function getInt256Slot(bytes32 slot) internal pure returns (Int256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SafeCast} from \"./math/SafeCast.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    using SafeCast for *;\n\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n    uint256 private constant SPECIAL_CHARS_LOOKUP =\n        (1 << 0x08) | // backspace\n            (1 << 0x09) | // tab\n            (1 << 0x0a) | // newline\n            (1 << 0x0c) | // form feed\n            (1 << 0x0d) | // carriage return\n            (1 << 0x22) | // double quote\n            (1 << 0x5c); // backslash\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev The string being parsed contains characters that are not in scope of the given base.\n     */\n    error StringsInvalidChar();\n\n    /**\n     * @dev The string being parsed is not a properly formatted address.\n     */\n    error StringsInvalidAddressFormat();\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            assembly (\"memory-safe\") {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                assembly (\"memory-safe\") {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n     * representation, according to EIP-55.\n     */\n    function toChecksumHexString(address addr) internal pure returns (string memory) {\n        bytes memory buffer = bytes(toHexString(addr));\n\n        // hash the hex part of buffer (skip length + 2 bytes, length 40)\n        uint256 hashValue;\n        assembly (\"memory-safe\") {\n            hashValue := shr(96, keccak256(add(buffer, 0x22), 40))\n        }\n\n        for (uint256 i = 41; i > 1; --i) {\n            // possible values for buffer[i] are 48 (0) to 57 (9) and 97 (a) to 102 (f)\n            if (hashValue & 0xf > 7 && uint8(buffer[i]) > 96) {\n                // case shift by xoring with 0x20\n                buffer[i] ^= 0x20;\n            }\n            hashValue >>= 4;\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n\n    /**\n     * @dev Parse a decimal string and returns the value as a `uint256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `[0-9]*`\n     * - The result must fit into an `uint256` type\n     */\n    function parseUint(string memory input) internal pure returns (uint256) {\n        return parseUint(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseUint-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `[0-9]*`\n     * - The result must fit into an `uint256` type\n     */\n    function parseUint(string memory input, uint256 begin, uint256 end) internal pure returns (uint256) {\n        (bool success, uint256 value) = tryParseUint(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseUint-string} that returns false if the parsing fails because of an invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseUint(string memory input) internal pure returns (bool success, uint256 value) {\n        return _tryParseUintUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseUint-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n     * character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseUint(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, uint256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseUintUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseUintUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, uint256 value) {\n        bytes memory buffer = bytes(input);\n\n        uint256 result = 0;\n        for (uint256 i = begin; i < end; ++i) {\n            uint8 chr = _tryParseChr(bytes1(_unsafeReadBytesOffset(buffer, i)));\n            if (chr > 9) return (false, 0);\n            result *= 10;\n            result += chr;\n        }\n        return (true, result);\n    }\n\n    /**\n     * @dev Parse a decimal string and returns the value as a `int256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `[-+]?[0-9]*`\n     * - The result must fit in an `int256` type.\n     */\n    function parseInt(string memory input) internal pure returns (int256) {\n        return parseInt(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseInt-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `[-+]?[0-9]*`\n     * - The result must fit in an `int256` type.\n     */\n    function parseInt(string memory input, uint256 begin, uint256 end) internal pure returns (int256) {\n        (bool success, int256 value) = tryParseInt(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseInt-string} that returns false if the parsing fails because of an invalid character or if\n     * the result does not fit in a `int256`.\n     *\n     * NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`.\n     */\n    function tryParseInt(string memory input) internal pure returns (bool success, int256 value) {\n        return _tryParseIntUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    uint256 private constant ABS_MIN_INT256 = 2 ** 255;\n\n    /**\n     * @dev Variant of {parseInt-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n     * character or if the result does not fit in a `int256`.\n     *\n     * NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`.\n     */\n    function tryParseInt(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, int256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseIntUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseInt-string-uint256-uint256} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseIntUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, int256 value) {\n        bytes memory buffer = bytes(input);\n\n        // Check presence of a negative sign.\n        bytes1 sign = begin == end ? bytes1(0) : bytes1(_unsafeReadBytesOffset(buffer, begin)); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        bool positiveSign = sign == bytes1(\"+\");\n        bool negativeSign = sign == bytes1(\"-\");\n        uint256 offset = (positiveSign || negativeSign).toUint();\n\n        (bool absSuccess, uint256 absValue) = tryParseUint(input, begin + offset, end);\n\n        if (absSuccess && absValue < ABS_MIN_INT256) {\n            return (true, negativeSign ? -int256(absValue) : int256(absValue));\n        } else if (absSuccess && negativeSign && absValue == ABS_MIN_INT256) {\n            return (true, type(int256).min);\n        } else return (false, 0);\n    }\n\n    /**\n     * @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as a `uint256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `(0x)?[0-9a-fA-F]*`\n     * - The result must fit in an `uint256` type.\n     */\n    function parseHexUint(string memory input) internal pure returns (uint256) {\n        return parseHexUint(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `(0x)?[0-9a-fA-F]*`\n     * - The result must fit in an `uint256` type.\n     */\n    function parseHexUint(string memory input, uint256 begin, uint256 end) internal pure returns (uint256) {\n        (bool success, uint256 value) = tryParseHexUint(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string} that returns false if the parsing fails because of an invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseHexUint(string memory input) internal pure returns (bool success, uint256 value) {\n        return _tryParseHexUintUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string-uint256-uint256} that returns false if the parsing fails because of an\n     * invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseHexUint(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, uint256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseHexUintUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseHexUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseHexUintUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, uint256 value) {\n        bytes memory buffer = bytes(input);\n\n        // skip 0x prefix if present\n        bool hasPrefix = (end > begin + 1) && bytes2(_unsafeReadBytesOffset(buffer, begin)) == bytes2(\"0x\"); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        uint256 offset = hasPrefix.toUint() * 2;\n\n        uint256 result = 0;\n        for (uint256 i = begin + offset; i < end; ++i) {\n            uint8 chr = _tryParseChr(bytes1(_unsafeReadBytesOffset(buffer, i)));\n            if (chr > 15) return (false, 0);\n            result *= 16;\n            unchecked {\n                // Multiplying by 16 is equivalent to a shift of 4 bits (with additional overflow check).\n                // This guarantees that adding a value < 16 will not cause an overflow, hence the unchecked.\n                result += chr;\n            }\n        }\n        return (true, result);\n    }\n\n    /**\n     * @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as an `address`.\n     *\n     * Requirements:\n     * - The string must be formatted as `(0x)?[0-9a-fA-F]{40}`\n     */\n    function parseAddress(string memory input) internal pure returns (address) {\n        return parseAddress(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `(0x)?[0-9a-fA-F]{40}`\n     */\n    function parseAddress(string memory input, uint256 begin, uint256 end) internal pure returns (address) {\n        (bool success, address value) = tryParseAddress(input, begin, end);\n        if (!success) revert StringsInvalidAddressFormat();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string} that returns false if the parsing fails because the input is not a properly\n     * formatted address. See {parseAddress-string} requirements.\n     */\n    function tryParseAddress(string memory input) internal pure returns (bool success, address value) {\n        return tryParseAddress(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string-uint256-uint256} that returns false if the parsing fails because input is not a properly\n     * formatted address. See {parseAddress-string-uint256-uint256} requirements.\n     */\n    function tryParseAddress(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, address value) {\n        if (end > bytes(input).length || begin > end) return (false, address(0));\n\n        bool hasPrefix = (end > begin + 1) && bytes2(_unsafeReadBytesOffset(bytes(input), begin)) == bytes2(\"0x\"); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        uint256 expectedLength = 40 + hasPrefix.toUint() * 2;\n\n        // check that input is the correct length\n        if (end - begin == expectedLength) {\n            // length guarantees that this does not overflow, and value is at most type(uint160).max\n            (bool s, uint256 v) = _tryParseHexUintUncheckedBounds(input, begin, end);\n            return (s, address(uint160(v)));\n        } else {\n            return (false, address(0));\n        }\n    }\n\n    function _tryParseChr(bytes1 chr) private pure returns (uint8) {\n        uint8 value = uint8(chr);\n\n        // Try to parse `chr`:\n        // - Case 1: [0-9]\n        // - Case 2: [a-f]\n        // - Case 3: [A-F]\n        // - otherwise not supported\n        unchecked {\n            if (value > 47 && value < 58) value -= 48;\n            else if (value > 96 && value < 103) value -= 87;\n            else if (value > 64 && value < 71) value -= 55;\n            else return type(uint8).max;\n        }\n\n        return value;\n    }\n\n    /**\n     * @dev Escape special characters in JSON strings. This can be useful to prevent JSON injection in NFT metadata.\n     *\n     * WARNING: This function should only be used in double quoted JSON strings. Single quotes are not escaped.\n     *\n     * NOTE: This function escapes all unicode characters, and not just the ones in ranges defined in section 2.5 of\n     * RFC-4627 (U+0000 to U+001F, U+0022 and U+005C). ECMAScript's `JSON.parse` does recover escaped unicode\n     * characters that are not in this range, but other tooling may provide different results.\n     */\n    function escapeJSON(string memory input) internal pure returns (string memory) {\n        bytes memory buffer = bytes(input);\n        bytes memory output = new bytes(2 * buffer.length); // worst case scenario\n        uint256 outputLength = 0;\n\n        for (uint256 i; i < buffer.length; ++i) {\n            bytes1 char = bytes1(_unsafeReadBytesOffset(buffer, i));\n            if (((SPECIAL_CHARS_LOOKUP & (1 << uint8(char))) != 0)) {\n                output[outputLength++] = \"\\\\\";\n                if (char == 0x08) output[outputLength++] = \"b\";\n                else if (char == 0x09) output[outputLength++] = \"t\";\n                else if (char == 0x0a) output[outputLength++] = \"n\";\n                else if (char == 0x0c) output[outputLength++] = \"f\";\n                else if (char == 0x0d) output[outputLength++] = \"r\";\n                else if (char == 0x5c) output[outputLength++] = \"\\\\\";\n                else if (char == 0x22) {\n                    // solhint-disable-next-line quotes\n                    output[outputLength++] = '\"';\n                }\n            } else {\n                output[outputLength++] = char;\n            }\n        }\n        // write the actual length and deallocate unused memory\n        assembly (\"memory-safe\") {\n            mstore(output, outputLength)\n            mstore(0x40, add(output, shl(5, shr(5, add(outputLength, 63)))))\n        }\n\n        return string(output);\n    }\n\n    /**\n     * @dev Reads a bytes32 from a bytes array without bounds checking.\n     *\n     * NOTE: making this function internal would mean it could be used with memory unsafe offset, and marking the\n     * assembly block as such would prevent some optimizations.\n     */\n    function _unsafeReadBytesOffset(bytes memory buffer, uint256 offset) private pure returns (bytes32 value) {\n        // This is not memory safe in the general case, but all calls to this private function are within bounds.\n        assembly (\"memory-safe\") {\n            value := mload(add(buffer, add(0x20, offset)))\n        }\n    }\n}\n"},"contracts/FairLaunchToken.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.19;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\";\n\n/**\n * @title FairLaunchToken\n * @dev Meme token with fair launch mechanisms, anti-snipe protection, and advanced features\n */\ncontract FairLaunchToken is ERC20, ERC20Burnable, ERC20Permit, Ownable, ReentrancyGuard {\n    // Fair Launch Configuration\n    struct FairLaunchConfig {\n        uint256 maxBuyPerWallet;     // Maximum tokens per wallet can buy\n        uint256 maxBuyPerTx;         // Maximum tokens per transaction\n        uint256 cooldownPeriod;      // Cooldown between purchases\n        uint256 antiSnipeBlocks;     // Number of blocks for anti-snipe protection\n        bool enabled;                // Whether fair launch is active\n    }\n\n    // Auto-liquidity Configuration\n    struct AutoLiquidityConfig {\n        uint256 liquidityFeePercent; // Fee percentage for auto-liquidity (basis points)\n        uint256 minTokensBeforeSwap; // Minimum tokens before adding liquidity\n        address liquidityPair;       // DEX pair address\n        bool enabled;               // Whether auto-liquidity is enabled\n    }\n\n    // Reflection/Rewards Configuration\n    struct ReflectionConfig {\n        uint256 reflectionFeePercent; // Fee percentage for reflections (basis points)\n        bool enabled;                 // Whether reflections are enabled\n    }\n\n    // State variables\n    FairLaunchConfig public fairLaunchConfig;\n    AutoLiquidityConfig public autoLiquidityConfig;\n    ReflectionConfig public reflectionConfig;\n    \n    uint256 public launchBlock;\n    uint256 public burnFeePercent = 100; // 1% burn fee (basis points)\n    bool public tradingEnabled = false;\n    \n    mapping(address => uint256) public lastBuyTime;\n    mapping(address => uint256) public totalBought;\n    mapping(address => bool) public isExcludedFromFees;\n    mapping(address => bool) public isBlacklisted;\n    \n    // Reflection tracking\n    uint256 private _totalReflections;\n    mapping(address => uint256) private _reflectionBalances;\n    mapping(address => bool) private _isExcludedFromReflections;\n    address[] private _excluded;\n    \n    // Events\n    event FairLaunchConfigured(\n        uint256 maxBuyPerWallet,\n        uint256 maxBuyPerTx,\n        uint256 cooldownPeriod,\n        uint256 antiSnipeBlocks\n    );\n    event TradingEnabled(uint256 blockNumber);\n    event AutoLiquidityAdded(uint256 tokensSwapped, uint256 ethReceived);\n    event ReflectionsDistributed(uint256 amount);\n    event Blacklisted(address indexed account, bool isBlacklisted);\n    \n    // Modifiers\n    modifier onlyWhenTrading() {\n        require(tradingEnabled || msg.sender == owner(), \"Trading not enabled\");\n        _;\n    }\n    \n    constructor(\n        string memory name,\n        string memory symbol,\n        uint256 initialSupply,\n        address initialOwner\n    ) ERC20(name, symbol) ERC20Permit(name) Ownable(initialOwner) {\n        _mint(initialOwner, initialSupply);\n        \n        // Exclude owner and contract from fees\n        isExcludedFromFees[initialOwner] = true;\n        isExcludedFromFees[address(this)] = true;\n        \n        // Initialize with default fair launch config\n        fairLaunchConfig = FairLaunchConfig({\n            maxBuyPerWallet: (initialSupply * 100) / 10000, // 1% of supply\n            maxBuyPerTx: (initialSupply * 50) / 10000,      // 0.5% of supply\n            cooldownPeriod: 300,                            // 5 minutes\n            antiSnipeBlocks: 3,                              // 3 blocks\n            enabled: true\n        });\n    }\n    \n    // Fair Launch Functions\n    \n    function configureFairLaunch(\n        uint256 _maxBuyPerWallet,\n        uint256 _maxBuyPerTx,\n        uint256 _cooldownPeriod,\n        uint256 _antiSnipeBlocks\n    ) external onlyOwner {\n        fairLaunchConfig.maxBuyPerWallet = _maxBuyPerWallet;\n        fairLaunchConfig.maxBuyPerTx = _maxBuyPerTx;\n        fairLaunchConfig.cooldownPeriod = _cooldownPeriod;\n        fairLaunchConfig.antiSnipeBlocks = _antiSnipeBlocks;\n        \n        emit FairLaunchConfigured(\n            _maxBuyPerWallet,\n            _maxBuyPerTx,\n            _cooldownPeriod,\n            _antiSnipeBlocks\n        );\n    }\n    \n    function enableTrading() external onlyOwner {\n        require(!tradingEnabled, \"Trading already enabled\");\n        tradingEnabled = true;\n        launchBlock = block.number;\n        emit TradingEnabled(launchBlock);\n    }\n    \n    function disableFairLaunch() external onlyOwner {\n        fairLaunchConfig.enabled = false;\n    }\n    \n    // Auto-Liquidity Functions\n    \n    function configureAutoLiquidity(\n        uint256 _liquidityFeePercent,\n        uint256 _minTokensBeforeSwap,\n        address _liquidityPair\n    ) external onlyOwner {\n        require(_liquidityFeePercent <= 500, \"Fee too high\"); // Max 5%\n        autoLiquidityConfig.liquidityFeePercent = _liquidityFeePercent;\n        autoLiquidityConfig.minTokensBeforeSwap = _minTokensBeforeSwap;\n        autoLiquidityConfig.liquidityPair = _liquidityPair;\n        autoLiquidityConfig.enabled = true;\n    }\n    \n    // Reflection Functions\n    \n    function enableReflections(uint256 _reflectionFeePercent) external onlyOwner {\n        require(_reflectionFeePercent <= 500, \"Fee too high\"); // Max 5%\n        reflectionConfig.reflectionFeePercent = _reflectionFeePercent;\n        reflectionConfig.enabled = true;\n    }\n    \n    function excludeFromReflections(address account) external onlyOwner {\n        require(!_isExcludedFromReflections[account], \"Already excluded\");\n        _isExcludedFromReflections[account] = true;\n        _excluded.push(account);\n    }\n    \n    // Burn Configuration\n    \n    function setBurnFee(uint256 _burnFeePercent) external onlyOwner {\n        require(_burnFeePercent <= 500, \"Fee too high\"); // Max 5%\n        burnFeePercent = _burnFeePercent;\n    }\n    \n    // Blacklist Functions\n    \n    function setBlacklist(address account, bool blacklisted) external onlyOwner {\n        isBlacklisted[account] = blacklisted;\n        emit Blacklisted(account, blacklisted);\n    }\n    \n    // Fee Exclusion\n    \n    function excludeFromFees(address account, bool excluded) external onlyOwner {\n        isExcludedFromFees[account] = excluded;\n    }\n    \n    // Override transfer to implement features\n    \n    function _update(\n        address from,\n        address to,\n        uint256 amount\n    ) internal override onlyWhenTrading {\n        require(!isBlacklisted[from] && !isBlacklisted[to], \"Blacklisted\");\n        \n        // Fair Launch Checks (only on buys from DEX)\n        if (fairLaunchConfig.enabled && from != owner() && to != owner()) {\n            // Anti-snipe protection\n            if (launchBlock > 0 && block.number <= launchBlock + fairLaunchConfig.antiSnipeBlocks) {\n                require(to == owner() || from == owner(), \"Anti-snipe protection\");\n            }\n            \n            // Check if this is a buy (from = pair, to = user)\n            if (from == autoLiquidityConfig.liquidityPair && to != address(this)) {\n                // Max buy per transaction\n                require(amount <= fairLaunchConfig.maxBuyPerTx, \"Exceeds max buy per tx\");\n                \n                // Max buy per wallet\n                require(\n                    totalBought[to] + amount <= fairLaunchConfig.maxBuyPerWallet,\n                    \"Exceeds max buy per wallet\"\n                );\n                \n                // Cooldown period\n                require(\n                    block.timestamp >= lastBuyTime[to] + fairLaunchConfig.cooldownPeriod,\n                    \"Cooldown period active\"\n                );\n                \n                totalBought[to] += amount;\n                lastBuyTime[to] = block.timestamp;\n            }\n        }\n        \n        // Calculate fees\n        uint256 burnAmount = 0;\n        uint256 liquidityAmount = 0;\n        uint256 reflectionAmount = 0;\n        \n        if (!isExcludedFromFees[from] && !isExcludedFromFees[to]) {\n            if (burnFeePercent > 0) {\n                burnAmount = (amount * burnFeePercent) / 10000;\n            }\n            \n            if (autoLiquidityConfig.enabled && autoLiquidityConfig.liquidityFeePercent > 0) {\n                liquidityAmount = (amount * autoLiquidityConfig.liquidityFeePercent) / 10000;\n            }\n            \n            if (reflectionConfig.enabled && reflectionConfig.reflectionFeePercent > 0) {\n                reflectionAmount = (amount * reflectionConfig.reflectionFeePercent) / 10000;\n            }\n        }\n        \n        uint256 transferAmount = amount - burnAmount - liquidityAmount - reflectionAmount;\n        \n        // Handle burns\n        if (burnAmount > 0) {\n            super._update(from, address(0), burnAmount);\n        }\n        \n        // Handle auto-liquidity\n        if (liquidityAmount > 0) {\n            super._update(from, address(this), liquidityAmount);\n            // Auto-liquidity logic would go here (swap and add liquidity)\n        }\n        \n        // Handle reflections\n        if (reflectionAmount > 0) {\n            _distributeReflections(reflectionAmount);\n            super._update(from, address(this), reflectionAmount);\n        }\n        \n        // Transfer remaining amount\n        super._update(from, to, transferAmount);\n    }\n    \n    function _distributeReflections(uint256 amount) private {\n        _totalReflections += amount;\n        emit ReflectionsDistributed(amount);\n    }\n    \n    // Governance Functions (placeholder for future implementation)\n    \n    mapping(address => uint256) public votingPower;\n    mapping(uint256 => mapping(address => bool)) public hasVoted;\n    \n    function delegate(address delegatee) external {\n        votingPower[delegatee] += balanceOf(msg.sender);\n    }\n    \n    // Emergency Functions\n    \n    function emergencyWithdraw() external onlyOwner {\n        uint256 balance = address(this).balance;\n        require(balance > 0, \"No ETH to withdraw\");\n        payable(owner()).transfer(balance);\n    }\n    \n    function emergencyWithdrawTokens(address token) external onlyOwner {\n        require(token != address(this), \"Cannot withdraw own tokens\");\n        uint256 balance = IERC20(token).balanceOf(address(this));\n        require(balance > 0, \"No tokens to withdraw\");\n        IERC20(token).transfer(owner(), balance);\n    }\n    \n    // View Functions\n    \n    function getReflectionBalance(address account) external view returns (uint256) {\n        if (_isExcludedFromReflections[account]) return balanceOf(account);\n        return _reflectionBalances[account];\n    }\n    \n    function getTotalReflections() external view returns (uint256) {\n        return _totalReflections;\n    }\n    \n    function isExcludedFromReflections(address account) external view returns (bool) {\n        return _isExcludedFromReflections[account];\n    }\n}"},"contracts/MemeCoinWithFees.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.19;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/utils/Pausable.sol\";\nimport \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\";\n\n/**\n * @title MemeCoinWithFees\n * @dev ERC20 token with creator fee mechanism for revenue sharing\n */\ncontract MemeCoinWithFees is ERC20, ERC20Burnable, Ownable, Pausable, ReentrancyGuard {\n    // Fee configuration\n    uint256 public constant CREATOR_FEE_BPS = 100; // 1% in basis points\n    uint256 public constant PLATFORM_FEE_BPS = 100; // 1% in basis points\n    uint256 public constant TOTAL_FEE_BPS = CREATOR_FEE_BPS + PLATFORM_FEE_BPS; // 2% total\n    uint256 public constant BPS_DIVISOR = 10000; // Basis points divisor\n\n    // Fee recipients\n    address public immutable creator;\n    address public platformFeeRecipient;\n    \n    // Fee tracking\n    uint256 public totalCreatorFeesCollected;\n    uint256 public totalPlatformFeesCollected;\n    mapping(address => uint256) public pendingCreatorFees;\n    mapping(address => uint256) public pendingPlatformFees;\n    \n    // Fee exemptions\n    mapping(address => bool) public feeExempt;\n    \n    // Feature flags\n    bool public canMint;\n    bool public immutable canBurn;\n    bool public feesEnabled;\n    \n    // Events\n    event FeesCollected(\n        address indexed from,\n        address indexed to,\n        uint256 amount,\n        uint256 creatorFee,\n        uint256 platformFee\n    );\n    \n    event CreatorFeesWithdrawn(address indexed creator, uint256 amount);\n    event PlatformFeesWithdrawn(address indexed recipient, uint256 amount);\n    event FeeExemptionUpdated(address indexed account, bool exempt);\n    event FeesToggled(bool enabled);\n    event PlatformFeeRecipientUpdated(address indexed newRecipient);\n\n    modifier onlyCreator() {\n        require(msg.sender == creator, \"Only creator\");\n        _;\n    }\n\n    constructor(\n        string memory name,\n        string memory symbol,\n        uint256 initialSupply,\n        address _owner,\n        address _creator,\n        address _platformFeeRecipient,\n        bool _canMint,\n        bool _canBurn,\n        bool _startWithFeesEnabled\n    ) ERC20(name, symbol) Ownable(_owner) {\n        require(_creator != address(0), \"Invalid creator\");\n        require(_platformFeeRecipient != address(0), \"Invalid platform recipient\");\n        \n        creator = _creator;\n        platformFeeRecipient = _platformFeeRecipient;\n        canMint = _canMint;\n        canBurn = _canBurn;\n        feesEnabled = _startWithFeesEnabled;\n        \n        // Mint initial supply to owner\n        _mint(_owner, initialSupply);\n        \n        // Fee exemptions for special addresses\n        feeExempt[_owner] = true;\n        feeExempt[_creator] = true;\n        feeExempt[address(this)] = true;\n        feeExempt[address(0)] = true;\n    }\n\n    /**\n     * @dev Calculate fee amounts for a transfer\n     */\n    function calculateFees(uint256 amount) public pure returns (uint256 creatorFee, uint256 platformFee) {\n        creatorFee = (amount * CREATOR_FEE_BPS) / BPS_DIVISOR;\n        platformFee = (amount * PLATFORM_FEE_BPS) / BPS_DIVISOR;\n    }\n\n    /**\n     * @dev Check if fees should be applied to this transfer\n     */\n    function shouldTakeFees(address from, address to) public view returns (bool) {\n        if (!feesEnabled) return false;\n        if (feeExempt[from] || feeExempt[to]) return false;\n        if (from == address(0) || to == address(0)) return false; // Minting/burning\n        return true;\n    }\n\n    /**\n     * @dev Override transfer to include fee mechanism\n     */\n    function _update(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual override whenNotPaused {\n        if (shouldTakeFees(from, to)) {\n            (uint256 creatorFee, uint256 platformFee) = calculateFees(amount);\n            uint256 totalFees = creatorFee + platformFee;\n            uint256 transferAmount = amount - totalFees;\n            \n            // Transfer fees to this contract\n            if (totalFees > 0) {\n                super._update(from, address(this), totalFees);\n                \n                // Track pending fees\n                pendingCreatorFees[creator] += creatorFee;\n                pendingPlatformFees[platformFeeRecipient] += platformFee;\n                totalCreatorFeesCollected += creatorFee;\n                totalPlatformFeesCollected += platformFee;\n                \n                emit FeesCollected(from, to, amount, creatorFee, platformFee);\n            }\n            \n            // Transfer remaining amount to recipient\n            super._update(from, to, transferAmount);\n        } else {\n            // No fees - regular transfer\n            super._update(from, to, amount);\n        }\n    }\n\n    /**\n     * @dev Withdraw accumulated creator fees\n     */\n    function withdrawCreatorFees() external nonReentrant onlyCreator {\n        uint256 amount = pendingCreatorFees[creator];\n        require(amount > 0, \"No fees to withdraw\");\n        \n        pendingCreatorFees[creator] = 0;\n        _transfer(address(this), creator, amount);\n        \n        emit CreatorFeesWithdrawn(creator, amount);\n    }\n\n    /**\n     * @dev Withdraw accumulated platform fees\n     */\n    function withdrawPlatformFees() external nonReentrant {\n        require(msg.sender == platformFeeRecipient, \"Only platform recipient\");\n        \n        uint256 amount = pendingPlatformFees[platformFeeRecipient];\n        require(amount > 0, \"No fees to withdraw\");\n        \n        pendingPlatformFees[platformFeeRecipient] = 0;\n        _transfer(address(this), platformFeeRecipient, amount);\n        \n        emit PlatformFeesWithdrawn(platformFeeRecipient, amount);\n    }\n\n    /**\n     * @dev Get fee statistics\n     */\n    function getFeeStats() external view returns (\n        uint256 creatorPending,\n        uint256 platformPending,\n        uint256 creatorTotal,\n        uint256 platformTotal\n    ) {\n        creatorPending = pendingCreatorFees[creator];\n        platformPending = pendingPlatformFees[platformFeeRecipient];\n        creatorTotal = totalCreatorFeesCollected;\n        platformTotal = totalPlatformFeesCollected;\n    }\n\n    /**\n     * @dev Update fee exemption status\n     */\n    function setFeeExempt(address account, bool exempt) external onlyOwner {\n        feeExempt[account] = exempt;\n        emit FeeExemptionUpdated(account, exempt);\n    }\n\n    /**\n     * @dev Toggle fees on/off\n     */\n    function toggleFees() external onlyOwner {\n        feesEnabled = !feesEnabled;\n        emit FeesToggled(feesEnabled);\n    }\n\n    /**\n     * @dev Update platform fee recipient\n     */\n    function updatePlatformFeeRecipient(address newRecipient) external onlyOwner {\n        require(newRecipient != address(0), \"Invalid recipient\");\n        \n        // Transfer any pending fees to current recipient first\n        uint256 pendingAmount = pendingPlatformFees[platformFeeRecipient];\n        if (pendingAmount > 0) {\n            pendingPlatformFees[platformFeeRecipient] = 0;\n            pendingPlatformFees[newRecipient] = pendingAmount;\n        }\n        \n        platformFeeRecipient = newRecipient;\n        emit PlatformFeeRecipientUpdated(newRecipient);\n    }\n\n    /**\n     * @dev Mint new tokens (if enabled)\n     */\n    function mint(address to, uint256 amount) external onlyOwner {\n        require(canMint, \"Minting disabled\");\n        _mint(to, amount);\n    }\n\n    /**\n     * @dev Pause token transfers\n     */\n    function pause() external onlyOwner {\n        _pause();\n    }\n\n    /**\n     * @dev Unpause token transfers\n     */\n    function unpause() external onlyOwner {\n        _unpause();\n    }\n\n    /**\n     * @dev Disable minting permanently\n     */\n    function disableMinting() external onlyOwner {\n        canMint = false;\n    }\n\n    /**\n     * @dev Emergency function to recover stuck tokens (not the token itself)\n     */\n    function recoverToken(address tokenAddress, uint256 amount) external onlyOwner {\n        require(tokenAddress != address(this), \"Cannot recover native token\");\n        IERC20(tokenAddress).transfer(owner(), amount);\n    }\n}"}},"settings":{"optimizer":{"enabled":true,"runs":200},"evmVersion":"paris","outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[1194],"Ownable":[147]},"id":148,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:0"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":148,"sourceUnit":1195,"src":"128:45:0","symbolAliases":[{"foreign":{"id":2,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1194,"src":"136:7:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":5,"name":"Context","nameLocations":["692:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":1194,"src":"692:7:0"},"id":6,"nodeType":"InheritanceSpecifier","src":"692:7:0"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":4,"nodeType":"StructuredDocumentation","src":"175:487:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":147,"linearizedBaseContracts":[147,1194],"name":"Ownable","nameLocation":"681:7:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":8,"mutability":"mutable","name":"_owner","nameLocation":"722:6:0","nodeType":"VariableDeclaration","scope":147,"src":"706:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7,"name":"address","nodeType":"ElementaryTypeName","src":"706:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"documentation":{"id":9,"nodeType":"StructuredDocumentation","src":"735:85:0","text":" @dev The caller account is not authorized to perform an operation."},"errorSelector":"118cdaa7","id":13,"name":"OwnableUnauthorizedAccount","nameLocation":"831:26:0","nodeType":"ErrorDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11,"mutability":"mutable","name":"account","nameLocation":"866:7:0","nodeType":"VariableDeclaration","scope":13,"src":"858:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"858:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"857:17:0"},"src":"825:50:0"},{"documentation":{"id":14,"nodeType":"StructuredDocumentation","src":"881:82:0","text":" @dev The owner is not a valid owner account. (eg. `address(0)`)"},"errorSelector":"1e4fbdf7","id":18,"name":"OwnableInvalidOwner","nameLocation":"974:19:0","nodeType":"ErrorDefinition","parameters":{"id":17,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16,"mutability":"mutable","name":"owner","nameLocation":"1002:5:0","nodeType":"VariableDeclaration","scope":18,"src":"994:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15,"name":"address","nodeType":"ElementaryTypeName","src":"994:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"993:15:0"},"src":"968:41:0"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":24,"name":"OwnershipTransferred","nameLocation":"1021:20:0","nodeType":"EventDefinition","parameters":{"id":23,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"1058:13:0","nodeType":"VariableDeclaration","scope":24,"src":"1042:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19,"name":"address","nodeType":"ElementaryTypeName","src":"1042:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":22,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"1089:8:0","nodeType":"VariableDeclaration","scope":24,"src":"1073:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":21,"name":"address","nodeType":"ElementaryTypeName","src":"1073:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1041:57:0"},"src":"1015:84:0"},{"body":{"id":49,"nodeType":"Block","src":"1259:153:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":35,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":30,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1273:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":33,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1297:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":32,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1289:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":31,"name":"address","nodeType":"ElementaryTypeName","src":"1289:7:0","typeDescriptions":{}}},"id":34,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1289:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1273:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":44,"nodeType":"IfStatement","src":"1269:95:0","trueBody":{"id":43,"nodeType":"Block","src":"1301:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":39,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1350:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":38,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1342:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":37,"name":"address","nodeType":"ElementaryTypeName","src":"1342:7:0","typeDescriptions":{}}},"id":40,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1342:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":36,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"1322:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":41,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1322:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":42,"nodeType":"RevertStatement","src":"1315:38:0"}]}},{"expression":{"arguments":[{"id":46,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1392:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":45,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"1373:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":47,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1373:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":48,"nodeType":"ExpressionStatement","src":"1373:32:0"}]},"documentation":{"id":25,"nodeType":"StructuredDocumentation","src":"1105:115:0","text":" @dev Initializes the contract setting the address provided by the deployer as the initial owner."},"id":50,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":28,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27,"mutability":"mutable","name":"initialOwner","nameLocation":"1245:12:0","nodeType":"VariableDeclaration","scope":50,"src":"1237:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":26,"name":"address","nodeType":"ElementaryTypeName","src":"1237:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1236:22:0"},"returnParameters":{"id":29,"nodeType":"ParameterList","parameters":[],"src":"1259:0:0"},"scope":147,"src":"1225:187:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":57,"nodeType":"Block","src":"1521:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":53,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":84,"src":"1531:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":54,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1531:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":55,"nodeType":"ExpressionStatement","src":"1531:13:0"},{"id":56,"nodeType":"PlaceholderStatement","src":"1554:1:0"}]},"documentation":{"id":51,"nodeType":"StructuredDocumentation","src":"1418:77:0","text":" @dev Throws if called by any account other than the owner."},"id":58,"name":"onlyOwner","nameLocation":"1509:9:0","nodeType":"ModifierDefinition","parameters":{"id":52,"nodeType":"ParameterList","parameters":[],"src":"1518:2:0"},"src":"1500:62:0","virtual":false,"visibility":"internal"},{"body":{"id":66,"nodeType":"Block","src":"1693:30:0","statements":[{"expression":{"id":64,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"1710:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":63,"id":65,"nodeType":"Return","src":"1703:13:0"}]},"documentation":{"id":59,"nodeType":"StructuredDocumentation","src":"1568:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":67,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1647:5:0","nodeType":"FunctionDefinition","parameters":{"id":60,"nodeType":"ParameterList","parameters":[],"src":"1652:2:0"},"returnParameters":{"id":63,"nodeType":"ParameterList","parameters":[{"constant":false,"id":62,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":67,"src":"1684:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":61,"name":"address","nodeType":"ElementaryTypeName","src":"1684:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1683:9:0"},"scope":147,"src":"1638:85:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":83,"nodeType":"Block","src":"1841:117:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":75,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":71,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"1855:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":72,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1855:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":73,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1176,"src":"1866:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":74,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1866:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1855:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":82,"nodeType":"IfStatement","src":"1851:101:0","trueBody":{"id":81,"nodeType":"Block","src":"1880:72:0","statements":[{"errorCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":77,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1176,"src":"1928:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":78,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1928:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":76,"name":"OwnableUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"1901:26:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":79,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1901:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":80,"nodeType":"RevertStatement","src":"1894:47:0"}]}}]},"documentation":{"id":68,"nodeType":"StructuredDocumentation","src":"1729:62:0","text":" @dev Throws if the sender is not the owner."},"id":84,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1805:11:0","nodeType":"FunctionDefinition","parameters":{"id":69,"nodeType":"ParameterList","parameters":[],"src":"1816:2:0"},"returnParameters":{"id":70,"nodeType":"ParameterList","parameters":[],"src":"1841:0:0"},"scope":147,"src":"1796:162:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":97,"nodeType":"Block","src":"2347:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":93,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2384:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":92,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2376:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":91,"name":"address","nodeType":"ElementaryTypeName","src":"2376:7:0","typeDescriptions":{}}},"id":94,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2376:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":90,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2357:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":95,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2357:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":96,"nodeType":"ExpressionStatement","src":"2357:30:0"}]},"documentation":{"id":85,"nodeType":"StructuredDocumentation","src":"1964:324:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":98,"implemented":true,"kind":"function","modifiers":[{"id":88,"kind":"modifierInvocation","modifierName":{"id":87,"name":"onlyOwner","nameLocations":["2337:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2337:9:0"},"nodeType":"ModifierInvocation","src":"2337:9:0"}],"name":"renounceOwnership","nameLocation":"2302:17:0","nodeType":"FunctionDefinition","parameters":{"id":86,"nodeType":"ParameterList","parameters":[],"src":"2319:2:0"},"returnParameters":{"id":89,"nodeType":"ParameterList","parameters":[],"src":"2347:0:0"},"scope":147,"src":"2293:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":125,"nodeType":"Block","src":"2613:145:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":106,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2627:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2647:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":108,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2639:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":107,"name":"address","nodeType":"ElementaryTypeName","src":"2639:7:0","typeDescriptions":{}}},"id":110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2639:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2627:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":120,"nodeType":"IfStatement","src":"2623:91:0","trueBody":{"id":119,"nodeType":"Block","src":"2651:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2700:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":114,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2692:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":113,"name":"address","nodeType":"ElementaryTypeName","src":"2692:7:0","typeDescriptions":{}}},"id":116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2692:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":112,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"2672:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2672:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":118,"nodeType":"RevertStatement","src":"2665:38:0"}]}},{"expression":{"arguments":[{"id":122,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2742:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":121,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2723:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2723:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":124,"nodeType":"ExpressionStatement","src":"2723:28:0"}]},"documentation":{"id":99,"nodeType":"StructuredDocumentation","src":"2400:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":126,"implemented":true,"kind":"function","modifiers":[{"id":104,"kind":"modifierInvocation","modifierName":{"id":103,"name":"onlyOwner","nameLocations":["2603:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2603:9:0"},"nodeType":"ModifierInvocation","src":"2603:9:0"}],"name":"transferOwnership","nameLocation":"2552:17:0","nodeType":"FunctionDefinition","parameters":{"id":102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101,"mutability":"mutable","name":"newOwner","nameLocation":"2578:8:0","nodeType":"VariableDeclaration","scope":126,"src":"2570:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":100,"name":"address","nodeType":"ElementaryTypeName","src":"2570:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2569:18:0"},"returnParameters":{"id":105,"nodeType":"ParameterList","parameters":[],"src":"2613:0:0"},"scope":147,"src":"2543:215:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":145,"nodeType":"Block","src":"2975:124:0","statements":[{"assignments":[133],"declarations":[{"constant":false,"id":133,"mutability":"mutable","name":"oldOwner","nameLocation":"2993:8:0","nodeType":"VariableDeclaration","scope":145,"src":"2985:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":132,"name":"address","nodeType":"ElementaryTypeName","src":"2985:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":135,"initialValue":{"id":134,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3004:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2985:25:0"},{"expression":{"id":138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":136,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3020:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":137,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3029:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3020:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":139,"nodeType":"ExpressionStatement","src":"3020:17:0"},{"eventCall":{"arguments":[{"id":141,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":133,"src":"3073:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":142,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3083:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":140,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"3052:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3052:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":144,"nodeType":"EmitStatement","src":"3047:45:0"}]},"documentation":{"id":127,"nodeType":"StructuredDocumentation","src":"2764:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":146,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2921:18:0","nodeType":"FunctionDefinition","parameters":{"id":130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":129,"mutability":"mutable","name":"newOwner","nameLocation":"2948:8:0","nodeType":"VariableDeclaration","scope":146,"src":"2940:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":128,"name":"address","nodeType":"ElementaryTypeName","src":"2940:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2939:18:0"},"returnParameters":{"id":131,"nodeType":"ParameterList","parameters":[],"src":"2975:0:0"},"scope":147,"src":"2912:187:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":148,"src":"663:2438:0","usedErrors":[13,18],"usedEvents":[24]}],"src":"102:3000:0"},"id":0},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC5267.sol","exportedSymbols":{"IERC5267":[172]},"id":173,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":149,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"107:24:1"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC5267","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":172,"linearizedBaseContracts":[172],"name":"IERC5267","nameLocation":"143:8:1","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":150,"nodeType":"StructuredDocumentation","src":"158:84:1","text":" @dev MAY be emitted to signal that the domain could have changed."},"eventSelector":"0a6387c9ea3628b88a633bb4f3b151770f70085117a15f9bf3787cda53f13d31","id":152,"name":"EIP712DomainChanged","nameLocation":"253:19:1","nodeType":"EventDefinition","parameters":{"id":151,"nodeType":"ParameterList","parameters":[],"src":"272:2:1"},"src":"247:28:1"},{"documentation":{"id":153,"nodeType":"StructuredDocumentation","src":"281:140:1","text":" @dev returns the fields and values that describe the domain separator used by this contract for EIP-712\n signature."},"functionSelector":"84b0196e","id":171,"implemented":false,"kind":"function","modifiers":[],"name":"eip712Domain","nameLocation":"435:12:1","nodeType":"FunctionDefinition","parameters":{"id":154,"nodeType":"ParameterList","parameters":[],"src":"447:2:1"},"returnParameters":{"id":170,"nodeType":"ParameterList","parameters":[{"constant":false,"id":156,"mutability":"mutable","name":"fields","nameLocation":"517:6:1","nodeType":"VariableDeclaration","scope":171,"src":"510:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":155,"name":"bytes1","nodeType":"ElementaryTypeName","src":"510:6:1","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"},{"constant":false,"id":158,"mutability":"mutable","name":"name","nameLocation":"551:4:1","nodeType":"VariableDeclaration","scope":171,"src":"537:18:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":157,"name":"string","nodeType":"ElementaryTypeName","src":"537:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":160,"mutability":"mutable","name":"version","nameLocation":"583:7:1","nodeType":"VariableDeclaration","scope":171,"src":"569:21:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":159,"name":"string","nodeType":"ElementaryTypeName","src":"569:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":162,"mutability":"mutable","name":"chainId","nameLocation":"612:7:1","nodeType":"VariableDeclaration","scope":171,"src":"604:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":161,"name":"uint256","nodeType":"ElementaryTypeName","src":"604:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":164,"mutability":"mutable","name":"verifyingContract","nameLocation":"641:17:1","nodeType":"VariableDeclaration","scope":171,"src":"633:25:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":163,"name":"address","nodeType":"ElementaryTypeName","src":"633:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":166,"mutability":"mutable","name":"salt","nameLocation":"680:4:1","nodeType":"VariableDeclaration","scope":171,"src":"672:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":165,"name":"bytes32","nodeType":"ElementaryTypeName","src":"672:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":169,"mutability":"mutable","name":"extensions","nameLocation":"715:10:1","nodeType":"VariableDeclaration","scope":171,"src":"698:27:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":167,"name":"uint256","nodeType":"ElementaryTypeName","src":"698:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":168,"nodeType":"ArrayTypeName","src":"698:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"496:239:1"},"scope":172,"src":"426:310:1","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":173,"src":"133:605:1","usedErrors":[],"usedEvents":[152]}],"src":"107:632:1"},"id":1},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","exportedSymbols":{"IERC1155Errors":[309],"IERC20Errors":[214],"IERC721Errors":[262]},"id":310,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":174,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:2"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":175,"nodeType":"StructuredDocumentation","src":"138:141:2","text":" @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."},"fullyImplemented":true,"id":214,"linearizedBaseContracts":[214],"name":"IERC20Errors","nameLocation":"290:12:2","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":176,"nodeType":"StructuredDocumentation","src":"309:309:2","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"e450d38c","id":184,"name":"ERC20InsufficientBalance","nameLocation":"629:24:2","nodeType":"ErrorDefinition","parameters":{"id":183,"nodeType":"ParameterList","parameters":[{"constant":false,"id":178,"mutability":"mutable","name":"sender","nameLocation":"662:6:2","nodeType":"VariableDeclaration","scope":184,"src":"654:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":177,"name":"address","nodeType":"ElementaryTypeName","src":"654:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":180,"mutability":"mutable","name":"balance","nameLocation":"678:7:2","nodeType":"VariableDeclaration","scope":184,"src":"670:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":179,"name":"uint256","nodeType":"ElementaryTypeName","src":"670:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":182,"mutability":"mutable","name":"needed","nameLocation":"695:6:2","nodeType":"VariableDeclaration","scope":184,"src":"687:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":181,"name":"uint256","nodeType":"ElementaryTypeName","src":"687:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"653:49:2"},"src":"623:80:2"},{"documentation":{"id":185,"nodeType":"StructuredDocumentation","src":"709:152:2","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"96c6fd1e","id":189,"name":"ERC20InvalidSender","nameLocation":"872:18:2","nodeType":"ErrorDefinition","parameters":{"id":188,"nodeType":"ParameterList","parameters":[{"constant":false,"id":187,"mutability":"mutable","name":"sender","nameLocation":"899:6:2","nodeType":"VariableDeclaration","scope":189,"src":"891:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":186,"name":"address","nodeType":"ElementaryTypeName","src":"891:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"890:16:2"},"src":"866:41:2"},{"documentation":{"id":190,"nodeType":"StructuredDocumentation","src":"913:159:2","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"ec442f05","id":194,"name":"ERC20InvalidReceiver","nameLocation":"1083:20:2","nodeType":"ErrorDefinition","parameters":{"id":193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":192,"mutability":"mutable","name":"receiver","nameLocation":"1112:8:2","nodeType":"VariableDeclaration","scope":194,"src":"1104:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":191,"name":"address","nodeType":"ElementaryTypeName","src":"1104:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1103:18:2"},"src":"1077:45:2"},{"documentation":{"id":195,"nodeType":"StructuredDocumentation","src":"1128:345:2","text":" @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"fb8f41b2","id":203,"name":"ERC20InsufficientAllowance","nameLocation":"1484:26:2","nodeType":"ErrorDefinition","parameters":{"id":202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":197,"mutability":"mutable","name":"spender","nameLocation":"1519:7:2","nodeType":"VariableDeclaration","scope":203,"src":"1511:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":196,"name":"address","nodeType":"ElementaryTypeName","src":"1511:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":199,"mutability":"mutable","name":"allowance","nameLocation":"1536:9:2","nodeType":"VariableDeclaration","scope":203,"src":"1528:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":198,"name":"uint256","nodeType":"ElementaryTypeName","src":"1528:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":201,"mutability":"mutable","name":"needed","nameLocation":"1555:6:2","nodeType":"VariableDeclaration","scope":203,"src":"1547:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":200,"name":"uint256","nodeType":"ElementaryTypeName","src":"1547:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1510:52:2"},"src":"1478:85:2"},{"documentation":{"id":204,"nodeType":"StructuredDocumentation","src":"1569:174:2","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"e602df05","id":208,"name":"ERC20InvalidApprover","nameLocation":"1754:20:2","nodeType":"ErrorDefinition","parameters":{"id":207,"nodeType":"ParameterList","parameters":[{"constant":false,"id":206,"mutability":"mutable","name":"approver","nameLocation":"1783:8:2","nodeType":"VariableDeclaration","scope":208,"src":"1775:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":205,"name":"address","nodeType":"ElementaryTypeName","src":"1775:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1774:18:2"},"src":"1748:45:2"},{"documentation":{"id":209,"nodeType":"StructuredDocumentation","src":"1799:195:2","text":" @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"94280d62","id":213,"name":"ERC20InvalidSpender","nameLocation":"2005:19:2","nodeType":"ErrorDefinition","parameters":{"id":212,"nodeType":"ParameterList","parameters":[{"constant":false,"id":211,"mutability":"mutable","name":"spender","nameLocation":"2033:7:2","nodeType":"VariableDeclaration","scope":213,"src":"2025:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":210,"name":"address","nodeType":"ElementaryTypeName","src":"2025:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2024:17:2"},"src":"1999:43:2"}],"scope":310,"src":"280:1764:2","usedErrors":[184,189,194,203,208,213],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":215,"nodeType":"StructuredDocumentation","src":"2046:143:2","text":" @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."},"fullyImplemented":true,"id":262,"linearizedBaseContracts":[262],"name":"IERC721Errors","nameLocation":"2200:13:2","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":216,"nodeType":"StructuredDocumentation","src":"2220:219:2","text":" @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."},"errorSelector":"89c62b64","id":220,"name":"ERC721InvalidOwner","nameLocation":"2450:18:2","nodeType":"ErrorDefinition","parameters":{"id":219,"nodeType":"ParameterList","parameters":[{"constant":false,"id":218,"mutability":"mutable","name":"owner","nameLocation":"2477:5:2","nodeType":"VariableDeclaration","scope":220,"src":"2469:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":217,"name":"address","nodeType":"ElementaryTypeName","src":"2469:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2468:15:2"},"src":"2444:40:2"},{"documentation":{"id":221,"nodeType":"StructuredDocumentation","src":"2490:132:2","text":" @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."},"errorSelector":"7e273289","id":225,"name":"ERC721NonexistentToken","nameLocation":"2633:22:2","nodeType":"ErrorDefinition","parameters":{"id":224,"nodeType":"ParameterList","parameters":[{"constant":false,"id":223,"mutability":"mutable","name":"tokenId","nameLocation":"2664:7:2","nodeType":"VariableDeclaration","scope":225,"src":"2656:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":222,"name":"uint256","nodeType":"ElementaryTypeName","src":"2656:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2655:17:2"},"src":"2627:46:2"},{"documentation":{"id":226,"nodeType":"StructuredDocumentation","src":"2679:289:2","text":" @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."},"errorSelector":"64283d7b","id":234,"name":"ERC721IncorrectOwner","nameLocation":"2979:20:2","nodeType":"ErrorDefinition","parameters":{"id":233,"nodeType":"ParameterList","parameters":[{"constant":false,"id":228,"mutability":"mutable","name":"sender","nameLocation":"3008:6:2","nodeType":"VariableDeclaration","scope":234,"src":"3000:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":227,"name":"address","nodeType":"ElementaryTypeName","src":"3000:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":230,"mutability":"mutable","name":"tokenId","nameLocation":"3024:7:2","nodeType":"VariableDeclaration","scope":234,"src":"3016:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":229,"name":"uint256","nodeType":"ElementaryTypeName","src":"3016:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":232,"mutability":"mutable","name":"owner","nameLocation":"3041:5:2","nodeType":"VariableDeclaration","scope":234,"src":"3033:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":231,"name":"address","nodeType":"ElementaryTypeName","src":"3033:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2999:48:2"},"src":"2973:75:2"},{"documentation":{"id":235,"nodeType":"StructuredDocumentation","src":"3054:152:2","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"73c6ac6e","id":239,"name":"ERC721InvalidSender","nameLocation":"3217:19:2","nodeType":"ErrorDefinition","parameters":{"id":238,"nodeType":"ParameterList","parameters":[{"constant":false,"id":237,"mutability":"mutable","name":"sender","nameLocation":"3245:6:2","nodeType":"VariableDeclaration","scope":239,"src":"3237:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":236,"name":"address","nodeType":"ElementaryTypeName","src":"3237:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3236:16:2"},"src":"3211:42:2"},{"documentation":{"id":240,"nodeType":"StructuredDocumentation","src":"3259:159:2","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"64a0ae92","id":244,"name":"ERC721InvalidReceiver","nameLocation":"3429:21:2","nodeType":"ErrorDefinition","parameters":{"id":243,"nodeType":"ParameterList","parameters":[{"constant":false,"id":242,"mutability":"mutable","name":"receiver","nameLocation":"3459:8:2","nodeType":"VariableDeclaration","scope":244,"src":"3451:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":241,"name":"address","nodeType":"ElementaryTypeName","src":"3451:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3450:18:2"},"src":"3423:46:2"},{"documentation":{"id":245,"nodeType":"StructuredDocumentation","src":"3475:247:2","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."},"errorSelector":"177e802f","id":251,"name":"ERC721InsufficientApproval","nameLocation":"3733:26:2","nodeType":"ErrorDefinition","parameters":{"id":250,"nodeType":"ParameterList","parameters":[{"constant":false,"id":247,"mutability":"mutable","name":"operator","nameLocation":"3768:8:2","nodeType":"VariableDeclaration","scope":251,"src":"3760:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":246,"name":"address","nodeType":"ElementaryTypeName","src":"3760:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":249,"mutability":"mutable","name":"tokenId","nameLocation":"3786:7:2","nodeType":"VariableDeclaration","scope":251,"src":"3778:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":248,"name":"uint256","nodeType":"ElementaryTypeName","src":"3778:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3759:35:2"},"src":"3727:68:2"},{"documentation":{"id":252,"nodeType":"StructuredDocumentation","src":"3801:174:2","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"a9fbf51f","id":256,"name":"ERC721InvalidApprover","nameLocation":"3986:21:2","nodeType":"ErrorDefinition","parameters":{"id":255,"nodeType":"ParameterList","parameters":[{"constant":false,"id":254,"mutability":"mutable","name":"approver","nameLocation":"4016:8:2","nodeType":"VariableDeclaration","scope":256,"src":"4008:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":253,"name":"address","nodeType":"ElementaryTypeName","src":"4008:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4007:18:2"},"src":"3980:46:2"},{"documentation":{"id":257,"nodeType":"StructuredDocumentation","src":"4032:197:2","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"5b08ba18","id":261,"name":"ERC721InvalidOperator","nameLocation":"4240:21:2","nodeType":"ErrorDefinition","parameters":{"id":260,"nodeType":"ParameterList","parameters":[{"constant":false,"id":259,"mutability":"mutable","name":"operator","nameLocation":"4270:8:2","nodeType":"VariableDeclaration","scope":261,"src":"4262:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":258,"name":"address","nodeType":"ElementaryTypeName","src":"4262:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4261:18:2"},"src":"4234:46:2"}],"scope":310,"src":"2190:2092:2","usedErrors":[220,225,234,239,244,251,256,261],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1155Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":263,"nodeType":"StructuredDocumentation","src":"4284:145:2","text":" @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."},"fullyImplemented":true,"id":309,"linearizedBaseContracts":[309],"name":"IERC1155Errors","nameLocation":"4440:14:2","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":264,"nodeType":"StructuredDocumentation","src":"4461:361:2","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."},"errorSelector":"03dee4c5","id":274,"name":"ERC1155InsufficientBalance","nameLocation":"4833:26:2","nodeType":"ErrorDefinition","parameters":{"id":273,"nodeType":"ParameterList","parameters":[{"constant":false,"id":266,"mutability":"mutable","name":"sender","nameLocation":"4868:6:2","nodeType":"VariableDeclaration","scope":274,"src":"4860:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":265,"name":"address","nodeType":"ElementaryTypeName","src":"4860:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":268,"mutability":"mutable","name":"balance","nameLocation":"4884:7:2","nodeType":"VariableDeclaration","scope":274,"src":"4876:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":267,"name":"uint256","nodeType":"ElementaryTypeName","src":"4876:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":270,"mutability":"mutable","name":"needed","nameLocation":"4901:6:2","nodeType":"VariableDeclaration","scope":274,"src":"4893:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":269,"name":"uint256","nodeType":"ElementaryTypeName","src":"4893:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":272,"mutability":"mutable","name":"tokenId","nameLocation":"4917:7:2","nodeType":"VariableDeclaration","scope":274,"src":"4909:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":271,"name":"uint256","nodeType":"ElementaryTypeName","src":"4909:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4859:66:2"},"src":"4827:99:2"},{"documentation":{"id":275,"nodeType":"StructuredDocumentation","src":"4932:152:2","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"01a83514","id":279,"name":"ERC1155InvalidSender","nameLocation":"5095:20:2","nodeType":"ErrorDefinition","parameters":{"id":278,"nodeType":"ParameterList","parameters":[{"constant":false,"id":277,"mutability":"mutable","name":"sender","nameLocation":"5124:6:2","nodeType":"VariableDeclaration","scope":279,"src":"5116:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":276,"name":"address","nodeType":"ElementaryTypeName","src":"5116:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5115:16:2"},"src":"5089:43:2"},{"documentation":{"id":280,"nodeType":"StructuredDocumentation","src":"5138:159:2","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"57f447ce","id":284,"name":"ERC1155InvalidReceiver","nameLocation":"5308:22:2","nodeType":"ErrorDefinition","parameters":{"id":283,"nodeType":"ParameterList","parameters":[{"constant":false,"id":282,"mutability":"mutable","name":"receiver","nameLocation":"5339:8:2","nodeType":"VariableDeclaration","scope":284,"src":"5331:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":281,"name":"address","nodeType":"ElementaryTypeName","src":"5331:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5330:18:2"},"src":"5302:47:2"},{"documentation":{"id":285,"nodeType":"StructuredDocumentation","src":"5355:256:2","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."},"errorSelector":"e237d922","id":291,"name":"ERC1155MissingApprovalForAll","nameLocation":"5622:28:2","nodeType":"ErrorDefinition","parameters":{"id":290,"nodeType":"ParameterList","parameters":[{"constant":false,"id":287,"mutability":"mutable","name":"operator","nameLocation":"5659:8:2","nodeType":"VariableDeclaration","scope":291,"src":"5651:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":286,"name":"address","nodeType":"ElementaryTypeName","src":"5651:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":289,"mutability":"mutable","name":"owner","nameLocation":"5677:5:2","nodeType":"VariableDeclaration","scope":291,"src":"5669:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":288,"name":"address","nodeType":"ElementaryTypeName","src":"5669:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5650:33:2"},"src":"5616:68:2"},{"documentation":{"id":292,"nodeType":"StructuredDocumentation","src":"5690:174:2","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"3e31884e","id":296,"name":"ERC1155InvalidApprover","nameLocation":"5875:22:2","nodeType":"ErrorDefinition","parameters":{"id":295,"nodeType":"ParameterList","parameters":[{"constant":false,"id":294,"mutability":"mutable","name":"approver","nameLocation":"5906:8:2","nodeType":"VariableDeclaration","scope":296,"src":"5898:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":293,"name":"address","nodeType":"ElementaryTypeName","src":"5898:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5897:18:2"},"src":"5869:47:2"},{"documentation":{"id":297,"nodeType":"StructuredDocumentation","src":"5922:197:2","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"ced3e100","id":301,"name":"ERC1155InvalidOperator","nameLocation":"6130:22:2","nodeType":"ErrorDefinition","parameters":{"id":300,"nodeType":"ParameterList","parameters":[{"constant":false,"id":299,"mutability":"mutable","name":"operator","nameLocation":"6161:8:2","nodeType":"VariableDeclaration","scope":301,"src":"6153:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":298,"name":"address","nodeType":"ElementaryTypeName","src":"6153:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6152:18:2"},"src":"6124:47:2"},{"documentation":{"id":302,"nodeType":"StructuredDocumentation","src":"6177:280:2","text":" @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"},"errorSelector":"5b059991","id":308,"name":"ERC1155InvalidArrayLength","nameLocation":"6468:25:2","nodeType":"ErrorDefinition","parameters":{"id":307,"nodeType":"ParameterList","parameters":[{"constant":false,"id":304,"mutability":"mutable","name":"idsLength","nameLocation":"6502:9:2","nodeType":"VariableDeclaration","scope":308,"src":"6494:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":303,"name":"uint256","nodeType":"ElementaryTypeName","src":"6494:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":306,"mutability":"mutable","name":"valuesLength","nameLocation":"6521:12:2","nodeType":"VariableDeclaration","scope":308,"src":"6513:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":305,"name":"uint256","nodeType":"ElementaryTypeName","src":"6513:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6493:41:2"},"src":"6462:73:2"}],"scope":310,"src":"4430:2107:2","usedErrors":[274,279,284,291,296,301,308],"usedEvents":[]}],"src":"112:6426:2"},"id":2},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","exportedSymbols":{"Context":[1194],"ERC20":[824],"IERC20":[902],"IERC20Errors":[214],"IERC20Metadata":[1128]},"id":825,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":311,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"105:24:3"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"./IERC20.sol","id":313,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":825,"sourceUnit":903,"src":"131:36:3","symbolAliases":[{"foreign":{"id":312,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":902,"src":"139:6:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"./extensions/IERC20Metadata.sol","id":315,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":825,"sourceUnit":1129,"src":"168:63:3","symbolAliases":[{"foreign":{"id":314,"name":"IERC20Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1128,"src":"176:14:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":317,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":825,"sourceUnit":1195,"src":"232:48:3","symbolAliases":[{"foreign":{"id":316,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1194,"src":"240:7:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../interfaces/draft-IERC6093.sol","id":319,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":825,"sourceUnit":310,"src":"281:65:3","symbolAliases":[{"foreign":{"id":318,"name":"IERC20Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":214,"src":"289:12:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":321,"name":"Context","nameLocations":["1133:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":1194,"src":"1133:7:3"},"id":322,"nodeType":"InheritanceSpecifier","src":"1133:7:3"},{"baseName":{"id":323,"name":"IERC20","nameLocations":["1142:6:3"],"nodeType":"IdentifierPath","referencedDeclaration":902,"src":"1142:6:3"},"id":324,"nodeType":"InheritanceSpecifier","src":"1142:6:3"},{"baseName":{"id":325,"name":"IERC20Metadata","nameLocations":["1150:14:3"],"nodeType":"IdentifierPath","referencedDeclaration":1128,"src":"1150:14:3"},"id":326,"nodeType":"InheritanceSpecifier","src":"1150:14:3"},{"baseName":{"id":327,"name":"IERC20Errors","nameLocations":["1166:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":214,"src":"1166:12:3"},"id":328,"nodeType":"InheritanceSpecifier","src":"1166:12:3"}],"canonicalName":"ERC20","contractDependencies":[],"contractKind":"contract","documentation":{"id":320,"nodeType":"StructuredDocumentation","src":"348:757:3","text":" @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."},"fullyImplemented":true,"id":824,"linearizedBaseContracts":[824,214,1128,902,1194],"name":"ERC20","nameLocation":"1124:5:3","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":332,"mutability":"mutable","name":"_balances","nameLocation":"1229:9:3","nodeType":"VariableDeclaration","scope":824,"src":"1185:53:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":331,"keyName":"account","keyNameLocation":"1201:7:3","keyType":{"id":329,"name":"address","nodeType":"ElementaryTypeName","src":"1193:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1185:35:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":330,"name":"uint256","nodeType":"ElementaryTypeName","src":"1212:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":338,"mutability":"mutable","name":"_allowances","nameLocation":"1317:11:3","nodeType":"VariableDeclaration","scope":824,"src":"1245:83:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":337,"keyName":"account","keyNameLocation":"1261:7:3","keyType":{"id":333,"name":"address","nodeType":"ElementaryTypeName","src":"1253:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1245:63:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":336,"keyName":"spender","keyNameLocation":"1288:7:3","keyType":{"id":334,"name":"address","nodeType":"ElementaryTypeName","src":"1280:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1272:35:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":335,"name":"uint256","nodeType":"ElementaryTypeName","src":"1299:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":340,"mutability":"mutable","name":"_totalSupply","nameLocation":"1351:12:3","nodeType":"VariableDeclaration","scope":824,"src":"1335:28:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":339,"name":"uint256","nodeType":"ElementaryTypeName","src":"1335:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":342,"mutability":"mutable","name":"_name","nameLocation":"1385:5:3","nodeType":"VariableDeclaration","scope":824,"src":"1370:20:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":341,"name":"string","nodeType":"ElementaryTypeName","src":"1370:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":344,"mutability":"mutable","name":"_symbol","nameLocation":"1411:7:3","nodeType":"VariableDeclaration","scope":824,"src":"1396:22:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":343,"name":"string","nodeType":"ElementaryTypeName","src":"1396:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":360,"nodeType":"Block","src":"1638:57:3","statements":[{"expression":{"id":354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":352,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":342,"src":"1648:5:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":353,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":347,"src":"1656:5:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1648:13:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":355,"nodeType":"ExpressionStatement","src":"1648:13:3"},{"expression":{"id":358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":356,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":344,"src":"1671:7:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":357,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":349,"src":"1681:7:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1671:17:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":359,"nodeType":"ExpressionStatement","src":"1671:17:3"}]},"documentation":{"id":345,"nodeType":"StructuredDocumentation","src":"1425:152:3","text":" @dev Sets the values for {name} and {symbol}.\n Both values are immutable: they can only be set once during construction."},"id":361,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":350,"nodeType":"ParameterList","parameters":[{"constant":false,"id":347,"mutability":"mutable","name":"name_","nameLocation":"1608:5:3","nodeType":"VariableDeclaration","scope":361,"src":"1594:19:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":346,"name":"string","nodeType":"ElementaryTypeName","src":"1594:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":349,"mutability":"mutable","name":"symbol_","nameLocation":"1629:7:3","nodeType":"VariableDeclaration","scope":361,"src":"1615:21:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":348,"name":"string","nodeType":"ElementaryTypeName","src":"1615:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1593:44:3"},"returnParameters":{"id":351,"nodeType":"ParameterList","parameters":[],"src":"1638:0:3"},"scope":824,"src":"1582:113:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[1115],"body":{"id":369,"nodeType":"Block","src":"1820:29:3","statements":[{"expression":{"id":367,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":342,"src":"1837:5:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":366,"id":368,"nodeType":"Return","src":"1830:12:3"}]},"documentation":{"id":362,"nodeType":"StructuredDocumentation","src":"1701:54:3","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":370,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"1769:4:3","nodeType":"FunctionDefinition","parameters":{"id":363,"nodeType":"ParameterList","parameters":[],"src":"1773:2:3"},"returnParameters":{"id":366,"nodeType":"ParameterList","parameters":[{"constant":false,"id":365,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":370,"src":"1805:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":364,"name":"string","nodeType":"ElementaryTypeName","src":"1805:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1804:15:3"},"scope":824,"src":"1760:89:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1121],"body":{"id":378,"nodeType":"Block","src":"2024:31:3","statements":[{"expression":{"id":376,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":344,"src":"2041:7:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":375,"id":377,"nodeType":"Return","src":"2034:14:3"}]},"documentation":{"id":371,"nodeType":"StructuredDocumentation","src":"1855:102:3","text":" @dev Returns the symbol of the token, usually a shorter version of the\n name."},"functionSelector":"95d89b41","id":379,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"1971:6:3","nodeType":"FunctionDefinition","parameters":{"id":372,"nodeType":"ParameterList","parameters":[],"src":"1977:2:3"},"returnParameters":{"id":375,"nodeType":"ParameterList","parameters":[{"constant":false,"id":374,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":379,"src":"2009:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":373,"name":"string","nodeType":"ElementaryTypeName","src":"2009:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2008:15:3"},"scope":824,"src":"1962:93:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1127],"body":{"id":387,"nodeType":"Block","src":"2744:26:3","statements":[{"expression":{"hexValue":"3138","id":385,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2761:2:3","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"functionReturnParameters":384,"id":386,"nodeType":"Return","src":"2754:9:3"}]},"documentation":{"id":380,"nodeType":"StructuredDocumentation","src":"2061:622:3","text":" @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."},"functionSelector":"313ce567","id":388,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"2697:8:3","nodeType":"FunctionDefinition","parameters":{"id":381,"nodeType":"ParameterList","parameters":[],"src":"2705:2:3"},"returnParameters":{"id":384,"nodeType":"ParameterList","parameters":[{"constant":false,"id":383,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":388,"src":"2737:5:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":382,"name":"uint8","nodeType":"ElementaryTypeName","src":"2737:5:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"2736:7:3"},"scope":824,"src":"2688:82:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[851],"body":{"id":396,"nodeType":"Block","src":"2891:36:3","statements":[{"expression":{"id":394,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":340,"src":"2908:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":393,"id":395,"nodeType":"Return","src":"2901:19:3"}]},"documentation":{"id":389,"nodeType":"StructuredDocumentation","src":"2776:49:3","text":" @dev See {IERC20-totalSupply}."},"functionSelector":"18160ddd","id":397,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"2839:11:3","nodeType":"FunctionDefinition","parameters":{"id":390,"nodeType":"ParameterList","parameters":[],"src":"2850:2:3"},"returnParameters":{"id":393,"nodeType":"ParameterList","parameters":[{"constant":false,"id":392,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":397,"src":"2882:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":391,"name":"uint256","nodeType":"ElementaryTypeName","src":"2882:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2881:9:3"},"scope":824,"src":"2830:97:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[859],"body":{"id":409,"nodeType":"Block","src":"3059:42:3","statements":[{"expression":{"baseExpression":{"id":405,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":332,"src":"3076:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":407,"indexExpression":{"id":406,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":400,"src":"3086:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3076:18:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":404,"id":408,"nodeType":"Return","src":"3069:25:3"}]},"documentation":{"id":398,"nodeType":"StructuredDocumentation","src":"2933:47:3","text":" @dev See {IERC20-balanceOf}."},"functionSelector":"70a08231","id":410,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"2994:9:3","nodeType":"FunctionDefinition","parameters":{"id":401,"nodeType":"ParameterList","parameters":[{"constant":false,"id":400,"mutability":"mutable","name":"account","nameLocation":"3012:7:3","nodeType":"VariableDeclaration","scope":410,"src":"3004:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":399,"name":"address","nodeType":"ElementaryTypeName","src":"3004:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3003:17:3"},"returnParameters":{"id":404,"nodeType":"ParameterList","parameters":[{"constant":false,"id":403,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":410,"src":"3050:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":402,"name":"uint256","nodeType":"ElementaryTypeName","src":"3050:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3049:9:3"},"scope":824,"src":"2985:116:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[869],"body":{"id":433,"nodeType":"Block","src":"3371:103:3","statements":[{"assignments":[421],"declarations":[{"constant":false,"id":421,"mutability":"mutable","name":"owner","nameLocation":"3389:5:3","nodeType":"VariableDeclaration","scope":433,"src":"3381:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":420,"name":"address","nodeType":"ElementaryTypeName","src":"3381:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":424,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":422,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1176,"src":"3397:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":423,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3397:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3381:28:3"},{"expression":{"arguments":[{"id":426,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":421,"src":"3429:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":427,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":413,"src":"3436:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":428,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":415,"src":"3440:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":425,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":554,"src":"3419:9:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":429,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3419:27:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":430,"nodeType":"ExpressionStatement","src":"3419:27:3"},{"expression":{"hexValue":"74727565","id":431,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3463:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":419,"id":432,"nodeType":"Return","src":"3456:11:3"}]},"documentation":{"id":411,"nodeType":"StructuredDocumentation","src":"3107:184:3","text":" @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."},"functionSelector":"a9059cbb","id":434,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"3305:8:3","nodeType":"FunctionDefinition","parameters":{"id":416,"nodeType":"ParameterList","parameters":[{"constant":false,"id":413,"mutability":"mutable","name":"to","nameLocation":"3322:2:3","nodeType":"VariableDeclaration","scope":434,"src":"3314:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":412,"name":"address","nodeType":"ElementaryTypeName","src":"3314:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":415,"mutability":"mutable","name":"value","nameLocation":"3334:5:3","nodeType":"VariableDeclaration","scope":434,"src":"3326:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":414,"name":"uint256","nodeType":"ElementaryTypeName","src":"3326:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3313:27:3"},"returnParameters":{"id":419,"nodeType":"ParameterList","parameters":[{"constant":false,"id":418,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":434,"src":"3365:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":417,"name":"bool","nodeType":"ElementaryTypeName","src":"3365:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3364:6:3"},"scope":824,"src":"3296:178:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[879],"body":{"id":450,"nodeType":"Block","src":"3621:51:3","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":444,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":338,"src":"3638:11:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":446,"indexExpression":{"id":445,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":437,"src":"3650:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3638:18:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":448,"indexExpression":{"id":447,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":439,"src":"3657:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3638:27:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":443,"id":449,"nodeType":"Return","src":"3631:34:3"}]},"documentation":{"id":435,"nodeType":"StructuredDocumentation","src":"3480:47:3","text":" @dev See {IERC20-allowance}."},"functionSelector":"dd62ed3e","id":451,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"3541:9:3","nodeType":"FunctionDefinition","parameters":{"id":440,"nodeType":"ParameterList","parameters":[{"constant":false,"id":437,"mutability":"mutable","name":"owner","nameLocation":"3559:5:3","nodeType":"VariableDeclaration","scope":451,"src":"3551:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":436,"name":"address","nodeType":"ElementaryTypeName","src":"3551:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":439,"mutability":"mutable","name":"spender","nameLocation":"3574:7:3","nodeType":"VariableDeclaration","scope":451,"src":"3566:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":438,"name":"address","nodeType":"ElementaryTypeName","src":"3566:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3550:32:3"},"returnParameters":{"id":443,"nodeType":"ParameterList","parameters":[{"constant":false,"id":442,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":451,"src":"3612:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":441,"name":"uint256","nodeType":"ElementaryTypeName","src":"3612:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3611:9:3"},"scope":824,"src":"3532:140:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[889],"body":{"id":474,"nodeType":"Block","src":"4058:107:3","statements":[{"assignments":[462],"declarations":[{"constant":false,"id":462,"mutability":"mutable","name":"owner","nameLocation":"4076:5:3","nodeType":"VariableDeclaration","scope":474,"src":"4068:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":461,"name":"address","nodeType":"ElementaryTypeName","src":"4068:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":465,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":463,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1176,"src":"4084:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":464,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4084:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4068:28:3"},{"expression":{"arguments":[{"id":467,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":462,"src":"4115:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":468,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":454,"src":"4122:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":469,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":456,"src":"4131:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":466,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[715,775],"referencedDeclaration":715,"src":"4106:8:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":470,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4106:31:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":471,"nodeType":"ExpressionStatement","src":"4106:31:3"},{"expression":{"hexValue":"74727565","id":472,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4154:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":460,"id":473,"nodeType":"Return","src":"4147:11:3"}]},"documentation":{"id":452,"nodeType":"StructuredDocumentation","src":"3678:296:3","text":" @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"095ea7b3","id":475,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"3988:7:3","nodeType":"FunctionDefinition","parameters":{"id":457,"nodeType":"ParameterList","parameters":[{"constant":false,"id":454,"mutability":"mutable","name":"spender","nameLocation":"4004:7:3","nodeType":"VariableDeclaration","scope":475,"src":"3996:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":453,"name":"address","nodeType":"ElementaryTypeName","src":"3996:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":456,"mutability":"mutable","name":"value","nameLocation":"4021:5:3","nodeType":"VariableDeclaration","scope":475,"src":"4013:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":455,"name":"uint256","nodeType":"ElementaryTypeName","src":"4013:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3995:32:3"},"returnParameters":{"id":460,"nodeType":"ParameterList","parameters":[{"constant":false,"id":459,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":475,"src":"4052:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":458,"name":"bool","nodeType":"ElementaryTypeName","src":"4052:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4051:6:3"},"scope":824,"src":"3979:186:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[901],"body":{"id":506,"nodeType":"Block","src":"4850:151:3","statements":[{"assignments":[488],"declarations":[{"constant":false,"id":488,"mutability":"mutable","name":"spender","nameLocation":"4868:7:3","nodeType":"VariableDeclaration","scope":506,"src":"4860:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":487,"name":"address","nodeType":"ElementaryTypeName","src":"4860:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":491,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":489,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1176,"src":"4878:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":490,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4878:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4860:30:3"},{"expression":{"arguments":[{"id":493,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":478,"src":"4916:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":494,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":488,"src":"4922:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":495,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":482,"src":"4931:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":492,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":823,"src":"4900:15:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":496,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4900:37:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":497,"nodeType":"ExpressionStatement","src":"4900:37:3"},{"expression":{"arguments":[{"id":499,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":478,"src":"4957:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":500,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":480,"src":"4963:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":501,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":482,"src":"4967:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":498,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":554,"src":"4947:9:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":502,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4947:26:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":503,"nodeType":"ExpressionStatement","src":"4947:26:3"},{"expression":{"hexValue":"74727565","id":504,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4990:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":486,"id":505,"nodeType":"Return","src":"4983:11:3"}]},"documentation":{"id":476,"nodeType":"StructuredDocumentation","src":"4171:581:3","text":" @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."},"functionSelector":"23b872dd","id":507,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"4766:12:3","nodeType":"FunctionDefinition","parameters":{"id":483,"nodeType":"ParameterList","parameters":[{"constant":false,"id":478,"mutability":"mutable","name":"from","nameLocation":"4787:4:3","nodeType":"VariableDeclaration","scope":507,"src":"4779:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":477,"name":"address","nodeType":"ElementaryTypeName","src":"4779:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":480,"mutability":"mutable","name":"to","nameLocation":"4801:2:3","nodeType":"VariableDeclaration","scope":507,"src":"4793:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":479,"name":"address","nodeType":"ElementaryTypeName","src":"4793:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":482,"mutability":"mutable","name":"value","nameLocation":"4813:5:3","nodeType":"VariableDeclaration","scope":507,"src":"4805:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":481,"name":"uint256","nodeType":"ElementaryTypeName","src":"4805:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4778:41:3"},"returnParameters":{"id":486,"nodeType":"ParameterList","parameters":[{"constant":false,"id":485,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":507,"src":"4844:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":484,"name":"bool","nodeType":"ElementaryTypeName","src":"4844:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4843:6:3"},"scope":824,"src":"4757:244:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":553,"nodeType":"Block","src":"5443:231:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":517,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":510,"src":"5457:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":520,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5473:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":519,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5465:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":518,"name":"address","nodeType":"ElementaryTypeName","src":"5465:7:3","typeDescriptions":{}}},"id":521,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5465:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5457:18:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":531,"nodeType":"IfStatement","src":"5453:86:3","trueBody":{"id":530,"nodeType":"Block","src":"5477:62:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":526,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5525:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":525,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5517:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":524,"name":"address","nodeType":"ElementaryTypeName","src":"5517:7:3","typeDescriptions":{}}},"id":527,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5517:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":523,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":189,"src":"5498:18:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":528,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5498:30:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":529,"nodeType":"RevertStatement","src":"5491:37:3"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":532,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":512,"src":"5552:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":535,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5566:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":534,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5558:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":533,"name":"address","nodeType":"ElementaryTypeName","src":"5558:7:3","typeDescriptions":{}}},"id":536,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5558:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5552:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":546,"nodeType":"IfStatement","src":"5548:86:3","trueBody":{"id":545,"nodeType":"Block","src":"5570:64:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":541,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5620:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":540,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5612:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":539,"name":"address","nodeType":"ElementaryTypeName","src":"5612:7:3","typeDescriptions":{}}},"id":542,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5612:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":538,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":194,"src":"5591:20:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":543,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5591:32:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":544,"nodeType":"RevertStatement","src":"5584:39:3"}]}},{"expression":{"arguments":[{"id":548,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":510,"src":"5651:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":549,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":512,"src":"5657:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":550,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":514,"src":"5661:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":547,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":631,"src":"5643:7:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":551,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5643:24:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":552,"nodeType":"ExpressionStatement","src":"5643:24:3"}]},"documentation":{"id":508,"nodeType":"StructuredDocumentation","src":"5007:362:3","text":" @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":554,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"5383:9:3","nodeType":"FunctionDefinition","parameters":{"id":515,"nodeType":"ParameterList","parameters":[{"constant":false,"id":510,"mutability":"mutable","name":"from","nameLocation":"5401:4:3","nodeType":"VariableDeclaration","scope":554,"src":"5393:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":509,"name":"address","nodeType":"ElementaryTypeName","src":"5393:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":512,"mutability":"mutable","name":"to","nameLocation":"5415:2:3","nodeType":"VariableDeclaration","scope":554,"src":"5407:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":511,"name":"address","nodeType":"ElementaryTypeName","src":"5407:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":514,"mutability":"mutable","name":"value","nameLocation":"5427:5:3","nodeType":"VariableDeclaration","scope":554,"src":"5419:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":513,"name":"uint256","nodeType":"ElementaryTypeName","src":"5419:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5392:41:3"},"returnParameters":{"id":516,"nodeType":"ParameterList","parameters":[],"src":"5443:0:3"},"scope":824,"src":"5374:300:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":630,"nodeType":"Block","src":"6064:1032:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":564,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":557,"src":"6078:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":567,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6094:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":566,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6086:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":565,"name":"address","nodeType":"ElementaryTypeName","src":"6086:7:3","typeDescriptions":{}}},"id":568,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6086:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6078:18:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":601,"nodeType":"Block","src":"6252:362:3","statements":[{"assignments":[576],"declarations":[{"constant":false,"id":576,"mutability":"mutable","name":"fromBalance","nameLocation":"6274:11:3","nodeType":"VariableDeclaration","scope":601,"src":"6266:19:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":575,"name":"uint256","nodeType":"ElementaryTypeName","src":"6266:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":580,"initialValue":{"baseExpression":{"id":577,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":332,"src":"6288:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":579,"indexExpression":{"id":578,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":557,"src":"6298:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6288:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6266:37:3"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":581,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":576,"src":"6321:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":582,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":561,"src":"6335:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6321:19:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":591,"nodeType":"IfStatement","src":"6317:115:3","trueBody":{"id":590,"nodeType":"Block","src":"6342:90:3","statements":[{"errorCall":{"arguments":[{"id":585,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":557,"src":"6392:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":586,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":576,"src":"6398:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":587,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":561,"src":"6411:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":584,"name":"ERC20InsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":184,"src":"6367:24:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":588,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6367:50:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":589,"nodeType":"RevertStatement","src":"6360:57:3"}]}},{"id":600,"nodeType":"UncheckedBlock","src":"6445:159:3","statements":[{"expression":{"id":598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":592,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":332,"src":"6552:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":594,"indexExpression":{"id":593,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":557,"src":"6562:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6552:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":597,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":595,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":576,"src":"6570:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":596,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":561,"src":"6584:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6570:19:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6552:37:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":599,"nodeType":"ExpressionStatement","src":"6552:37:3"}]}]},"id":602,"nodeType":"IfStatement","src":"6074:540:3","trueBody":{"id":574,"nodeType":"Block","src":"6098:148:3","statements":[{"expression":{"id":572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":570,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":340,"src":"6214:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":571,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":561,"src":"6230:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6214:21:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":573,"nodeType":"ExpressionStatement","src":"6214:21:3"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":603,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":559,"src":"6628:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":606,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6642:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":605,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6634:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":604,"name":"address","nodeType":"ElementaryTypeName","src":"6634:7:3","typeDescriptions":{}}},"id":607,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6634:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6628:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":622,"nodeType":"Block","src":"6843:206:3","statements":[{"id":621,"nodeType":"UncheckedBlock","src":"6857:182:3","statements":[{"expression":{"id":619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":615,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":332,"src":"7002:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":617,"indexExpression":{"id":616,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":559,"src":"7012:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7002:13:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":618,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":561,"src":"7019:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7002:22:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":620,"nodeType":"ExpressionStatement","src":"7002:22:3"}]}]},"id":623,"nodeType":"IfStatement","src":"6624:425:3","trueBody":{"id":614,"nodeType":"Block","src":"6646:191:3","statements":[{"id":613,"nodeType":"UncheckedBlock","src":"6660:167:3","statements":[{"expression":{"id":611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":609,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":340,"src":"6791:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":610,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":561,"src":"6807:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6791:21:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":612,"nodeType":"ExpressionStatement","src":"6791:21:3"}]}]}},{"eventCall":{"arguments":[{"id":625,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":557,"src":"7073:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":626,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":559,"src":"7079:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":627,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":561,"src":"7083:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":624,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":836,"src":"7064:8:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":628,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7064:25:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":629,"nodeType":"EmitStatement","src":"7059:30:3"}]},"documentation":{"id":555,"nodeType":"StructuredDocumentation","src":"5680:304:3","text":" @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."},"id":631,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"5998:7:3","nodeType":"FunctionDefinition","parameters":{"id":562,"nodeType":"ParameterList","parameters":[{"constant":false,"id":557,"mutability":"mutable","name":"from","nameLocation":"6014:4:3","nodeType":"VariableDeclaration","scope":631,"src":"6006:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":556,"name":"address","nodeType":"ElementaryTypeName","src":"6006:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":559,"mutability":"mutable","name":"to","nameLocation":"6028:2:3","nodeType":"VariableDeclaration","scope":631,"src":"6020:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":558,"name":"address","nodeType":"ElementaryTypeName","src":"6020:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":561,"mutability":"mutable","name":"value","nameLocation":"6040:5:3","nodeType":"VariableDeclaration","scope":631,"src":"6032:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":560,"name":"uint256","nodeType":"ElementaryTypeName","src":"6032:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6005:41:3"},"returnParameters":{"id":563,"nodeType":"ParameterList","parameters":[],"src":"6064:0:3"},"scope":824,"src":"5989:1107:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":663,"nodeType":"Block","src":"7495:152:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":639,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":634,"src":"7509:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":642,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7528:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":641,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7520:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":640,"name":"address","nodeType":"ElementaryTypeName","src":"7520:7:3","typeDescriptions":{}}},"id":643,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7520:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7509:21:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":653,"nodeType":"IfStatement","src":"7505:91:3","trueBody":{"id":652,"nodeType":"Block","src":"7532:64:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":648,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7582:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":647,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7574:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":646,"name":"address","nodeType":"ElementaryTypeName","src":"7574:7:3","typeDescriptions":{}}},"id":649,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7574:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":645,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":194,"src":"7553:20:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":650,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7553:32:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":651,"nodeType":"RevertStatement","src":"7546:39:3"}]}},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":657,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7621:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":656,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7613:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":655,"name":"address","nodeType":"ElementaryTypeName","src":"7613:7:3","typeDescriptions":{}}},"id":658,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7613:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":659,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":634,"src":"7625:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":660,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":636,"src":"7634:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":654,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":631,"src":"7605:7:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":661,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7605:35:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":662,"nodeType":"ExpressionStatement","src":"7605:35:3"}]},"documentation":{"id":632,"nodeType":"StructuredDocumentation","src":"7102:332:3","text":" @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":664,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"7448:5:3","nodeType":"FunctionDefinition","parameters":{"id":637,"nodeType":"ParameterList","parameters":[{"constant":false,"id":634,"mutability":"mutable","name":"account","nameLocation":"7462:7:3","nodeType":"VariableDeclaration","scope":664,"src":"7454:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":633,"name":"address","nodeType":"ElementaryTypeName","src":"7454:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":636,"mutability":"mutable","name":"value","nameLocation":"7479:5:3","nodeType":"VariableDeclaration","scope":664,"src":"7471:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":635,"name":"uint256","nodeType":"ElementaryTypeName","src":"7471:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7453:32:3"},"returnParameters":{"id":638,"nodeType":"ParameterList","parameters":[],"src":"7495:0:3"},"scope":824,"src":"7439:208:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":696,"nodeType":"Block","src":"8021:150:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":672,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":667,"src":"8035:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":675,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8054:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":674,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8046:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":673,"name":"address","nodeType":"ElementaryTypeName","src":"8046:7:3","typeDescriptions":{}}},"id":676,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8046:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8035:21:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":686,"nodeType":"IfStatement","src":"8031:89:3","trueBody":{"id":685,"nodeType":"Block","src":"8058:62:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":681,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8106:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":680,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8098:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":679,"name":"address","nodeType":"ElementaryTypeName","src":"8098:7:3","typeDescriptions":{}}},"id":682,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8098:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":678,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":189,"src":"8079:18:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":683,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8079:30:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":684,"nodeType":"RevertStatement","src":"8072:37:3"}]}},{"expression":{"arguments":[{"id":688,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":667,"src":"8137:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":691,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8154:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":690,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8146:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":689,"name":"address","nodeType":"ElementaryTypeName","src":"8146:7:3","typeDescriptions":{}}},"id":692,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8146:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":693,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":669,"src":"8158:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":687,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":631,"src":"8129:7:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":694,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8129:35:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":695,"nodeType":"ExpressionStatement","src":"8129:35:3"}]},"documentation":{"id":665,"nodeType":"StructuredDocumentation","src":"7653:307:3","text":" @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"},"id":697,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"7974:5:3","nodeType":"FunctionDefinition","parameters":{"id":670,"nodeType":"ParameterList","parameters":[{"constant":false,"id":667,"mutability":"mutable","name":"account","nameLocation":"7988:7:3","nodeType":"VariableDeclaration","scope":697,"src":"7980:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":666,"name":"address","nodeType":"ElementaryTypeName","src":"7980:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":669,"mutability":"mutable","name":"value","nameLocation":"8005:5:3","nodeType":"VariableDeclaration","scope":697,"src":"7997:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":668,"name":"uint256","nodeType":"ElementaryTypeName","src":"7997:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7979:32:3"},"returnParameters":{"id":671,"nodeType":"ParameterList","parameters":[],"src":"8021:0:3"},"scope":824,"src":"7965:206:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":714,"nodeType":"Block","src":"8781:54:3","statements":[{"expression":{"arguments":[{"id":708,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":700,"src":"8800:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":709,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":702,"src":"8807:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":710,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":704,"src":"8816:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":711,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8823:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":707,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[715,775],"referencedDeclaration":775,"src":"8791:8:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":712,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8791:37:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":713,"nodeType":"ExpressionStatement","src":"8791:37:3"}]},"documentation":{"id":698,"nodeType":"StructuredDocumentation","src":"8177:525:3","text":" @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."},"id":715,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"8716:8:3","nodeType":"FunctionDefinition","parameters":{"id":705,"nodeType":"ParameterList","parameters":[{"constant":false,"id":700,"mutability":"mutable","name":"owner","nameLocation":"8733:5:3","nodeType":"VariableDeclaration","scope":715,"src":"8725:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":699,"name":"address","nodeType":"ElementaryTypeName","src":"8725:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":702,"mutability":"mutable","name":"spender","nameLocation":"8748:7:3","nodeType":"VariableDeclaration","scope":715,"src":"8740:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":701,"name":"address","nodeType":"ElementaryTypeName","src":"8740:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":704,"mutability":"mutable","name":"value","nameLocation":"8765:5:3","nodeType":"VariableDeclaration","scope":715,"src":"8757:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":703,"name":"uint256","nodeType":"ElementaryTypeName","src":"8757:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8724:47:3"},"returnParameters":{"id":706,"nodeType":"ParameterList","parameters":[],"src":"8781:0:3"},"scope":824,"src":"8707:128:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":774,"nodeType":"Block","src":"9780:334:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":727,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":718,"src":"9794:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":730,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9811:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":729,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9803:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":728,"name":"address","nodeType":"ElementaryTypeName","src":"9803:7:3","typeDescriptions":{}}},"id":731,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9803:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9794:19:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":741,"nodeType":"IfStatement","src":"9790:89:3","trueBody":{"id":740,"nodeType":"Block","src":"9815:64:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":736,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9865:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":735,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9857:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":734,"name":"address","nodeType":"ElementaryTypeName","src":"9857:7:3","typeDescriptions":{}}},"id":737,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9857:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":733,"name":"ERC20InvalidApprover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":208,"src":"9836:20:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":738,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9836:32:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":739,"nodeType":"RevertStatement","src":"9829:39:3"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":742,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":720,"src":"9892:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":745,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9911:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":744,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9903:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":743,"name":"address","nodeType":"ElementaryTypeName","src":"9903:7:3","typeDescriptions":{}}},"id":746,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9903:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9892:21:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":756,"nodeType":"IfStatement","src":"9888:90:3","trueBody":{"id":755,"nodeType":"Block","src":"9915:63:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":751,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9964:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":750,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9956:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":749,"name":"address","nodeType":"ElementaryTypeName","src":"9956:7:3","typeDescriptions":{}}},"id":752,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9956:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":748,"name":"ERC20InvalidSpender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":213,"src":"9936:19:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":753,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9936:31:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":754,"nodeType":"RevertStatement","src":"9929:38:3"}]}},{"expression":{"id":763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":757,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":338,"src":"9987:11:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":760,"indexExpression":{"id":758,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":718,"src":"9999:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9987:18:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":761,"indexExpression":{"id":759,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":720,"src":"10006:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9987:27:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":762,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":722,"src":"10017:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9987:35:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":764,"nodeType":"ExpressionStatement","src":"9987:35:3"},{"condition":{"id":765,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":724,"src":"10036:9:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":773,"nodeType":"IfStatement","src":"10032:76:3","trueBody":{"id":772,"nodeType":"Block","src":"10047:61:3","statements":[{"eventCall":{"arguments":[{"id":767,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":718,"src":"10075:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":768,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":720,"src":"10082:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":769,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":722,"src":"10091:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":766,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":845,"src":"10066:8:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":770,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10066:31:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":771,"nodeType":"EmitStatement","src":"10061:36:3"}]}}]},"documentation":{"id":716,"nodeType":"StructuredDocumentation","src":"8841:836:3","text":" @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."},"id":775,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"9691:8:3","nodeType":"FunctionDefinition","parameters":{"id":725,"nodeType":"ParameterList","parameters":[{"constant":false,"id":718,"mutability":"mutable","name":"owner","nameLocation":"9708:5:3","nodeType":"VariableDeclaration","scope":775,"src":"9700:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":717,"name":"address","nodeType":"ElementaryTypeName","src":"9700:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":720,"mutability":"mutable","name":"spender","nameLocation":"9723:7:3","nodeType":"VariableDeclaration","scope":775,"src":"9715:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":719,"name":"address","nodeType":"ElementaryTypeName","src":"9715:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":722,"mutability":"mutable","name":"value","nameLocation":"9740:5:3","nodeType":"VariableDeclaration","scope":775,"src":"9732:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":721,"name":"uint256","nodeType":"ElementaryTypeName","src":"9732:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":724,"mutability":"mutable","name":"emitEvent","nameLocation":"9752:9:3","nodeType":"VariableDeclaration","scope":775,"src":"9747:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":723,"name":"bool","nodeType":"ElementaryTypeName","src":"9747:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9699:63:3"},"returnParameters":{"id":726,"nodeType":"ParameterList","parameters":[],"src":"9780:0:3"},"scope":824,"src":"9682:432:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":822,"nodeType":"Block","src":"10485:387:3","statements":[{"assignments":[786],"declarations":[{"constant":false,"id":786,"mutability":"mutable","name":"currentAllowance","nameLocation":"10503:16:3","nodeType":"VariableDeclaration","scope":822,"src":"10495:24:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":785,"name":"uint256","nodeType":"ElementaryTypeName","src":"10495:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":791,"initialValue":{"arguments":[{"id":788,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":778,"src":"10532:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":789,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":780,"src":"10539:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":787,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":451,"src":"10522:9:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":790,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10522:25:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10495:52:3"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":792,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":786,"src":"10561:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"arguments":[{"id":795,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10585:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":794,"name":"uint256","nodeType":"ElementaryTypeName","src":"10585:7:3","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":793,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10580:4:3","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":796,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10580:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":797,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10594:3:3","memberName":"max","nodeType":"MemberAccess","src":"10580:17:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10561:36:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":821,"nodeType":"IfStatement","src":"10557:309:3","trueBody":{"id":820,"nodeType":"Block","src":"10599:267:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":799,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":786,"src":"10617:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":800,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":782,"src":"10636:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10617:24:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":809,"nodeType":"IfStatement","src":"10613:130:3","trueBody":{"id":808,"nodeType":"Block","src":"10643:100:3","statements":[{"errorCall":{"arguments":[{"id":803,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":780,"src":"10695:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":804,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":786,"src":"10704:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":805,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":782,"src":"10722:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":802,"name":"ERC20InsufficientAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":203,"src":"10668:26:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":806,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10668:60:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":807,"nodeType":"RevertStatement","src":"10661:67:3"}]}},{"id":819,"nodeType":"UncheckedBlock","src":"10756:100:3","statements":[{"expression":{"arguments":[{"id":811,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":778,"src":"10793:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":812,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":780,"src":"10800:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":815,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":813,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":786,"src":"10809:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":814,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":782,"src":"10828:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10809:24:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":816,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10835:5:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":810,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[715,775],"referencedDeclaration":775,"src":"10784:8:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":817,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10784:57:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":818,"nodeType":"ExpressionStatement","src":"10784:57:3"}]}]}}]},"documentation":{"id":776,"nodeType":"StructuredDocumentation","src":"10120:271:3","text":" @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."},"id":823,"implemented":true,"kind":"function","modifiers":[],"name":"_spendAllowance","nameLocation":"10405:15:3","nodeType":"FunctionDefinition","parameters":{"id":783,"nodeType":"ParameterList","parameters":[{"constant":false,"id":778,"mutability":"mutable","name":"owner","nameLocation":"10429:5:3","nodeType":"VariableDeclaration","scope":823,"src":"10421:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":777,"name":"address","nodeType":"ElementaryTypeName","src":"10421:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":780,"mutability":"mutable","name":"spender","nameLocation":"10444:7:3","nodeType":"VariableDeclaration","scope":823,"src":"10436:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":779,"name":"address","nodeType":"ElementaryTypeName","src":"10436:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":782,"mutability":"mutable","name":"value","nameLocation":"10461:5:3","nodeType":"VariableDeclaration","scope":823,"src":"10453:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":781,"name":"uint256","nodeType":"ElementaryTypeName","src":"10453:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10420:47:3"},"returnParameters":{"id":784,"nodeType":"ParameterList","parameters":[],"src":"10485:0:3"},"scope":824,"src":"10396:476:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":825,"src":"1106:9768:3","usedErrors":[184,189,194,203,208,213],"usedEvents":[836,845]}],"src":"105:10770:3"},"id":3},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[902]},"id":903,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":826,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:4"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":827,"nodeType":"StructuredDocumentation","src":"132:71:4","text":" @dev Interface of the ERC-20 standard as defined in the ERC."},"fullyImplemented":false,"id":902,"linearizedBaseContracts":[902],"name":"IERC20","nameLocation":"214:6:4","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":828,"nodeType":"StructuredDocumentation","src":"227:158:4","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":836,"name":"Transfer","nameLocation":"396:8:4","nodeType":"EventDefinition","parameters":{"id":835,"nodeType":"ParameterList","parameters":[{"constant":false,"id":830,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"421:4:4","nodeType":"VariableDeclaration","scope":836,"src":"405:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":829,"name":"address","nodeType":"ElementaryTypeName","src":"405:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":832,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"443:2:4","nodeType":"VariableDeclaration","scope":836,"src":"427:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":831,"name":"address","nodeType":"ElementaryTypeName","src":"427:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":834,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"455:5:4","nodeType":"VariableDeclaration","scope":836,"src":"447:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":833,"name":"uint256","nodeType":"ElementaryTypeName","src":"447:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"404:57:4"},"src":"390:72:4"},{"anonymous":false,"documentation":{"id":837,"nodeType":"StructuredDocumentation","src":"468:148:4","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":845,"name":"Approval","nameLocation":"627:8:4","nodeType":"EventDefinition","parameters":{"id":844,"nodeType":"ParameterList","parameters":[{"constant":false,"id":839,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"652:5:4","nodeType":"VariableDeclaration","scope":845,"src":"636:21:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":838,"name":"address","nodeType":"ElementaryTypeName","src":"636:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":841,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"675:7:4","nodeType":"VariableDeclaration","scope":845,"src":"659:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":840,"name":"address","nodeType":"ElementaryTypeName","src":"659:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":843,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"692:5:4","nodeType":"VariableDeclaration","scope":845,"src":"684:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":842,"name":"uint256","nodeType":"ElementaryTypeName","src":"684:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"635:63:4"},"src":"621:78:4"},{"documentation":{"id":846,"nodeType":"StructuredDocumentation","src":"705:65:4","text":" @dev Returns the value of tokens in existence."},"functionSelector":"18160ddd","id":851,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"784:11:4","nodeType":"FunctionDefinition","parameters":{"id":847,"nodeType":"ParameterList","parameters":[],"src":"795:2:4"},"returnParameters":{"id":850,"nodeType":"ParameterList","parameters":[{"constant":false,"id":849,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":851,"src":"821:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":848,"name":"uint256","nodeType":"ElementaryTypeName","src":"821:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"820:9:4"},"scope":902,"src":"775:55:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":852,"nodeType":"StructuredDocumentation","src":"836:71:4","text":" @dev Returns the value of tokens owned by `account`."},"functionSelector":"70a08231","id":859,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"921:9:4","nodeType":"FunctionDefinition","parameters":{"id":855,"nodeType":"ParameterList","parameters":[{"constant":false,"id":854,"mutability":"mutable","name":"account","nameLocation":"939:7:4","nodeType":"VariableDeclaration","scope":859,"src":"931:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":853,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"930:17:4"},"returnParameters":{"id":858,"nodeType":"ParameterList","parameters":[{"constant":false,"id":857,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":859,"src":"971:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":856,"name":"uint256","nodeType":"ElementaryTypeName","src":"971:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"970:9:4"},"scope":902,"src":"912:68:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":860,"nodeType":"StructuredDocumentation","src":"986:213:4","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":869,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1213:8:4","nodeType":"FunctionDefinition","parameters":{"id":865,"nodeType":"ParameterList","parameters":[{"constant":false,"id":862,"mutability":"mutable","name":"to","nameLocation":"1230:2:4","nodeType":"VariableDeclaration","scope":869,"src":"1222:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":861,"name":"address","nodeType":"ElementaryTypeName","src":"1222:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":864,"mutability":"mutable","name":"value","nameLocation":"1242:5:4","nodeType":"VariableDeclaration","scope":869,"src":"1234:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":863,"name":"uint256","nodeType":"ElementaryTypeName","src":"1234:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1221:27:4"},"returnParameters":{"id":868,"nodeType":"ParameterList","parameters":[{"constant":false,"id":867,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":869,"src":"1267:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":866,"name":"bool","nodeType":"ElementaryTypeName","src":"1267:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1266:6:4"},"scope":902,"src":"1204:69:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":870,"nodeType":"StructuredDocumentation","src":"1279:264:4","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":879,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1557:9:4","nodeType":"FunctionDefinition","parameters":{"id":875,"nodeType":"ParameterList","parameters":[{"constant":false,"id":872,"mutability":"mutable","name":"owner","nameLocation":"1575:5:4","nodeType":"VariableDeclaration","scope":879,"src":"1567:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":871,"name":"address","nodeType":"ElementaryTypeName","src":"1567:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":874,"mutability":"mutable","name":"spender","nameLocation":"1590:7:4","nodeType":"VariableDeclaration","scope":879,"src":"1582:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":873,"name":"address","nodeType":"ElementaryTypeName","src":"1582:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1566:32:4"},"returnParameters":{"id":878,"nodeType":"ParameterList","parameters":[{"constant":false,"id":877,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":879,"src":"1622:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":876,"name":"uint256","nodeType":"ElementaryTypeName","src":"1622:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1621:9:4"},"scope":902,"src":"1548:83:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":880,"nodeType":"StructuredDocumentation","src":"1637:667:4","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":889,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2318:7:4","nodeType":"FunctionDefinition","parameters":{"id":885,"nodeType":"ParameterList","parameters":[{"constant":false,"id":882,"mutability":"mutable","name":"spender","nameLocation":"2334:7:4","nodeType":"VariableDeclaration","scope":889,"src":"2326:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":881,"name":"address","nodeType":"ElementaryTypeName","src":"2326:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":884,"mutability":"mutable","name":"value","nameLocation":"2351:5:4","nodeType":"VariableDeclaration","scope":889,"src":"2343:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":883,"name":"uint256","nodeType":"ElementaryTypeName","src":"2343:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2325:32:4"},"returnParameters":{"id":888,"nodeType":"ParameterList","parameters":[{"constant":false,"id":887,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":889,"src":"2376:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":886,"name":"bool","nodeType":"ElementaryTypeName","src":"2376:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2375:6:4"},"scope":902,"src":"2309:73:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":890,"nodeType":"StructuredDocumentation","src":"2388:297:4","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":901,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2699:12:4","nodeType":"FunctionDefinition","parameters":{"id":897,"nodeType":"ParameterList","parameters":[{"constant":false,"id":892,"mutability":"mutable","name":"from","nameLocation":"2720:4:4","nodeType":"VariableDeclaration","scope":901,"src":"2712:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":891,"name":"address","nodeType":"ElementaryTypeName","src":"2712:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":894,"mutability":"mutable","name":"to","nameLocation":"2734:2:4","nodeType":"VariableDeclaration","scope":901,"src":"2726:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":893,"name":"address","nodeType":"ElementaryTypeName","src":"2726:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":896,"mutability":"mutable","name":"value","nameLocation":"2746:5:4","nodeType":"VariableDeclaration","scope":901,"src":"2738:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":895,"name":"uint256","nodeType":"ElementaryTypeName","src":"2738:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2711:41:4"},"returnParameters":{"id":900,"nodeType":"ParameterList","parameters":[{"constant":false,"id":899,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":901,"src":"2771:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":898,"name":"bool","nodeType":"ElementaryTypeName","src":"2771:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2770:6:4"},"scope":902,"src":"2690:87:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":903,"src":"204:2575:4","usedErrors":[],"usedEvents":[836,845]}],"src":"106:2674:4"},"id":4},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol","exportedSymbols":{"Context":[1194],"ERC20":[824],"ERC20Burnable":[948]},"id":949,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":904,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"124:24:5"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"../ERC20.sol","id":906,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":949,"sourceUnit":825,"src":"150:35:5","symbolAliases":[{"foreign":{"id":905,"name":"ERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":824,"src":"158:5:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../../utils/Context.sol","id":908,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":949,"sourceUnit":1195,"src":"186:51:5","symbolAliases":[{"foreign":{"id":907,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1194,"src":"194:7:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":910,"name":"Context","nameLocations":["483:7:5"],"nodeType":"IdentifierPath","referencedDeclaration":1194,"src":"483:7:5"},"id":911,"nodeType":"InheritanceSpecifier","src":"483:7:5"},{"baseName":{"id":912,"name":"ERC20","nameLocations":["492:5:5"],"nodeType":"IdentifierPath","referencedDeclaration":824,"src":"492:5:5"},"id":913,"nodeType":"InheritanceSpecifier","src":"492:5:5"}],"canonicalName":"ERC20Burnable","contractDependencies":[],"contractKind":"contract","documentation":{"id":909,"nodeType":"StructuredDocumentation","src":"239:208:5","text":" @dev Extension of {ERC20} that allows token holders to destroy both their own\n tokens and those that they have an allowance for, in a way that can be\n recognized off-chain (via event analysis)."},"fullyImplemented":true,"id":948,"linearizedBaseContracts":[948,824,214,1128,902,1194],"name":"ERC20Burnable","nameLocation":"466:13:5","nodeType":"ContractDefinition","nodes":[{"body":{"id":925,"nodeType":"Block","src":"662:43:5","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":920,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1176,"src":"678:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":921,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"678:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":922,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":916,"src":"692:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":919,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":697,"src":"672:5:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":923,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"672:26:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":924,"nodeType":"ExpressionStatement","src":"672:26:5"}]},"documentation":{"id":914,"nodeType":"StructuredDocumentation","src":"504:109:5","text":" @dev Destroys a `value` amount of tokens from the caller.\n See {ERC20-_burn}."},"functionSelector":"42966c68","id":926,"implemented":true,"kind":"function","modifiers":[],"name":"burn","nameLocation":"627:4:5","nodeType":"FunctionDefinition","parameters":{"id":917,"nodeType":"ParameterList","parameters":[{"constant":false,"id":916,"mutability":"mutable","name":"value","nameLocation":"640:5:5","nodeType":"VariableDeclaration","scope":926,"src":"632:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":915,"name":"uint256","nodeType":"ElementaryTypeName","src":"632:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"631:15:5"},"returnParameters":{"id":918,"nodeType":"ParameterList","parameters":[],"src":"662:0:5"},"scope":948,"src":"618:87:5","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":946,"nodeType":"Block","src":"1086:93:5","statements":[{"expression":{"arguments":[{"id":935,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":929,"src":"1112:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":936,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1176,"src":"1121:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":937,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1121:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":938,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":931,"src":"1135:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":934,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":823,"src":"1096:15:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":939,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1096:45:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":940,"nodeType":"ExpressionStatement","src":"1096:45:5"},{"expression":{"arguments":[{"id":942,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":929,"src":"1157:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":943,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":931,"src":"1166:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":941,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":697,"src":"1151:5:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":944,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1151:21:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":945,"nodeType":"ExpressionStatement","src":"1151:21:5"}]},"documentation":{"id":927,"nodeType":"StructuredDocumentation","src":"711:305:5","text":" @dev Destroys a `value` amount of tokens from `account`, deducting from\n the caller's allowance.\n See {ERC20-_burn} and {ERC20-allowance}.\n Requirements:\n - the caller must have allowance for ``accounts``'s tokens of at least\n `value`."},"functionSelector":"79cc6790","id":947,"implemented":true,"kind":"function","modifiers":[],"name":"burnFrom","nameLocation":"1030:8:5","nodeType":"FunctionDefinition","parameters":{"id":932,"nodeType":"ParameterList","parameters":[{"constant":false,"id":929,"mutability":"mutable","name":"account","nameLocation":"1047:7:5","nodeType":"VariableDeclaration","scope":947,"src":"1039:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":928,"name":"address","nodeType":"ElementaryTypeName","src":"1039:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":931,"mutability":"mutable","name":"value","nameLocation":"1064:5:5","nodeType":"VariableDeclaration","scope":947,"src":"1056:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":930,"name":"uint256","nodeType":"ElementaryTypeName","src":"1056:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1038:32:5"},"returnParameters":{"id":933,"nodeType":"ParameterList","parameters":[],"src":"1086:0:5"},"scope":948,"src":"1021:158:5","stateMutability":"nonpayable","virtual":true,"visibility":"public"}],"scope":949,"src":"448:733:5","usedErrors":[184,189,194,203,208,213],"usedEvents":[836,845]}],"src":"124:1058:5"},"id":5},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol","exportedSymbols":{"ECDSA":[3582],"EIP712":[3809],"ERC20":[824],"ERC20Permit":[1102],"IERC20Permit":[1164],"Nonces":[1262]},"id":1103,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":950,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"122:24:6"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol","file":"./IERC20Permit.sol","id":952,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1103,"sourceUnit":1165,"src":"148:48:6","symbolAliases":[{"foreign":{"id":951,"name":"IERC20Permit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1164,"src":"156:12:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"../ERC20.sol","id":954,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1103,"sourceUnit":825,"src":"197:35:6","symbolAliases":[{"foreign":{"id":953,"name":"ERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":824,"src":"205:5:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","file":"../../../utils/cryptography/ECDSA.sol","id":956,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1103,"sourceUnit":3583,"src":"233:60:6","symbolAliases":[{"foreign":{"id":955,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3582,"src":"241:5:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/EIP712.sol","file":"../../../utils/cryptography/EIP712.sol","id":958,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1103,"sourceUnit":3810,"src":"294:62:6","symbolAliases":[{"foreign":{"id":957,"name":"EIP712","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3809,"src":"302:6:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Nonces.sol","file":"../../../utils/Nonces.sol","id":960,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1103,"sourceUnit":1263,"src":"357:49:6","symbolAliases":[{"foreign":{"id":959,"name":"Nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1262,"src":"365:6:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":962,"name":"ERC20","nameLocations":["931:5:6"],"nodeType":"IdentifierPath","referencedDeclaration":824,"src":"931:5:6"},"id":963,"nodeType":"InheritanceSpecifier","src":"931:5:6"},{"baseName":{"id":964,"name":"IERC20Permit","nameLocations":["938:12:6"],"nodeType":"IdentifierPath","referencedDeclaration":1164,"src":"938:12:6"},"id":965,"nodeType":"InheritanceSpecifier","src":"938:12:6"},{"baseName":{"id":966,"name":"EIP712","nameLocations":["952:6:6"],"nodeType":"IdentifierPath","referencedDeclaration":3809,"src":"952:6:6"},"id":967,"nodeType":"InheritanceSpecifier","src":"952:6:6"},{"baseName":{"id":968,"name":"Nonces","nameLocations":["960:6:6"],"nodeType":"IdentifierPath","referencedDeclaration":1262,"src":"960:6:6"},"id":969,"nodeType":"InheritanceSpecifier","src":"960:6:6"}],"canonicalName":"ERC20Permit","contractDependencies":[],"contractKind":"contract","documentation":{"id":961,"nodeType":"StructuredDocumentation","src":"408:489:6","text":" @dev Implementation of the ERC-20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[ERC-2612].\n Adds the {permit} method, which can be used to change an account's ERC-20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all."},"fullyImplemented":true,"id":1102,"linearizedBaseContracts":[1102,1262,3809,172,1164,824,214,1128,902,1194],"name":"ERC20Permit","nameLocation":"916:11:6","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":974,"mutability":"constant","name":"PERMIT_TYPEHASH","nameLocation":"998:15:6","nodeType":"VariableDeclaration","scope":1102,"src":"973:146:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":970,"name":"bytes32","nodeType":"ElementaryTypeName","src":"973:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"5065726d69742861646472657373206f776e65722c61646472657373207370656e6465722c75696e743235362076616c75652c75696e74323536206e6f6e63652c75696e7432353620646561646c696e6529","id":972,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1034:84:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9","typeString":"literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""},"value":"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9","typeString":"literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""}],"id":971,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1024:9:6","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":973,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1024:95:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"documentation":{"id":975,"nodeType":"StructuredDocumentation","src":"1126:52:6","text":" @dev Permit deadline has expired."},"errorSelector":"62791302","id":979,"name":"ERC2612ExpiredSignature","nameLocation":"1189:23:6","nodeType":"ErrorDefinition","parameters":{"id":978,"nodeType":"ParameterList","parameters":[{"constant":false,"id":977,"mutability":"mutable","name":"deadline","nameLocation":"1221:8:6","nodeType":"VariableDeclaration","scope":979,"src":"1213:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":976,"name":"uint256","nodeType":"ElementaryTypeName","src":"1213:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1212:18:6"},"src":"1183:48:6"},{"documentation":{"id":980,"nodeType":"StructuredDocumentation","src":"1237:45:6","text":" @dev Mismatched signature."},"errorSelector":"4b800e46","id":986,"name":"ERC2612InvalidSigner","nameLocation":"1293:20:6","nodeType":"ErrorDefinition","parameters":{"id":985,"nodeType":"ParameterList","parameters":[{"constant":false,"id":982,"mutability":"mutable","name":"signer","nameLocation":"1322:6:6","nodeType":"VariableDeclaration","scope":986,"src":"1314:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":981,"name":"address","nodeType":"ElementaryTypeName","src":"1314:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":984,"mutability":"mutable","name":"owner","nameLocation":"1338:5:6","nodeType":"VariableDeclaration","scope":986,"src":"1330:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":983,"name":"address","nodeType":"ElementaryTypeName","src":"1330:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1313:31:6"},"src":"1287:58:6"},{"body":{"id":996,"nodeType":"Block","src":"1627:2:6","statements":[]},"documentation":{"id":987,"nodeType":"StructuredDocumentation","src":"1351:221:6","text":" @dev Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\"1\"`.\n It's a good idea to use the same `name` that is defined as the ERC-20 token name."},"id":997,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":992,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":989,"src":"1616:4:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"31","id":993,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1622:3:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6","typeString":"literal_string \"1\""},"value":"1"}],"id":994,"kind":"baseConstructorSpecifier","modifierName":{"id":991,"name":"EIP712","nameLocations":["1609:6:6"],"nodeType":"IdentifierPath","referencedDeclaration":3809,"src":"1609:6:6"},"nodeType":"ModifierInvocation","src":"1609:17:6"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":990,"nodeType":"ParameterList","parameters":[{"constant":false,"id":989,"mutability":"mutable","name":"name","nameLocation":"1603:4:6","nodeType":"VariableDeclaration","scope":997,"src":"1589:18:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":988,"name":"string","nodeType":"ElementaryTypeName","src":"1589:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1588:20:6"},"returnParameters":{"id":995,"nodeType":"ParameterList","parameters":[],"src":"1627:0:6"},"scope":1102,"src":"1577:52:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[1149],"body":{"id":1073,"nodeType":"Block","src":"1872:483:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1018,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1015,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1886:5:6","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1892:9:6","memberName":"timestamp","nodeType":"MemberAccess","src":"1886:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1017,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1006,"src":"1904:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1886:26:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1024,"nodeType":"IfStatement","src":"1882:97:6","trueBody":{"id":1023,"nodeType":"Block","src":"1914:65:6","statements":[{"errorCall":{"arguments":[{"id":1020,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1006,"src":"1959:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1019,"name":"ERC2612ExpiredSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":979,"src":"1935:23:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":1021,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1935:33:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1022,"nodeType":"RevertStatement","src":"1928:40:6"}]}},{"assignments":[1026],"declarations":[{"constant":false,"id":1026,"mutability":"mutable","name":"structHash","nameLocation":"1997:10:6","nodeType":"VariableDeclaration","scope":1073,"src":"1989:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1025,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1989:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1040,"initialValue":{"arguments":[{"arguments":[{"id":1030,"name":"PERMIT_TYPEHASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":974,"src":"2031:15:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1031,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1000,"src":"2048:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1032,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1002,"src":"2055:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1033,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1004,"src":"2064:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":1035,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1000,"src":"2081:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1034,"name":"_useNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1236,"src":"2071:9:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$","typeString":"function (address) returns (uint256)"}},"id":1036,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2071:16:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1037,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1006,"src":"2089:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1028,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2020:3:6","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1029,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2024:6:6","memberName":"encode","nodeType":"MemberAccess","src":"2020:10:6","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1038,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2020:78:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1027,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2010:9:6","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1039,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2010:89:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"1989:110:6"},{"assignments":[1042],"declarations":[{"constant":false,"id":1042,"mutability":"mutable","name":"hash","nameLocation":"2118:4:6","nodeType":"VariableDeclaration","scope":1073,"src":"2110:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1041,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2110:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1046,"initialValue":{"arguments":[{"id":1044,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1026,"src":"2142:10:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1043,"name":"_hashTypedDataV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3742,"src":"2125:16:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":1045,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2125:28:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2110:43:6"},{"assignments":[1048],"declarations":[{"constant":false,"id":1048,"mutability":"mutable","name":"signer","nameLocation":"2172:6:6","nodeType":"VariableDeclaration","scope":1073,"src":"2164:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1047,"name":"address","nodeType":"ElementaryTypeName","src":"2164:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1056,"initialValue":{"arguments":[{"id":1051,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1042,"src":"2195:4:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1052,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1008,"src":"2201:1:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1053,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1010,"src":"2204:1:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1054,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1012,"src":"2207:1:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1049,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3582,"src":"2181:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ECDSA_$3582_$","typeString":"type(library ECDSA)"}},"id":1050,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2187:7:6","memberName":"recover","nodeType":"MemberAccess","referencedDeclaration":3532,"src":"2181:13:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":1055,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2181:28:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2164:45:6"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1059,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1057,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1048,"src":"2223:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1058,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1000,"src":"2233:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2223:15:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1066,"nodeType":"IfStatement","src":"2219:88:6","trueBody":{"id":1065,"nodeType":"Block","src":"2240:67:6","statements":[{"errorCall":{"arguments":[{"id":1061,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1048,"src":"2282:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1062,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1000,"src":"2290:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1060,"name":"ERC2612InvalidSigner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":986,"src":"2261:20:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_address_$returns$__$","typeString":"function (address,address) pure"}},"id":1063,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2261:35:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1064,"nodeType":"RevertStatement","src":"2254:42:6"}]}},{"expression":{"arguments":[{"id":1068,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1000,"src":"2326:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1069,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1002,"src":"2333:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1070,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1004,"src":"2342:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1067,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[715,775],"referencedDeclaration":715,"src":"2317:8:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1071,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2317:31:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1072,"nodeType":"ExpressionStatement","src":"2317:31:6"}]},"documentation":{"id":998,"nodeType":"StructuredDocumentation","src":"1635:43:6","text":" @inheritdoc IERC20Permit"},"functionSelector":"d505accf","id":1074,"implemented":true,"kind":"function","modifiers":[],"name":"permit","nameLocation":"1692:6:6","nodeType":"FunctionDefinition","parameters":{"id":1013,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1000,"mutability":"mutable","name":"owner","nameLocation":"1716:5:6","nodeType":"VariableDeclaration","scope":1074,"src":"1708:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":999,"name":"address","nodeType":"ElementaryTypeName","src":"1708:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1002,"mutability":"mutable","name":"spender","nameLocation":"1739:7:6","nodeType":"VariableDeclaration","scope":1074,"src":"1731:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1001,"name":"address","nodeType":"ElementaryTypeName","src":"1731:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1004,"mutability":"mutable","name":"value","nameLocation":"1764:5:6","nodeType":"VariableDeclaration","scope":1074,"src":"1756:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1003,"name":"uint256","nodeType":"ElementaryTypeName","src":"1756:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1006,"mutability":"mutable","name":"deadline","nameLocation":"1787:8:6","nodeType":"VariableDeclaration","scope":1074,"src":"1779:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1005,"name":"uint256","nodeType":"ElementaryTypeName","src":"1779:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1008,"mutability":"mutable","name":"v","nameLocation":"1811:1:6","nodeType":"VariableDeclaration","scope":1074,"src":"1805:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1007,"name":"uint8","nodeType":"ElementaryTypeName","src":"1805:5:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1010,"mutability":"mutable","name":"r","nameLocation":"1830:1:6","nodeType":"VariableDeclaration","scope":1074,"src":"1822:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1009,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1822:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1012,"mutability":"mutable","name":"s","nameLocation":"1849:1:6","nodeType":"VariableDeclaration","scope":1074,"src":"1841:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1011,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1841:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1698:158:6"},"returnParameters":{"id":1014,"nodeType":"ParameterList","parameters":[],"src":"1872:0:6"},"scope":1102,"src":"1683:672:6","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1157,1221],"body":{"id":1090,"nodeType":"Block","src":"2509:43:6","statements":[{"expression":{"arguments":[{"id":1087,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1077,"src":"2539:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1085,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2526:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC20Permit_$1102_$","typeString":"type(contract super ERC20Permit)"}},"id":1086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2532:6:6","memberName":"nonces","nodeType":"MemberAccess","referencedDeclaration":1221,"src":"2526:12:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":1088,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2526:19:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1084,"id":1089,"nodeType":"Return","src":"2519:26:6"}]},"documentation":{"id":1075,"nodeType":"StructuredDocumentation","src":"2361:43:6","text":" @inheritdoc IERC20Permit"},"functionSelector":"7ecebe00","id":1091,"implemented":true,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"2418:6:6","nodeType":"FunctionDefinition","overrides":{"id":1081,"nodeType":"OverrideSpecifier","overrides":[{"id":1079,"name":"IERC20Permit","nameLocations":["2469:12:6"],"nodeType":"IdentifierPath","referencedDeclaration":1164,"src":"2469:12:6"},{"id":1080,"name":"Nonces","nameLocations":["2483:6:6"],"nodeType":"IdentifierPath","referencedDeclaration":1262,"src":"2483:6:6"}],"src":"2460:30:6"},"parameters":{"id":1078,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1077,"mutability":"mutable","name":"owner","nameLocation":"2433:5:6","nodeType":"VariableDeclaration","scope":1091,"src":"2425:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1076,"name":"address","nodeType":"ElementaryTypeName","src":"2425:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2424:15:6"},"returnParameters":{"id":1084,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1083,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1091,"src":"2500:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1082,"name":"uint256","nodeType":"ElementaryTypeName","src":"2500:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2499:9:6"},"scope":1102,"src":"2409:143:6","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1163],"body":{"id":1100,"nodeType":"Block","src":"2727:44:6","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1097,"name":"_domainSeparatorV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3705,"src":"2744:18:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":1098,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2744:20:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1096,"id":1099,"nodeType":"Return","src":"2737:27:6"}]},"documentation":{"id":1092,"nodeType":"StructuredDocumentation","src":"2558:43:6","text":" @inheritdoc IERC20Permit"},"functionSelector":"3644e515","id":1101,"implemented":true,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"2668:16:6","nodeType":"FunctionDefinition","parameters":{"id":1093,"nodeType":"ParameterList","parameters":[],"src":"2684:2:6"},"returnParameters":{"id":1096,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1095,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1101,"src":"2718:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1094,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2718:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2717:9:6"},"scope":1102,"src":"2659:112:6","stateMutability":"view","virtual":true,"visibility":"external"}],"scope":1103,"src":"898:1875:6","usedErrors":[184,189,194,203,208,213,979,986,1204,1505,1507,3245,3250,3255],"usedEvents":[152,836,845]}],"src":"122:2652:6"},"id":6},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","exportedSymbols":{"IERC20":[902],"IERC20Metadata":[1128]},"id":1129,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1104,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"125:24:7"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":1106,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1129,"sourceUnit":903,"src":"151:37:7","symbolAliases":[{"foreign":{"id":1105,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":902,"src":"159:6:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1108,"name":"IERC20","nameLocations":["306:6:7"],"nodeType":"IdentifierPath","referencedDeclaration":902,"src":"306:6:7"},"id":1109,"nodeType":"InheritanceSpecifier","src":"306:6:7"}],"canonicalName":"IERC20Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":1107,"nodeType":"StructuredDocumentation","src":"190:87:7","text":" @dev Interface for the optional metadata functions from the ERC-20 standard."},"fullyImplemented":false,"id":1128,"linearizedBaseContracts":[1128,902],"name":"IERC20Metadata","nameLocation":"288:14:7","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1110,"nodeType":"StructuredDocumentation","src":"319:54:7","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":1115,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"387:4:7","nodeType":"FunctionDefinition","parameters":{"id":1111,"nodeType":"ParameterList","parameters":[],"src":"391:2:7"},"returnParameters":{"id":1114,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1113,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1115,"src":"417:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1112,"name":"string","nodeType":"ElementaryTypeName","src":"417:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"416:15:7"},"scope":1128,"src":"378:54:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1116,"nodeType":"StructuredDocumentation","src":"438:56:7","text":" @dev Returns the symbol of the token."},"functionSelector":"95d89b41","id":1121,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"508:6:7","nodeType":"FunctionDefinition","parameters":{"id":1117,"nodeType":"ParameterList","parameters":[],"src":"514:2:7"},"returnParameters":{"id":1120,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1119,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1121,"src":"540:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1118,"name":"string","nodeType":"ElementaryTypeName","src":"540:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"539:15:7"},"scope":1128,"src":"499:56:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1122,"nodeType":"StructuredDocumentation","src":"561:65:7","text":" @dev Returns the decimals places of the token."},"functionSelector":"313ce567","id":1127,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"640:8:7","nodeType":"FunctionDefinition","parameters":{"id":1123,"nodeType":"ParameterList","parameters":[],"src":"648:2:7"},"returnParameters":{"id":1126,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1125,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1127,"src":"674:5:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1124,"name":"uint8","nodeType":"ElementaryTypeName","src":"674:5:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"673:7:7"},"scope":1128,"src":"631:50:7","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1129,"src":"278:405:7","usedErrors":[],"usedEvents":[836,845]}],"src":"125:559:7"},"id":7},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol","exportedSymbols":{"IERC20Permit":[1164]},"id":1165,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1130,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"123:24:8"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Permit","contractDependencies":[],"contractKind":"interface","documentation":{"id":1131,"nodeType":"StructuredDocumentation","src":"149:1965:8","text":" @dev Interface of the ERC-20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[ERC-2612].\n Adds the {permit} method, which can be used to change an account's ERC-20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all.\n ==== Security Considerations\n There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n considered as an intention to spend the allowance in any specific way. The second is that because permits have\n built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n generally recommended is:\n ```solidity\n function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n     doThing(..., value);\n }\n function doThing(..., uint256 value) public {\n     token.safeTransferFrom(msg.sender, address(this), value);\n     ...\n }\n ```\n Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n {SafeERC20-safeTransferFrom}).\n Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n contracts should have entry points that don't rely on permit."},"fullyImplemented":false,"id":1164,"linearizedBaseContracts":[1164],"name":"IERC20Permit","nameLocation":"2125:12:8","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1132,"nodeType":"StructuredDocumentation","src":"2144:850:8","text":" @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section].\n CAUTION: See Security Considerations above."},"functionSelector":"d505accf","id":1149,"implemented":false,"kind":"function","modifiers":[],"name":"permit","nameLocation":"3008:6:8","nodeType":"FunctionDefinition","parameters":{"id":1147,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1134,"mutability":"mutable","name":"owner","nameLocation":"3032:5:8","nodeType":"VariableDeclaration","scope":1149,"src":"3024:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1133,"name":"address","nodeType":"ElementaryTypeName","src":"3024:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1136,"mutability":"mutable","name":"spender","nameLocation":"3055:7:8","nodeType":"VariableDeclaration","scope":1149,"src":"3047:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1135,"name":"address","nodeType":"ElementaryTypeName","src":"3047:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1138,"mutability":"mutable","name":"value","nameLocation":"3080:5:8","nodeType":"VariableDeclaration","scope":1149,"src":"3072:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1137,"name":"uint256","nodeType":"ElementaryTypeName","src":"3072:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1140,"mutability":"mutable","name":"deadline","nameLocation":"3103:8:8","nodeType":"VariableDeclaration","scope":1149,"src":"3095:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1139,"name":"uint256","nodeType":"ElementaryTypeName","src":"3095:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1142,"mutability":"mutable","name":"v","nameLocation":"3127:1:8","nodeType":"VariableDeclaration","scope":1149,"src":"3121:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1141,"name":"uint8","nodeType":"ElementaryTypeName","src":"3121:5:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1144,"mutability":"mutable","name":"r","nameLocation":"3146:1:8","nodeType":"VariableDeclaration","scope":1149,"src":"3138:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1143,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3138:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1146,"mutability":"mutable","name":"s","nameLocation":"3165:1:8","nodeType":"VariableDeclaration","scope":1149,"src":"3157:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1145,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3157:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3014:158:8"},"returnParameters":{"id":1148,"nodeType":"ParameterList","parameters":[],"src":"3181:0:8"},"scope":1164,"src":"2999:183:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1150,"nodeType":"StructuredDocumentation","src":"3188:294:8","text":" @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."},"functionSelector":"7ecebe00","id":1157,"implemented":false,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"3496:6:8","nodeType":"FunctionDefinition","parameters":{"id":1153,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1152,"mutability":"mutable","name":"owner","nameLocation":"3511:5:8","nodeType":"VariableDeclaration","scope":1157,"src":"3503:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1151,"name":"address","nodeType":"ElementaryTypeName","src":"3503:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3502:15:8"},"returnParameters":{"id":1156,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1155,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1157,"src":"3541:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1154,"name":"uint256","nodeType":"ElementaryTypeName","src":"3541:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3540:9:8"},"scope":1164,"src":"3487:63:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1158,"nodeType":"StructuredDocumentation","src":"3556:128:8","text":" @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."},"functionSelector":"3644e515","id":1163,"implemented":false,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"3751:16:8","nodeType":"FunctionDefinition","parameters":{"id":1159,"nodeType":"ParameterList","parameters":[],"src":"3767:2:8"},"returnParameters":{"id":1162,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1161,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1163,"src":"3793:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1160,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3793:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3792:9:8"},"scope":1164,"src":"3742:60:8","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1165,"src":"2115:1689:8","usedErrors":[],"usedEvents":[]}],"src":"123:3682:8"},"id":8},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[1194]},"id":1195,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1166,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:9"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":1167,"nodeType":"StructuredDocumentation","src":"127:496:9","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":1194,"linearizedBaseContracts":[1194],"name":"Context","nameLocation":"642:7:9","nodeType":"ContractDefinition","nodes":[{"body":{"id":1175,"nodeType":"Block","src":"718:34:9","statements":[{"expression":{"expression":{"id":1172,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"735:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:9","memberName":"sender","nodeType":"MemberAccess","src":"735:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1171,"id":1174,"nodeType":"Return","src":"728:17:9"}]},"id":1176,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:9","nodeType":"FunctionDefinition","parameters":{"id":1168,"nodeType":"ParameterList","parameters":[],"src":"675:2:9"},"returnParameters":{"id":1171,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1170,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1176,"src":"709:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1169,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:9"},"scope":1194,"src":"656:96:9","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1184,"nodeType":"Block","src":"825:32:9","statements":[{"expression":{"expression":{"id":1181,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"842:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:9","memberName":"data","nodeType":"MemberAccess","src":"842:8:9","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":1180,"id":1183,"nodeType":"Return","src":"835:15:9"}]},"id":1185,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:9","nodeType":"FunctionDefinition","parameters":{"id":1177,"nodeType":"ParameterList","parameters":[],"src":"775:2:9"},"returnParameters":{"id":1180,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1179,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1185,"src":"809:14:9","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1178,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:9"},"scope":1194,"src":"758:99:9","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1192,"nodeType":"Block","src":"935:25:9","statements":[{"expression":{"hexValue":"30","id":1190,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"952:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":1189,"id":1191,"nodeType":"Return","src":"945:8:9"}]},"id":1193,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"872:20:9","nodeType":"FunctionDefinition","parameters":{"id":1186,"nodeType":"ParameterList","parameters":[],"src":"892:2:9"},"returnParameters":{"id":1189,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1188,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1193,"src":"926:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1187,"name":"uint256","nodeType":"ElementaryTypeName","src":"926:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"925:9:9"},"scope":1194,"src":"863:97:9","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":1195,"src":"624:338:9","usedErrors":[],"usedEvents":[]}],"src":"101:862:9"},"id":9},"@openzeppelin/contracts/utils/Nonces.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Nonces.sol","exportedSymbols":{"Nonces":[1262]},"id":1263,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1196,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"99:24:10"},{"abstract":true,"baseContracts":[],"canonicalName":"Nonces","contractDependencies":[],"contractKind":"contract","documentation":{"id":1197,"nodeType":"StructuredDocumentation","src":"125:83:10","text":" @dev Provides tracking nonces for addresses. Nonces will only increment."},"fullyImplemented":true,"id":1262,"linearizedBaseContracts":[1262],"name":"Nonces","nameLocation":"227:6:10","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1198,"nodeType":"StructuredDocumentation","src":"240:90:10","text":" @dev The nonce used for an `account` is not the expected current nonce."},"errorSelector":"752d88c0","id":1204,"name":"InvalidAccountNonce","nameLocation":"341:19:10","nodeType":"ErrorDefinition","parameters":{"id":1203,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1200,"mutability":"mutable","name":"account","nameLocation":"369:7:10","nodeType":"VariableDeclaration","scope":1204,"src":"361:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1199,"name":"address","nodeType":"ElementaryTypeName","src":"361:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1202,"mutability":"mutable","name":"currentNonce","nameLocation":"386:12:10","nodeType":"VariableDeclaration","scope":1204,"src":"378:20:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1201,"name":"uint256","nodeType":"ElementaryTypeName","src":"378:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"360:39:10"},"src":"335:65:10"},{"constant":false,"id":1208,"mutability":"mutable","name":"_nonces","nameLocation":"450:7:10","nodeType":"VariableDeclaration","scope":1262,"src":"406:51:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":1207,"keyName":"account","keyNameLocation":"422:7:10","keyType":{"id":1205,"name":"address","nodeType":"ElementaryTypeName","src":"414:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"406:35:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1206,"name":"uint256","nodeType":"ElementaryTypeName","src":"433:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"body":{"id":1220,"nodeType":"Block","src":"607:38:10","statements":[{"expression":{"baseExpression":{"id":1216,"name":"_nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1208,"src":"624:7:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1218,"indexExpression":{"id":1217,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1211,"src":"632:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"624:14:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1215,"id":1219,"nodeType":"Return","src":"617:21:10"}]},"documentation":{"id":1209,"nodeType":"StructuredDocumentation","src":"464:69:10","text":" @dev Returns the next unused nonce for an address."},"functionSelector":"7ecebe00","id":1221,"implemented":true,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"547:6:10","nodeType":"FunctionDefinition","parameters":{"id":1212,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1211,"mutability":"mutable","name":"owner","nameLocation":"562:5:10","nodeType":"VariableDeclaration","scope":1221,"src":"554:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1210,"name":"address","nodeType":"ElementaryTypeName","src":"554:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"553:15:10"},"returnParameters":{"id":1215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1214,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1221,"src":"598:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1213,"name":"uint256","nodeType":"ElementaryTypeName","src":"598:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"597:9:10"},"scope":1262,"src":"538:107:10","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1235,"nodeType":"Block","src":"828:326:10","statements":[{"id":1234,"nodeType":"UncheckedBlock","src":"1031:117:10","statements":[{"expression":{"id":1232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1121:16:10","subExpression":{"baseExpression":{"id":1229,"name":"_nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1208,"src":"1121:7:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1231,"indexExpression":{"id":1230,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1224,"src":"1129:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1121:14:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1228,"id":1233,"nodeType":"Return","src":"1114:23:10"}]}]},"documentation":{"id":1222,"nodeType":"StructuredDocumentation","src":"651:103:10","text":" @dev Consumes a nonce.\n Returns the current value and increments nonce."},"id":1236,"implemented":true,"kind":"function","modifiers":[],"name":"_useNonce","nameLocation":"768:9:10","nodeType":"FunctionDefinition","parameters":{"id":1225,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1224,"mutability":"mutable","name":"owner","nameLocation":"786:5:10","nodeType":"VariableDeclaration","scope":1236,"src":"778:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1223,"name":"address","nodeType":"ElementaryTypeName","src":"778:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"777:15:10"},"returnParameters":{"id":1228,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1227,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1236,"src":"819:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1226,"name":"uint256","nodeType":"ElementaryTypeName","src":"819:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"818:9:10"},"scope":1262,"src":"759:395:10","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1260,"nodeType":"Block","src":"1338:149:10","statements":[{"assignments":[1245],"declarations":[{"constant":false,"id":1245,"mutability":"mutable","name":"current","nameLocation":"1356:7:10","nodeType":"VariableDeclaration","scope":1260,"src":"1348:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1244,"name":"uint256","nodeType":"ElementaryTypeName","src":"1348:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1249,"initialValue":{"arguments":[{"id":1247,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1239,"src":"1376:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1246,"name":"_useNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1236,"src":"1366:9:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$","typeString":"function (address) returns (uint256)"}},"id":1248,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1366:16:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1348:34:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1250,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1241,"src":"1396:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1251,"name":"current","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1245,"src":"1405:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1396:16:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1259,"nodeType":"IfStatement","src":"1392:89:10","trueBody":{"id":1258,"nodeType":"Block","src":"1414:67:10","statements":[{"errorCall":{"arguments":[{"id":1254,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1239,"src":"1455:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1255,"name":"current","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1245,"src":"1462:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1253,"name":"InvalidAccountNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1204,"src":"1435:19:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256) pure"}},"id":1256,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1435:35:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1257,"nodeType":"RevertStatement","src":"1428:42:10"}]}}]},"documentation":{"id":1237,"nodeType":"StructuredDocumentation","src":"1160:100:10","text":" @dev Same as {_useNonce} but checking that `nonce` is the next valid for `owner`."},"id":1261,"implemented":true,"kind":"function","modifiers":[],"name":"_useCheckedNonce","nameLocation":"1274:16:10","nodeType":"FunctionDefinition","parameters":{"id":1242,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1239,"mutability":"mutable","name":"owner","nameLocation":"1299:5:10","nodeType":"VariableDeclaration","scope":1261,"src":"1291:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1238,"name":"address","nodeType":"ElementaryTypeName","src":"1291:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1241,"mutability":"mutable","name":"nonce","nameLocation":"1314:5:10","nodeType":"VariableDeclaration","scope":1261,"src":"1306:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1240,"name":"uint256","nodeType":"ElementaryTypeName","src":"1306:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1290:30:10"},"returnParameters":{"id":1243,"nodeType":"ParameterList","parameters":[],"src":"1338:0:10"},"scope":1262,"src":"1265:222:10","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1263,"src":"209:1280:10","usedErrors":[1204],"usedEvents":[]}],"src":"99:1391:10"},"id":10},"@openzeppelin/contracts/utils/Panic.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","exportedSymbols":{"Panic":[1314]},"id":1315,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1264,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"99:24:11"},{"abstract":false,"baseContracts":[],"canonicalName":"Panic","contractDependencies":[],"contractKind":"library","documentation":{"id":1265,"nodeType":"StructuredDocumentation","src":"125:489:11","text":" @dev Helper library for emitting standardized panic codes.\n ```solidity\n contract Example {\n      using Panic for uint256;\n      // Use any of the declared internal constants\n      function foo() { Panic.GENERIC.panic(); }\n      // Alternatively\n      function foo() { Panic.panic(Panic.GENERIC); }\n }\n ```\n Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n _Available since v5.1._"},"fullyImplemented":true,"id":1314,"linearizedBaseContracts":[1314],"name":"Panic","nameLocation":"665:5:11","nodeType":"ContractDefinition","nodes":[{"constant":true,"documentation":{"id":1266,"nodeType":"StructuredDocumentation","src":"677:36:11","text":"@dev generic / unspecified error"},"id":1269,"mutability":"constant","name":"GENERIC","nameLocation":"744:7:11","nodeType":"VariableDeclaration","scope":1314,"src":"718:40:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1267,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783030","id":1268,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"754:4:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"internal"},{"constant":true,"documentation":{"id":1270,"nodeType":"StructuredDocumentation","src":"764:37:11","text":"@dev used by the assert() builtin"},"id":1273,"mutability":"constant","name":"ASSERT","nameLocation":"832:6:11","nodeType":"VariableDeclaration","scope":1314,"src":"806:39:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1271,"name":"uint256","nodeType":"ElementaryTypeName","src":"806:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783031","id":1272,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"841:4:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"0x01"},"visibility":"internal"},{"constant":true,"documentation":{"id":1274,"nodeType":"StructuredDocumentation","src":"851:41:11","text":"@dev arithmetic underflow or overflow"},"id":1277,"mutability":"constant","name":"UNDER_OVERFLOW","nameLocation":"923:14:11","nodeType":"VariableDeclaration","scope":1314,"src":"897:47:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1275,"name":"uint256","nodeType":"ElementaryTypeName","src":"897:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783131","id":1276,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"940:4:11","typeDescriptions":{"typeIdentifier":"t_rational_17_by_1","typeString":"int_const 17"},"value":"0x11"},"visibility":"internal"},{"constant":true,"documentation":{"id":1278,"nodeType":"StructuredDocumentation","src":"950:35:11","text":"@dev division or modulo by zero"},"id":1281,"mutability":"constant","name":"DIVISION_BY_ZERO","nameLocation":"1016:16:11","nodeType":"VariableDeclaration","scope":1314,"src":"990:49:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1279,"name":"uint256","nodeType":"ElementaryTypeName","src":"990:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783132","id":1280,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1035:4:11","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"0x12"},"visibility":"internal"},{"constant":true,"documentation":{"id":1282,"nodeType":"StructuredDocumentation","src":"1045:30:11","text":"@dev enum conversion error"},"id":1285,"mutability":"constant","name":"ENUM_CONVERSION_ERROR","nameLocation":"1106:21:11","nodeType":"VariableDeclaration","scope":1314,"src":"1080:54:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1283,"name":"uint256","nodeType":"ElementaryTypeName","src":"1080:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783231","id":1284,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1130:4:11","typeDescriptions":{"typeIdentifier":"t_rational_33_by_1","typeString":"int_const 33"},"value":"0x21"},"visibility":"internal"},{"constant":true,"documentation":{"id":1286,"nodeType":"StructuredDocumentation","src":"1140:36:11","text":"@dev invalid encoding in storage"},"id":1289,"mutability":"constant","name":"STORAGE_ENCODING_ERROR","nameLocation":"1207:22:11","nodeType":"VariableDeclaration","scope":1314,"src":"1181:55:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1287,"name":"uint256","nodeType":"ElementaryTypeName","src":"1181:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783232","id":1288,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1232:4:11","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"visibility":"internal"},{"constant":true,"documentation":{"id":1290,"nodeType":"StructuredDocumentation","src":"1242:24:11","text":"@dev empty array pop"},"id":1293,"mutability":"constant","name":"EMPTY_ARRAY_POP","nameLocation":"1297:15:11","nodeType":"VariableDeclaration","scope":1314,"src":"1271:48:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1291,"name":"uint256","nodeType":"ElementaryTypeName","src":"1271:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783331","id":1292,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1315:4:11","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"0x31"},"visibility":"internal"},{"constant":true,"documentation":{"id":1294,"nodeType":"StructuredDocumentation","src":"1325:35:11","text":"@dev array out of bounds access"},"id":1297,"mutability":"constant","name":"ARRAY_OUT_OF_BOUNDS","nameLocation":"1391:19:11","nodeType":"VariableDeclaration","scope":1314,"src":"1365:52:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1295,"name":"uint256","nodeType":"ElementaryTypeName","src":"1365:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783332","id":1296,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1413:4:11","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"0x32"},"visibility":"internal"},{"constant":true,"documentation":{"id":1298,"nodeType":"StructuredDocumentation","src":"1423:65:11","text":"@dev resource error (too large allocation or too large array)"},"id":1301,"mutability":"constant","name":"RESOURCE_ERROR","nameLocation":"1519:14:11","nodeType":"VariableDeclaration","scope":1314,"src":"1493:47:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1299,"name":"uint256","nodeType":"ElementaryTypeName","src":"1493:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783431","id":1300,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1536:4:11","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"0x41"},"visibility":"internal"},{"constant":true,"documentation":{"id":1302,"nodeType":"StructuredDocumentation","src":"1546:42:11","text":"@dev calling invalid internal function"},"id":1305,"mutability":"constant","name":"INVALID_INTERNAL_FUNCTION","nameLocation":"1619:25:11","nodeType":"VariableDeclaration","scope":1314,"src":"1593:58:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1303,"name":"uint256","nodeType":"ElementaryTypeName","src":"1593:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783531","id":1304,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1647:4:11","typeDescriptions":{"typeIdentifier":"t_rational_81_by_1","typeString":"int_const 81"},"value":"0x51"},"visibility":"internal"},{"body":{"id":1312,"nodeType":"Block","src":"1819:151:11","statements":[{"AST":{"nodeType":"YulBlock","src":"1854:110:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1875:4:11","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"1881:10:11","type":"","value":"0x4e487b71"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1868:6:11"},"nodeType":"YulFunctionCall","src":"1868:24:11"},"nodeType":"YulExpressionStatement","src":"1868:24:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1912:4:11","type":"","value":"0x20"},{"name":"code","nodeType":"YulIdentifier","src":"1918:4:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1905:6:11"},"nodeType":"YulFunctionCall","src":"1905:18:11"},"nodeType":"YulExpressionStatement","src":"1905:18:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1943:4:11","type":"","value":"0x1c"},{"kind":"number","nodeType":"YulLiteral","src":"1949:4:11","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1936:6:11"},"nodeType":"YulFunctionCall","src":"1936:18:11"},"nodeType":"YulExpressionStatement","src":"1936:18:11"}]},"evmVersion":"paris","externalReferences":[{"declaration":1308,"isOffset":false,"isSlot":false,"src":"1918:4:11","valueSize":1}],"flags":["memory-safe"],"id":1311,"nodeType":"InlineAssembly","src":"1829:135:11"}]},"documentation":{"id":1306,"nodeType":"StructuredDocumentation","src":"1658:113:11","text":"@dev Reverts with a panic code. Recommended to use with\n the internal constants with predefined codes."},"id":1313,"implemented":true,"kind":"function","modifiers":[],"name":"panic","nameLocation":"1785:5:11","nodeType":"FunctionDefinition","parameters":{"id":1309,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1308,"mutability":"mutable","name":"code","nameLocation":"1799:4:11","nodeType":"VariableDeclaration","scope":1313,"src":"1791:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1307,"name":"uint256","nodeType":"ElementaryTypeName","src":"1791:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1790:14:11"},"returnParameters":{"id":1310,"nodeType":"ParameterList","parameters":[],"src":"1819:0:11"},"scope":1314,"src":"1776:194:11","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1315,"src":"657:1315:11","usedErrors":[],"usedEvents":[]}],"src":"99:1874:11"},"id":11},"@openzeppelin/contracts/utils/Pausable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Pausable.sol","exportedSymbols":{"Context":[1194],"Pausable":[1422]},"id":1423,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1316,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:12"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":1318,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1423,"sourceUnit":1195,"src":"128:45:12","symbolAliases":[{"foreign":{"id":1317,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1194,"src":"136:7:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1320,"name":"Context","nameLocations":["645:7:12"],"nodeType":"IdentifierPath","referencedDeclaration":1194,"src":"645:7:12"},"id":1321,"nodeType":"InheritanceSpecifier","src":"645:7:12"}],"canonicalName":"Pausable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1319,"nodeType":"StructuredDocumentation","src":"175:439:12","text":" @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."},"fullyImplemented":true,"id":1422,"linearizedBaseContracts":[1422,1194],"name":"Pausable","nameLocation":"633:8:12","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":1323,"mutability":"mutable","name":"_paused","nameLocation":"672:7:12","nodeType":"VariableDeclaration","scope":1422,"src":"659:20:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1322,"name":"bool","nodeType":"ElementaryTypeName","src":"659:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"private"},{"anonymous":false,"documentation":{"id":1324,"nodeType":"StructuredDocumentation","src":"686:73:12","text":" @dev Emitted when the pause is triggered by `account`."},"eventSelector":"62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258","id":1328,"name":"Paused","nameLocation":"770:6:12","nodeType":"EventDefinition","parameters":{"id":1327,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1326,"indexed":false,"mutability":"mutable","name":"account","nameLocation":"785:7:12","nodeType":"VariableDeclaration","scope":1328,"src":"777:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1325,"name":"address","nodeType":"ElementaryTypeName","src":"777:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"776:17:12"},"src":"764:30:12"},{"anonymous":false,"documentation":{"id":1329,"nodeType":"StructuredDocumentation","src":"800:70:12","text":" @dev Emitted when the pause is lifted by `account`."},"eventSelector":"5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa","id":1333,"name":"Unpaused","nameLocation":"881:8:12","nodeType":"EventDefinition","parameters":{"id":1332,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1331,"indexed":false,"mutability":"mutable","name":"account","nameLocation":"898:7:12","nodeType":"VariableDeclaration","scope":1333,"src":"890:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1330,"name":"address","nodeType":"ElementaryTypeName","src":"890:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"889:17:12"},"src":"875:32:12"},{"documentation":{"id":1334,"nodeType":"StructuredDocumentation","src":"913:76:12","text":" @dev The operation failed because the contract is paused."},"errorSelector":"d93c0665","id":1336,"name":"EnforcedPause","nameLocation":"1000:13:12","nodeType":"ErrorDefinition","parameters":{"id":1335,"nodeType":"ParameterList","parameters":[],"src":"1013:2:12"},"src":"994:22:12"},{"documentation":{"id":1337,"nodeType":"StructuredDocumentation","src":"1022:80:12","text":" @dev The operation failed because the contract is not paused."},"errorSelector":"8dfc202b","id":1339,"name":"ExpectedPause","nameLocation":"1113:13:12","nodeType":"ErrorDefinition","parameters":{"id":1338,"nodeType":"ParameterList","parameters":[],"src":"1126:2:12"},"src":"1107:22:12"},{"body":{"id":1346,"nodeType":"Block","src":"1340:47:12","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1342,"name":"_requireNotPaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1376,"src":"1350:17:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":1343,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1350:19:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1344,"nodeType":"ExpressionStatement","src":"1350:19:12"},{"id":1345,"nodeType":"PlaceholderStatement","src":"1379:1:12"}]},"documentation":{"id":1340,"nodeType":"StructuredDocumentation","src":"1135:175:12","text":" @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."},"id":1347,"name":"whenNotPaused","nameLocation":"1324:13:12","nodeType":"ModifierDefinition","parameters":{"id":1341,"nodeType":"ParameterList","parameters":[],"src":"1337:2:12"},"src":"1315:72:12","virtual":false,"visibility":"internal"},{"body":{"id":1354,"nodeType":"Block","src":"1587:44:12","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1350,"name":"_requirePaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1389,"src":"1597:14:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":1351,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1597:16:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1352,"nodeType":"ExpressionStatement","src":"1597:16:12"},{"id":1353,"nodeType":"PlaceholderStatement","src":"1623:1:12"}]},"documentation":{"id":1348,"nodeType":"StructuredDocumentation","src":"1393:167:12","text":" @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."},"id":1355,"name":"whenPaused","nameLocation":"1574:10:12","nodeType":"ModifierDefinition","parameters":{"id":1349,"nodeType":"ParameterList","parameters":[],"src":"1584:2:12"},"src":"1565:66:12","virtual":false,"visibility":"internal"},{"body":{"id":1363,"nodeType":"Block","src":"1779:31:12","statements":[{"expression":{"id":1361,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1323,"src":"1796:7:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1360,"id":1362,"nodeType":"Return","src":"1789:14:12"}]},"documentation":{"id":1356,"nodeType":"StructuredDocumentation","src":"1637:84:12","text":" @dev Returns true if the contract is paused, and false otherwise."},"functionSelector":"5c975abb","id":1364,"implemented":true,"kind":"function","modifiers":[],"name":"paused","nameLocation":"1735:6:12","nodeType":"FunctionDefinition","parameters":{"id":1357,"nodeType":"ParameterList","parameters":[],"src":"1741:2:12"},"returnParameters":{"id":1360,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1359,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1364,"src":"1773:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1358,"name":"bool","nodeType":"ElementaryTypeName","src":"1773:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1772:6:12"},"scope":1422,"src":"1726:84:12","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1375,"nodeType":"Block","src":"1929:77:12","statements":[{"condition":{"arguments":[],"expression":{"argumentTypes":[],"id":1368,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1364,"src":"1943:6:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":1369,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1943:8:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1374,"nodeType":"IfStatement","src":"1939:61:12","trueBody":{"id":1373,"nodeType":"Block","src":"1953:47:12","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1370,"name":"EnforcedPause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1336,"src":"1974:13:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1371,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1974:15:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1372,"nodeType":"RevertStatement","src":"1967:22:12"}]}}]},"documentation":{"id":1365,"nodeType":"StructuredDocumentation","src":"1816:57:12","text":" @dev Throws if the contract is paused."},"id":1376,"implemented":true,"kind":"function","modifiers":[],"name":"_requireNotPaused","nameLocation":"1887:17:12","nodeType":"FunctionDefinition","parameters":{"id":1366,"nodeType":"ParameterList","parameters":[],"src":"1904:2:12"},"returnParameters":{"id":1367,"nodeType":"ParameterList","parameters":[],"src":"1929:0:12"},"scope":1422,"src":"1878:128:12","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1388,"nodeType":"Block","src":"2126:78:12","statements":[{"condition":{"id":1382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2140:9:12","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1380,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1364,"src":"2141:6:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":1381,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2141:8:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1387,"nodeType":"IfStatement","src":"2136:62:12","trueBody":{"id":1386,"nodeType":"Block","src":"2151:47:12","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1383,"name":"ExpectedPause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1339,"src":"2172:13:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1384,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2172:15:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1385,"nodeType":"RevertStatement","src":"2165:22:12"}]}}]},"documentation":{"id":1377,"nodeType":"StructuredDocumentation","src":"2012:61:12","text":" @dev Throws if the contract is not paused."},"id":1389,"implemented":true,"kind":"function","modifiers":[],"name":"_requirePaused","nameLocation":"2087:14:12","nodeType":"FunctionDefinition","parameters":{"id":1378,"nodeType":"ParameterList","parameters":[],"src":"2101:2:12"},"returnParameters":{"id":1379,"nodeType":"ParameterList","parameters":[],"src":"2126:0:12"},"scope":1422,"src":"2078:126:12","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1404,"nodeType":"Block","src":"2388:66:12","statements":[{"expression":{"id":1397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1395,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1323,"src":"2398:7:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":1396,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2408:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"2398:14:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1398,"nodeType":"ExpressionStatement","src":"2398:14:12"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1400,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1176,"src":"2434:10:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1401,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2434:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1399,"name":"Paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1328,"src":"2427:6:12","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1402,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2427:20:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1403,"nodeType":"EmitStatement","src":"2422:25:12"}]},"documentation":{"id":1390,"nodeType":"StructuredDocumentation","src":"2210:124:12","text":" @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."},"id":1405,"implemented":true,"kind":"function","modifiers":[{"id":1393,"kind":"modifierInvocation","modifierName":{"id":1392,"name":"whenNotPaused","nameLocations":["2374:13:12"],"nodeType":"IdentifierPath","referencedDeclaration":1347,"src":"2374:13:12"},"nodeType":"ModifierInvocation","src":"2374:13:12"}],"name":"_pause","nameLocation":"2348:6:12","nodeType":"FunctionDefinition","parameters":{"id":1391,"nodeType":"ParameterList","parameters":[],"src":"2354:2:12"},"returnParameters":{"id":1394,"nodeType":"ParameterList","parameters":[],"src":"2388:0:12"},"scope":1422,"src":"2339:115:12","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1420,"nodeType":"Block","src":"2634:69:12","statements":[{"expression":{"id":1413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1411,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1323,"src":"2644:7:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":1412,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2654:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"2644:15:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1414,"nodeType":"ExpressionStatement","src":"2644:15:12"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1416,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1176,"src":"2683:10:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1417,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2683:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1415,"name":"Unpaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1333,"src":"2674:8:12","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1418,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2674:22:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1419,"nodeType":"EmitStatement","src":"2669:27:12"}]},"documentation":{"id":1406,"nodeType":"StructuredDocumentation","src":"2460:121:12","text":" @dev Returns to normal state.\n Requirements:\n - The contract must be paused."},"id":1421,"implemented":true,"kind":"function","modifiers":[{"id":1409,"kind":"modifierInvocation","modifierName":{"id":1408,"name":"whenPaused","nameLocations":["2623:10:12"],"nodeType":"IdentifierPath","referencedDeclaration":1355,"src":"2623:10:12"},"nodeType":"ModifierInvocation","src":"2623:10:12"}],"name":"_unpause","nameLocation":"2595:8:12","nodeType":"FunctionDefinition","parameters":{"id":1407,"nodeType":"ParameterList","parameters":[],"src":"2603:2:12"},"returnParameters":{"id":1410,"nodeType":"ParameterList","parameters":[],"src":"2634:0:12"},"scope":1422,"src":"2586:117:12","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1423,"src":"615:2090:12","usedErrors":[1336,1339],"usedEvents":[1328,1333]}],"src":"102:2604:12"},"id":12},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","exportedSymbols":{"ReentrancyGuard":[1491]},"id":1492,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1424,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:13"},{"abstract":true,"baseContracts":[],"canonicalName":"ReentrancyGuard","contractDependencies":[],"contractKind":"contract","documentation":{"id":1425,"nodeType":"StructuredDocumentation","src":"135:894:13","text":" @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n consider using {ReentrancyGuardTransient} instead.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."},"fullyImplemented":true,"id":1491,"linearizedBaseContracts":[1491],"name":"ReentrancyGuard","nameLocation":"1048:15:13","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1428,"mutability":"constant","name":"NOT_ENTERED","nameLocation":"1843:11:13","nodeType":"VariableDeclaration","scope":1491,"src":"1818:40:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1426,"name":"uint256","nodeType":"ElementaryTypeName","src":"1818:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":1427,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1857:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":true,"id":1431,"mutability":"constant","name":"ENTERED","nameLocation":"1889:7:13","nodeType":"VariableDeclaration","scope":1491,"src":"1864:36:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1429,"name":"uint256","nodeType":"ElementaryTypeName","src":"1864:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":1430,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1899:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"constant":false,"id":1433,"mutability":"mutable","name":"_status","nameLocation":"1923:7:13","nodeType":"VariableDeclaration","scope":1491,"src":"1907:23:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1432,"name":"uint256","nodeType":"ElementaryTypeName","src":"1907:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"documentation":{"id":1434,"nodeType":"StructuredDocumentation","src":"1937:52:13","text":" @dev Unauthorized reentrant call."},"errorSelector":"3ee5aeb5","id":1436,"name":"ReentrancyGuardReentrantCall","nameLocation":"2000:28:13","nodeType":"ErrorDefinition","parameters":{"id":1435,"nodeType":"ParameterList","parameters":[],"src":"2028:2:13"},"src":"1994:37:13"},{"body":{"id":1443,"nodeType":"Block","src":"2051:38:13","statements":[{"expression":{"id":1441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1439,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1433,"src":"2061:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1440,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1428,"src":"2071:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2061:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1442,"nodeType":"ExpressionStatement","src":"2061:21:13"}]},"id":1444,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1437,"nodeType":"ParameterList","parameters":[],"src":"2048:2:13"},"returnParameters":{"id":1438,"nodeType":"ParameterList","parameters":[],"src":"2051:0:13"},"scope":1491,"src":"2037:52:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1454,"nodeType":"Block","src":"2490:79:13","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1447,"name":"_nonReentrantBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1471,"src":"2500:19:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1448,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2500:21:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1449,"nodeType":"ExpressionStatement","src":"2500:21:13"},{"id":1450,"nodeType":"PlaceholderStatement","src":"2531:1:13"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1451,"name":"_nonReentrantAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1479,"src":"2542:18:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1452,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2542:20:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1453,"nodeType":"ExpressionStatement","src":"2542:20:13"}]},"documentation":{"id":1445,"nodeType":"StructuredDocumentation","src":"2095:366:13","text":" @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."},"id":1455,"name":"nonReentrant","nameLocation":"2475:12:13","nodeType":"ModifierDefinition","parameters":{"id":1446,"nodeType":"ParameterList","parameters":[],"src":"2487:2:13"},"src":"2466:103:13","virtual":false,"visibility":"internal"},{"body":{"id":1470,"nodeType":"Block","src":"2614:268:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1458,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1433,"src":"2702:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1459,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1431,"src":"2713:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2702:18:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1465,"nodeType":"IfStatement","src":"2698:86:13","trueBody":{"id":1464,"nodeType":"Block","src":"2722:62:13","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1461,"name":"ReentrancyGuardReentrantCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1436,"src":"2743:28:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1462,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2743:30:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1463,"nodeType":"RevertStatement","src":"2736:37:13"}]}},{"expression":{"id":1468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1466,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1433,"src":"2858:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1467,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1431,"src":"2868:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2858:17:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1469,"nodeType":"ExpressionStatement","src":"2858:17:13"}]},"id":1471,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantBefore","nameLocation":"2584:19:13","nodeType":"FunctionDefinition","parameters":{"id":1456,"nodeType":"ParameterList","parameters":[],"src":"2603:2:13"},"returnParameters":{"id":1457,"nodeType":"ParameterList","parameters":[],"src":"2614:0:13"},"scope":1491,"src":"2575:307:13","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1478,"nodeType":"Block","src":"2926:170:13","statements":[{"expression":{"id":1476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1474,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1433,"src":"3068:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1475,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1428,"src":"3078:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3068:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1477,"nodeType":"ExpressionStatement","src":"3068:21:13"}]},"id":1479,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantAfter","nameLocation":"2897:18:13","nodeType":"FunctionDefinition","parameters":{"id":1472,"nodeType":"ParameterList","parameters":[],"src":"2915:2:13"},"returnParameters":{"id":1473,"nodeType":"ParameterList","parameters":[],"src":"2926:0:13"},"scope":1491,"src":"2888:208:13","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1489,"nodeType":"Block","src":"3339:42:13","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1485,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1433,"src":"3356:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1486,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1431,"src":"3367:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3356:18:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1484,"id":1488,"nodeType":"Return","src":"3349:25:13"}]},"documentation":{"id":1480,"nodeType":"StructuredDocumentation","src":"3102:168:13","text":" @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."},"id":1490,"implemented":true,"kind":"function","modifiers":[],"name":"_reentrancyGuardEntered","nameLocation":"3284:23:13","nodeType":"FunctionDefinition","parameters":{"id":1481,"nodeType":"ParameterList","parameters":[],"src":"3307:2:13"},"returnParameters":{"id":1484,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1483,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1490,"src":"3333:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1482,"name":"bool","nodeType":"ElementaryTypeName","src":"3333:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3332:6:13"},"scope":1491,"src":"3275:106:13","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":1492,"src":"1030:2353:13","usedErrors":[1436],"usedEvents":[]}],"src":"109:3275:13"},"id":13},"@openzeppelin/contracts/utils/ShortStrings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/ShortStrings.sol","exportedSymbols":{"ShortString":[1497],"ShortStrings":[1708],"StorageSlot":[1832]},"id":1709,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1493,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:14"},{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","file":"./StorageSlot.sol","id":1495,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1709,"sourceUnit":1833,"src":"132:46:14","symbolAliases":[{"foreign":{"id":1494,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1832,"src":"140:11:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"canonicalName":"ShortString","id":1497,"name":"ShortString","nameLocation":"353:11:14","nodeType":"UserDefinedValueTypeDefinition","src":"348:28:14","underlyingType":{"id":1496,"name":"bytes32","nodeType":"ElementaryTypeName","src":"368:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"abstract":false,"baseContracts":[],"canonicalName":"ShortStrings","contractDependencies":[],"contractKind":"library","documentation":{"id":1498,"nodeType":"StructuredDocumentation","src":"378:876:14","text":" @dev This library provides functions to convert short memory strings\n into a `ShortString` type that can be used as an immutable variable.\n Strings of arbitrary length can be optimized using this library if\n they are short enough (up to 31 bytes) by packing them with their\n length (1 byte) in a single EVM word (32 bytes). Additionally, a\n fallback mechanism can be used for every other case.\n Usage example:\n ```solidity\n contract Named {\n     using ShortStrings for *;\n     ShortString private immutable _name;\n     string private _nameFallback;\n     constructor(string memory contractName) {\n         _name = contractName.toShortStringWithFallback(_nameFallback);\n     }\n     function name() external view returns (string memory) {\n         return _name.toStringWithFallback(_nameFallback);\n     }\n }\n ```"},"fullyImplemented":true,"id":1708,"linearizedBaseContracts":[1708],"name":"ShortStrings","nameLocation":"1263:12:14","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1501,"mutability":"constant","name":"FALLBACK_SENTINEL","nameLocation":"1370:17:14","nodeType":"VariableDeclaration","scope":1708,"src":"1345:111:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1499,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1345:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307830303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030304646","id":1500,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1390:66:14","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0x00000000000000000000000000000000000000000000000000000000000000FF"},"visibility":"private"},{"errorSelector":"305a27a9","id":1505,"name":"StringTooLong","nameLocation":"1469:13:14","nodeType":"ErrorDefinition","parameters":{"id":1504,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1503,"mutability":"mutable","name":"str","nameLocation":"1490:3:14","nodeType":"VariableDeclaration","scope":1505,"src":"1483:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1502,"name":"string","nodeType":"ElementaryTypeName","src":"1483:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1482:12:14"},"src":"1463:32:14"},{"errorSelector":"b3512b0c","id":1507,"name":"InvalidShortString","nameLocation":"1506:18:14","nodeType":"ErrorDefinition","parameters":{"id":1506,"nodeType":"ParameterList","parameters":[],"src":"1524:2:14"},"src":"1500:27:14"},{"body":{"id":1550,"nodeType":"Block","src":"1786:208:14","statements":[{"assignments":[1517],"declarations":[{"constant":false,"id":1517,"mutability":"mutable","name":"bstr","nameLocation":"1809:4:14","nodeType":"VariableDeclaration","scope":1550,"src":"1796:17:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1516,"name":"bytes","nodeType":"ElementaryTypeName","src":"1796:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1522,"initialValue":{"arguments":[{"id":1520,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1510,"src":"1822:3:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1519,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1816:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1518,"name":"bytes","nodeType":"ElementaryTypeName","src":"1816:5:14","typeDescriptions":{}}},"id":1521,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1816:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1796:30:14"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1523,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1517,"src":"1840:4:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1845:6:14","memberName":"length","nodeType":"MemberAccess","src":"1840:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3331","id":1525,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1854:2:14","typeDescriptions":{"typeIdentifier":"t_rational_31_by_1","typeString":"int_const 31"},"value":"31"},"src":"1840:16:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1532,"nodeType":"IfStatement","src":"1836:72:14","trueBody":{"id":1531,"nodeType":"Block","src":"1858:50:14","statements":[{"errorCall":{"arguments":[{"id":1528,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1510,"src":"1893:3:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1527,"name":"StringTooLong","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1505,"src":"1879:13:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1529,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1879:18:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1530,"nodeType":"RevertStatement","src":"1872:25:14"}]}},{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":1541,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1517,"src":"1965:4:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1540,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1957:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1539,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1957:7:14","typeDescriptions":{}}},"id":1542,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1957:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1538,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1949:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1537,"name":"uint256","nodeType":"ElementaryTypeName","src":"1949:7:14","typeDescriptions":{}}},"id":1543,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1949:22:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"expression":{"id":1544,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1517,"src":"1974:4:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1979:6:14","memberName":"length","nodeType":"MemberAccess","src":"1974:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1949:36:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1536,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1941:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1535,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1941:7:14","typeDescriptions":{}}},"id":1547,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1941:45:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1533,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1497,"src":"1924:11:14","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$1497_$","typeString":"type(ShortString)"}},"id":1534,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1936:4:14","memberName":"wrap","nodeType":"MemberAccess","src":"1924:16:14","typeDescriptions":{"typeIdentifier":"t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_ShortString_$1497_$","typeString":"function (bytes32) pure returns (ShortString)"}},"id":1548,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1924:63:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1497","typeString":"ShortString"}},"functionReturnParameters":1515,"id":1549,"nodeType":"Return","src":"1917:70:14"}]},"documentation":{"id":1508,"nodeType":"StructuredDocumentation","src":"1533:170:14","text":" @dev Encode a string of at most 31 chars into a `ShortString`.\n This will trigger a `StringTooLong` error is the input string is too long."},"id":1551,"implemented":true,"kind":"function","modifiers":[],"name":"toShortString","nameLocation":"1717:13:14","nodeType":"FunctionDefinition","parameters":{"id":1511,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1510,"mutability":"mutable","name":"str","nameLocation":"1745:3:14","nodeType":"VariableDeclaration","scope":1551,"src":"1731:17:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1509,"name":"string","nodeType":"ElementaryTypeName","src":"1731:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1730:19:14"},"returnParameters":{"id":1515,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1514,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1551,"src":"1773:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1497","typeString":"ShortString"},"typeName":{"id":1513,"nodeType":"UserDefinedTypeName","pathNode":{"id":1512,"name":"ShortString","nameLocations":["1773:11:14"],"nodeType":"IdentifierPath","referencedDeclaration":1497,"src":"1773:11:14"},"referencedDeclaration":1497,"src":"1773:11:14","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1497","typeString":"ShortString"}},"visibility":"internal"}],"src":"1772:13:14"},"scope":1708,"src":"1708:286:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1576,"nodeType":"Block","src":"2152:304:14","statements":[{"assignments":[1561],"declarations":[{"constant":false,"id":1561,"mutability":"mutable","name":"len","nameLocation":"2170:3:14","nodeType":"VariableDeclaration","scope":1576,"src":"2162:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1560,"name":"uint256","nodeType":"ElementaryTypeName","src":"2162:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1565,"initialValue":{"arguments":[{"id":1563,"name":"sstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1555,"src":"2187:4:14","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1497","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1497","typeString":"ShortString"}],"id":1562,"name":"byteLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1609,"src":"2176:10:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1497_$returns$_t_uint256_$","typeString":"function (ShortString) pure returns (uint256)"}},"id":1564,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2176:16:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2162:30:14"},{"assignments":[1567],"declarations":[{"constant":false,"id":1567,"mutability":"mutable","name":"str","nameLocation":"2294:3:14","nodeType":"VariableDeclaration","scope":1576,"src":"2280:17:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1566,"name":"string","nodeType":"ElementaryTypeName","src":"2280:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1572,"initialValue":{"arguments":[{"hexValue":"3332","id":1570,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2311:2:14","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"}],"id":1569,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2300:10:14","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":1568,"name":"string","nodeType":"ElementaryTypeName","src":"2304:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":1571,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2300:14:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"2280:34:14"},{"AST":{"nodeType":"YulBlock","src":"2349:81:14","statements":[{"expression":{"arguments":[{"name":"str","nodeType":"YulIdentifier","src":"2370:3:14"},{"name":"len","nodeType":"YulIdentifier","src":"2375:3:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2363:6:14"},"nodeType":"YulFunctionCall","src":"2363:16:14"},"nodeType":"YulExpressionStatement","src":"2363:16:14"},{"expression":{"arguments":[{"arguments":[{"name":"str","nodeType":"YulIdentifier","src":"2403:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"2408:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2399:3:14"},"nodeType":"YulFunctionCall","src":"2399:14:14"},{"name":"sstr","nodeType":"YulIdentifier","src":"2415:4:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2392:6:14"},"nodeType":"YulFunctionCall","src":"2392:28:14"},"nodeType":"YulExpressionStatement","src":"2392:28:14"}]},"evmVersion":"paris","externalReferences":[{"declaration":1561,"isOffset":false,"isSlot":false,"src":"2375:3:14","valueSize":1},{"declaration":1555,"isOffset":false,"isSlot":false,"src":"2415:4:14","valueSize":1},{"declaration":1567,"isOffset":false,"isSlot":false,"src":"2370:3:14","valueSize":1},{"declaration":1567,"isOffset":false,"isSlot":false,"src":"2403:3:14","valueSize":1}],"flags":["memory-safe"],"id":1573,"nodeType":"InlineAssembly","src":"2324:106:14"},{"expression":{"id":1574,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1567,"src":"2446:3:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1559,"id":1575,"nodeType":"Return","src":"2439:10:14"}]},"documentation":{"id":1552,"nodeType":"StructuredDocumentation","src":"2000:73:14","text":" @dev Decode a `ShortString` back to a \"normal\" string."},"id":1577,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"2087:8:14","nodeType":"FunctionDefinition","parameters":{"id":1556,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1555,"mutability":"mutable","name":"sstr","nameLocation":"2108:4:14","nodeType":"VariableDeclaration","scope":1577,"src":"2096:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1497","typeString":"ShortString"},"typeName":{"id":1554,"nodeType":"UserDefinedTypeName","pathNode":{"id":1553,"name":"ShortString","nameLocations":["2096:11:14"],"nodeType":"IdentifierPath","referencedDeclaration":1497,"src":"2096:11:14"},"referencedDeclaration":1497,"src":"2096:11:14","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1497","typeString":"ShortString"}},"visibility":"internal"}],"src":"2095:18:14"},"returnParameters":{"id":1559,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1558,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1577,"src":"2137:13:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1557,"name":"string","nodeType":"ElementaryTypeName","src":"2137:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2136:15:14"},"scope":1708,"src":"2078:378:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1608,"nodeType":"Block","src":"2598:175:14","statements":[{"assignments":[1587],"declarations":[{"constant":false,"id":1587,"mutability":"mutable","name":"result","nameLocation":"2616:6:14","nodeType":"VariableDeclaration","scope":1608,"src":"2608:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1586,"name":"uint256","nodeType":"ElementaryTypeName","src":"2608:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1597,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1596,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":1592,"name":"sstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1581,"src":"2652:4:14","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1497","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1497","typeString":"ShortString"}],"expression":{"id":1590,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1497,"src":"2633:11:14","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$1497_$","typeString":"type(ShortString)"}},"id":1591,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2645:6:14","memberName":"unwrap","nodeType":"MemberAccess","src":"2633:18:14","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$1497_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":1593,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2633:24:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1589,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2625:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1588,"name":"uint256","nodeType":"ElementaryTypeName","src":"2625:7:14","typeDescriptions":{}}},"id":1594,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2625:33:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"30784646","id":1595,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2661:4:14","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xFF"},"src":"2625:40:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2608:57:14"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1600,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1598,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1587,"src":"2679:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3331","id":1599,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2688:2:14","typeDescriptions":{"typeIdentifier":"t_rational_31_by_1","typeString":"int_const 31"},"value":"31"},"src":"2679:11:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1605,"nodeType":"IfStatement","src":"2675:69:14","trueBody":{"id":1604,"nodeType":"Block","src":"2692:52:14","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1601,"name":"InvalidShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1507,"src":"2713:18:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1602,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2713:20:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1603,"nodeType":"RevertStatement","src":"2706:27:14"}]}},{"expression":{"id":1606,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1587,"src":"2760:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1585,"id":1607,"nodeType":"Return","src":"2753:13:14"}]},"documentation":{"id":1578,"nodeType":"StructuredDocumentation","src":"2462:61:14","text":" @dev Return the length of a `ShortString`."},"id":1609,"implemented":true,"kind":"function","modifiers":[],"name":"byteLength","nameLocation":"2537:10:14","nodeType":"FunctionDefinition","parameters":{"id":1582,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1581,"mutability":"mutable","name":"sstr","nameLocation":"2560:4:14","nodeType":"VariableDeclaration","scope":1609,"src":"2548:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1497","typeString":"ShortString"},"typeName":{"id":1580,"nodeType":"UserDefinedTypeName","pathNode":{"id":1579,"name":"ShortString","nameLocations":["2548:11:14"],"nodeType":"IdentifierPath","referencedDeclaration":1497,"src":"2548:11:14"},"referencedDeclaration":1497,"src":"2548:11:14","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1497","typeString":"ShortString"}},"visibility":"internal"}],"src":"2547:18:14"},"returnParameters":{"id":1585,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1584,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1609,"src":"2589:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1583,"name":"uint256","nodeType":"ElementaryTypeName","src":"2589:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2588:9:14"},"scope":1708,"src":"2528:245:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1648,"nodeType":"Block","src":"2996:231:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1622,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1612,"src":"3016:5:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1621,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3010:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1620,"name":"bytes","nodeType":"ElementaryTypeName","src":"3010:5:14","typeDescriptions":{}}},"id":1623,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3010:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3023:6:14","memberName":"length","nodeType":"MemberAccess","src":"3010:19:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3332","id":1625,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3032:2:14","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"3010:24:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1646,"nodeType":"Block","src":"3094:127:14","statements":[{"expression":{"id":1639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":1635,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1614,"src":"3134:5:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}],"expression":{"id":1632,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1832,"src":"3108:11:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$1832_$","typeString":"type(library StorageSlot)"}},"id":1634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3120:13:14","memberName":"getStringSlot","nodeType":"MemberAccess","referencedDeclaration":1809,"src":"3108:25:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_storage_ptr_$returns$_t_struct$_StringSlot_$1729_storage_ptr_$","typeString":"function (string storage pointer) pure returns (struct StorageSlot.StringSlot storage pointer)"}},"id":1636,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3108:32:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1729_storage_ptr","typeString":"struct StorageSlot.StringSlot storage pointer"}},"id":1637,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3141:5:14","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1728,"src":"3108:38:14","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1638,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1612,"src":"3149:5:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"3108:46:14","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1640,"nodeType":"ExpressionStatement","src":"3108:46:14"},{"expression":{"arguments":[{"id":1643,"name":"FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1501,"src":"3192:17:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1641,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1497,"src":"3175:11:14","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$1497_$","typeString":"type(ShortString)"}},"id":1642,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3187:4:14","memberName":"wrap","nodeType":"MemberAccess","src":"3175:16:14","typeDescriptions":{"typeIdentifier":"t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_ShortString_$1497_$","typeString":"function (bytes32) pure returns (ShortString)"}},"id":1644,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3175:35:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1497","typeString":"ShortString"}},"functionReturnParameters":1619,"id":1645,"nodeType":"Return","src":"3168:42:14"}]},"id":1647,"nodeType":"IfStatement","src":"3006:215:14","trueBody":{"id":1631,"nodeType":"Block","src":"3036:52:14","statements":[{"expression":{"arguments":[{"id":1628,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1612,"src":"3071:5:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1627,"name":"toShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1551,"src":"3057:13:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$returns$_t_userDefinedValueType$_ShortString_$1497_$","typeString":"function (string memory) pure returns (ShortString)"}},"id":1629,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3057:20:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1497","typeString":"ShortString"}},"functionReturnParameters":1619,"id":1630,"nodeType":"Return","src":"3050:27:14"}]}}]},"documentation":{"id":1610,"nodeType":"StructuredDocumentation","src":"2779:103:14","text":" @dev Encode a string into a `ShortString`, or write it to storage if it is too long."},"id":1649,"implemented":true,"kind":"function","modifiers":[],"name":"toShortStringWithFallback","nameLocation":"2896:25:14","nodeType":"FunctionDefinition","parameters":{"id":1615,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1612,"mutability":"mutable","name":"value","nameLocation":"2936:5:14","nodeType":"VariableDeclaration","scope":1649,"src":"2922:19:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1611,"name":"string","nodeType":"ElementaryTypeName","src":"2922:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1614,"mutability":"mutable","name":"store","nameLocation":"2958:5:14","nodeType":"VariableDeclaration","scope":1649,"src":"2943:20:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1613,"name":"string","nodeType":"ElementaryTypeName","src":"2943:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2921:43:14"},"returnParameters":{"id":1619,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1618,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1649,"src":"2983:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1497","typeString":"ShortString"},"typeName":{"id":1617,"nodeType":"UserDefinedTypeName","pathNode":{"id":1616,"name":"ShortString","nameLocations":["2983:11:14"],"nodeType":"IdentifierPath","referencedDeclaration":1497,"src":"2983:11:14"},"referencedDeclaration":1497,"src":"2983:11:14","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1497","typeString":"ShortString"}},"visibility":"internal"}],"src":"2982:13:14"},"scope":1708,"src":"2887:340:14","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1675,"nodeType":"Block","src":"3477:158:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1662,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1653,"src":"3510:5:14","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1497","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1497","typeString":"ShortString"}],"expression":{"id":1660,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1497,"src":"3491:11:14","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$1497_$","typeString":"type(ShortString)"}},"id":1661,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3503:6:14","memberName":"unwrap","nodeType":"MemberAccess","src":"3491:18:14","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$1497_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":1663,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3491:25:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1664,"name":"FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1501,"src":"3520:17:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3491:46:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1673,"nodeType":"Block","src":"3592:37:14","statements":[{"expression":{"id":1671,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1655,"src":"3613:5:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}},"functionReturnParameters":1659,"id":1672,"nodeType":"Return","src":"3606:12:14"}]},"id":1674,"nodeType":"IfStatement","src":"3487:142:14","trueBody":{"id":1670,"nodeType":"Block","src":"3539:47:14","statements":[{"expression":{"arguments":[{"id":1667,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1653,"src":"3569:5:14","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1497","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1497","typeString":"ShortString"}],"id":1666,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1577,"src":"3560:8:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1497_$returns$_t_string_memory_ptr_$","typeString":"function (ShortString) pure returns (string memory)"}},"id":1668,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3560:15:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1659,"id":1669,"nodeType":"Return","src":"3553:22:14"}]}}]},"documentation":{"id":1650,"nodeType":"StructuredDocumentation","src":"3233:130:14","text":" @dev Decode a string that was encoded to `ShortString` or written to storage using {toShortStringWithFallback}."},"id":1676,"implemented":true,"kind":"function","modifiers":[],"name":"toStringWithFallback","nameLocation":"3377:20:14","nodeType":"FunctionDefinition","parameters":{"id":1656,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1653,"mutability":"mutable","name":"value","nameLocation":"3410:5:14","nodeType":"VariableDeclaration","scope":1676,"src":"3398:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1497","typeString":"ShortString"},"typeName":{"id":1652,"nodeType":"UserDefinedTypeName","pathNode":{"id":1651,"name":"ShortString","nameLocations":["3398:11:14"],"nodeType":"IdentifierPath","referencedDeclaration":1497,"src":"3398:11:14"},"referencedDeclaration":1497,"src":"3398:11:14","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1497","typeString":"ShortString"}},"visibility":"internal"},{"constant":false,"id":1655,"mutability":"mutable","name":"store","nameLocation":"3432:5:14","nodeType":"VariableDeclaration","scope":1676,"src":"3417:20:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1654,"name":"string","nodeType":"ElementaryTypeName","src":"3417:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3397:41:14"},"returnParameters":{"id":1659,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1658,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1676,"src":"3462:13:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1657,"name":"string","nodeType":"ElementaryTypeName","src":"3462:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3461:15:14"},"scope":1708,"src":"3368:267:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1706,"nodeType":"Block","src":"4125:174:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1689,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1680,"src":"4158:5:14","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1497","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1497","typeString":"ShortString"}],"expression":{"id":1687,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1497,"src":"4139:11:14","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$1497_$","typeString":"type(ShortString)"}},"id":1688,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4151:6:14","memberName":"unwrap","nodeType":"MemberAccess","src":"4139:18:14","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$1497_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":1690,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4139:25:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1691,"name":"FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1501,"src":"4168:17:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4139:46:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1704,"nodeType":"Block","src":"4242:51:14","statements":[{"expression":{"expression":{"arguments":[{"id":1700,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1682,"src":"4269:5:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}],"id":1699,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4263:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1698,"name":"bytes","nodeType":"ElementaryTypeName","src":"4263:5:14","typeDescriptions":{}}},"id":1701,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4263:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}},"id":1702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4276:6:14","memberName":"length","nodeType":"MemberAccess","src":"4263:19:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1686,"id":1703,"nodeType":"Return","src":"4256:26:14"}]},"id":1705,"nodeType":"IfStatement","src":"4135:158:14","trueBody":{"id":1697,"nodeType":"Block","src":"4187:49:14","statements":[{"expression":{"arguments":[{"id":1694,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1680,"src":"4219:5:14","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1497","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1497","typeString":"ShortString"}],"id":1693,"name":"byteLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1609,"src":"4208:10:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1497_$returns$_t_uint256_$","typeString":"function (ShortString) pure returns (uint256)"}},"id":1695,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4208:17:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1686,"id":1696,"nodeType":"Return","src":"4201:24:14"}]}}]},"documentation":{"id":1677,"nodeType":"StructuredDocumentation","src":"3641:374:14","text":" @dev Return the length of a string that was encoded to `ShortString` or written to storage using\n {toShortStringWithFallback}.\n WARNING: This will return the \"byte length\" of the string. This may not reflect the actual length in terms of\n actual characters as the UTF-8 encoding of a single character can span over multiple bytes."},"id":1707,"implemented":true,"kind":"function","modifiers":[],"name":"byteLengthWithFallback","nameLocation":"4029:22:14","nodeType":"FunctionDefinition","parameters":{"id":1683,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1680,"mutability":"mutable","name":"value","nameLocation":"4064:5:14","nodeType":"VariableDeclaration","scope":1707,"src":"4052:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1497","typeString":"ShortString"},"typeName":{"id":1679,"nodeType":"UserDefinedTypeName","pathNode":{"id":1678,"name":"ShortString","nameLocations":["4052:11:14"],"nodeType":"IdentifierPath","referencedDeclaration":1497,"src":"4052:11:14"},"referencedDeclaration":1497,"src":"4052:11:14","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1497","typeString":"ShortString"}},"visibility":"internal"},{"constant":false,"id":1682,"mutability":"mutable","name":"store","nameLocation":"4086:5:14","nodeType":"VariableDeclaration","scope":1707,"src":"4071:20:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1681,"name":"string","nodeType":"ElementaryTypeName","src":"4071:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4051:41:14"},"returnParameters":{"id":1686,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1685,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1707,"src":"4116:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1684,"name":"uint256","nodeType":"ElementaryTypeName","src":"4116:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4115:9:14"},"scope":1708,"src":"4020:279:14","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":1709,"src":"1255:3046:14","usedErrors":[1505,1507],"usedEvents":[]}],"src":"106:4196:14"},"id":14},"@openzeppelin/contracts/utils/StorageSlot.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","exportedSymbols":{"StorageSlot":[1832]},"id":1833,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1710,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"193:24:15"},{"abstract":false,"baseContracts":[],"canonicalName":"StorageSlot","contractDependencies":[],"contractKind":"library","documentation":{"id":1711,"nodeType":"StructuredDocumentation","src":"219:1187:15","text":" @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC-1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```\n TIP: Consider using this library along with {SlotDerivation}."},"fullyImplemented":true,"id":1832,"linearizedBaseContracts":[1832],"name":"StorageSlot","nameLocation":"1415:11:15","nodeType":"ContractDefinition","nodes":[{"canonicalName":"StorageSlot.AddressSlot","id":1714,"members":[{"constant":false,"id":1713,"mutability":"mutable","name":"value","nameLocation":"1470:5:15","nodeType":"VariableDeclaration","scope":1714,"src":"1462:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1712,"name":"address","nodeType":"ElementaryTypeName","src":"1462:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"AddressSlot","nameLocation":"1440:11:15","nodeType":"StructDefinition","scope":1832,"src":"1433:49:15","visibility":"public"},{"canonicalName":"StorageSlot.BooleanSlot","id":1717,"members":[{"constant":false,"id":1716,"mutability":"mutable","name":"value","nameLocation":"1522:5:15","nodeType":"VariableDeclaration","scope":1717,"src":"1517:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1715,"name":"bool","nodeType":"ElementaryTypeName","src":"1517:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"BooleanSlot","nameLocation":"1495:11:15","nodeType":"StructDefinition","scope":1832,"src":"1488:46:15","visibility":"public"},{"canonicalName":"StorageSlot.Bytes32Slot","id":1720,"members":[{"constant":false,"id":1719,"mutability":"mutable","name":"value","nameLocation":"1577:5:15","nodeType":"VariableDeclaration","scope":1720,"src":"1569:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1718,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1569:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"Bytes32Slot","nameLocation":"1547:11:15","nodeType":"StructDefinition","scope":1832,"src":"1540:49:15","visibility":"public"},{"canonicalName":"StorageSlot.Uint256Slot","id":1723,"members":[{"constant":false,"id":1722,"mutability":"mutable","name":"value","nameLocation":"1632:5:15","nodeType":"VariableDeclaration","scope":1723,"src":"1624:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1721,"name":"uint256","nodeType":"ElementaryTypeName","src":"1624:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Uint256Slot","nameLocation":"1602:11:15","nodeType":"StructDefinition","scope":1832,"src":"1595:49:15","visibility":"public"},{"canonicalName":"StorageSlot.Int256Slot","id":1726,"members":[{"constant":false,"id":1725,"mutability":"mutable","name":"value","nameLocation":"1685:5:15","nodeType":"VariableDeclaration","scope":1726,"src":"1678:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1724,"name":"int256","nodeType":"ElementaryTypeName","src":"1678:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"name":"Int256Slot","nameLocation":"1657:10:15","nodeType":"StructDefinition","scope":1832,"src":"1650:47:15","visibility":"public"},{"canonicalName":"StorageSlot.StringSlot","id":1729,"members":[{"constant":false,"id":1728,"mutability":"mutable","name":"value","nameLocation":"1738:5:15","nodeType":"VariableDeclaration","scope":1729,"src":"1731:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1727,"name":"string","nodeType":"ElementaryTypeName","src":"1731:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"StringSlot","nameLocation":"1710:10:15","nodeType":"StructDefinition","scope":1832,"src":"1703:47:15","visibility":"public"},{"canonicalName":"StorageSlot.BytesSlot","id":1732,"members":[{"constant":false,"id":1731,"mutability":"mutable","name":"value","nameLocation":"1789:5:15","nodeType":"VariableDeclaration","scope":1732,"src":"1783:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":1730,"name":"bytes","nodeType":"ElementaryTypeName","src":"1783:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"BytesSlot","nameLocation":"1763:9:15","nodeType":"StructDefinition","scope":1832,"src":"1756:45:15","visibility":"public"},{"body":{"id":1742,"nodeType":"Block","src":"1983:79:15","statements":[{"AST":{"nodeType":"YulBlock","src":"2018:38:15","statements":[{"nodeType":"YulAssignment","src":"2032:14:15","value":{"name":"slot","nodeType":"YulIdentifier","src":"2042:4:15"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2032:6:15"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1739,"isOffset":false,"isSlot":true,"src":"2032:6:15","suffix":"slot","valueSize":1},{"declaration":1735,"isOffset":false,"isSlot":false,"src":"2042:4:15","valueSize":1}],"flags":["memory-safe"],"id":1741,"nodeType":"InlineAssembly","src":"1993:63:15"}]},"documentation":{"id":1733,"nodeType":"StructuredDocumentation","src":"1807:87:15","text":" @dev Returns an `AddressSlot` with member `value` located at `slot`."},"id":1743,"implemented":true,"kind":"function","modifiers":[],"name":"getAddressSlot","nameLocation":"1908:14:15","nodeType":"FunctionDefinition","parameters":{"id":1736,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1735,"mutability":"mutable","name":"slot","nameLocation":"1931:4:15","nodeType":"VariableDeclaration","scope":1743,"src":"1923:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1734,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1923:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1922:14:15"},"returnParameters":{"id":1740,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1739,"mutability":"mutable","name":"r","nameLocation":"1980:1:15","nodeType":"VariableDeclaration","scope":1743,"src":"1960:21:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1714_storage_ptr","typeString":"struct StorageSlot.AddressSlot"},"typeName":{"id":1738,"nodeType":"UserDefinedTypeName","pathNode":{"id":1737,"name":"AddressSlot","nameLocations":["1960:11:15"],"nodeType":"IdentifierPath","referencedDeclaration":1714,"src":"1960:11:15"},"referencedDeclaration":1714,"src":"1960:11:15","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1714_storage_ptr","typeString":"struct StorageSlot.AddressSlot"}},"visibility":"internal"}],"src":"1959:23:15"},"scope":1832,"src":"1899:163:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1753,"nodeType":"Block","src":"2243:79:15","statements":[{"AST":{"nodeType":"YulBlock","src":"2278:38:15","statements":[{"nodeType":"YulAssignment","src":"2292:14:15","value":{"name":"slot","nodeType":"YulIdentifier","src":"2302:4:15"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2292:6:15"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1750,"isOffset":false,"isSlot":true,"src":"2292:6:15","suffix":"slot","valueSize":1},{"declaration":1746,"isOffset":false,"isSlot":false,"src":"2302:4:15","valueSize":1}],"flags":["memory-safe"],"id":1752,"nodeType":"InlineAssembly","src":"2253:63:15"}]},"documentation":{"id":1744,"nodeType":"StructuredDocumentation","src":"2068:86:15","text":" @dev Returns a `BooleanSlot` with member `value` located at `slot`."},"id":1754,"implemented":true,"kind":"function","modifiers":[],"name":"getBooleanSlot","nameLocation":"2168:14:15","nodeType":"FunctionDefinition","parameters":{"id":1747,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1746,"mutability":"mutable","name":"slot","nameLocation":"2191:4:15","nodeType":"VariableDeclaration","scope":1754,"src":"2183:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1745,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2183:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2182:14:15"},"returnParameters":{"id":1751,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1750,"mutability":"mutable","name":"r","nameLocation":"2240:1:15","nodeType":"VariableDeclaration","scope":1754,"src":"2220:21:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$1717_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"},"typeName":{"id":1749,"nodeType":"UserDefinedTypeName","pathNode":{"id":1748,"name":"BooleanSlot","nameLocations":["2220:11:15"],"nodeType":"IdentifierPath","referencedDeclaration":1717,"src":"2220:11:15"},"referencedDeclaration":1717,"src":"2220:11:15","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$1717_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"}},"visibility":"internal"}],"src":"2219:23:15"},"scope":1832,"src":"2159:163:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1764,"nodeType":"Block","src":"2503:79:15","statements":[{"AST":{"nodeType":"YulBlock","src":"2538:38:15","statements":[{"nodeType":"YulAssignment","src":"2552:14:15","value":{"name":"slot","nodeType":"YulIdentifier","src":"2562:4:15"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2552:6:15"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1761,"isOffset":false,"isSlot":true,"src":"2552:6:15","suffix":"slot","valueSize":1},{"declaration":1757,"isOffset":false,"isSlot":false,"src":"2562:4:15","valueSize":1}],"flags":["memory-safe"],"id":1763,"nodeType":"InlineAssembly","src":"2513:63:15"}]},"documentation":{"id":1755,"nodeType":"StructuredDocumentation","src":"2328:86:15","text":" @dev Returns a `Bytes32Slot` with member `value` located at `slot`."},"id":1765,"implemented":true,"kind":"function","modifiers":[],"name":"getBytes32Slot","nameLocation":"2428:14:15","nodeType":"FunctionDefinition","parameters":{"id":1758,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1757,"mutability":"mutable","name":"slot","nameLocation":"2451:4:15","nodeType":"VariableDeclaration","scope":1765,"src":"2443:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1756,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2443:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2442:14:15"},"returnParameters":{"id":1762,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1761,"mutability":"mutable","name":"r","nameLocation":"2500:1:15","nodeType":"VariableDeclaration","scope":1765,"src":"2480:21:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$1720_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"},"typeName":{"id":1760,"nodeType":"UserDefinedTypeName","pathNode":{"id":1759,"name":"Bytes32Slot","nameLocations":["2480:11:15"],"nodeType":"IdentifierPath","referencedDeclaration":1720,"src":"2480:11:15"},"referencedDeclaration":1720,"src":"2480:11:15","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$1720_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"}},"visibility":"internal"}],"src":"2479:23:15"},"scope":1832,"src":"2419:163:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1775,"nodeType":"Block","src":"2763:79:15","statements":[{"AST":{"nodeType":"YulBlock","src":"2798:38:15","statements":[{"nodeType":"YulAssignment","src":"2812:14:15","value":{"name":"slot","nodeType":"YulIdentifier","src":"2822:4:15"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2812:6:15"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1772,"isOffset":false,"isSlot":true,"src":"2812:6:15","suffix":"slot","valueSize":1},{"declaration":1768,"isOffset":false,"isSlot":false,"src":"2822:4:15","valueSize":1}],"flags":["memory-safe"],"id":1774,"nodeType":"InlineAssembly","src":"2773:63:15"}]},"documentation":{"id":1766,"nodeType":"StructuredDocumentation","src":"2588:86:15","text":" @dev Returns a `Uint256Slot` with member `value` located at `slot`."},"id":1776,"implemented":true,"kind":"function","modifiers":[],"name":"getUint256Slot","nameLocation":"2688:14:15","nodeType":"FunctionDefinition","parameters":{"id":1769,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1768,"mutability":"mutable","name":"slot","nameLocation":"2711:4:15","nodeType":"VariableDeclaration","scope":1776,"src":"2703:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1767,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2703:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2702:14:15"},"returnParameters":{"id":1773,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1772,"mutability":"mutable","name":"r","nameLocation":"2760:1:15","nodeType":"VariableDeclaration","scope":1776,"src":"2740:21:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$1723_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"},"typeName":{"id":1771,"nodeType":"UserDefinedTypeName","pathNode":{"id":1770,"name":"Uint256Slot","nameLocations":["2740:11:15"],"nodeType":"IdentifierPath","referencedDeclaration":1723,"src":"2740:11:15"},"referencedDeclaration":1723,"src":"2740:11:15","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$1723_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"}},"visibility":"internal"}],"src":"2739:23:15"},"scope":1832,"src":"2679:163:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1786,"nodeType":"Block","src":"3020:79:15","statements":[{"AST":{"nodeType":"YulBlock","src":"3055:38:15","statements":[{"nodeType":"YulAssignment","src":"3069:14:15","value":{"name":"slot","nodeType":"YulIdentifier","src":"3079:4:15"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3069:6:15"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1783,"isOffset":false,"isSlot":true,"src":"3069:6:15","suffix":"slot","valueSize":1},{"declaration":1779,"isOffset":false,"isSlot":false,"src":"3079:4:15","valueSize":1}],"flags":["memory-safe"],"id":1785,"nodeType":"InlineAssembly","src":"3030:63:15"}]},"documentation":{"id":1777,"nodeType":"StructuredDocumentation","src":"2848:85:15","text":" @dev Returns a `Int256Slot` with member `value` located at `slot`."},"id":1787,"implemented":true,"kind":"function","modifiers":[],"name":"getInt256Slot","nameLocation":"2947:13:15","nodeType":"FunctionDefinition","parameters":{"id":1780,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1779,"mutability":"mutable","name":"slot","nameLocation":"2969:4:15","nodeType":"VariableDeclaration","scope":1787,"src":"2961:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1778,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2961:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2960:14:15"},"returnParameters":{"id":1784,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1783,"mutability":"mutable","name":"r","nameLocation":"3017:1:15","nodeType":"VariableDeclaration","scope":1787,"src":"2998:20:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Int256Slot_$1726_storage_ptr","typeString":"struct StorageSlot.Int256Slot"},"typeName":{"id":1782,"nodeType":"UserDefinedTypeName","pathNode":{"id":1781,"name":"Int256Slot","nameLocations":["2998:10:15"],"nodeType":"IdentifierPath","referencedDeclaration":1726,"src":"2998:10:15"},"referencedDeclaration":1726,"src":"2998:10:15","typeDescriptions":{"typeIdentifier":"t_struct$_Int256Slot_$1726_storage_ptr","typeString":"struct StorageSlot.Int256Slot"}},"visibility":"internal"}],"src":"2997:22:15"},"scope":1832,"src":"2938:161:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1797,"nodeType":"Block","src":"3277:79:15","statements":[{"AST":{"nodeType":"YulBlock","src":"3312:38:15","statements":[{"nodeType":"YulAssignment","src":"3326:14:15","value":{"name":"slot","nodeType":"YulIdentifier","src":"3336:4:15"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3326:6:15"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1794,"isOffset":false,"isSlot":true,"src":"3326:6:15","suffix":"slot","valueSize":1},{"declaration":1790,"isOffset":false,"isSlot":false,"src":"3336:4:15","valueSize":1}],"flags":["memory-safe"],"id":1796,"nodeType":"InlineAssembly","src":"3287:63:15"}]},"documentation":{"id":1788,"nodeType":"StructuredDocumentation","src":"3105:85:15","text":" @dev Returns a `StringSlot` with member `value` located at `slot`."},"id":1798,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3204:13:15","nodeType":"FunctionDefinition","parameters":{"id":1791,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1790,"mutability":"mutable","name":"slot","nameLocation":"3226:4:15","nodeType":"VariableDeclaration","scope":1798,"src":"3218:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1789,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3218:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3217:14:15"},"returnParameters":{"id":1795,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1794,"mutability":"mutable","name":"r","nameLocation":"3274:1:15","nodeType":"VariableDeclaration","scope":1798,"src":"3255:20:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1729_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":1793,"nodeType":"UserDefinedTypeName","pathNode":{"id":1792,"name":"StringSlot","nameLocations":["3255:10:15"],"nodeType":"IdentifierPath","referencedDeclaration":1729,"src":"3255:10:15"},"referencedDeclaration":1729,"src":"3255:10:15","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1729_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3254:22:15"},"scope":1832,"src":"3195:161:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1808,"nodeType":"Block","src":"3558:85:15","statements":[{"AST":{"nodeType":"YulBlock","src":"3593:44:15","statements":[{"nodeType":"YulAssignment","src":"3607:20:15","value":{"name":"store.slot","nodeType":"YulIdentifier","src":"3617:10:15"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3607:6:15"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1805,"isOffset":false,"isSlot":true,"src":"3607:6:15","suffix":"slot","valueSize":1},{"declaration":1801,"isOffset":false,"isSlot":true,"src":"3617:10:15","suffix":"slot","valueSize":1}],"flags":["memory-safe"],"id":1807,"nodeType":"InlineAssembly","src":"3568:69:15"}]},"documentation":{"id":1799,"nodeType":"StructuredDocumentation","src":"3362:101:15","text":" @dev Returns an `StringSlot` representation of the string storage pointer `store`."},"id":1809,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3477:13:15","nodeType":"FunctionDefinition","parameters":{"id":1802,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1801,"mutability":"mutable","name":"store","nameLocation":"3506:5:15","nodeType":"VariableDeclaration","scope":1809,"src":"3491:20:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1800,"name":"string","nodeType":"ElementaryTypeName","src":"3491:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3490:22:15"},"returnParameters":{"id":1806,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1805,"mutability":"mutable","name":"r","nameLocation":"3555:1:15","nodeType":"VariableDeclaration","scope":1809,"src":"3536:20:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1729_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":1804,"nodeType":"UserDefinedTypeName","pathNode":{"id":1803,"name":"StringSlot","nameLocations":["3536:10:15"],"nodeType":"IdentifierPath","referencedDeclaration":1729,"src":"3536:10:15"},"referencedDeclaration":1729,"src":"3536:10:15","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1729_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3535:22:15"},"scope":1832,"src":"3468:175:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1819,"nodeType":"Block","src":"3818:79:15","statements":[{"AST":{"nodeType":"YulBlock","src":"3853:38:15","statements":[{"nodeType":"YulAssignment","src":"3867:14:15","value":{"name":"slot","nodeType":"YulIdentifier","src":"3877:4:15"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3867:6:15"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1816,"isOffset":false,"isSlot":true,"src":"3867:6:15","suffix":"slot","valueSize":1},{"declaration":1812,"isOffset":false,"isSlot":false,"src":"3877:4:15","valueSize":1}],"flags":["memory-safe"],"id":1818,"nodeType":"InlineAssembly","src":"3828:63:15"}]},"documentation":{"id":1810,"nodeType":"StructuredDocumentation","src":"3649:84:15","text":" @dev Returns a `BytesSlot` with member `value` located at `slot`."},"id":1820,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3747:12:15","nodeType":"FunctionDefinition","parameters":{"id":1813,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1812,"mutability":"mutable","name":"slot","nameLocation":"3768:4:15","nodeType":"VariableDeclaration","scope":1820,"src":"3760:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1811,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3760:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3759:14:15"},"returnParameters":{"id":1817,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1816,"mutability":"mutable","name":"r","nameLocation":"3815:1:15","nodeType":"VariableDeclaration","scope":1820,"src":"3797:19:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$1732_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":1815,"nodeType":"UserDefinedTypeName","pathNode":{"id":1814,"name":"BytesSlot","nameLocations":["3797:9:15"],"nodeType":"IdentifierPath","referencedDeclaration":1732,"src":"3797:9:15"},"referencedDeclaration":1732,"src":"3797:9:15","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$1732_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"3796:21:15"},"scope":1832,"src":"3738:159:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1830,"nodeType":"Block","src":"4094:85:15","statements":[{"AST":{"nodeType":"YulBlock","src":"4129:44:15","statements":[{"nodeType":"YulAssignment","src":"4143:20:15","value":{"name":"store.slot","nodeType":"YulIdentifier","src":"4153:10:15"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"4143:6:15"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1827,"isOffset":false,"isSlot":true,"src":"4143:6:15","suffix":"slot","valueSize":1},{"declaration":1823,"isOffset":false,"isSlot":true,"src":"4153:10:15","suffix":"slot","valueSize":1}],"flags":["memory-safe"],"id":1829,"nodeType":"InlineAssembly","src":"4104:69:15"}]},"documentation":{"id":1821,"nodeType":"StructuredDocumentation","src":"3903:99:15","text":" @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."},"id":1831,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"4016:12:15","nodeType":"FunctionDefinition","parameters":{"id":1824,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1823,"mutability":"mutable","name":"store","nameLocation":"4043:5:15","nodeType":"VariableDeclaration","scope":1831,"src":"4029:19:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":1822,"name":"bytes","nodeType":"ElementaryTypeName","src":"4029:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4028:21:15"},"returnParameters":{"id":1828,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1827,"mutability":"mutable","name":"r","nameLocation":"4091:1:15","nodeType":"VariableDeclaration","scope":1831,"src":"4073:19:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$1732_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":1826,"nodeType":"UserDefinedTypeName","pathNode":{"id":1825,"name":"BytesSlot","nameLocations":["4073:9:15"],"nodeType":"IdentifierPath","referencedDeclaration":1732,"src":"4073:9:15"},"referencedDeclaration":1732,"src":"4073:9:15","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$1732_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"4072:21:15"},"scope":1832,"src":"4007:172:15","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1833,"src":"1407:2774:15","usedErrors":[],"usedEvents":[]}],"src":"193:3989:15"},"id":15},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[5516],"SafeCast":[7281],"SignedMath":[7425],"Strings":[3234]},"id":3235,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1834,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:16"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":1836,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3235,"sourceUnit":5517,"src":"127:37:16","symbolAliases":[{"foreign":{"id":1835,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5516,"src":"135:4:16","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./math/SafeCast.sol","id":1838,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3235,"sourceUnit":7282,"src":"165:45:16","symbolAliases":[{"foreign":{"id":1837,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7281,"src":"173:8:16","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","file":"./math/SignedMath.sol","id":1840,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3235,"sourceUnit":7426,"src":"211:49:16","symbolAliases":[{"foreign":{"id":1839,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7425,"src":"219:10:16","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":1841,"nodeType":"StructuredDocumentation","src":"262:34:16","text":" @dev String operations."},"fullyImplemented":true,"id":3234,"linearizedBaseContracts":[3234],"name":"Strings","nameLocation":"305:7:16","nodeType":"ContractDefinition","nodes":[{"global":false,"id":1843,"libraryName":{"id":1842,"name":"SafeCast","nameLocations":["325:8:16"],"nodeType":"IdentifierPath","referencedDeclaration":7281,"src":"325:8:16"},"nodeType":"UsingForDirective","src":"319:21:16"},{"constant":true,"id":1846,"mutability":"constant","name":"HEX_DIGITS","nameLocation":"371:10:16","nodeType":"VariableDeclaration","scope":3234,"src":"346:56:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":1844,"name":"bytes16","nodeType":"ElementaryTypeName","src":"346:7:16","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":1845,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"384:18:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":1849,"mutability":"constant","name":"ADDRESS_LENGTH","nameLocation":"431:14:16","nodeType":"VariableDeclaration","scope":3234,"src":"408:42:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1847,"name":"uint8","nodeType":"ElementaryTypeName","src":"408:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":1848,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"448:2:16","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"constant":true,"id":1885,"mutability":"constant","name":"SPECIAL_CHARS_LOOKUP","nameLocation":"481:20:16","nodeType":"VariableDeclaration","scope":3234,"src":"456:302:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1850,"name":"uint256","nodeType":"ElementaryTypeName","src":"456:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_4951760157141521116776380160_by_1","typeString":"int_const 4951760157141521116776380160"},"id":1884,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_17179883264_by_1","typeString":"int_const 17179883264"},"id":1879,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_14080_by_1","typeString":"int_const 14080"},"id":1874,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_5888_by_1","typeString":"int_const 5888"},"id":1869,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_1792_by_1","typeString":"int_const 1792"},"id":1864,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_768_by_1","typeString":"int_const 768"},"id":1859,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":1853,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1851,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"513:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783038","id":1852,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"518:4:16","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"0x08"},"src":"513:9:16","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":1854,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"512:11:16","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"},"id":1857,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1855,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"552:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783039","id":1856,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"557:4:16","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"0x09"},"src":"552:9:16","typeDescriptions":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"}}],"id":1858,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"551:11:16","typeDescriptions":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"}},"src":"512:50:16","typeDescriptions":{"typeIdentifier":"t_rational_768_by_1","typeString":"int_const 768"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"},"id":1862,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1860,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"585:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783061","id":1861,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"590:4:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"0x0a"},"src":"585:9:16","typeDescriptions":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"}}],"id":1863,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"584:11:16","typeDescriptions":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"}},"src":"512:83:16","typeDescriptions":{"typeIdentifier":"t_rational_1792_by_1","typeString":"int_const 1792"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"},"id":1867,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1865,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"622:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783063","id":1866,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"627:4:16","typeDescriptions":{"typeIdentifier":"t_rational_12_by_1","typeString":"int_const 12"},"value":"0x0c"},"src":"622:9:16","typeDescriptions":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"}}],"id":1868,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"621:11:16","typeDescriptions":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"}},"src":"512:120:16","typeDescriptions":{"typeIdentifier":"t_rational_5888_by_1","typeString":"int_const 5888"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"},"id":1872,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1870,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"661:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783064","id":1871,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"666:4:16","typeDescriptions":{"typeIdentifier":"t_rational_13_by_1","typeString":"int_const 13"},"value":"0x0d"},"src":"661:9:16","typeDescriptions":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"}}],"id":1873,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"660:11:16","typeDescriptions":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"}},"src":"512:159:16","typeDescriptions":{"typeIdentifier":"t_rational_14080_by_1","typeString":"int_const 14080"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"},"id":1877,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1875,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"706:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783232","id":1876,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"711:4:16","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"src":"706:9:16","typeDescriptions":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"}}],"id":1878,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"705:11:16","typeDescriptions":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"}},"src":"512:204:16","typeDescriptions":{"typeIdentifier":"t_rational_17179883264_by_1","typeString":"int_const 17179883264"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4951760157141521099596496896_by_1","typeString":"int_const 4951760157141521099596496896"},"id":1882,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1880,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"748:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783563","id":1881,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"753:4:16","typeDescriptions":{"typeIdentifier":"t_rational_92_by_1","typeString":"int_const 92"},"value":"0x5c"},"src":"748:9:16","typeDescriptions":{"typeIdentifier":"t_rational_4951760157141521099596496896_by_1","typeString":"int_const 4951760157141521099596496896"}}],"id":1883,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"747:11:16","typeDescriptions":{"typeIdentifier":"t_rational_4951760157141521099596496896_by_1","typeString":"int_const 4951760157141521099596496896"}},"src":"512:246:16","typeDescriptions":{"typeIdentifier":"t_rational_4951760157141521116776380160_by_1","typeString":"int_const 4951760157141521116776380160"}},"visibility":"private"},{"documentation":{"id":1886,"nodeType":"StructuredDocumentation","src":"778:81:16","text":" @dev The `value` string doesn't fit in the specified `length`."},"errorSelector":"e22e27eb","id":1892,"name":"StringsInsufficientHexLength","nameLocation":"870:28:16","nodeType":"ErrorDefinition","parameters":{"id":1891,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1888,"mutability":"mutable","name":"value","nameLocation":"907:5:16","nodeType":"VariableDeclaration","scope":1892,"src":"899:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1887,"name":"uint256","nodeType":"ElementaryTypeName","src":"899:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1890,"mutability":"mutable","name":"length","nameLocation":"922:6:16","nodeType":"VariableDeclaration","scope":1892,"src":"914:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1889,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"898:31:16"},"src":"864:66:16"},{"documentation":{"id":1893,"nodeType":"StructuredDocumentation","src":"936:108:16","text":" @dev The string being parsed contains characters that are not in scope of the given base."},"errorSelector":"94e2737e","id":1895,"name":"StringsInvalidChar","nameLocation":"1055:18:16","nodeType":"ErrorDefinition","parameters":{"id":1894,"nodeType":"ParameterList","parameters":[],"src":"1073:2:16"},"src":"1049:27:16"},{"documentation":{"id":1896,"nodeType":"StructuredDocumentation","src":"1082:84:16","text":" @dev The string being parsed is not a properly formatted address."},"errorSelector":"1d15ae44","id":1898,"name":"StringsInvalidAddressFormat","nameLocation":"1177:27:16","nodeType":"ErrorDefinition","parameters":{"id":1897,"nodeType":"ParameterList","parameters":[],"src":"1204:2:16"},"src":"1171:36:16"},{"body":{"id":1945,"nodeType":"Block","src":"1379:561:16","statements":[{"id":1944,"nodeType":"UncheckedBlock","src":"1389:545:16","statements":[{"assignments":[1907],"declarations":[{"constant":false,"id":1907,"mutability":"mutable","name":"length","nameLocation":"1421:6:16","nodeType":"VariableDeclaration","scope":1944,"src":"1413:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1906,"name":"uint256","nodeType":"ElementaryTypeName","src":"1413:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1914,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1910,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1901,"src":"1441:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1908,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5516,"src":"1430:4:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5516_$","typeString":"type(library Math)"}},"id":1909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1435:5:16","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":5348,"src":"1430:10:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1911,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1430:17:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1912,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1450:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1430:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1413:38:16"},{"assignments":[1916],"declarations":[{"constant":false,"id":1916,"mutability":"mutable","name":"buffer","nameLocation":"1479:6:16","nodeType":"VariableDeclaration","scope":1944,"src":"1465:20:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1915,"name":"string","nodeType":"ElementaryTypeName","src":"1465:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1921,"initialValue":{"arguments":[{"id":1919,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1907,"src":"1499:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1918,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1488:10:16","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":1917,"name":"string","nodeType":"ElementaryTypeName","src":"1492:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":1920,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1488:18:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"1465:41:16"},{"assignments":[1923],"declarations":[{"constant":false,"id":1923,"mutability":"mutable","name":"ptr","nameLocation":"1528:3:16","nodeType":"VariableDeclaration","scope":1944,"src":"1520:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1922,"name":"uint256","nodeType":"ElementaryTypeName","src":"1520:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1924,"nodeType":"VariableDeclarationStatement","src":"1520:11:16"},{"AST":{"nodeType":"YulBlock","src":"1570:67:16","statements":[{"nodeType":"YulAssignment","src":"1588:35:16","value":{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"1599:6:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1611:2:16","type":"","value":"32"},{"name":"length","nodeType":"YulIdentifier","src":"1615:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1607:3:16"},"nodeType":"YulFunctionCall","src":"1607:15:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1595:3:16"},"nodeType":"YulFunctionCall","src":"1595:28:16"},"variableNames":[{"name":"ptr","nodeType":"YulIdentifier","src":"1588:3:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1916,"isOffset":false,"isSlot":false,"src":"1599:6:16","valueSize":1},{"declaration":1907,"isOffset":false,"isSlot":false,"src":"1615:6:16","valueSize":1},{"declaration":1923,"isOffset":false,"isSlot":false,"src":"1588:3:16","valueSize":1}],"flags":["memory-safe"],"id":1925,"nodeType":"InlineAssembly","src":"1545:92:16"},{"body":{"id":1940,"nodeType":"Block","src":"1663:234:16","statements":[{"expression":{"id":1928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"1681:5:16","subExpression":{"id":1927,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1923,"src":"1681:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1929,"nodeType":"ExpressionStatement","src":"1681:5:16"},{"AST":{"nodeType":"YulBlock","src":"1729:86:16","statements":[{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"1759:3:16"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1773:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"1780:2:16","type":"","value":"10"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"1769:3:16"},"nodeType":"YulFunctionCall","src":"1769:14:16"},{"name":"HEX_DIGITS","nodeType":"YulIdentifier","src":"1785:10:16"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"1764:4:16"},"nodeType":"YulFunctionCall","src":"1764:32:16"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"1751:7:16"},"nodeType":"YulFunctionCall","src":"1751:46:16"},"nodeType":"YulExpressionStatement","src":"1751:46:16"}]},"evmVersion":"paris","externalReferences":[{"declaration":1846,"isOffset":false,"isSlot":false,"src":"1785:10:16","valueSize":1},{"declaration":1923,"isOffset":false,"isSlot":false,"src":"1759:3:16","valueSize":1},{"declaration":1901,"isOffset":false,"isSlot":false,"src":"1773:5:16","valueSize":1}],"flags":["memory-safe"],"id":1930,"nodeType":"InlineAssembly","src":"1704:111:16"},{"expression":{"id":1933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1931,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1901,"src":"1832:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":1932,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1841:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1832:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1934,"nodeType":"ExpressionStatement","src":"1832:11:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1935,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1901,"src":"1865:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1936,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1874:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1865:10:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1939,"nodeType":"IfStatement","src":"1861:21:16","trueBody":{"id":1938,"nodeType":"Break","src":"1877:5:16"}}]},"condition":{"hexValue":"74727565","id":1926,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1657:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":1941,"nodeType":"WhileStatement","src":"1650:247:16"},{"expression":{"id":1942,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1916,"src":"1917:6:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1905,"id":1943,"nodeType":"Return","src":"1910:13:16"}]}]},"documentation":{"id":1899,"nodeType":"StructuredDocumentation","src":"1213:90:16","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":1946,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"1317:8:16","nodeType":"FunctionDefinition","parameters":{"id":1902,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1901,"mutability":"mutable","name":"value","nameLocation":"1334:5:16","nodeType":"VariableDeclaration","scope":1946,"src":"1326:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1900,"name":"uint256","nodeType":"ElementaryTypeName","src":"1326:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1325:15:16"},"returnParameters":{"id":1905,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1904,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1946,"src":"1364:13:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1903,"name":"string","nodeType":"ElementaryTypeName","src":"1364:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1363:15:16"},"scope":3234,"src":"1308:632:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1971,"nodeType":"Block","src":"2116:92:16","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1959,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1957,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1949,"src":"2147:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":1958,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2155:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2147:9:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":1961,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2165:2:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":1962,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2147:20:16","trueExpression":{"hexValue":"2d","id":1960,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2159:3:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":1966,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1949,"src":"2193:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":1964,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7425,"src":"2178:10:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$7425_$","typeString":"type(library SignedMath)"}},"id":1965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2189:3:16","memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":7424,"src":"2178:14:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":1967,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2178:21:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1963,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1946,"src":"2169:8:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":1968,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2169:31:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":1955,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2133:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1954,"name":"string","nodeType":"ElementaryTypeName","src":"2133:6:16","typeDescriptions":{}}},"id":1956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2140:6:16","memberName":"concat","nodeType":"MemberAccess","src":"2133:13:16","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":1969,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2133:68:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1953,"id":1970,"nodeType":"Return","src":"2126:75:16"}]},"documentation":{"id":1947,"nodeType":"StructuredDocumentation","src":"1946:89:16","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":1972,"implemented":true,"kind":"function","modifiers":[],"name":"toStringSigned","nameLocation":"2049:14:16","nodeType":"FunctionDefinition","parameters":{"id":1950,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1949,"mutability":"mutable","name":"value","nameLocation":"2071:5:16","nodeType":"VariableDeclaration","scope":1972,"src":"2064:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1948,"name":"int256","nodeType":"ElementaryTypeName","src":"2064:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"2063:14:16"},"returnParameters":{"id":1953,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1952,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1972,"src":"2101:13:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1951,"name":"string","nodeType":"ElementaryTypeName","src":"2101:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2100:15:16"},"scope":3234,"src":"2040:168:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1991,"nodeType":"Block","src":"2387:100:16","statements":[{"id":1990,"nodeType":"UncheckedBlock","src":"2397:84:16","statements":[{"expression":{"arguments":[{"id":1981,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1975,"src":"2440:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1984,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1975,"src":"2459:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1982,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5516,"src":"2447:4:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5516_$","typeString":"type(library Math)"}},"id":1983,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2452:6:16","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":5459,"src":"2447:11:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1985,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2447:18:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1986,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2468:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2447:22:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1980,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[1992,2075,2095],"referencedDeclaration":2075,"src":"2428:11:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":1988,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2428:42:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1979,"id":1989,"nodeType":"Return","src":"2421:49:16"}]}]},"documentation":{"id":1973,"nodeType":"StructuredDocumentation","src":"2214:94:16","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":1992,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2322:11:16","nodeType":"FunctionDefinition","parameters":{"id":1976,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1975,"mutability":"mutable","name":"value","nameLocation":"2342:5:16","nodeType":"VariableDeclaration","scope":1992,"src":"2334:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1974,"name":"uint256","nodeType":"ElementaryTypeName","src":"2334:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2333:15:16"},"returnParameters":{"id":1979,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1978,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1992,"src":"2372:13:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1977,"name":"string","nodeType":"ElementaryTypeName","src":"2372:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2371:15:16"},"scope":3234,"src":"2313:174:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2074,"nodeType":"Block","src":"2700:435:16","statements":[{"assignments":[2003],"declarations":[{"constant":false,"id":2003,"mutability":"mutable","name":"localValue","nameLocation":"2718:10:16","nodeType":"VariableDeclaration","scope":2074,"src":"2710:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2002,"name":"uint256","nodeType":"ElementaryTypeName","src":"2710:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2005,"initialValue":{"id":2004,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1995,"src":"2731:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2710:26:16"},{"assignments":[2007],"declarations":[{"constant":false,"id":2007,"mutability":"mutable","name":"buffer","nameLocation":"2759:6:16","nodeType":"VariableDeclaration","scope":2074,"src":"2746:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2006,"name":"bytes","nodeType":"ElementaryTypeName","src":"2746:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2016,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2012,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2010,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2778:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2011,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1997,"src":"2782:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2778:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":2013,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2791:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2778:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2009,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2768:9:16","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":2008,"name":"bytes","nodeType":"ElementaryTypeName","src":"2772:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":2015,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2768:25:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"2746:47:16"},{"expression":{"id":2021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2017,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2007,"src":"2803:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2019,"indexExpression":{"hexValue":"30","id":2018,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2810:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2803:9:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":2020,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2815:3:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"2803:15:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2022,"nodeType":"ExpressionStatement","src":"2803:15:16"},{"expression":{"id":2027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2023,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2007,"src":"2828:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2025,"indexExpression":{"hexValue":"31","id":2024,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2835:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2828:9:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":2026,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2840:3:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2828:15:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2028,"nodeType":"ExpressionStatement","src":"2828:15:16"},{"body":{"id":2057,"nodeType":"Block","src":"2898:95:16","statements":[{"expression":{"id":2051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2043,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2007,"src":"2912:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2045,"indexExpression":{"id":2044,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2030,"src":"2919:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2912:9:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":2046,"name":"HEX_DIGITS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1846,"src":"2924:10:16","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":2050,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2049,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2047,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2003,"src":"2935:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":2048,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2948:3:16","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2935:16:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2924:28:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2912:40:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2052,"nodeType":"ExpressionStatement","src":"2912:40:16"},{"expression":{"id":2055,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2053,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2003,"src":"2966:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":2054,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2981:1:16","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2966:16:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2056,"nodeType":"ExpressionStatement","src":"2966:16:16"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2039,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2037,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2030,"src":"2886:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":2038,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2890:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2886:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2058,"initializationExpression":{"assignments":[2030],"declarations":[{"constant":false,"id":2030,"mutability":"mutable","name":"i","nameLocation":"2866:1:16","nodeType":"VariableDeclaration","scope":2058,"src":"2858:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2029,"name":"uint256","nodeType":"ElementaryTypeName","src":"2858:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2036,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2031,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2870:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2032,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1997,"src":"2874:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2870:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2034,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2883:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2870:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2858:26:16"},"loopExpression":{"expression":{"id":2041,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2893:3:16","subExpression":{"id":2040,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2030,"src":"2895:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2042,"nodeType":"ExpressionStatement","src":"2893:3:16"},"nodeType":"ForStatement","src":"2853:140:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2061,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2059,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2003,"src":"3006:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2060,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3020:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3006:15:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2068,"nodeType":"IfStatement","src":"3002:96:16","trueBody":{"id":2067,"nodeType":"Block","src":"3023:75:16","statements":[{"errorCall":{"arguments":[{"id":2063,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1995,"src":"3073:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2064,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1997,"src":"3080:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2062,"name":"StringsInsufficientHexLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1892,"src":"3044:28:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":2065,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3044:43:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2066,"nodeType":"RevertStatement","src":"3037:50:16"}]}},{"expression":{"arguments":[{"id":2071,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2007,"src":"3121:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2070,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3114:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2069,"name":"string","nodeType":"ElementaryTypeName","src":"3114:6:16","typeDescriptions":{}}},"id":2072,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3114:14:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2001,"id":2073,"nodeType":"Return","src":"3107:21:16"}]},"documentation":{"id":1993,"nodeType":"StructuredDocumentation","src":"2493:112:16","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":2075,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2619:11:16","nodeType":"FunctionDefinition","parameters":{"id":1998,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1995,"mutability":"mutable","name":"value","nameLocation":"2639:5:16","nodeType":"VariableDeclaration","scope":2075,"src":"2631:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1994,"name":"uint256","nodeType":"ElementaryTypeName","src":"2631:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1997,"mutability":"mutable","name":"length","nameLocation":"2654:6:16","nodeType":"VariableDeclaration","scope":2075,"src":"2646:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1996,"name":"uint256","nodeType":"ElementaryTypeName","src":"2646:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2630:31:16"},"returnParameters":{"id":2001,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2000,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2075,"src":"2685:13:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1999,"name":"string","nodeType":"ElementaryTypeName","src":"2685:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2684:15:16"},"scope":3234,"src":"2610:525:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2094,"nodeType":"Block","src":"3367:75:16","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":2088,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2078,"src":"3412:4:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2087,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3404:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2086,"name":"uint160","nodeType":"ElementaryTypeName","src":"3404:7:16","typeDescriptions":{}}},"id":2089,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3404:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2085,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3396:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2084,"name":"uint256","nodeType":"ElementaryTypeName","src":"3396:7:16","typeDescriptions":{}}},"id":2090,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3396:22:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2091,"name":"ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1849,"src":"3420:14:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":2083,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[1992,2075,2095],"referencedDeclaration":2075,"src":"3384:11:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":2092,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3384:51:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2082,"id":2093,"nodeType":"Return","src":"3377:58:16"}]},"documentation":{"id":2076,"nodeType":"StructuredDocumentation","src":"3141:148:16","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."},"id":2095,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"3303:11:16","nodeType":"FunctionDefinition","parameters":{"id":2079,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2078,"mutability":"mutable","name":"addr","nameLocation":"3323:4:16","nodeType":"VariableDeclaration","scope":2095,"src":"3315:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2077,"name":"address","nodeType":"ElementaryTypeName","src":"3315:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3314:14:16"},"returnParameters":{"id":2082,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2081,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2095,"src":"3352:13:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2080,"name":"string","nodeType":"ElementaryTypeName","src":"3352:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3351:15:16"},"scope":3234,"src":"3294:148:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2159,"nodeType":"Block","src":"3699:642:16","statements":[{"assignments":[2104],"declarations":[{"constant":false,"id":2104,"mutability":"mutable","name":"buffer","nameLocation":"3722:6:16","nodeType":"VariableDeclaration","scope":2159,"src":"3709:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2103,"name":"bytes","nodeType":"ElementaryTypeName","src":"3709:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2111,"initialValue":{"arguments":[{"arguments":[{"id":2108,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2098,"src":"3749:4:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2107,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[1992,2075,2095],"referencedDeclaration":2095,"src":"3737:11:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$","typeString":"function (address) pure returns (string memory)"}},"id":2109,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3737:17:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2106,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3731:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2105,"name":"bytes","nodeType":"ElementaryTypeName","src":"3731:5:16","typeDescriptions":{}}},"id":2110,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3731:24:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3709:46:16"},{"assignments":[2113],"declarations":[{"constant":false,"id":2113,"mutability":"mutable","name":"hashValue","nameLocation":"3848:9:16","nodeType":"VariableDeclaration","scope":2159,"src":"3840:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2112,"name":"uint256","nodeType":"ElementaryTypeName","src":"3840:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2114,"nodeType":"VariableDeclarationStatement","src":"3840:17:16"},{"AST":{"nodeType":"YulBlock","src":"3892:78:16","statements":[{"nodeType":"YulAssignment","src":"3906:54:16","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3923:2:16","type":"","value":"96"},{"arguments":[{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"3941:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"3949:4:16","type":"","value":"0x22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3937:3:16"},"nodeType":"YulFunctionCall","src":"3937:17:16"},{"kind":"number","nodeType":"YulLiteral","src":"3956:2:16","type":"","value":"40"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"3927:9:16"},"nodeType":"YulFunctionCall","src":"3927:32:16"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"3919:3:16"},"nodeType":"YulFunctionCall","src":"3919:41:16"},"variableNames":[{"name":"hashValue","nodeType":"YulIdentifier","src":"3906:9:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2104,"isOffset":false,"isSlot":false,"src":"3941:6:16","valueSize":1},{"declaration":2113,"isOffset":false,"isSlot":false,"src":"3906:9:16","valueSize":1}],"flags":["memory-safe"],"id":2115,"nodeType":"InlineAssembly","src":"3867:103:16"},{"body":{"id":2152,"nodeType":"Block","src":"4013:291:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2139,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2126,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2113,"src":"4119:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":2127,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4131:3:16","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"4119:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"37","id":2129,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4137:1:16","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"4119:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"baseExpression":{"id":2133,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2104,"src":"4148:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2135,"indexExpression":{"id":2134,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2117,"src":"4155:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4148:9:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":2132,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4142:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2131,"name":"uint8","nodeType":"ElementaryTypeName","src":"4142:5:16","typeDescriptions":{}}},"id":2136,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4142:16:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3936","id":2137,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4161:2:16","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"4142:21:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4119:44:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2147,"nodeType":"IfStatement","src":"4115:150:16","trueBody":{"id":2146,"nodeType":"Block","src":"4165:100:16","statements":[{"expression":{"id":2144,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2140,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2104,"src":"4233:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2142,"indexExpression":{"id":2141,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2117,"src":"4240:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4233:9:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"^=","rightHandSide":{"hexValue":"30783230","id":2143,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4246:4:16","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"4233:17:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2145,"nodeType":"ExpressionStatement","src":"4233:17:16"}]}},{"expression":{"id":2150,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2148,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2113,"src":"4278:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":2149,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4292:1:16","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"4278:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2151,"nodeType":"ExpressionStatement","src":"4278:15:16"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2120,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2117,"src":"4001:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":2121,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4005:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4001:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2153,"initializationExpression":{"assignments":[2117],"declarations":[{"constant":false,"id":2117,"mutability":"mutable","name":"i","nameLocation":"3993:1:16","nodeType":"VariableDeclaration","scope":2153,"src":"3985:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2116,"name":"uint256","nodeType":"ElementaryTypeName","src":"3985:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2119,"initialValue":{"hexValue":"3431","id":2118,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3997:2:16","typeDescriptions":{"typeIdentifier":"t_rational_41_by_1","typeString":"int_const 41"},"value":"41"},"nodeType":"VariableDeclarationStatement","src":"3985:14:16"},"loopExpression":{"expression":{"id":2124,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"4008:3:16","subExpression":{"id":2123,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2117,"src":"4010:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2125,"nodeType":"ExpressionStatement","src":"4008:3:16"},"nodeType":"ForStatement","src":"3980:324:16"},{"expression":{"arguments":[{"id":2156,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2104,"src":"4327:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2155,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4320:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2154,"name":"string","nodeType":"ElementaryTypeName","src":"4320:6:16","typeDescriptions":{}}},"id":2157,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4320:14:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2102,"id":2158,"nodeType":"Return","src":"4313:21:16"}]},"documentation":{"id":2096,"nodeType":"StructuredDocumentation","src":"3448:165:16","text":" @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n representation, according to EIP-55."},"id":2160,"implemented":true,"kind":"function","modifiers":[],"name":"toChecksumHexString","nameLocation":"3627:19:16","nodeType":"FunctionDefinition","parameters":{"id":2099,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2098,"mutability":"mutable","name":"addr","nameLocation":"3655:4:16","nodeType":"VariableDeclaration","scope":2160,"src":"3647:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2097,"name":"address","nodeType":"ElementaryTypeName","src":"3647:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3646:14:16"},"returnParameters":{"id":2102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2101,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2160,"src":"3684:13:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2100,"name":"string","nodeType":"ElementaryTypeName","src":"3684:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3683:15:16"},"scope":3234,"src":"3618:723:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2196,"nodeType":"Block","src":"4496:104:16","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2172,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2163,"src":"4519:1:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2171,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4513:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2170,"name":"bytes","nodeType":"ElementaryTypeName","src":"4513:5:16","typeDescriptions":{}}},"id":2173,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4513:8:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2174,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4522:6:16","memberName":"length","nodeType":"MemberAccess","src":"4513:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":2177,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2165,"src":"4538:1:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2176,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4532:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2175,"name":"bytes","nodeType":"ElementaryTypeName","src":"4532:5:16","typeDescriptions":{}}},"id":2178,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4532:8:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4541:6:16","memberName":"length","nodeType":"MemberAccess","src":"4532:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4513:34:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":2184,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2163,"src":"4567:1:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2183,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4561:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2182,"name":"bytes","nodeType":"ElementaryTypeName","src":"4561:5:16","typeDescriptions":{}}},"id":2185,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4561:8:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2181,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4551:9:16","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2186,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4551:19:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":2190,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2165,"src":"4590:1:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2189,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4584:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2188,"name":"bytes","nodeType":"ElementaryTypeName","src":"4584:5:16","typeDescriptions":{}}},"id":2191,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4584:8:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2187,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4574:9:16","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2192,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4574:19:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4551:42:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4513:80:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2169,"id":2195,"nodeType":"Return","src":"4506:87:16"}]},"documentation":{"id":2161,"nodeType":"StructuredDocumentation","src":"4347:66:16","text":" @dev Returns true if the two strings are equal."},"id":2197,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"4427:5:16","nodeType":"FunctionDefinition","parameters":{"id":2166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2163,"mutability":"mutable","name":"a","nameLocation":"4447:1:16","nodeType":"VariableDeclaration","scope":2197,"src":"4433:15:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2162,"name":"string","nodeType":"ElementaryTypeName","src":"4433:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2165,"mutability":"mutable","name":"b","nameLocation":"4464:1:16","nodeType":"VariableDeclaration","scope":2197,"src":"4450:15:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2164,"name":"string","nodeType":"ElementaryTypeName","src":"4450:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4432:34:16"},"returnParameters":{"id":2169,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2168,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2197,"src":"4490:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2167,"name":"bool","nodeType":"ElementaryTypeName","src":"4490:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4489:6:16"},"scope":3234,"src":"4418:182:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2215,"nodeType":"Block","src":"4897:64:16","statements":[{"expression":{"arguments":[{"id":2206,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2200,"src":"4924:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2207,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4931:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2210,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2200,"src":"4940:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2209,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4934:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2208,"name":"bytes","nodeType":"ElementaryTypeName","src":"4934:5:16","typeDescriptions":{}}},"id":2211,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4934:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4947:6:16","memberName":"length","nodeType":"MemberAccess","src":"4934:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2205,"name":"parseUint","nodeType":"Identifier","overloadedDeclarations":[2216,2247],"referencedDeclaration":2247,"src":"4914:9:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (uint256)"}},"id":2213,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4914:40:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2204,"id":2214,"nodeType":"Return","src":"4907:47:16"}]},"documentation":{"id":2198,"nodeType":"StructuredDocumentation","src":"4606:214:16","text":" @dev Parse a decimal string and returns the value as a `uint256`.\n Requirements:\n - The string must be formatted as `[0-9]*`\n - The result must fit into an `uint256` type"},"id":2216,"implemented":true,"kind":"function","modifiers":[],"name":"parseUint","nameLocation":"4834:9:16","nodeType":"FunctionDefinition","parameters":{"id":2201,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2200,"mutability":"mutable","name":"input","nameLocation":"4858:5:16","nodeType":"VariableDeclaration","scope":2216,"src":"4844:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2199,"name":"string","nodeType":"ElementaryTypeName","src":"4844:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4843:21:16"},"returnParameters":{"id":2204,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2203,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2216,"src":"4888:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2202,"name":"uint256","nodeType":"ElementaryTypeName","src":"4888:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4887:9:16"},"scope":3234,"src":"4825:136:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2246,"nodeType":"Block","src":"5366:153:16","statements":[{"assignments":[2229,2231],"declarations":[{"constant":false,"id":2229,"mutability":"mutable","name":"success","nameLocation":"5382:7:16","nodeType":"VariableDeclaration","scope":2246,"src":"5377:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2228,"name":"bool","nodeType":"ElementaryTypeName","src":"5377:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2231,"mutability":"mutable","name":"value","nameLocation":"5399:5:16","nodeType":"VariableDeclaration","scope":2246,"src":"5391:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2230,"name":"uint256","nodeType":"ElementaryTypeName","src":"5391:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2237,"initialValue":{"arguments":[{"id":2233,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2219,"src":"5421:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2234,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2221,"src":"5428:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2235,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2223,"src":"5435:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2232,"name":"tryParseUint","nodeType":"Identifier","overloadedDeclarations":[2268,2305],"referencedDeclaration":2305,"src":"5408:12:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2236,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5408:31:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"5376:63:16"},{"condition":{"id":2239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5453:8:16","subExpression":{"id":2238,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2229,"src":"5454:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2243,"nodeType":"IfStatement","src":"5449:41:16","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2240,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1895,"src":"5470:18:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2241,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5470:20:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2242,"nodeType":"RevertStatement","src":"5463:27:16"}},{"expression":{"id":2244,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2231,"src":"5507:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2227,"id":2245,"nodeType":"Return","src":"5500:12:16"}]},"documentation":{"id":2217,"nodeType":"StructuredDocumentation","src":"4967:294:16","text":" @dev Variant of {parseUint-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `[0-9]*`\n - The result must fit into an `uint256` type"},"id":2247,"implemented":true,"kind":"function","modifiers":[],"name":"parseUint","nameLocation":"5275:9:16","nodeType":"FunctionDefinition","parameters":{"id":2224,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2219,"mutability":"mutable","name":"input","nameLocation":"5299:5:16","nodeType":"VariableDeclaration","scope":2247,"src":"5285:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2218,"name":"string","nodeType":"ElementaryTypeName","src":"5285:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2221,"mutability":"mutable","name":"begin","nameLocation":"5314:5:16","nodeType":"VariableDeclaration","scope":2247,"src":"5306:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2220,"name":"uint256","nodeType":"ElementaryTypeName","src":"5306:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2223,"mutability":"mutable","name":"end","nameLocation":"5329:3:16","nodeType":"VariableDeclaration","scope":2247,"src":"5321:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2222,"name":"uint256","nodeType":"ElementaryTypeName","src":"5321:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5284:49:16"},"returnParameters":{"id":2227,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2226,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2247,"src":"5357:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2225,"name":"uint256","nodeType":"ElementaryTypeName","src":"5357:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5356:9:16"},"scope":3234,"src":"5266:253:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2267,"nodeType":"Block","src":"5840:83:16","statements":[{"expression":{"arguments":[{"id":2258,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2250,"src":"5886:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2259,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5893:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2262,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2250,"src":"5902:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2261,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5896:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2260,"name":"bytes","nodeType":"ElementaryTypeName","src":"5896:5:16","typeDescriptions":{}}},"id":2263,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5896:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5909:6:16","memberName":"length","nodeType":"MemberAccess","src":"5896:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2257,"name":"_tryParseUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2375,"src":"5857:28:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2265,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5857:59:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2256,"id":2266,"nodeType":"Return","src":"5850:66:16"}]},"documentation":{"id":2248,"nodeType":"StructuredDocumentation","src":"5525:215:16","text":" @dev Variant of {parseUint-string} that returns false if the parsing fails because of an invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":2268,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseUint","nameLocation":"5754:12:16","nodeType":"FunctionDefinition","parameters":{"id":2251,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2250,"mutability":"mutable","name":"input","nameLocation":"5781:5:16","nodeType":"VariableDeclaration","scope":2268,"src":"5767:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2249,"name":"string","nodeType":"ElementaryTypeName","src":"5767:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5766:21:16"},"returnParameters":{"id":2256,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2253,"mutability":"mutable","name":"success","nameLocation":"5816:7:16","nodeType":"VariableDeclaration","scope":2268,"src":"5811:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2252,"name":"bool","nodeType":"ElementaryTypeName","src":"5811:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2255,"mutability":"mutable","name":"value","nameLocation":"5833:5:16","nodeType":"VariableDeclaration","scope":2268,"src":"5825:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2254,"name":"uint256","nodeType":"ElementaryTypeName","src":"5825:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5810:29:16"},"scope":3234,"src":"5745:178:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2304,"nodeType":"Block","src":"6325:144:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2282,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2275,"src":"6339:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2285,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2271,"src":"6351:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2284,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6345:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2283,"name":"bytes","nodeType":"ElementaryTypeName","src":"6345:5:16","typeDescriptions":{}}},"id":2286,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6345:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6358:6:16","memberName":"length","nodeType":"MemberAccess","src":"6345:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6339:25:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2289,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2273,"src":"6368:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2290,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2275,"src":"6376:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6368:11:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6339:40:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2297,"nodeType":"IfStatement","src":"6335:63:16","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2293,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6389:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2294,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6396:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2295,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6388:10:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2281,"id":2296,"nodeType":"Return","src":"6381:17:16"}},{"expression":{"arguments":[{"id":2299,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2271,"src":"6444:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2300,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2273,"src":"6451:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2301,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2275,"src":"6458:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2298,"name":"_tryParseUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2375,"src":"6415:28:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2302,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6415:47:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2281,"id":2303,"nodeType":"Return","src":"6408:54:16"}]},"documentation":{"id":2269,"nodeType":"StructuredDocumentation","src":"5929:238:16","text":" @dev Variant of {parseUint-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":2305,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseUint","nameLocation":"6181:12:16","nodeType":"FunctionDefinition","parameters":{"id":2276,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2271,"mutability":"mutable","name":"input","nameLocation":"6217:5:16","nodeType":"VariableDeclaration","scope":2305,"src":"6203:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2270,"name":"string","nodeType":"ElementaryTypeName","src":"6203:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2273,"mutability":"mutable","name":"begin","nameLocation":"6240:5:16","nodeType":"VariableDeclaration","scope":2305,"src":"6232:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2272,"name":"uint256","nodeType":"ElementaryTypeName","src":"6232:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2275,"mutability":"mutable","name":"end","nameLocation":"6263:3:16","nodeType":"VariableDeclaration","scope":2305,"src":"6255:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2274,"name":"uint256","nodeType":"ElementaryTypeName","src":"6255:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6193:79:16"},"returnParameters":{"id":2281,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2278,"mutability":"mutable","name":"success","nameLocation":"6301:7:16","nodeType":"VariableDeclaration","scope":2305,"src":"6296:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2277,"name":"bool","nodeType":"ElementaryTypeName","src":"6296:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2280,"mutability":"mutable","name":"value","nameLocation":"6318:5:16","nodeType":"VariableDeclaration","scope":2305,"src":"6310:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2279,"name":"uint256","nodeType":"ElementaryTypeName","src":"6310:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6295:29:16"},"scope":3234,"src":"6172:297:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2374,"nodeType":"Block","src":"6872:347:16","statements":[{"assignments":[2320],"declarations":[{"constant":false,"id":2320,"mutability":"mutable","name":"buffer","nameLocation":"6895:6:16","nodeType":"VariableDeclaration","scope":2374,"src":"6882:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2319,"name":"bytes","nodeType":"ElementaryTypeName","src":"6882:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2325,"initialValue":{"arguments":[{"id":2323,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2308,"src":"6910:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2322,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6904:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2321,"name":"bytes","nodeType":"ElementaryTypeName","src":"6904:5:16","typeDescriptions":{}}},"id":2324,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6904:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"6882:34:16"},{"assignments":[2327],"declarations":[{"constant":false,"id":2327,"mutability":"mutable","name":"result","nameLocation":"6935:6:16","nodeType":"VariableDeclaration","scope":2374,"src":"6927:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2326,"name":"uint256","nodeType":"ElementaryTypeName","src":"6927:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2329,"initialValue":{"hexValue":"30","id":2328,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6944:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6927:18:16"},{"body":{"id":2368,"nodeType":"Block","src":"6993:189:16","statements":[{"assignments":[2341],"declarations":[{"constant":false,"id":2341,"mutability":"mutable","name":"chr","nameLocation":"7013:3:16","nodeType":"VariableDeclaration","scope":2368,"src":"7007:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2340,"name":"uint8","nodeType":"ElementaryTypeName","src":"7007:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2351,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":2346,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2320,"src":"7062:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2347,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2331,"src":"7070:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2345,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3233,"src":"7039:22:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":2348,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7039:33:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2344,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7032:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2343,"name":"bytes1","nodeType":"ElementaryTypeName","src":"7032:6:16","typeDescriptions":{}}},"id":2349,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7032:41:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":2342,"name":"_tryParseChr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3055,"src":"7019:12:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes1_$returns$_t_uint8_$","typeString":"function (bytes1) pure returns (uint8)"}},"id":2350,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7019:55:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"7007:67:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2352,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2341,"src":"7092:3:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"39","id":2353,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7098:1:16","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"9"},"src":"7092:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2359,"nodeType":"IfStatement","src":"7088:30:16","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2355,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7109:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2356,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7116:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2357,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"7108:10:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2318,"id":2358,"nodeType":"Return","src":"7101:17:16"}},{"expression":{"id":2362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2360,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2327,"src":"7132:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"hexValue":"3130","id":2361,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7142:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"7132:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2363,"nodeType":"ExpressionStatement","src":"7132:12:16"},{"expression":{"id":2366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2364,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2327,"src":"7158:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2365,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2341,"src":"7168:3:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"7158:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2367,"nodeType":"ExpressionStatement","src":"7158:13:16"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2334,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2331,"src":"6979:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2335,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2312,"src":"6983:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6979:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2369,"initializationExpression":{"assignments":[2331],"declarations":[{"constant":false,"id":2331,"mutability":"mutable","name":"i","nameLocation":"6968:1:16","nodeType":"VariableDeclaration","scope":2369,"src":"6960:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2330,"name":"uint256","nodeType":"ElementaryTypeName","src":"6960:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2333,"initialValue":{"id":2332,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2310,"src":"6972:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6960:17:16"},"loopExpression":{"expression":{"id":2338,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"6988:3:16","subExpression":{"id":2337,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2331,"src":"6990:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2339,"nodeType":"ExpressionStatement","src":"6988:3:16"},"nodeType":"ForStatement","src":"6955:227:16"},{"expression":{"components":[{"hexValue":"74727565","id":2370,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7199:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":2371,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2327,"src":"7205:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2372,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7198:14:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2318,"id":2373,"nodeType":"Return","src":"7191:21:16"}]},"documentation":{"id":2306,"nodeType":"StructuredDocumentation","src":"6475:224:16","text":" @dev Implementation of {tryParseUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":2375,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseUintUncheckedBounds","nameLocation":"6713:28:16","nodeType":"FunctionDefinition","parameters":{"id":2313,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2308,"mutability":"mutable","name":"input","nameLocation":"6765:5:16","nodeType":"VariableDeclaration","scope":2375,"src":"6751:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2307,"name":"string","nodeType":"ElementaryTypeName","src":"6751:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2310,"mutability":"mutable","name":"begin","nameLocation":"6788:5:16","nodeType":"VariableDeclaration","scope":2375,"src":"6780:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2309,"name":"uint256","nodeType":"ElementaryTypeName","src":"6780:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2312,"mutability":"mutable","name":"end","nameLocation":"6811:3:16","nodeType":"VariableDeclaration","scope":2375,"src":"6803:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2311,"name":"uint256","nodeType":"ElementaryTypeName","src":"6803:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6741:79:16"},"returnParameters":{"id":2318,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2315,"mutability":"mutable","name":"success","nameLocation":"6848:7:16","nodeType":"VariableDeclaration","scope":2375,"src":"6843:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2314,"name":"bool","nodeType":"ElementaryTypeName","src":"6843:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2317,"mutability":"mutable","name":"value","nameLocation":"6865:5:16","nodeType":"VariableDeclaration","scope":2375,"src":"6857:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2316,"name":"uint256","nodeType":"ElementaryTypeName","src":"6857:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6842:29:16"},"scope":3234,"src":"6704:515:16","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2393,"nodeType":"Block","src":"7516:63:16","statements":[{"expression":{"arguments":[{"id":2384,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2378,"src":"7542:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2385,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7549:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2388,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2378,"src":"7558:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2387,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7552:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2386,"name":"bytes","nodeType":"ElementaryTypeName","src":"7552:5:16","typeDescriptions":{}}},"id":2389,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7552:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7565:6:16","memberName":"length","nodeType":"MemberAccess","src":"7552:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2383,"name":"parseInt","nodeType":"Identifier","overloadedDeclarations":[2394,2425],"referencedDeclaration":2425,"src":"7533:8:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (int256)"}},"id":2391,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7533:39:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":2382,"id":2392,"nodeType":"Return","src":"7526:46:16"}]},"documentation":{"id":2376,"nodeType":"StructuredDocumentation","src":"7225:216:16","text":" @dev Parse a decimal string and returns the value as a `int256`.\n Requirements:\n - The string must be formatted as `[-+]?[0-9]*`\n - The result must fit in an `int256` type."},"id":2394,"implemented":true,"kind":"function","modifiers":[],"name":"parseInt","nameLocation":"7455:8:16","nodeType":"FunctionDefinition","parameters":{"id":2379,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2378,"mutability":"mutable","name":"input","nameLocation":"7478:5:16","nodeType":"VariableDeclaration","scope":2394,"src":"7464:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2377,"name":"string","nodeType":"ElementaryTypeName","src":"7464:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7463:21:16"},"returnParameters":{"id":2382,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2381,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2394,"src":"7508:6:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2380,"name":"int256","nodeType":"ElementaryTypeName","src":"7508:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"7507:8:16"},"scope":3234,"src":"7446:133:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2424,"nodeType":"Block","src":"7984:151:16","statements":[{"assignments":[2407,2409],"declarations":[{"constant":false,"id":2407,"mutability":"mutable","name":"success","nameLocation":"8000:7:16","nodeType":"VariableDeclaration","scope":2424,"src":"7995:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2406,"name":"bool","nodeType":"ElementaryTypeName","src":"7995:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2409,"mutability":"mutable","name":"value","nameLocation":"8016:5:16","nodeType":"VariableDeclaration","scope":2424,"src":"8009:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2408,"name":"int256","nodeType":"ElementaryTypeName","src":"8009:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":2415,"initialValue":{"arguments":[{"id":2411,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2397,"src":"8037:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2412,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2399,"src":"8044:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2413,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2401,"src":"8051:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2410,"name":"tryParseInt","nodeType":"Identifier","overloadedDeclarations":[2446,2488],"referencedDeclaration":2488,"src":"8025:11:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":2414,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8025:30:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"nodeType":"VariableDeclarationStatement","src":"7994:61:16"},{"condition":{"id":2417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"8069:8:16","subExpression":{"id":2416,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2407,"src":"8070:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2421,"nodeType":"IfStatement","src":"8065:41:16","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2418,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1895,"src":"8086:18:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2419,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8086:20:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2420,"nodeType":"RevertStatement","src":"8079:27:16"}},{"expression":{"id":2422,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2409,"src":"8123:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":2405,"id":2423,"nodeType":"Return","src":"8116:12:16"}]},"documentation":{"id":2395,"nodeType":"StructuredDocumentation","src":"7585:296:16","text":" @dev Variant of {parseInt-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `[-+]?[0-9]*`\n - The result must fit in an `int256` type."},"id":2425,"implemented":true,"kind":"function","modifiers":[],"name":"parseInt","nameLocation":"7895:8:16","nodeType":"FunctionDefinition","parameters":{"id":2402,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2397,"mutability":"mutable","name":"input","nameLocation":"7918:5:16","nodeType":"VariableDeclaration","scope":2425,"src":"7904:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2396,"name":"string","nodeType":"ElementaryTypeName","src":"7904:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2399,"mutability":"mutable","name":"begin","nameLocation":"7933:5:16","nodeType":"VariableDeclaration","scope":2425,"src":"7925:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2398,"name":"uint256","nodeType":"ElementaryTypeName","src":"7925:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2401,"mutability":"mutable","name":"end","nameLocation":"7948:3:16","nodeType":"VariableDeclaration","scope":2425,"src":"7940:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2400,"name":"uint256","nodeType":"ElementaryTypeName","src":"7940:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7903:49:16"},"returnParameters":{"id":2405,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2404,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2425,"src":"7976:6:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2403,"name":"int256","nodeType":"ElementaryTypeName","src":"7976:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"7975:8:16"},"scope":3234,"src":"7886:249:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2445,"nodeType":"Block","src":"8526:82:16","statements":[{"expression":{"arguments":[{"id":2436,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2428,"src":"8571:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2437,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8578:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2440,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2428,"src":"8587:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2439,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8581:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2438,"name":"bytes","nodeType":"ElementaryTypeName","src":"8581:5:16","typeDescriptions":{}}},"id":2441,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8581:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2442,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8594:6:16","memberName":"length","nodeType":"MemberAccess","src":"8581:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2435,"name":"_tryParseIntUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2609,"src":"8543:27:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":2443,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8543:58:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":2434,"id":2444,"nodeType":"Return","src":"8536:65:16"}]},"documentation":{"id":2426,"nodeType":"StructuredDocumentation","src":"8141:287:16","text":" @dev Variant of {parseInt-string} that returns false if the parsing fails because of an invalid character or if\n the result does not fit in a `int256`.\n NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`."},"id":2446,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseInt","nameLocation":"8442:11:16","nodeType":"FunctionDefinition","parameters":{"id":2429,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2428,"mutability":"mutable","name":"input","nameLocation":"8468:5:16","nodeType":"VariableDeclaration","scope":2446,"src":"8454:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2427,"name":"string","nodeType":"ElementaryTypeName","src":"8454:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8453:21:16"},"returnParameters":{"id":2434,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2431,"mutability":"mutable","name":"success","nameLocation":"8503:7:16","nodeType":"VariableDeclaration","scope":2446,"src":"8498:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2430,"name":"bool","nodeType":"ElementaryTypeName","src":"8498:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2433,"mutability":"mutable","name":"value","nameLocation":"8519:5:16","nodeType":"VariableDeclaration","scope":2446,"src":"8512:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2432,"name":"int256","nodeType":"ElementaryTypeName","src":"8512:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"8497:28:16"},"scope":3234,"src":"8433:175:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"constant":true,"id":2451,"mutability":"constant","name":"ABS_MIN_INT256","nameLocation":"8639:14:16","nodeType":"VariableDeclaration","scope":3234,"src":"8614:50:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2447,"name":"uint256","nodeType":"ElementaryTypeName","src":"8614:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1","typeString":"int_const 5789...(69 digits omitted)...9968"},"id":2450,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2448,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8656:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"323535","id":2449,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8661:3:16","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"8656:8:16","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1","typeString":"int_const 5789...(69 digits omitted)...9968"}},"visibility":"private"},{"body":{"id":2487,"nodeType":"Block","src":"9130:143:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2465,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2458,"src":"9144:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2468,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2454,"src":"9156:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2467,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9150:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2466,"name":"bytes","nodeType":"ElementaryTypeName","src":"9150:5:16","typeDescriptions":{}}},"id":2469,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9150:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2470,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9163:6:16","memberName":"length","nodeType":"MemberAccess","src":"9150:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9144:25:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2472,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2456,"src":"9173:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2473,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2458,"src":"9181:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9173:11:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9144:40:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2480,"nodeType":"IfStatement","src":"9140:63:16","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2476,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9194:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2477,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9201:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2478,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"9193:10:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2464,"id":2479,"nodeType":"Return","src":"9186:17:16"}},{"expression":{"arguments":[{"id":2482,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2454,"src":"9248:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2483,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2456,"src":"9255:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2484,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2458,"src":"9262:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2481,"name":"_tryParseIntUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2609,"src":"9220:27:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":2485,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9220:46:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":2464,"id":2486,"nodeType":"Return","src":"9213:53:16"}]},"documentation":{"id":2452,"nodeType":"StructuredDocumentation","src":"8671:303:16","text":" @dev Variant of {parseInt-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n character or if the result does not fit in a `int256`.\n NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`."},"id":2488,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseInt","nameLocation":"8988:11:16","nodeType":"FunctionDefinition","parameters":{"id":2459,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2454,"mutability":"mutable","name":"input","nameLocation":"9023:5:16","nodeType":"VariableDeclaration","scope":2488,"src":"9009:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2453,"name":"string","nodeType":"ElementaryTypeName","src":"9009:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2456,"mutability":"mutable","name":"begin","nameLocation":"9046:5:16","nodeType":"VariableDeclaration","scope":2488,"src":"9038:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2455,"name":"uint256","nodeType":"ElementaryTypeName","src":"9038:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2458,"mutability":"mutable","name":"end","nameLocation":"9069:3:16","nodeType":"VariableDeclaration","scope":2488,"src":"9061:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2457,"name":"uint256","nodeType":"ElementaryTypeName","src":"9061:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8999:79:16"},"returnParameters":{"id":2464,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2461,"mutability":"mutable","name":"success","nameLocation":"9107:7:16","nodeType":"VariableDeclaration","scope":2488,"src":"9102:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2460,"name":"bool","nodeType":"ElementaryTypeName","src":"9102:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2463,"mutability":"mutable","name":"value","nameLocation":"9123:5:16","nodeType":"VariableDeclaration","scope":2488,"src":"9116:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2462,"name":"int256","nodeType":"ElementaryTypeName","src":"9116:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"9101:28:16"},"scope":3234,"src":"8979:294:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2608,"nodeType":"Block","src":"9673:812:16","statements":[{"assignments":[2503],"declarations":[{"constant":false,"id":2503,"mutability":"mutable","name":"buffer","nameLocation":"9696:6:16","nodeType":"VariableDeclaration","scope":2608,"src":"9683:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2502,"name":"bytes","nodeType":"ElementaryTypeName","src":"9683:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2508,"initialValue":{"arguments":[{"id":2506,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2491,"src":"9711:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2505,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9705:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2504,"name":"bytes","nodeType":"ElementaryTypeName","src":"9705:5:16","typeDescriptions":{}}},"id":2507,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9705:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"9683:34:16"},{"assignments":[2510],"declarations":[{"constant":false,"id":2510,"mutability":"mutable","name":"sign","nameLocation":"9781:4:16","nodeType":"VariableDeclaration","scope":2608,"src":"9774:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":2509,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9774:6:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"id":2526,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2511,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2493,"src":"9788:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2512,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2495,"src":"9797:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9788:12:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"arguments":[{"id":2521,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2503,"src":"9845:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2522,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2493,"src":"9853:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2520,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3233,"src":"9822:22:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":2523,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9822:37:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2519,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9815:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2518,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9815:6:16","typeDescriptions":{}}},"id":2524,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9815:45:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9788:72:16","trueExpression":{"arguments":[{"hexValue":"30","id":2516,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9810:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2515,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9803:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2514,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9803:6:16","typeDescriptions":{}}},"id":2517,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9803:9:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"VariableDeclarationStatement","src":"9774:86:16"},{"assignments":[2528],"declarations":[{"constant":false,"id":2528,"mutability":"mutable","name":"positiveSign","nameLocation":"9946:12:16","nodeType":"VariableDeclaration","scope":2608,"src":"9941:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2527,"name":"bool","nodeType":"ElementaryTypeName","src":"9941:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2535,"initialValue":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":2534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2529,"name":"sign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2510,"src":"9961:4:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"2b","id":2532,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9976:3:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_728b8dbbe730d9acd55e30e768e6a28a04bea0c61b88108287c2c87d79c98bb8","typeString":"literal_string \"+\""},"value":"+"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_728b8dbbe730d9acd55e30e768e6a28a04bea0c61b88108287c2c87d79c98bb8","typeString":"literal_string \"+\""}],"id":2531,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9969:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2530,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9969:6:16","typeDescriptions":{}}},"id":2533,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9969:11:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"9961:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"9941:39:16"},{"assignments":[2537],"declarations":[{"constant":false,"id":2537,"mutability":"mutable","name":"negativeSign","nameLocation":"9995:12:16","nodeType":"VariableDeclaration","scope":2608,"src":"9990:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2536,"name":"bool","nodeType":"ElementaryTypeName","src":"9990:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2544,"initialValue":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":2543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2538,"name":"sign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2510,"src":"10010:4:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"2d","id":2541,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10025:3:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""}],"id":2540,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10018:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2539,"name":"bytes1","nodeType":"ElementaryTypeName","src":"10018:6:16","typeDescriptions":{}}},"id":2542,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10018:11:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"10010:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"9990:39:16"},{"assignments":[2546],"declarations":[{"constant":false,"id":2546,"mutability":"mutable","name":"offset","nameLocation":"10047:6:16","nodeType":"VariableDeclaration","scope":2608,"src":"10039:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2545,"name":"uint256","nodeType":"ElementaryTypeName","src":"10039:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2553,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2547,"name":"positiveSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2528,"src":"10057:12:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"id":2548,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2537,"src":"10073:12:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10057:28:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2550,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10056:30:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10087:6:16","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7280,"src":"10056:37:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":2552,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10056:39:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10039:56:16"},{"assignments":[2555,2557],"declarations":[{"constant":false,"id":2555,"mutability":"mutable","name":"absSuccess","nameLocation":"10112:10:16","nodeType":"VariableDeclaration","scope":2608,"src":"10107:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2554,"name":"bool","nodeType":"ElementaryTypeName","src":"10107:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2557,"mutability":"mutable","name":"absValue","nameLocation":"10132:8:16","nodeType":"VariableDeclaration","scope":2608,"src":"10124:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2556,"name":"uint256","nodeType":"ElementaryTypeName","src":"10124:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2565,"initialValue":{"arguments":[{"id":2559,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2491,"src":"10157:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2560,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2493,"src":"10164:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2561,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2546,"src":"10172:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10164:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2563,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2495,"src":"10180:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2558,"name":"tryParseUint","nodeType":"Identifier","overloadedDeclarations":[2268,2305],"referencedDeclaration":2305,"src":"10144:12:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2564,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10144:40:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"10106:78:16"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2566,"name":"absSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2555,"src":"10199:10:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2567,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2557,"src":"10213:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2568,"name":"ABS_MIN_INT256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2451,"src":"10224:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10213:25:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10199:39:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2592,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2588,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2586,"name":"absSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2555,"src":"10341:10:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":2587,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2537,"src":"10355:12:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10341:26:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2591,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2589,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2557,"src":"10371:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2590,"name":"ABS_MIN_INT256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2451,"src":"10383:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10371:26:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10341:56:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2602,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10469:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2603,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10476:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2604,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"10468:10:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2501,"id":2605,"nodeType":"Return","src":"10461:17:16"},"id":2606,"nodeType":"IfStatement","src":"10337:141:16","trueBody":{"id":2601,"nodeType":"Block","src":"10399:56:16","statements":[{"expression":{"components":[{"hexValue":"74727565","id":2593,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10421:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"expression":{"arguments":[{"id":2596,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10432:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":2595,"name":"int256","nodeType":"ElementaryTypeName","src":"10432:6:16","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":2594,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10427:4:16","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2597,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10427:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":2598,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10440:3:16","memberName":"min","nodeType":"MemberAccess","src":"10427:16:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":2599,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"10420:24:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":2501,"id":2600,"nodeType":"Return","src":"10413:31:16"}]}},"id":2607,"nodeType":"IfStatement","src":"10195:283:16","trueBody":{"id":2585,"nodeType":"Block","src":"10240:91:16","statements":[{"expression":{"components":[{"hexValue":"74727565","id":2571,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10262:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"condition":{"id":2572,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2537,"src":"10268:12:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"id":2580,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2557,"src":"10310:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2579,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10303:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":2578,"name":"int256","nodeType":"ElementaryTypeName","src":"10303:6:16","typeDescriptions":{}}},"id":2581,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10303:16:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":2582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"10268:51:16","trueExpression":{"id":2577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"10283:17:16","subExpression":{"arguments":[{"id":2575,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2557,"src":"10291:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2574,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10284:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":2573,"name":"int256","nodeType":"ElementaryTypeName","src":"10284:6:16","typeDescriptions":{}}},"id":2576,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10284:16:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":2583,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10261:59:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":2501,"id":2584,"nodeType":"Return","src":"10254:66:16"}]}}]},"documentation":{"id":2489,"nodeType":"StructuredDocumentation","src":"9279:223:16","text":" @dev Implementation of {tryParseInt-string-uint256-uint256} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":2609,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseIntUncheckedBounds","nameLocation":"9516:27:16","nodeType":"FunctionDefinition","parameters":{"id":2496,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2491,"mutability":"mutable","name":"input","nameLocation":"9567:5:16","nodeType":"VariableDeclaration","scope":2609,"src":"9553:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2490,"name":"string","nodeType":"ElementaryTypeName","src":"9553:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2493,"mutability":"mutable","name":"begin","nameLocation":"9590:5:16","nodeType":"VariableDeclaration","scope":2609,"src":"9582:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2492,"name":"uint256","nodeType":"ElementaryTypeName","src":"9582:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2495,"mutability":"mutable","name":"end","nameLocation":"9613:3:16","nodeType":"VariableDeclaration","scope":2609,"src":"9605:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2494,"name":"uint256","nodeType":"ElementaryTypeName","src":"9605:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9543:79:16"},"returnParameters":{"id":2501,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2498,"mutability":"mutable","name":"success","nameLocation":"9650:7:16","nodeType":"VariableDeclaration","scope":2609,"src":"9645:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2497,"name":"bool","nodeType":"ElementaryTypeName","src":"9645:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2500,"mutability":"mutable","name":"value","nameLocation":"9666:5:16","nodeType":"VariableDeclaration","scope":2609,"src":"9659:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2499,"name":"int256","nodeType":"ElementaryTypeName","src":"9659:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"9644:28:16"},"scope":3234,"src":"9507:978:16","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2627,"nodeType":"Block","src":"10830:67:16","statements":[{"expression":{"arguments":[{"id":2618,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2612,"src":"10860:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2619,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10867:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2622,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2612,"src":"10876:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2621,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10870:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2620,"name":"bytes","nodeType":"ElementaryTypeName","src":"10870:5:16","typeDescriptions":{}}},"id":2623,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10870:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10883:6:16","memberName":"length","nodeType":"MemberAccess","src":"10870:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2617,"name":"parseHexUint","nodeType":"Identifier","overloadedDeclarations":[2628,2659],"referencedDeclaration":2659,"src":"10847:12:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (uint256)"}},"id":2625,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10847:43:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2616,"id":2626,"nodeType":"Return","src":"10840:50:16"}]},"documentation":{"id":2610,"nodeType":"StructuredDocumentation","src":"10491:259:16","text":" @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as a `uint256`.\n Requirements:\n - The string must be formatted as `(0x)?[0-9a-fA-F]*`\n - The result must fit in an `uint256` type."},"id":2628,"implemented":true,"kind":"function","modifiers":[],"name":"parseHexUint","nameLocation":"10764:12:16","nodeType":"FunctionDefinition","parameters":{"id":2613,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2612,"mutability":"mutable","name":"input","nameLocation":"10791:5:16","nodeType":"VariableDeclaration","scope":2628,"src":"10777:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2611,"name":"string","nodeType":"ElementaryTypeName","src":"10777:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10776:21:16"},"returnParameters":{"id":2616,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2615,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2628,"src":"10821:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2614,"name":"uint256","nodeType":"ElementaryTypeName","src":"10821:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10820:9:16"},"scope":3234,"src":"10755:142:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2658,"nodeType":"Block","src":"11318:156:16","statements":[{"assignments":[2641,2643],"declarations":[{"constant":false,"id":2641,"mutability":"mutable","name":"success","nameLocation":"11334:7:16","nodeType":"VariableDeclaration","scope":2658,"src":"11329:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2640,"name":"bool","nodeType":"ElementaryTypeName","src":"11329:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2643,"mutability":"mutable","name":"value","nameLocation":"11351:5:16","nodeType":"VariableDeclaration","scope":2658,"src":"11343:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2642,"name":"uint256","nodeType":"ElementaryTypeName","src":"11343:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2649,"initialValue":{"arguments":[{"id":2645,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2631,"src":"11376:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2646,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2633,"src":"11383:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2647,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2635,"src":"11390:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2644,"name":"tryParseHexUint","nodeType":"Identifier","overloadedDeclarations":[2680,2717],"referencedDeclaration":2717,"src":"11360:15:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2648,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11360:34:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"11328:66:16"},{"condition":{"id":2651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"11408:8:16","subExpression":{"id":2650,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2641,"src":"11409:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2655,"nodeType":"IfStatement","src":"11404:41:16","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2652,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1895,"src":"11425:18:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2653,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11425:20:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2654,"nodeType":"RevertStatement","src":"11418:27:16"}},{"expression":{"id":2656,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2643,"src":"11462:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2639,"id":2657,"nodeType":"Return","src":"11455:12:16"}]},"documentation":{"id":2629,"nodeType":"StructuredDocumentation","src":"10903:307:16","text":" @dev Variant of {parseHexUint-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `(0x)?[0-9a-fA-F]*`\n - The result must fit in an `uint256` type."},"id":2659,"implemented":true,"kind":"function","modifiers":[],"name":"parseHexUint","nameLocation":"11224:12:16","nodeType":"FunctionDefinition","parameters":{"id":2636,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2631,"mutability":"mutable","name":"input","nameLocation":"11251:5:16","nodeType":"VariableDeclaration","scope":2659,"src":"11237:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2630,"name":"string","nodeType":"ElementaryTypeName","src":"11237:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2633,"mutability":"mutable","name":"begin","nameLocation":"11266:5:16","nodeType":"VariableDeclaration","scope":2659,"src":"11258:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2632,"name":"uint256","nodeType":"ElementaryTypeName","src":"11258:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2635,"mutability":"mutable","name":"end","nameLocation":"11281:3:16","nodeType":"VariableDeclaration","scope":2659,"src":"11273:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2634,"name":"uint256","nodeType":"ElementaryTypeName","src":"11273:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11236:49:16"},"returnParameters":{"id":2639,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2638,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2659,"src":"11309:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2637,"name":"uint256","nodeType":"ElementaryTypeName","src":"11309:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11308:9:16"},"scope":3234,"src":"11215:259:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2679,"nodeType":"Block","src":"11801:86:16","statements":[{"expression":{"arguments":[{"id":2670,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2662,"src":"11850:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2671,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11857:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2674,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2662,"src":"11866:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2673,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11860:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2672,"name":"bytes","nodeType":"ElementaryTypeName","src":"11860:5:16","typeDescriptions":{}}},"id":2675,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11860:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11873:6:16","memberName":"length","nodeType":"MemberAccess","src":"11860:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2669,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2820,"src":"11818:31:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2677,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11818:62:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2668,"id":2678,"nodeType":"Return","src":"11811:69:16"}]},"documentation":{"id":2660,"nodeType":"StructuredDocumentation","src":"11480:218:16","text":" @dev Variant of {parseHexUint-string} that returns false if the parsing fails because of an invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":2680,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseHexUint","nameLocation":"11712:15:16","nodeType":"FunctionDefinition","parameters":{"id":2663,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2662,"mutability":"mutable","name":"input","nameLocation":"11742:5:16","nodeType":"VariableDeclaration","scope":2680,"src":"11728:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2661,"name":"string","nodeType":"ElementaryTypeName","src":"11728:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"11727:21:16"},"returnParameters":{"id":2668,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2665,"mutability":"mutable","name":"success","nameLocation":"11777:7:16","nodeType":"VariableDeclaration","scope":2680,"src":"11772:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2664,"name":"bool","nodeType":"ElementaryTypeName","src":"11772:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2667,"mutability":"mutable","name":"value","nameLocation":"11794:5:16","nodeType":"VariableDeclaration","scope":2680,"src":"11786:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2666,"name":"uint256","nodeType":"ElementaryTypeName","src":"11786:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11771:29:16"},"scope":3234,"src":"11703:184:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2716,"nodeType":"Block","src":"12295:147:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2694,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2687,"src":"12309:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2697,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2683,"src":"12321:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2696,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12315:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2695,"name":"bytes","nodeType":"ElementaryTypeName","src":"12315:5:16","typeDescriptions":{}}},"id":2698,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12315:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2699,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12328:6:16","memberName":"length","nodeType":"MemberAccess","src":"12315:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12309:25:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2701,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2685,"src":"12338:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2702,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2687,"src":"12346:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12338:11:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12309:40:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2709,"nodeType":"IfStatement","src":"12305:63:16","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2705,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12359:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2706,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12366:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2707,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"12358:10:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2693,"id":2708,"nodeType":"Return","src":"12351:17:16"}},{"expression":{"arguments":[{"id":2711,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2683,"src":"12417:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2712,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2685,"src":"12424:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2713,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2687,"src":"12431:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2710,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2820,"src":"12385:31:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2714,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12385:50:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2693,"id":2715,"nodeType":"Return","src":"12378:57:16"}]},"documentation":{"id":2681,"nodeType":"StructuredDocumentation","src":"11893:241:16","text":" @dev Variant of {parseHexUint-string-uint256-uint256} that returns false if the parsing fails because of an\n invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":2717,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseHexUint","nameLocation":"12148:15:16","nodeType":"FunctionDefinition","parameters":{"id":2688,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2683,"mutability":"mutable","name":"input","nameLocation":"12187:5:16","nodeType":"VariableDeclaration","scope":2717,"src":"12173:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2682,"name":"string","nodeType":"ElementaryTypeName","src":"12173:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2685,"mutability":"mutable","name":"begin","nameLocation":"12210:5:16","nodeType":"VariableDeclaration","scope":2717,"src":"12202:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2684,"name":"uint256","nodeType":"ElementaryTypeName","src":"12202:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2687,"mutability":"mutable","name":"end","nameLocation":"12233:3:16","nodeType":"VariableDeclaration","scope":2717,"src":"12225:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2686,"name":"uint256","nodeType":"ElementaryTypeName","src":"12225:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12163:79:16"},"returnParameters":{"id":2693,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2690,"mutability":"mutable","name":"success","nameLocation":"12271:7:16","nodeType":"VariableDeclaration","scope":2717,"src":"12266:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2689,"name":"bool","nodeType":"ElementaryTypeName","src":"12266:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2692,"mutability":"mutable","name":"value","nameLocation":"12288:5:16","nodeType":"VariableDeclaration","scope":2717,"src":"12280:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2691,"name":"uint256","nodeType":"ElementaryTypeName","src":"12280:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12265:29:16"},"scope":3234,"src":"12139:303:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2819,"nodeType":"Block","src":"12851:881:16","statements":[{"assignments":[2732],"declarations":[{"constant":false,"id":2732,"mutability":"mutable","name":"buffer","nameLocation":"12874:6:16","nodeType":"VariableDeclaration","scope":2819,"src":"12861:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2731,"name":"bytes","nodeType":"ElementaryTypeName","src":"12861:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2737,"initialValue":{"arguments":[{"id":2735,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2720,"src":"12889:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2734,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12883:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2733,"name":"bytes","nodeType":"ElementaryTypeName","src":"12883:5:16","typeDescriptions":{}}},"id":2736,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12883:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"12861:34:16"},{"assignments":[2739],"declarations":[{"constant":false,"id":2739,"mutability":"mutable","name":"hasPrefix","nameLocation":"12948:9:16","nodeType":"VariableDeclaration","scope":2819,"src":"12943:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2738,"name":"bool","nodeType":"ElementaryTypeName","src":"12943:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2759,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2758,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2744,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2740,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2724,"src":"12961:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2741,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2722,"src":"12967:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2742,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12975:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12967:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12961:15:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2745,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12960:17:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes2","typeString":"bytes2"},"id":2757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":2749,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2732,"src":"13011:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2750,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2722,"src":"13019:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2748,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3233,"src":"12988:22:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":2751,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12988:37:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2747,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12981:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":2746,"name":"bytes2","nodeType":"ElementaryTypeName","src":"12981:6:16","typeDescriptions":{}}},"id":2752,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12981:45:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"3078","id":2755,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13037:4:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""},"value":"0x"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""}],"id":2754,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13030:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":2753,"name":"bytes2","nodeType":"ElementaryTypeName","src":"13030:6:16","typeDescriptions":{}}},"id":2756,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13030:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"src":"12981:61:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12960:82:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"12943:99:16"},{"assignments":[2761],"declarations":[{"constant":false,"id":2761,"mutability":"mutable","name":"offset","nameLocation":"13131:6:16","nodeType":"VariableDeclaration","scope":2819,"src":"13123:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2760,"name":"uint256","nodeType":"ElementaryTypeName","src":"13123:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2767,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2762,"name":"hasPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2739,"src":"13140:9:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13150:6:16","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7280,"src":"13140:16:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":2764,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13140:18:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":2765,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13161:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"13140:22:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13123:39:16"},{"assignments":[2769],"declarations":[{"constant":false,"id":2769,"mutability":"mutable","name":"result","nameLocation":"13181:6:16","nodeType":"VariableDeclaration","scope":2819,"src":"13173:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2768,"name":"uint256","nodeType":"ElementaryTypeName","src":"13173:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2771,"initialValue":{"hexValue":"30","id":2770,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13190:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13173:18:16"},{"body":{"id":2813,"nodeType":"Block","src":"13248:447:16","statements":[{"assignments":[2785],"declarations":[{"constant":false,"id":2785,"mutability":"mutable","name":"chr","nameLocation":"13268:3:16","nodeType":"VariableDeclaration","scope":2813,"src":"13262:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2784,"name":"uint8","nodeType":"ElementaryTypeName","src":"13262:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2795,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":2790,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2732,"src":"13317:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2791,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2773,"src":"13325:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2789,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3233,"src":"13294:22:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":2792,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13294:33:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2788,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13287:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2787,"name":"bytes1","nodeType":"ElementaryTypeName","src":"13287:6:16","typeDescriptions":{}}},"id":2793,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13287:41:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":2786,"name":"_tryParseChr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3055,"src":"13274:12:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes1_$returns$_t_uint8_$","typeString":"function (bytes1) pure returns (uint8)"}},"id":2794,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13274:55:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"13262:67:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2796,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2785,"src":"13347:3:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3135","id":2797,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13353:2:16","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"15"},"src":"13347:8:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2803,"nodeType":"IfStatement","src":"13343:31:16","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2799,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13365:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2800,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13372:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2801,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"13364:10:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2730,"id":2802,"nodeType":"Return","src":"13357:17:16"}},{"expression":{"id":2806,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2804,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2769,"src":"13388:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"hexValue":"3136","id":2805,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13398:2:16","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"13388:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2807,"nodeType":"ExpressionStatement","src":"13388:12:16"},{"id":2812,"nodeType":"UncheckedBlock","src":"13414:271:16","statements":[{"expression":{"id":2810,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2808,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2769,"src":"13657:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2809,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2785,"src":"13667:3:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"13657:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2811,"nodeType":"ExpressionStatement","src":"13657:13:16"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2778,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2773,"src":"13234:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2779,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2724,"src":"13238:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13234:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2814,"initializationExpression":{"assignments":[2773],"declarations":[{"constant":false,"id":2773,"mutability":"mutable","name":"i","nameLocation":"13214:1:16","nodeType":"VariableDeclaration","scope":2814,"src":"13206:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2772,"name":"uint256","nodeType":"ElementaryTypeName","src":"13206:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2777,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2774,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2722,"src":"13218:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2775,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2761,"src":"13226:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13218:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13206:26:16"},"loopExpression":{"expression":{"id":2782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"13243:3:16","subExpression":{"id":2781,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2773,"src":"13245:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2783,"nodeType":"ExpressionStatement","src":"13243:3:16"},"nodeType":"ForStatement","src":"13201:494:16"},{"expression":{"components":[{"hexValue":"74727565","id":2815,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13712:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":2816,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2769,"src":"13718:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2817,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13711:14:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2730,"id":2818,"nodeType":"Return","src":"13704:21:16"}]},"documentation":{"id":2718,"nodeType":"StructuredDocumentation","src":"12448:227:16","text":" @dev Implementation of {tryParseHexUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":2820,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseHexUintUncheckedBounds","nameLocation":"12689:31:16","nodeType":"FunctionDefinition","parameters":{"id":2725,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2720,"mutability":"mutable","name":"input","nameLocation":"12744:5:16","nodeType":"VariableDeclaration","scope":2820,"src":"12730:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2719,"name":"string","nodeType":"ElementaryTypeName","src":"12730:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2722,"mutability":"mutable","name":"begin","nameLocation":"12767:5:16","nodeType":"VariableDeclaration","scope":2820,"src":"12759:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2721,"name":"uint256","nodeType":"ElementaryTypeName","src":"12759:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2724,"mutability":"mutable","name":"end","nameLocation":"12790:3:16","nodeType":"VariableDeclaration","scope":2820,"src":"12782:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2723,"name":"uint256","nodeType":"ElementaryTypeName","src":"12782:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12720:79:16"},"returnParameters":{"id":2730,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2727,"mutability":"mutable","name":"success","nameLocation":"12827:7:16","nodeType":"VariableDeclaration","scope":2820,"src":"12822:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2726,"name":"bool","nodeType":"ElementaryTypeName","src":"12822:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2729,"mutability":"mutable","name":"value","nameLocation":"12844:5:16","nodeType":"VariableDeclaration","scope":2820,"src":"12836:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2728,"name":"uint256","nodeType":"ElementaryTypeName","src":"12836:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12821:29:16"},"scope":3234,"src":"12680:1052:16","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2838,"nodeType":"Block","src":"14030:67:16","statements":[{"expression":{"arguments":[{"id":2829,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2823,"src":"14060:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2830,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14067:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2833,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2823,"src":"14076:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2832,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14070:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2831,"name":"bytes","nodeType":"ElementaryTypeName","src":"14070:5:16","typeDescriptions":{}}},"id":2834,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14070:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2835,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14083:6:16","memberName":"length","nodeType":"MemberAccess","src":"14070:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2828,"name":"parseAddress","nodeType":"Identifier","overloadedDeclarations":[2839,2870],"referencedDeclaration":2870,"src":"14047:12:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (address)"}},"id":2836,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14047:43:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2827,"id":2837,"nodeType":"Return","src":"14040:50:16"}]},"documentation":{"id":2821,"nodeType":"StructuredDocumentation","src":"13738:212:16","text":" @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as an `address`.\n Requirements:\n - The string must be formatted as `(0x)?[0-9a-fA-F]{40}`"},"id":2839,"implemented":true,"kind":"function","modifiers":[],"name":"parseAddress","nameLocation":"13964:12:16","nodeType":"FunctionDefinition","parameters":{"id":2824,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2823,"mutability":"mutable","name":"input","nameLocation":"13991:5:16","nodeType":"VariableDeclaration","scope":2839,"src":"13977:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2822,"name":"string","nodeType":"ElementaryTypeName","src":"13977:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"13976:21:16"},"returnParameters":{"id":2827,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2826,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2839,"src":"14021:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2825,"name":"address","nodeType":"ElementaryTypeName","src":"14021:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14020:9:16"},"scope":3234,"src":"13955:142:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2869,"nodeType":"Block","src":"14470:165:16","statements":[{"assignments":[2852,2854],"declarations":[{"constant":false,"id":2852,"mutability":"mutable","name":"success","nameLocation":"14486:7:16","nodeType":"VariableDeclaration","scope":2869,"src":"14481:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2851,"name":"bool","nodeType":"ElementaryTypeName","src":"14481:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2854,"mutability":"mutable","name":"value","nameLocation":"14503:5:16","nodeType":"VariableDeclaration","scope":2869,"src":"14495:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2853,"name":"address","nodeType":"ElementaryTypeName","src":"14495:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2860,"initialValue":{"arguments":[{"id":2856,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2842,"src":"14528:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2857,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2844,"src":"14535:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2858,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2846,"src":"14542:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2855,"name":"tryParseAddress","nodeType":"Identifier","overloadedDeclarations":[2891,2995],"referencedDeclaration":2995,"src":"14512:15:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,address)"}},"id":2859,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14512:34:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"nodeType":"VariableDeclarationStatement","src":"14480:66:16"},{"condition":{"id":2862,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"14560:8:16","subExpression":{"id":2861,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2852,"src":"14561:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2866,"nodeType":"IfStatement","src":"14556:50:16","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2863,"name":"StringsInvalidAddressFormat","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1898,"src":"14577:27:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2864,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14577:29:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2865,"nodeType":"RevertStatement","src":"14570:36:16"}},{"expression":{"id":2867,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2854,"src":"14623:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2850,"id":2868,"nodeType":"Return","src":"14616:12:16"}]},"documentation":{"id":2840,"nodeType":"StructuredDocumentation","src":"14103:259:16","text":" @dev Variant of {parseAddress-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `(0x)?[0-9a-fA-F]{40}`"},"id":2870,"implemented":true,"kind":"function","modifiers":[],"name":"parseAddress","nameLocation":"14376:12:16","nodeType":"FunctionDefinition","parameters":{"id":2847,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2842,"mutability":"mutable","name":"input","nameLocation":"14403:5:16","nodeType":"VariableDeclaration","scope":2870,"src":"14389:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2841,"name":"string","nodeType":"ElementaryTypeName","src":"14389:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2844,"mutability":"mutable","name":"begin","nameLocation":"14418:5:16","nodeType":"VariableDeclaration","scope":2870,"src":"14410:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2843,"name":"uint256","nodeType":"ElementaryTypeName","src":"14410:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2846,"mutability":"mutable","name":"end","nameLocation":"14433:3:16","nodeType":"VariableDeclaration","scope":2870,"src":"14425:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2845,"name":"uint256","nodeType":"ElementaryTypeName","src":"14425:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14388:49:16"},"returnParameters":{"id":2850,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2849,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2870,"src":"14461:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2848,"name":"address","nodeType":"ElementaryTypeName","src":"14461:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14460:9:16"},"scope":3234,"src":"14367:268:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2890,"nodeType":"Block","src":"14942:70:16","statements":[{"expression":{"arguments":[{"id":2881,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2873,"src":"14975:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2882,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14982:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2885,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2873,"src":"14991:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2884,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14985:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2883,"name":"bytes","nodeType":"ElementaryTypeName","src":"14985:5:16","typeDescriptions":{}}},"id":2886,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14985:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14998:6:16","memberName":"length","nodeType":"MemberAccess","src":"14985:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2880,"name":"tryParseAddress","nodeType":"Identifier","overloadedDeclarations":[2891,2995],"referencedDeclaration":2995,"src":"14959:15:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,address)"}},"id":2888,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14959:46:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":2879,"id":2889,"nodeType":"Return","src":"14952:53:16"}]},"documentation":{"id":2871,"nodeType":"StructuredDocumentation","src":"14641:198:16","text":" @dev Variant of {parseAddress-string} that returns false if the parsing fails because the input is not a properly\n formatted address. See {parseAddress-string} requirements."},"id":2891,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseAddress","nameLocation":"14853:15:16","nodeType":"FunctionDefinition","parameters":{"id":2874,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2873,"mutability":"mutable","name":"input","nameLocation":"14883:5:16","nodeType":"VariableDeclaration","scope":2891,"src":"14869:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2872,"name":"string","nodeType":"ElementaryTypeName","src":"14869:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"14868:21:16"},"returnParameters":{"id":2879,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2876,"mutability":"mutable","name":"success","nameLocation":"14918:7:16","nodeType":"VariableDeclaration","scope":2891,"src":"14913:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2875,"name":"bool","nodeType":"ElementaryTypeName","src":"14913:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2878,"mutability":"mutable","name":"value","nameLocation":"14935:5:16","nodeType":"VariableDeclaration","scope":2891,"src":"14927:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2877,"name":"address","nodeType":"ElementaryTypeName","src":"14927:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14912:29:16"},"scope":3234,"src":"14844:168:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2994,"nodeType":"Block","src":"15405:733:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2915,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2905,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2898,"src":"15419:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2908,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2894,"src":"15431:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2907,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15425:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2906,"name":"bytes","nodeType":"ElementaryTypeName","src":"15425:5:16","typeDescriptions":{}}},"id":2909,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15425:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15438:6:16","memberName":"length","nodeType":"MemberAccess","src":"15425:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15419:25:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2914,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2912,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2896,"src":"15448:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2913,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2898,"src":"15456:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15448:11:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15419:40:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2923,"nodeType":"IfStatement","src":"15415:72:16","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2916,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"15469:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":2919,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15484:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2918,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15476:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2917,"name":"address","nodeType":"ElementaryTypeName","src":"15476:7:16","typeDescriptions":{}}},"id":2920,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15476:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":2921,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"15468:19:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":2904,"id":2922,"nodeType":"Return","src":"15461:26:16"}},{"assignments":[2925],"declarations":[{"constant":false,"id":2925,"mutability":"mutable","name":"hasPrefix","nameLocation":"15503:9:16","nodeType":"VariableDeclaration","scope":2994,"src":"15498:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2924,"name":"bool","nodeType":"ElementaryTypeName","src":"15498:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2948,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2926,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2898,"src":"15516:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2927,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2896,"src":"15522:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2928,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15530:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"15522:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15516:15:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2931,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"15515:17:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes2","typeString":"bytes2"},"id":2946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"arguments":[{"id":2937,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2894,"src":"15572:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2936,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15566:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2935,"name":"bytes","nodeType":"ElementaryTypeName","src":"15566:5:16","typeDescriptions":{}}},"id":2938,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15566:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2939,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2896,"src":"15580:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2934,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3233,"src":"15543:22:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":2940,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15543:43:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2933,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15536:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":2932,"name":"bytes2","nodeType":"ElementaryTypeName","src":"15536:6:16","typeDescriptions":{}}},"id":2941,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15536:51:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"3078","id":2944,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15598:4:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""},"value":"0x"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""}],"id":2943,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15591:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":2942,"name":"bytes2","nodeType":"ElementaryTypeName","src":"15591:6:16","typeDescriptions":{}}},"id":2945,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15591:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"src":"15536:67:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15515:88:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"15498:105:16"},{"assignments":[2950],"declarations":[{"constant":false,"id":2950,"mutability":"mutable","name":"expectedLength","nameLocation":"15692:14:16","nodeType":"VariableDeclaration","scope":2994,"src":"15684:22:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2949,"name":"uint256","nodeType":"ElementaryTypeName","src":"15684:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2958,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3430","id":2951,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15709:2:16","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2952,"name":"hasPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2925,"src":"15714:9:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15724:6:16","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7280,"src":"15714:16:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":2954,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15714:18:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":2955,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15735:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15714:22:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15709:27:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15684:52:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2959,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2898,"src":"15801:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2960,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2896,"src":"15807:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15801:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2962,"name":"expectedLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2950,"src":"15816:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15801:29:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2992,"nodeType":"Block","src":"16081:51:16","statements":[{"expression":{"components":[{"hexValue":"66616c7365","id":2985,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"16103:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":2988,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16118:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2987,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16110:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2986,"name":"address","nodeType":"ElementaryTypeName","src":"16110:7:16","typeDescriptions":{}}},"id":2989,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16110:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":2990,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"16102:19:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":2904,"id":2991,"nodeType":"Return","src":"16095:26:16"}]},"id":2993,"nodeType":"IfStatement","src":"15797:335:16","trueBody":{"id":2984,"nodeType":"Block","src":"15832:243:16","statements":[{"assignments":[2965,2967],"declarations":[{"constant":false,"id":2965,"mutability":"mutable","name":"s","nameLocation":"15953:1:16","nodeType":"VariableDeclaration","scope":2984,"src":"15948:6:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2964,"name":"bool","nodeType":"ElementaryTypeName","src":"15948:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2967,"mutability":"mutable","name":"v","nameLocation":"15964:1:16","nodeType":"VariableDeclaration","scope":2984,"src":"15956:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2966,"name":"uint256","nodeType":"ElementaryTypeName","src":"15956:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2973,"initialValue":{"arguments":[{"id":2969,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2894,"src":"16001:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2970,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2896,"src":"16008:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2971,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2898,"src":"16015:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2968,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2820,"src":"15969:31:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2972,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15969:50:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"15947:72:16"},{"expression":{"components":[{"id":2974,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2965,"src":"16041:1:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"arguments":[{"arguments":[{"id":2979,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2967,"src":"16060:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2978,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16052:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2977,"name":"uint160","nodeType":"ElementaryTypeName","src":"16052:7:16","typeDescriptions":{}}},"id":2980,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16052:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2976,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16044:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2975,"name":"address","nodeType":"ElementaryTypeName","src":"16044:7:16","typeDescriptions":{}}},"id":2981,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16044:19:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":2982,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"16040:24:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":2904,"id":2983,"nodeType":"Return","src":"16033:31:16"}]}}]},"documentation":{"id":2892,"nodeType":"StructuredDocumentation","src":"15018:226:16","text":" @dev Variant of {parseAddress-string-uint256-uint256} that returns false if the parsing fails because input is not a properly\n formatted address. See {parseAddress-string-uint256-uint256} requirements."},"id":2995,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseAddress","nameLocation":"15258:15:16","nodeType":"FunctionDefinition","parameters":{"id":2899,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2894,"mutability":"mutable","name":"input","nameLocation":"15297:5:16","nodeType":"VariableDeclaration","scope":2995,"src":"15283:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2893,"name":"string","nodeType":"ElementaryTypeName","src":"15283:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2896,"mutability":"mutable","name":"begin","nameLocation":"15320:5:16","nodeType":"VariableDeclaration","scope":2995,"src":"15312:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2895,"name":"uint256","nodeType":"ElementaryTypeName","src":"15312:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2898,"mutability":"mutable","name":"end","nameLocation":"15343:3:16","nodeType":"VariableDeclaration","scope":2995,"src":"15335:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2897,"name":"uint256","nodeType":"ElementaryTypeName","src":"15335:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15273:79:16"},"returnParameters":{"id":2904,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2901,"mutability":"mutable","name":"success","nameLocation":"15381:7:16","nodeType":"VariableDeclaration","scope":2995,"src":"15376:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2900,"name":"bool","nodeType":"ElementaryTypeName","src":"15376:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2903,"mutability":"mutable","name":"value","nameLocation":"15398:5:16","nodeType":"VariableDeclaration","scope":2995,"src":"15390:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2902,"name":"address","nodeType":"ElementaryTypeName","src":"15390:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"15375:29:16"},"scope":3234,"src":"15249:889:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3054,"nodeType":"Block","src":"16207:461:16","statements":[{"assignments":[3003],"declarations":[{"constant":false,"id":3003,"mutability":"mutable","name":"value","nameLocation":"16223:5:16","nodeType":"VariableDeclaration","scope":3054,"src":"16217:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3002,"name":"uint8","nodeType":"ElementaryTypeName","src":"16217:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":3008,"initialValue":{"arguments":[{"id":3006,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2997,"src":"16237:3:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":3005,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16231:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3004,"name":"uint8","nodeType":"ElementaryTypeName","src":"16231:5:16","typeDescriptions":{}}},"id":3007,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16231:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"16217:24:16"},{"id":3051,"nodeType":"UncheckedBlock","src":"16401:238:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3015,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3009,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3003,"src":"16429:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3437","id":3010,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16437:2:16","typeDescriptions":{"typeIdentifier":"t_rational_47_by_1","typeString":"int_const 47"},"value":"47"},"src":"16429:10:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3012,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3003,"src":"16443:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3538","id":3013,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16451:2:16","typeDescriptions":{"typeIdentifier":"t_rational_58_by_1","typeString":"int_const 58"},"value":"58"},"src":"16443:10:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16429:24:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3020,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3003,"src":"16489:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3936","id":3021,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16497:2:16","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"16489:10:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3023,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3003,"src":"16503:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"313033","id":3024,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16511:3:16","typeDescriptions":{"typeIdentifier":"t_rational_103_by_1","typeString":"int_const 103"},"value":"103"},"src":"16503:11:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16489:25:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3031,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3003,"src":"16550:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3634","id":3032,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16558:2:16","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"16550:10:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3036,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3034,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3003,"src":"16564:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3731","id":3035,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16572:2:16","typeDescriptions":{"typeIdentifier":"t_rational_71_by_1","typeString":"int_const 71"},"value":"71"},"src":"16564:10:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16550:24:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"expression":{"arguments":[{"id":3044,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16618:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3043,"name":"uint8","nodeType":"ElementaryTypeName","src":"16618:5:16","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":3042,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16613:4:16","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3045,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16613:11:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":3046,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16625:3:16","memberName":"max","nodeType":"MemberAccess","src":"16613:15:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":3001,"id":3047,"nodeType":"Return","src":"16606:22:16"},"id":3048,"nodeType":"IfStatement","src":"16546:82:16","trueBody":{"expression":{"id":3040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3038,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3003,"src":"16576:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3535","id":3039,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16585:2:16","typeDescriptions":{"typeIdentifier":"t_rational_55_by_1","typeString":"int_const 55"},"value":"55"},"src":"16576:11:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":3041,"nodeType":"ExpressionStatement","src":"16576:11:16"}},"id":3049,"nodeType":"IfStatement","src":"16485:143:16","trueBody":{"expression":{"id":3029,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3027,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3003,"src":"16516:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3837","id":3028,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16525:2:16","typeDescriptions":{"typeIdentifier":"t_rational_87_by_1","typeString":"int_const 87"},"value":"87"},"src":"16516:11:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":3030,"nodeType":"ExpressionStatement","src":"16516:11:16"}},"id":3050,"nodeType":"IfStatement","src":"16425:203:16","trueBody":{"expression":{"id":3018,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3016,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3003,"src":"16455:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3438","id":3017,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16464:2:16","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},"src":"16455:11:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":3019,"nodeType":"ExpressionStatement","src":"16455:11:16"}}]},{"expression":{"id":3052,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3003,"src":"16656:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":3001,"id":3053,"nodeType":"Return","src":"16649:12:16"}]},"id":3055,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseChr","nameLocation":"16153:12:16","nodeType":"FunctionDefinition","parameters":{"id":2998,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2997,"mutability":"mutable","name":"chr","nameLocation":"16173:3:16","nodeType":"VariableDeclaration","scope":3055,"src":"16166:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":2996,"name":"bytes1","nodeType":"ElementaryTypeName","src":"16166:6:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"src":"16165:12:16"},"returnParameters":{"id":3001,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3000,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3055,"src":"16200:5:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2999,"name":"uint8","nodeType":"ElementaryTypeName","src":"16200:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16199:7:16"},"scope":3234,"src":"16144:524:16","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3220,"nodeType":"Block","src":"17334:1331:16","statements":[{"assignments":[3064],"declarations":[{"constant":false,"id":3064,"mutability":"mutable","name":"buffer","nameLocation":"17357:6:16","nodeType":"VariableDeclaration","scope":3220,"src":"17344:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3063,"name":"bytes","nodeType":"ElementaryTypeName","src":"17344:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3069,"initialValue":{"arguments":[{"id":3067,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3058,"src":"17372:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3066,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17366:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3065,"name":"bytes","nodeType":"ElementaryTypeName","src":"17366:5:16","typeDescriptions":{}}},"id":3068,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17366:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"17344:34:16"},{"assignments":[3071],"declarations":[{"constant":false,"id":3071,"mutability":"mutable","name":"output","nameLocation":"17401:6:16","nodeType":"VariableDeclaration","scope":3220,"src":"17388:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3070,"name":"bytes","nodeType":"ElementaryTypeName","src":"17388:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3079,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3074,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17420:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":3075,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3064,"src":"17424:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17431:6:16","memberName":"length","nodeType":"MemberAccess","src":"17424:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17420:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3073,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"17410:9:16","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":3072,"name":"bytes","nodeType":"ElementaryTypeName","src":"17414:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":3078,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17410:28:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"17388:50:16"},{"assignments":[3081],"declarations":[{"constant":false,"id":3081,"mutability":"mutable","name":"outputLength","nameLocation":"17479:12:16","nodeType":"VariableDeclaration","scope":3220,"src":"17471:20:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3080,"name":"uint256","nodeType":"ElementaryTypeName","src":"17471:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3083,"initialValue":{"hexValue":"30","id":3082,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17494:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"17471:24:16"},{"body":{"id":3212,"nodeType":"Block","src":"17546:854:16","statements":[{"assignments":[3095],"declarations":[{"constant":false,"id":3095,"mutability":"mutable","name":"char","nameLocation":"17567:4:16","nodeType":"VariableDeclaration","scope":3212,"src":"17560:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":3094,"name":"bytes1","nodeType":"ElementaryTypeName","src":"17560:6:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"id":3103,"initialValue":{"arguments":[{"arguments":[{"id":3099,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3064,"src":"17604:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3100,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3085,"src":"17612:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3098,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3233,"src":"17581:22:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":3101,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17581:33:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3097,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17574:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":3096,"name":"bytes1","nodeType":"ElementaryTypeName","src":"17574:6:16","typeDescriptions":{}}},"id":3102,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17574:41:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"VariableDeclarationStatement","src":"17560:55:16"},{"condition":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3104,"name":"SPECIAL_CHARS_LOOKUP","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1885,"src":"17635:20:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3105,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17659:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"arguments":[{"id":3108,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3095,"src":"17670:4:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":3107,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17664:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3106,"name":"uint8","nodeType":"ElementaryTypeName","src":"17664:5:16","typeDescriptions":{}}},"id":3109,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17664:11:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"17659:16:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3111,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17658:18:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17635:41:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3113,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17634:43:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3114,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17681:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17634:48:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":3116,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17633:50:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3210,"nodeType":"Block","src":"18328:62:16","statements":[{"expression":{"id":3208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3203,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3071,"src":"18346:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3206,"indexExpression":{"id":3205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18353:14:16","subExpression":{"id":3204,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3081,"src":"18353:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18346:22:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3207,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3095,"src":"18371:4:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"18346:29:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3209,"nodeType":"ExpressionStatement","src":"18346:29:16"}]},"id":3211,"nodeType":"IfStatement","src":"17629:761:16","trueBody":{"id":3202,"nodeType":"Block","src":"17685:637:16","statements":[{"expression":{"id":3122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3117,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3071,"src":"17703:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3120,"indexExpression":{"id":3119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17710:14:16","subExpression":{"id":3118,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3081,"src":"17710:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17703:22:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"5c","id":3121,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17728:4:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_731553fa98541ade8b78284229adfe09a819380dee9244baac20dd1e0aa24095","typeString":"literal_string \"\\\""},"value":"\\"},"src":"17703:29:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3123,"nodeType":"ExpressionStatement","src":"17703:29:16"},{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3124,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3095,"src":"17754:4:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783038","id":3125,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17762:4:16","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"0x08"},"src":"17754:12:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3134,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3095,"src":"17823:4:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783039","id":3135,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17831:4:16","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"0x09"},"src":"17823:12:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3146,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3144,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3095,"src":"17892:4:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783061","id":3145,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17900:4:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"0x0a"},"src":"17892:12:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3154,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3095,"src":"17961:4:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783063","id":3155,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17969:4:16","typeDescriptions":{"typeIdentifier":"t_rational_12_by_1","typeString":"int_const 12"},"value":"0x0c"},"src":"17961:12:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3164,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3095,"src":"18030:4:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783064","id":3165,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18038:4:16","typeDescriptions":{"typeIdentifier":"t_rational_13_by_1","typeString":"int_const 13"},"value":"0x0d"},"src":"18030:12:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3174,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3095,"src":"18099:4:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783563","id":3175,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18107:4:16","typeDescriptions":{"typeIdentifier":"t_rational_92_by_1","typeString":"int_const 92"},"value":"0x5c"},"src":"18099:12:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3184,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3095,"src":"18169:4:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783232","id":3185,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18177:4:16","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"src":"18169:12:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3195,"nodeType":"IfStatement","src":"18165:143:16","trueBody":{"id":3194,"nodeType":"Block","src":"18183:125:16","statements":[{"expression":{"id":3192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3187,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3071,"src":"18261:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3190,"indexExpression":{"id":3189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18268:14:16","subExpression":{"id":3188,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3081,"src":"18268:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18261:22:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"22","id":3191,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18286:3:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_6e9f33448a4153023cdaf3eb759f1afdc24aba433a3e18b683f8c04a6eaa69f0","typeString":"literal_string \"\"\""},"value":"\""},"src":"18261:28:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3193,"nodeType":"ExpressionStatement","src":"18261:28:16"}]}},"id":3196,"nodeType":"IfStatement","src":"18095:213:16","trueBody":{"expression":{"id":3182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3177,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3071,"src":"18113:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3180,"indexExpression":{"id":3179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18120:14:16","subExpression":{"id":3178,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3081,"src":"18120:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18113:22:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"5c","id":3181,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18138:4:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_731553fa98541ade8b78284229adfe09a819380dee9244baac20dd1e0aa24095","typeString":"literal_string \"\\\""},"value":"\\"},"src":"18113:29:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3183,"nodeType":"ExpressionStatement","src":"18113:29:16"}},"id":3197,"nodeType":"IfStatement","src":"18026:282:16","trueBody":{"expression":{"id":3172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3167,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3071,"src":"18044:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3170,"indexExpression":{"id":3169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18051:14:16","subExpression":{"id":3168,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3081,"src":"18051:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18044:22:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"72","id":3171,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18069:3:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_414f72a4d550cad29f17d9d99a4af64b3776ec5538cd440cef0f03fef2e9e010","typeString":"literal_string \"r\""},"value":"r"},"src":"18044:28:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3173,"nodeType":"ExpressionStatement","src":"18044:28:16"}},"id":3198,"nodeType":"IfStatement","src":"17957:351:16","trueBody":{"expression":{"id":3162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3157,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3071,"src":"17975:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3160,"indexExpression":{"id":3159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17982:14:16","subExpression":{"id":3158,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3081,"src":"17982:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17975:22:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66","id":3161,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18000:3:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_d1e8aeb79500496ef3dc2e57ba746a8315d048b7a664a2bf948db4fa91960483","typeString":"literal_string \"f\""},"value":"f"},"src":"17975:28:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3163,"nodeType":"ExpressionStatement","src":"17975:28:16"}},"id":3199,"nodeType":"IfStatement","src":"17888:420:16","trueBody":{"expression":{"id":3152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3147,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3071,"src":"17906:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3150,"indexExpression":{"id":3149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17913:14:16","subExpression":{"id":3148,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3081,"src":"17913:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17906:22:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"6e","id":3151,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17931:3:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_4b4ecedb4964a40fe416b16c7bd8b46092040ec42ef0aa69e59f09872f105cf3","typeString":"literal_string \"n\""},"value":"n"},"src":"17906:28:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3153,"nodeType":"ExpressionStatement","src":"17906:28:16"}},"id":3200,"nodeType":"IfStatement","src":"17819:489:16","trueBody":{"expression":{"id":3142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3137,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3071,"src":"17837:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3140,"indexExpression":{"id":3139,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17844:14:16","subExpression":{"id":3138,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3081,"src":"17844:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17837:22:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74","id":3141,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17862:3:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_cac1bb71f0a97c8ac94ca9546b43178a9ad254c7b757ac07433aa6df35cd8089","typeString":"literal_string \"t\""},"value":"t"},"src":"17837:28:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3143,"nodeType":"ExpressionStatement","src":"17837:28:16"}},"id":3201,"nodeType":"IfStatement","src":"17750:558:16","trueBody":{"expression":{"id":3132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3127,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3071,"src":"17768:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3130,"indexExpression":{"id":3129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17775:14:16","subExpression":{"id":3128,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3081,"src":"17775:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17768:22:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"62","id":3131,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17793:3:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_b5553de315e0edf504d9150af82dafa5c4667fa618ed0a6f19c69b41166c5510","typeString":"literal_string \"b\""},"value":"b"},"src":"17768:28:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3133,"nodeType":"ExpressionStatement","src":"17768:28:16"}}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3090,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3087,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3085,"src":"17522:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3088,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3064,"src":"17526:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3089,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17533:6:16","memberName":"length","nodeType":"MemberAccess","src":"17526:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17522:17:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3213,"initializationExpression":{"assignments":[3085],"declarations":[{"constant":false,"id":3085,"mutability":"mutable","name":"i","nameLocation":"17519:1:16","nodeType":"VariableDeclaration","scope":3213,"src":"17511:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3084,"name":"uint256","nodeType":"ElementaryTypeName","src":"17511:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3086,"nodeType":"VariableDeclarationStatement","src":"17511:9:16"},"loopExpression":{"expression":{"id":3092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"17541:3:16","subExpression":{"id":3091,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3085,"src":"17543:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3093,"nodeType":"ExpressionStatement","src":"17541:3:16"},"nodeType":"ForStatement","src":"17506:894:16"},{"AST":{"nodeType":"YulBlock","src":"18498:129:16","statements":[{"expression":{"arguments":[{"name":"output","nodeType":"YulIdentifier","src":"18519:6:16"},{"name":"outputLength","nodeType":"YulIdentifier","src":"18527:12:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18512:6:16"},"nodeType":"YulFunctionCall","src":"18512:28:16"},"nodeType":"YulExpressionStatement","src":"18512:28:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18560:4:16","type":"","value":"0x40"},{"arguments":[{"name":"output","nodeType":"YulIdentifier","src":"18570:6:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18582:1:16","type":"","value":"5"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18589:1:16","type":"","value":"5"},{"arguments":[{"name":"outputLength","nodeType":"YulIdentifier","src":"18596:12:16"},{"kind":"number","nodeType":"YulLiteral","src":"18610:2:16","type":"","value":"63"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18592:3:16"},"nodeType":"YulFunctionCall","src":"18592:21:16"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"18585:3:16"},"nodeType":"YulFunctionCall","src":"18585:29:16"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"18578:3:16"},"nodeType":"YulFunctionCall","src":"18578:37:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18566:3:16"},"nodeType":"YulFunctionCall","src":"18566:50:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18553:6:16"},"nodeType":"YulFunctionCall","src":"18553:64:16"},"nodeType":"YulExpressionStatement","src":"18553:64:16"}]},"evmVersion":"paris","externalReferences":[{"declaration":3071,"isOffset":false,"isSlot":false,"src":"18519:6:16","valueSize":1},{"declaration":3071,"isOffset":false,"isSlot":false,"src":"18570:6:16","valueSize":1},{"declaration":3081,"isOffset":false,"isSlot":false,"src":"18527:12:16","valueSize":1},{"declaration":3081,"isOffset":false,"isSlot":false,"src":"18596:12:16","valueSize":1}],"flags":["memory-safe"],"id":3214,"nodeType":"InlineAssembly","src":"18473:154:16"},{"expression":{"arguments":[{"id":3217,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3071,"src":"18651:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3216,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18644:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":3215,"name":"string","nodeType":"ElementaryTypeName","src":"18644:6:16","typeDescriptions":{}}},"id":3218,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18644:14:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3062,"id":3219,"nodeType":"Return","src":"18637:21:16"}]},"documentation":{"id":3056,"nodeType":"StructuredDocumentation","src":"16674:576:16","text":" @dev Escape special characters in JSON strings. This can be useful to prevent JSON injection in NFT metadata.\n WARNING: This function should only be used in double quoted JSON strings. Single quotes are not escaped.\n NOTE: This function escapes all unicode characters, and not just the ones in ranges defined in section 2.5 of\n RFC-4627 (U+0000 to U+001F, U+0022 and U+005C). ECMAScript's `JSON.parse` does recover escaped unicode\n characters that are not in this range, but other tooling may provide different results."},"id":3221,"implemented":true,"kind":"function","modifiers":[],"name":"escapeJSON","nameLocation":"17264:10:16","nodeType":"FunctionDefinition","parameters":{"id":3059,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3058,"mutability":"mutable","name":"input","nameLocation":"17289:5:16","nodeType":"VariableDeclaration","scope":3221,"src":"17275:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3057,"name":"string","nodeType":"ElementaryTypeName","src":"17275:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"17274:21:16"},"returnParameters":{"id":3062,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3061,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3221,"src":"17319:13:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3060,"name":"string","nodeType":"ElementaryTypeName","src":"17319:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"17318:15:16"},"scope":3234,"src":"17255:1410:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3232,"nodeType":"Block","src":"19050:225:16","statements":[{"AST":{"nodeType":"YulBlock","src":"19199:70:16","statements":[{"nodeType":"YulAssignment","src":"19213:46:16","value":{"arguments":[{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"19232:6:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19244:4:16","type":"","value":"0x20"},{"name":"offset","nodeType":"YulIdentifier","src":"19250:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19240:3:16"},"nodeType":"YulFunctionCall","src":"19240:17:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19228:3:16"},"nodeType":"YulFunctionCall","src":"19228:30:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"19222:5:16"},"nodeType":"YulFunctionCall","src":"19222:37:16"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"19213:5:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3224,"isOffset":false,"isSlot":false,"src":"19232:6:16","valueSize":1},{"declaration":3226,"isOffset":false,"isSlot":false,"src":"19250:6:16","valueSize":1},{"declaration":3229,"isOffset":false,"isSlot":false,"src":"19213:5:16","valueSize":1}],"flags":["memory-safe"],"id":3231,"nodeType":"InlineAssembly","src":"19174:95:16"}]},"documentation":{"id":3222,"nodeType":"StructuredDocumentation","src":"18671:268:16","text":" @dev Reads a bytes32 from a bytes array without bounds checking.\n NOTE: making this function internal would mean it could be used with memory unsafe offset, and marking the\n assembly block as such would prevent some optimizations."},"id":3233,"implemented":true,"kind":"function","modifiers":[],"name":"_unsafeReadBytesOffset","nameLocation":"18953:22:16","nodeType":"FunctionDefinition","parameters":{"id":3227,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3224,"mutability":"mutable","name":"buffer","nameLocation":"18989:6:16","nodeType":"VariableDeclaration","scope":3233,"src":"18976:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3223,"name":"bytes","nodeType":"ElementaryTypeName","src":"18976:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3226,"mutability":"mutable","name":"offset","nameLocation":"19005:6:16","nodeType":"VariableDeclaration","scope":3233,"src":"18997:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3225,"name":"uint256","nodeType":"ElementaryTypeName","src":"18997:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18975:37:16"},"returnParameters":{"id":3230,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3229,"mutability":"mutable","name":"value","nameLocation":"19043:5:16","nodeType":"VariableDeclaration","scope":3233,"src":"19035:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3228,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19035:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"19034:15:16"},"scope":3234,"src":"18944:331:16","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":3235,"src":"297:18980:16","usedErrors":[1892,1895,1898],"usedEvents":[]}],"src":"101:19177:16"},"id":16},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","exportedSymbols":{"ECDSA":[3582]},"id":3583,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3236,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:17"},{"abstract":false,"baseContracts":[],"canonicalName":"ECDSA","contractDependencies":[],"contractKind":"library","documentation":{"id":3237,"nodeType":"StructuredDocumentation","src":"138:205:17","text":" @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n These functions can be used to verify that a message was signed by the holder\n of the private keys of a given address."},"fullyImplemented":true,"id":3582,"linearizedBaseContracts":[3582],"name":"ECDSA","nameLocation":"352:5:17","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ECDSA.RecoverError","id":3242,"members":[{"id":3238,"name":"NoError","nameLocation":"392:7:17","nodeType":"EnumValue","src":"392:7:17"},{"id":3239,"name":"InvalidSignature","nameLocation":"409:16:17","nodeType":"EnumValue","src":"409:16:17"},{"id":3240,"name":"InvalidSignatureLength","nameLocation":"435:22:17","nodeType":"EnumValue","src":"435:22:17"},{"id":3241,"name":"InvalidSignatureS","nameLocation":"467:17:17","nodeType":"EnumValue","src":"467:17:17"}],"name":"RecoverError","nameLocation":"369:12:17","nodeType":"EnumDefinition","src":"364:126:17"},{"documentation":{"id":3243,"nodeType":"StructuredDocumentation","src":"496:63:17","text":" @dev The signature derives the `address(0)`."},"errorSelector":"f645eedf","id":3245,"name":"ECDSAInvalidSignature","nameLocation":"570:21:17","nodeType":"ErrorDefinition","parameters":{"id":3244,"nodeType":"ParameterList","parameters":[],"src":"591:2:17"},"src":"564:30:17"},{"documentation":{"id":3246,"nodeType":"StructuredDocumentation","src":"600:60:17","text":" @dev The signature has an invalid length."},"errorSelector":"fce698f7","id":3250,"name":"ECDSAInvalidSignatureLength","nameLocation":"671:27:17","nodeType":"ErrorDefinition","parameters":{"id":3249,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3248,"mutability":"mutable","name":"length","nameLocation":"707:6:17","nodeType":"VariableDeclaration","scope":3250,"src":"699:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3247,"name":"uint256","nodeType":"ElementaryTypeName","src":"699:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"698:16:17"},"src":"665:50:17"},{"documentation":{"id":3251,"nodeType":"StructuredDocumentation","src":"721:85:17","text":" @dev The signature has an S value that is in the upper half order."},"errorSelector":"d78bce0c","id":3255,"name":"ECDSAInvalidSignatureS","nameLocation":"817:22:17","nodeType":"ErrorDefinition","parameters":{"id":3254,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3253,"mutability":"mutable","name":"s","nameLocation":"848:1:17","nodeType":"VariableDeclaration","scope":3255,"src":"840:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3252,"name":"bytes32","nodeType":"ElementaryTypeName","src":"840:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"839:11:17"},"src":"811:40:17"},{"body":{"id":3307,"nodeType":"Block","src":"2285:622:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3270,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3260,"src":"2299:9:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2309:6:17","memberName":"length","nodeType":"MemberAccess","src":"2299:16:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3635","id":3272,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2319:2:17","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"65"},"src":"2299:22:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3305,"nodeType":"Block","src":"2793:108:17","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":3294,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2823:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3293,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2815:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3292,"name":"address","nodeType":"ElementaryTypeName","src":"2815:7:17","typeDescriptions":{}}},"id":3295,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2815:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3296,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3242,"src":"2827:12:17","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3242_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3297,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2840:22:17","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":3240,"src":"2827:35:17","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3242","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"expression":{"id":3300,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3260,"src":"2872:9:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2882:6:17","memberName":"length","nodeType":"MemberAccess","src":"2872:16:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3299,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2864:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3298,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2864:7:17","typeDescriptions":{}}},"id":3302,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2864:25:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":3303,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2814:76:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3242_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3269,"id":3304,"nodeType":"Return","src":"2807:83:17"}]},"id":3306,"nodeType":"IfStatement","src":"2295:606:17","trueBody":{"id":3291,"nodeType":"Block","src":"2323:464:17","statements":[{"assignments":[3275],"declarations":[{"constant":false,"id":3275,"mutability":"mutable","name":"r","nameLocation":"2345:1:17","nodeType":"VariableDeclaration","scope":3291,"src":"2337:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3274,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2337:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3276,"nodeType":"VariableDeclarationStatement","src":"2337:9:17"},{"assignments":[3278],"declarations":[{"constant":false,"id":3278,"mutability":"mutable","name":"s","nameLocation":"2368:1:17","nodeType":"VariableDeclaration","scope":3291,"src":"2360:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3277,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2360:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3279,"nodeType":"VariableDeclarationStatement","src":"2360:9:17"},{"assignments":[3281],"declarations":[{"constant":false,"id":3281,"mutability":"mutable","name":"v","nameLocation":"2389:1:17","nodeType":"VariableDeclaration","scope":3291,"src":"2383:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3280,"name":"uint8","nodeType":"ElementaryTypeName","src":"2383:5:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":3282,"nodeType":"VariableDeclarationStatement","src":"2383:7:17"},{"AST":{"nodeType":"YulBlock","src":"2560:171:17","statements":[{"nodeType":"YulAssignment","src":"2578:32:17","value":{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2593:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"2604:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2589:3:17"},"nodeType":"YulFunctionCall","src":"2589:20:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2583:5:17"},"nodeType":"YulFunctionCall","src":"2583:27:17"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"2578:1:17"}]},{"nodeType":"YulAssignment","src":"2627:32:17","value":{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2642:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"2653:4:17","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2638:3:17"},"nodeType":"YulFunctionCall","src":"2638:20:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2632:5:17"},"nodeType":"YulFunctionCall","src":"2632:27:17"},"variableNames":[{"name":"s","nodeType":"YulIdentifier","src":"2627:1:17"}]},{"nodeType":"YulAssignment","src":"2676:41:17","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2686:1:17","type":"","value":"0"},{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2699:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"2710:4:17","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2695:3:17"},"nodeType":"YulFunctionCall","src":"2695:20:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2689:5:17"},"nodeType":"YulFunctionCall","src":"2689:27:17"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"2681:4:17"},"nodeType":"YulFunctionCall","src":"2681:36:17"},"variableNames":[{"name":"v","nodeType":"YulIdentifier","src":"2676:1:17"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3275,"isOffset":false,"isSlot":false,"src":"2578:1:17","valueSize":1},{"declaration":3278,"isOffset":false,"isSlot":false,"src":"2627:1:17","valueSize":1},{"declaration":3260,"isOffset":false,"isSlot":false,"src":"2593:9:17","valueSize":1},{"declaration":3260,"isOffset":false,"isSlot":false,"src":"2642:9:17","valueSize":1},{"declaration":3260,"isOffset":false,"isSlot":false,"src":"2699:9:17","valueSize":1},{"declaration":3281,"isOffset":false,"isSlot":false,"src":"2676:1:17","valueSize":1}],"flags":["memory-safe"],"id":3283,"nodeType":"InlineAssembly","src":"2535:196:17"},{"expression":{"arguments":[{"id":3285,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3258,"src":"2762:4:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3286,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3281,"src":"2768:1:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":3287,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3275,"src":"2771:1:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3288,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3278,"src":"2774:1:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3284,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3308,3388,3496],"referencedDeclaration":3496,"src":"2751:10:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$3242_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":3289,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2751:25:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3242_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3269,"id":3290,"nodeType":"Return","src":"2744:32:17"}]}}]},"documentation":{"id":3256,"nodeType":"StructuredDocumentation","src":"857:1267:17","text":" @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n return address(0) without also returning an error description. Errors are documented using an enum (error type)\n and a bytes32 providing additional information about the error.\n If no error is returned, then the address can be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n Documentation for signature generation:\n - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]"},"id":3308,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"2138:10:17","nodeType":"FunctionDefinition","parameters":{"id":3261,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3258,"mutability":"mutable","name":"hash","nameLocation":"2166:4:17","nodeType":"VariableDeclaration","scope":3308,"src":"2158:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3257,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2158:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3260,"mutability":"mutable","name":"signature","nameLocation":"2193:9:17","nodeType":"VariableDeclaration","scope":3308,"src":"2180:22:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3259,"name":"bytes","nodeType":"ElementaryTypeName","src":"2180:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2148:60:17"},"returnParameters":{"id":3269,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3263,"mutability":"mutable","name":"recovered","nameLocation":"2240:9:17","nodeType":"VariableDeclaration","scope":3308,"src":"2232:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3262,"name":"address","nodeType":"ElementaryTypeName","src":"2232:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3266,"mutability":"mutable","name":"err","nameLocation":"2264:3:17","nodeType":"VariableDeclaration","scope":3308,"src":"2251:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3242","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3265,"nodeType":"UserDefinedTypeName","pathNode":{"id":3264,"name":"RecoverError","nameLocations":["2251:12:17"],"nodeType":"IdentifierPath","referencedDeclaration":3242,"src":"2251:12:17"},"referencedDeclaration":3242,"src":"2251:12:17","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3242","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3268,"mutability":"mutable","name":"errArg","nameLocation":"2277:6:17","nodeType":"VariableDeclaration","scope":3308,"src":"2269:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3267,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2269:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2231:53:17"},"scope":3582,"src":"2129:778:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3337,"nodeType":"Block","src":"3801:168:17","statements":[{"assignments":[3319,3322,3324],"declarations":[{"constant":false,"id":3319,"mutability":"mutable","name":"recovered","nameLocation":"3820:9:17","nodeType":"VariableDeclaration","scope":3337,"src":"3812:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3318,"name":"address","nodeType":"ElementaryTypeName","src":"3812:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3322,"mutability":"mutable","name":"error","nameLocation":"3844:5:17","nodeType":"VariableDeclaration","scope":3337,"src":"3831:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3242","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3321,"nodeType":"UserDefinedTypeName","pathNode":{"id":3320,"name":"RecoverError","nameLocations":["3831:12:17"],"nodeType":"IdentifierPath","referencedDeclaration":3242,"src":"3831:12:17"},"referencedDeclaration":3242,"src":"3831:12:17","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3242","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3324,"mutability":"mutable","name":"errorArg","nameLocation":"3859:8:17","nodeType":"VariableDeclaration","scope":3337,"src":"3851:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3323,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3851:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3329,"initialValue":{"arguments":[{"id":3326,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3311,"src":"3882:4:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3327,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3313,"src":"3888:9:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3325,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3308,3388,3496],"referencedDeclaration":3308,"src":"3871:10:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$3242_$_t_bytes32_$","typeString":"function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":3328,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3871:27:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3242_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"3811:87:17"},{"expression":{"arguments":[{"id":3331,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3322,"src":"3920:5:17","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3242","typeString":"enum ECDSA.RecoverError"}},{"id":3332,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3324,"src":"3927:8:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$3242","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3330,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3581,"src":"3908:11:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$3242_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":3333,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3908:28:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3334,"nodeType":"ExpressionStatement","src":"3908:28:17"},{"expression":{"id":3335,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3319,"src":"3953:9:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3317,"id":3336,"nodeType":"Return","src":"3946:16:17"}]},"documentation":{"id":3309,"nodeType":"StructuredDocumentation","src":"2913:796:17","text":" @dev Returns the address that signed a hashed message (`hash`) with\n `signature`. This address can then be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it."},"id":3338,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"3723:7:17","nodeType":"FunctionDefinition","parameters":{"id":3314,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3311,"mutability":"mutable","name":"hash","nameLocation":"3739:4:17","nodeType":"VariableDeclaration","scope":3338,"src":"3731:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3310,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3731:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3313,"mutability":"mutable","name":"signature","nameLocation":"3758:9:17","nodeType":"VariableDeclaration","scope":3338,"src":"3745:22:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3312,"name":"bytes","nodeType":"ElementaryTypeName","src":"3745:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3730:38:17"},"returnParameters":{"id":3317,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3316,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3338,"src":"3792:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3315,"name":"address","nodeType":"ElementaryTypeName","src":"3792:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3791:9:17"},"scope":3582,"src":"3714:255:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3387,"nodeType":"Block","src":"4348:342:17","statements":[{"id":3386,"nodeType":"UncheckedBlock","src":"4358:326:17","statements":[{"assignments":[3356],"declarations":[{"constant":false,"id":3356,"mutability":"mutable","name":"s","nameLocation":"4390:1:17","nodeType":"VariableDeclaration","scope":3386,"src":"4382:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3355,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4382:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3363,"initialValue":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":3362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3357,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3345,"src":"4394:2:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"arguments":[{"hexValue":"307837666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666","id":3360,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4407:66:17","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"},"value":"0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"}],"id":3359,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4399:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3358,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4399:7:17","typeDescriptions":{}}},"id":3361,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4399:75:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4394:80:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4382:92:17"},{"assignments":[3365],"declarations":[{"constant":false,"id":3365,"mutability":"mutable","name":"v","nameLocation":"4591:1:17","nodeType":"VariableDeclaration","scope":3386,"src":"4585:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3364,"name":"uint8","nodeType":"ElementaryTypeName","src":"4585:5:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":3378,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3370,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3345,"src":"4610:2:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3369,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4602:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3368,"name":"uint256","nodeType":"ElementaryTypeName","src":"4602:7:17","typeDescriptions":{}}},"id":3371,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4602:11:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":3372,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4617:3:17","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"4602:18:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3374,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4601:20:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3237","id":3375,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4624:2:17","typeDescriptions":{"typeIdentifier":"t_rational_27_by_1","typeString":"int_const 27"},"value":"27"},"src":"4601:25:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3367,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4595:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3366,"name":"uint8","nodeType":"ElementaryTypeName","src":"4595:5:17","typeDescriptions":{}}},"id":3377,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4595:32:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"4585:42:17"},{"expression":{"arguments":[{"id":3380,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3341,"src":"4659:4:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3381,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3365,"src":"4665:1:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":3382,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3343,"src":"4668:1:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3383,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3356,"src":"4671:1:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3379,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3308,3388,3496],"referencedDeclaration":3496,"src":"4648:10:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$3242_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":3384,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4648:25:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3242_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3354,"id":3385,"nodeType":"Return","src":"4641:32:17"}]}]},"documentation":{"id":3339,"nodeType":"StructuredDocumentation","src":"3975:205:17","text":" @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n See https://eips.ethereum.org/EIPS/eip-2098[ERC-2098 short signatures]"},"id":3388,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"4194:10:17","nodeType":"FunctionDefinition","parameters":{"id":3346,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3341,"mutability":"mutable","name":"hash","nameLocation":"4222:4:17","nodeType":"VariableDeclaration","scope":3388,"src":"4214:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3340,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4214:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3343,"mutability":"mutable","name":"r","nameLocation":"4244:1:17","nodeType":"VariableDeclaration","scope":3388,"src":"4236:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3342,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4236:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3345,"mutability":"mutable","name":"vs","nameLocation":"4263:2:17","nodeType":"VariableDeclaration","scope":3388,"src":"4255:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3344,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4255:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4204:67:17"},"returnParameters":{"id":3354,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3348,"mutability":"mutable","name":"recovered","nameLocation":"4303:9:17","nodeType":"VariableDeclaration","scope":3388,"src":"4295:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3347,"name":"address","nodeType":"ElementaryTypeName","src":"4295:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3351,"mutability":"mutable","name":"err","nameLocation":"4327:3:17","nodeType":"VariableDeclaration","scope":3388,"src":"4314:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3242","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3350,"nodeType":"UserDefinedTypeName","pathNode":{"id":3349,"name":"RecoverError","nameLocations":["4314:12:17"],"nodeType":"IdentifierPath","referencedDeclaration":3242,"src":"4314:12:17"},"referencedDeclaration":3242,"src":"4314:12:17","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3242","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3353,"mutability":"mutable","name":"errArg","nameLocation":"4340:6:17","nodeType":"VariableDeclaration","scope":3388,"src":"4332:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3352,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4332:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4294:53:17"},"scope":3582,"src":"4185:505:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3420,"nodeType":"Block","src":"4903:164:17","statements":[{"assignments":[3401,3404,3406],"declarations":[{"constant":false,"id":3401,"mutability":"mutable","name":"recovered","nameLocation":"4922:9:17","nodeType":"VariableDeclaration","scope":3420,"src":"4914:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3400,"name":"address","nodeType":"ElementaryTypeName","src":"4914:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3404,"mutability":"mutable","name":"error","nameLocation":"4946:5:17","nodeType":"VariableDeclaration","scope":3420,"src":"4933:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3242","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3403,"nodeType":"UserDefinedTypeName","pathNode":{"id":3402,"name":"RecoverError","nameLocations":["4933:12:17"],"nodeType":"IdentifierPath","referencedDeclaration":3242,"src":"4933:12:17"},"referencedDeclaration":3242,"src":"4933:12:17","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3242","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3406,"mutability":"mutable","name":"errorArg","nameLocation":"4961:8:17","nodeType":"VariableDeclaration","scope":3420,"src":"4953:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3405,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4953:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3412,"initialValue":{"arguments":[{"id":3408,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3391,"src":"4984:4:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3409,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3393,"src":"4990:1:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3410,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3395,"src":"4993:2:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3407,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3308,3388,3496],"referencedDeclaration":3388,"src":"4973:10:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$3242_$_t_bytes32_$","typeString":"function (bytes32,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":3411,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4973:23:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3242_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"4913:83:17"},{"expression":{"arguments":[{"id":3414,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3404,"src":"5018:5:17","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3242","typeString":"enum ECDSA.RecoverError"}},{"id":3415,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3406,"src":"5025:8:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$3242","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3413,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3581,"src":"5006:11:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$3242_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":3416,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5006:28:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3417,"nodeType":"ExpressionStatement","src":"5006:28:17"},{"expression":{"id":3418,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3401,"src":"5051:9:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3399,"id":3419,"nodeType":"Return","src":"5044:16:17"}]},"documentation":{"id":3389,"nodeType":"StructuredDocumentation","src":"4696:116:17","text":" @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately."},"id":3421,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"4826:7:17","nodeType":"FunctionDefinition","parameters":{"id":3396,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3391,"mutability":"mutable","name":"hash","nameLocation":"4842:4:17","nodeType":"VariableDeclaration","scope":3421,"src":"4834:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3390,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4834:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3393,"mutability":"mutable","name":"r","nameLocation":"4856:1:17","nodeType":"VariableDeclaration","scope":3421,"src":"4848:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3392,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4848:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3395,"mutability":"mutable","name":"vs","nameLocation":"4867:2:17","nodeType":"VariableDeclaration","scope":3421,"src":"4859:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3394,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4859:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4833:37:17"},"returnParameters":{"id":3399,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3398,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3421,"src":"4894:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3397,"name":"address","nodeType":"ElementaryTypeName","src":"4894:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4893:9:17"},"scope":3582,"src":"4817:250:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3495,"nodeType":"Block","src":"5382:1372:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3442,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3430,"src":"6278:1:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3441,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6270:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3440,"name":"uint256","nodeType":"ElementaryTypeName","src":"6270:7:17","typeDescriptions":{}}},"id":3443,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6270:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130","id":3444,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6283:66:17","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1","typeString":"int_const 5789...(69 digits omitted)...7168"},"value":"0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"},"src":"6270:79:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3456,"nodeType":"IfStatement","src":"6266:164:17","trueBody":{"id":3455,"nodeType":"Block","src":"6351:79:17","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":3448,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6381:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3447,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6373:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3446,"name":"address","nodeType":"ElementaryTypeName","src":"6373:7:17","typeDescriptions":{}}},"id":3449,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6373:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3450,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3242,"src":"6385:12:17","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3242_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3451,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6398:17:17","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":3241,"src":"6385:30:17","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3242","typeString":"enum ECDSA.RecoverError"}},{"id":3452,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3430,"src":"6417:1:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":3453,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6372:47:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3242_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3439,"id":3454,"nodeType":"Return","src":"6365:54:17"}]}},{"assignments":[3458],"declarations":[{"constant":false,"id":3458,"mutability":"mutable","name":"signer","nameLocation":"6532:6:17","nodeType":"VariableDeclaration","scope":3495,"src":"6524:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3457,"name":"address","nodeType":"ElementaryTypeName","src":"6524:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3465,"initialValue":{"arguments":[{"id":3460,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3424,"src":"6551:4:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3461,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3426,"src":"6557:1:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":3462,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3428,"src":"6560:1:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3463,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3430,"src":"6563:1:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3459,"name":"ecrecover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-6,"src":"6541:9:17","typeDescriptions":{"typeIdentifier":"t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":3464,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6541:24:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6524:41:17"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3466,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3458,"src":"6579:6:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":3469,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6597:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3468,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6589:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3467,"name":"address","nodeType":"ElementaryTypeName","src":"6589:7:17","typeDescriptions":{}}},"id":3470,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6589:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6579:20:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3485,"nodeType":"IfStatement","src":"6575:113:17","trueBody":{"id":3484,"nodeType":"Block","src":"6601:87:17","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":3474,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6631:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3473,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6623:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3472,"name":"address","nodeType":"ElementaryTypeName","src":"6623:7:17","typeDescriptions":{}}},"id":3475,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6623:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3476,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3242,"src":"6635:12:17","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3242_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3477,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6648:16:17","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":3239,"src":"6635:29:17","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3242","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"hexValue":"30","id":3480,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6674:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3479,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6666:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3478,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6666:7:17","typeDescriptions":{}}},"id":3481,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6666:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":3482,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6622:55:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3242_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3439,"id":3483,"nodeType":"Return","src":"6615:62:17"}]}},{"expression":{"components":[{"id":3486,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3458,"src":"6706:6:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3487,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3242,"src":"6714:12:17","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3242_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3488,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6727:7:17","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":3238,"src":"6714:20:17","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3242","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"hexValue":"30","id":3491,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6744:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3490,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6736:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3489,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6736:7:17","typeDescriptions":{}}},"id":3492,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6736:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":3493,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6705:42:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3242_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3439,"id":3494,"nodeType":"Return","src":"6698:49:17"}]},"documentation":{"id":3422,"nodeType":"StructuredDocumentation","src":"5073:125:17","text":" @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":3496,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"5212:10:17","nodeType":"FunctionDefinition","parameters":{"id":3431,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3424,"mutability":"mutable","name":"hash","nameLocation":"5240:4:17","nodeType":"VariableDeclaration","scope":3496,"src":"5232:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3423,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5232:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3426,"mutability":"mutable","name":"v","nameLocation":"5260:1:17","nodeType":"VariableDeclaration","scope":3496,"src":"5254:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3425,"name":"uint8","nodeType":"ElementaryTypeName","src":"5254:5:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":3428,"mutability":"mutable","name":"r","nameLocation":"5279:1:17","nodeType":"VariableDeclaration","scope":3496,"src":"5271:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3427,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5271:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3430,"mutability":"mutable","name":"s","nameLocation":"5298:1:17","nodeType":"VariableDeclaration","scope":3496,"src":"5290:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3429,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5290:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5222:83:17"},"returnParameters":{"id":3439,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3433,"mutability":"mutable","name":"recovered","nameLocation":"5337:9:17","nodeType":"VariableDeclaration","scope":3496,"src":"5329:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3432,"name":"address","nodeType":"ElementaryTypeName","src":"5329:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3436,"mutability":"mutable","name":"err","nameLocation":"5361:3:17","nodeType":"VariableDeclaration","scope":3496,"src":"5348:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3242","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3435,"nodeType":"UserDefinedTypeName","pathNode":{"id":3434,"name":"RecoverError","nameLocations":["5348:12:17"],"nodeType":"IdentifierPath","referencedDeclaration":3242,"src":"5348:12:17"},"referencedDeclaration":3242,"src":"5348:12:17","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3242","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3438,"mutability":"mutable","name":"errArg","nameLocation":"5374:6:17","nodeType":"VariableDeclaration","scope":3496,"src":"5366:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3437,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5366:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5328:53:17"},"scope":3582,"src":"5203:1551:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3531,"nodeType":"Block","src":"6981:166:17","statements":[{"assignments":[3511,3514,3516],"declarations":[{"constant":false,"id":3511,"mutability":"mutable","name":"recovered","nameLocation":"7000:9:17","nodeType":"VariableDeclaration","scope":3531,"src":"6992:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3510,"name":"address","nodeType":"ElementaryTypeName","src":"6992:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3514,"mutability":"mutable","name":"error","nameLocation":"7024:5:17","nodeType":"VariableDeclaration","scope":3531,"src":"7011:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3242","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3513,"nodeType":"UserDefinedTypeName","pathNode":{"id":3512,"name":"RecoverError","nameLocations":["7011:12:17"],"nodeType":"IdentifierPath","referencedDeclaration":3242,"src":"7011:12:17"},"referencedDeclaration":3242,"src":"7011:12:17","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3242","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3516,"mutability":"mutable","name":"errorArg","nameLocation":"7039:8:17","nodeType":"VariableDeclaration","scope":3531,"src":"7031:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3515,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7031:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3523,"initialValue":{"arguments":[{"id":3518,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3499,"src":"7062:4:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3519,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3501,"src":"7068:1:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":3520,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3503,"src":"7071:1:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3521,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3505,"src":"7074:1:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3517,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3308,3388,3496],"referencedDeclaration":3496,"src":"7051:10:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$3242_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":3522,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7051:25:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3242_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"6991:85:17"},{"expression":{"arguments":[{"id":3525,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3514,"src":"7098:5:17","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3242","typeString":"enum ECDSA.RecoverError"}},{"id":3526,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3516,"src":"7105:8:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$3242","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3524,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3581,"src":"7086:11:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$3242_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":3527,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7086:28:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3528,"nodeType":"ExpressionStatement","src":"7086:28:17"},{"expression":{"id":3529,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3511,"src":"7131:9:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3509,"id":3530,"nodeType":"Return","src":"7124:16:17"}]},"documentation":{"id":3497,"nodeType":"StructuredDocumentation","src":"6760:122:17","text":" @dev Overload of {ECDSA-recover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":3532,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"6896:7:17","nodeType":"FunctionDefinition","parameters":{"id":3506,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3499,"mutability":"mutable","name":"hash","nameLocation":"6912:4:17","nodeType":"VariableDeclaration","scope":3532,"src":"6904:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3498,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6904:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3501,"mutability":"mutable","name":"v","nameLocation":"6924:1:17","nodeType":"VariableDeclaration","scope":3532,"src":"6918:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3500,"name":"uint8","nodeType":"ElementaryTypeName","src":"6918:5:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":3503,"mutability":"mutable","name":"r","nameLocation":"6935:1:17","nodeType":"VariableDeclaration","scope":3532,"src":"6927:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3502,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6927:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3505,"mutability":"mutable","name":"s","nameLocation":"6946:1:17","nodeType":"VariableDeclaration","scope":3532,"src":"6938:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3504,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6938:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6903:45:17"},"returnParameters":{"id":3509,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3508,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3532,"src":"6972:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3507,"name":"address","nodeType":"ElementaryTypeName","src":"6972:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6971:9:17"},"scope":3582,"src":"6887:260:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3580,"nodeType":"Block","src":"7352:460:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$3242","typeString":"enum ECDSA.RecoverError"},"id":3544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3541,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3536,"src":"7366:5:17","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3242","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3542,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3242,"src":"7375:12:17","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3242_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3543,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7388:7:17","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":3238,"src":"7375:20:17","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3242","typeString":"enum ECDSA.RecoverError"}},"src":"7366:29:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$3242","typeString":"enum ECDSA.RecoverError"},"id":3550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3547,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3536,"src":"7462:5:17","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3242","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3548,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3242,"src":"7471:12:17","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3242_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3549,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7484:16:17","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":3239,"src":"7471:29:17","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3242","typeString":"enum ECDSA.RecoverError"}},"src":"7462:38:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$3242","typeString":"enum ECDSA.RecoverError"},"id":3558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3555,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3536,"src":"7567:5:17","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3242","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3556,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3242,"src":"7576:12:17","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3242_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3557,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7589:22:17","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":3240,"src":"7576:35:17","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3242","typeString":"enum ECDSA.RecoverError"}},"src":"7567:44:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$3242","typeString":"enum ECDSA.RecoverError"},"id":3570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3567,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3536,"src":"7701:5:17","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3242","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3568,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3242,"src":"7710:12:17","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3242_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3569,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7723:17:17","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":3241,"src":"7710:30:17","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3242","typeString":"enum ECDSA.RecoverError"}},"src":"7701:39:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3576,"nodeType":"IfStatement","src":"7697:109:17","trueBody":{"id":3575,"nodeType":"Block","src":"7742:64:17","statements":[{"errorCall":{"arguments":[{"id":3572,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3538,"src":"7786:8:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3571,"name":"ECDSAInvalidSignatureS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3255,"src":"7763:22:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes32_$returns$__$","typeString":"function (bytes32) pure"}},"id":3573,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7763:32:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3574,"nodeType":"RevertStatement","src":"7756:39:17"}]}},"id":3577,"nodeType":"IfStatement","src":"7563:243:17","trueBody":{"id":3566,"nodeType":"Block","src":"7613:78:17","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":3562,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3538,"src":"7670:8:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3561,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7662:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3560,"name":"uint256","nodeType":"ElementaryTypeName","src":"7662:7:17","typeDescriptions":{}}},"id":3563,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7662:17:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3559,"name":"ECDSAInvalidSignatureLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3250,"src":"7634:27:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3564,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7634:46:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3565,"nodeType":"RevertStatement","src":"7627:53:17"}]}},"id":3578,"nodeType":"IfStatement","src":"7458:348:17","trueBody":{"id":3554,"nodeType":"Block","src":"7502:55:17","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3551,"name":"ECDSAInvalidSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3245,"src":"7523:21:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3552,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7523:23:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3553,"nodeType":"RevertStatement","src":"7516:30:17"}]}},"id":3579,"nodeType":"IfStatement","src":"7362:444:17","trueBody":{"id":3546,"nodeType":"Block","src":"7397:55:17","statements":[{"functionReturnParameters":3540,"id":3545,"nodeType":"Return","src":"7411:7:17"}]}}]},"documentation":{"id":3533,"nodeType":"StructuredDocumentation","src":"7153:122:17","text":" @dev Optionally reverts with the corresponding custom error according to the `error` argument provided."},"id":3581,"implemented":true,"kind":"function","modifiers":[],"name":"_throwError","nameLocation":"7289:11:17","nodeType":"FunctionDefinition","parameters":{"id":3539,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3536,"mutability":"mutable","name":"error","nameLocation":"7314:5:17","nodeType":"VariableDeclaration","scope":3581,"src":"7301:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3242","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3535,"nodeType":"UserDefinedTypeName","pathNode":{"id":3534,"name":"RecoverError","nameLocations":["7301:12:17"],"nodeType":"IdentifierPath","referencedDeclaration":3242,"src":"7301:12:17"},"referencedDeclaration":3242,"src":"7301:12:17","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3242","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3538,"mutability":"mutable","name":"errorArg","nameLocation":"7329:8:17","nodeType":"VariableDeclaration","scope":3581,"src":"7321:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3537,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7321:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7300:38:17"},"returnParameters":{"id":3540,"nodeType":"ParameterList","parameters":[],"src":"7352:0:17"},"scope":3582,"src":"7280:532:17","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":3583,"src":"344:7470:17","usedErrors":[3245,3250,3255],"usedEvents":[]}],"src":"112:7703:17"},"id":17},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/EIP712.sol","exportedSymbols":{"EIP712":[3809],"IERC5267":[172],"MessageHashUtils":[3895],"ShortString":[1497],"ShortStrings":[1708]},"id":3810,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3584,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"113:24:18"},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol","file":"./MessageHashUtils.sol","id":3586,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3810,"sourceUnit":3896,"src":"139:56:18","symbolAliases":[{"foreign":{"id":3585,"name":"MessageHashUtils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3895,"src":"147:16:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/ShortStrings.sol","file":"../ShortStrings.sol","id":3589,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3810,"sourceUnit":1709,"src":"196:62:18","symbolAliases":[{"foreign":{"id":3587,"name":"ShortStrings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1708,"src":"204:12:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":3588,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1497,"src":"218:11:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC5267.sol","file":"../../interfaces/IERC5267.sol","id":3591,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3810,"sourceUnit":173,"src":"259:55:18","symbolAliases":[{"foreign":{"id":3590,"name":"IERC5267","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":172,"src":"267:8:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":3593,"name":"IERC5267","nameLocations":["1988:8:18"],"nodeType":"IdentifierPath","referencedDeclaration":172,"src":"1988:8:18"},"id":3594,"nodeType":"InheritanceSpecifier","src":"1988:8:18"}],"canonicalName":"EIP712","contractDependencies":[],"contractKind":"contract","documentation":{"id":3592,"nodeType":"StructuredDocumentation","src":"316:1643:18","text":" @dev https://eips.ethereum.org/EIPS/eip-712[EIP-712] is a standard for hashing and signing of typed structured data.\n The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose\n encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract\n does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to\n produce the hash of their typed data using a combination of `abi.encode` and `keccak256`.\n This contract implements the EIP-712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n ({_hashTypedDataV4}).\n The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n the chain id to protect against replay attacks on an eventual fork of the chain.\n NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain\n separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the\n separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\n @custom:oz-upgrades-unsafe-allow state-variable-immutable"},"fullyImplemented":true,"id":3809,"linearizedBaseContracts":[3809,172],"name":"EIP712","nameLocation":"1978:6:18","nodeType":"ContractDefinition","nodes":[{"global":false,"id":3596,"libraryName":{"id":3595,"name":"ShortStrings","nameLocations":["2009:12:18"],"nodeType":"IdentifierPath","referencedDeclaration":1708,"src":"2009:12:18"},"nodeType":"UsingForDirective","src":"2003:25:18"},{"constant":true,"id":3601,"mutability":"constant","name":"TYPE_HASH","nameLocation":"2059:9:18","nodeType":"VariableDeclaration","scope":3809,"src":"2034:140:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3597,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2034:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429","id":3599,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2089:84:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""},"value":"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""}],"id":3598,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2079:9:18","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3600,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2079:95:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":3603,"mutability":"immutable","name":"_cachedDomainSeparator","nameLocation":"2399:22:18","nodeType":"VariableDeclaration","scope":3809,"src":"2373:48:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3602,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2373:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":3605,"mutability":"immutable","name":"_cachedChainId","nameLocation":"2453:14:18","nodeType":"VariableDeclaration","scope":3809,"src":"2427:40:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3604,"name":"uint256","nodeType":"ElementaryTypeName","src":"2427:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":3607,"mutability":"immutable","name":"_cachedThis","nameLocation":"2499:11:18","nodeType":"VariableDeclaration","scope":3809,"src":"2473:37:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3606,"name":"address","nodeType":"ElementaryTypeName","src":"2473:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"constant":false,"id":3609,"mutability":"immutable","name":"_hashedName","nameLocation":"2543:11:18","nodeType":"VariableDeclaration","scope":3809,"src":"2517:37:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3608,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2517:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":3611,"mutability":"immutable","name":"_hashedVersion","nameLocation":"2586:14:18","nodeType":"VariableDeclaration","scope":3809,"src":"2560:40:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3610,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2560:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":3614,"mutability":"immutable","name":"_name","nameLocation":"2637:5:18","nodeType":"VariableDeclaration","scope":3809,"src":"2607:35:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1497","typeString":"ShortString"},"typeName":{"id":3613,"nodeType":"UserDefinedTypeName","pathNode":{"id":3612,"name":"ShortString","nameLocations":["2607:11:18"],"nodeType":"IdentifierPath","referencedDeclaration":1497,"src":"2607:11:18"},"referencedDeclaration":1497,"src":"2607:11:18","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1497","typeString":"ShortString"}},"visibility":"private"},{"constant":false,"id":3617,"mutability":"immutable","name":"_version","nameLocation":"2678:8:18","nodeType":"VariableDeclaration","scope":3809,"src":"2648:38:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1497","typeString":"ShortString"},"typeName":{"id":3616,"nodeType":"UserDefinedTypeName","pathNode":{"id":3615,"name":"ShortString","nameLocations":["2648:11:18"],"nodeType":"IdentifierPath","referencedDeclaration":1497,"src":"2648:11:18"},"referencedDeclaration":1497,"src":"2648:11:18","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1497","typeString":"ShortString"}},"visibility":"private"},{"constant":false,"id":3619,"mutability":"mutable","name":"_nameFallback","nameLocation":"2757:13:18","nodeType":"VariableDeclaration","scope":3809,"src":"2742:28:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":3618,"name":"string","nodeType":"ElementaryTypeName","src":"2742:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":3621,"mutability":"mutable","name":"_versionFallback","nameLocation":"2841:16:18","nodeType":"VariableDeclaration","scope":3809,"src":"2826:31:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":3620,"name":"string","nodeType":"ElementaryTypeName","src":"2826:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":3678,"nodeType":"Block","src":"3483:376:18","statements":[{"expression":{"id":3634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3629,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3614,"src":"3493:5:18","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1497","typeString":"ShortString"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3632,"name":"_nameFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3619,"src":"3532:13:18","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":3630,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3624,"src":"3501:4:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":3631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3506:25:18","memberName":"toShortStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":1649,"src":"3501:30:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_storage_ptr_$returns$_t_userDefinedValueType$_ShortString_$1497_$attached_to$_t_string_memory_ptr_$","typeString":"function (string memory,string storage pointer) returns (ShortString)"}},"id":3633,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3501:45:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1497","typeString":"ShortString"}},"src":"3493:53:18","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1497","typeString":"ShortString"}},"id":3635,"nodeType":"ExpressionStatement","src":"3493:53:18"},{"expression":{"id":3641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3636,"name":"_version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3617,"src":"3556:8:18","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1497","typeString":"ShortString"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3639,"name":"_versionFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3621,"src":"3601:16:18","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":3637,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3626,"src":"3567:7:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":3638,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3575:25:18","memberName":"toShortStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":1649,"src":"3567:33:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_storage_ptr_$returns$_t_userDefinedValueType$_ShortString_$1497_$attached_to$_t_string_memory_ptr_$","typeString":"function (string memory,string storage pointer) returns (ShortString)"}},"id":3640,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3567:51:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1497","typeString":"ShortString"}},"src":"3556:62:18","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1497","typeString":"ShortString"}},"id":3642,"nodeType":"ExpressionStatement","src":"3556:62:18"},{"expression":{"id":3650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3643,"name":"_hashedName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3609,"src":"3628:11:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":3647,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3624,"src":"3658:4:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3646,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3652:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3645,"name":"bytes","nodeType":"ElementaryTypeName","src":"3652:5:18","typeDescriptions":{}}},"id":3648,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3652:11:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3644,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3642:9:18","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3649,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3642:22:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3628:36:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3651,"nodeType":"ExpressionStatement","src":"3628:36:18"},{"expression":{"id":3659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3652,"name":"_hashedVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3611,"src":"3674:14:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":3656,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3626,"src":"3707:7:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3655,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3701:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3654,"name":"bytes","nodeType":"ElementaryTypeName","src":"3701:5:18","typeDescriptions":{}}},"id":3657,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3701:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3653,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3691:9:18","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3658,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3691:25:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3674:42:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3660,"nodeType":"ExpressionStatement","src":"3674:42:18"},{"expression":{"id":3664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3661,"name":"_cachedChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3605,"src":"3727:14:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":3662,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3744:5:18","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3750:7:18","memberName":"chainid","nodeType":"MemberAccess","src":"3744:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3727:30:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3665,"nodeType":"ExpressionStatement","src":"3727:30:18"},{"expression":{"id":3669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3666,"name":"_cachedDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3603,"src":"3767:22:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"id":3667,"name":"_buildDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3726,"src":"3792:21:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":3668,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3792:23:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3767:48:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3670,"nodeType":"ExpressionStatement","src":"3767:48:18"},{"expression":{"id":3676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3671,"name":"_cachedThis","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3607,"src":"3825:11:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3674,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3847:4:18","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$3809","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$3809","typeString":"contract EIP712"}],"id":3673,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3839:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3672,"name":"address","nodeType":"ElementaryTypeName","src":"3839:7:18","typeDescriptions":{}}},"id":3675,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3839:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3825:27:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3677,"nodeType":"ExpressionStatement","src":"3825:27:18"}]},"documentation":{"id":3622,"nodeType":"StructuredDocumentation","src":"2864:559:18","text":" @dev Initializes the domain separator and parameter caches.\n The meaning of `name` and `version` is specified in\n https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP-712]:\n - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n - `version`: the current major version of the signing domain.\n NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n contract upgrade]."},"id":3679,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":3627,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3624,"mutability":"mutable","name":"name","nameLocation":"3454:4:18","nodeType":"VariableDeclaration","scope":3679,"src":"3440:18:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3623,"name":"string","nodeType":"ElementaryTypeName","src":"3440:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3626,"mutability":"mutable","name":"version","nameLocation":"3474:7:18","nodeType":"VariableDeclaration","scope":3679,"src":"3460:21:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3625,"name":"string","nodeType":"ElementaryTypeName","src":"3460:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3439:43:18"},"returnParameters":{"id":3628,"nodeType":"ParameterList","parameters":[],"src":"3483:0:18"},"scope":3809,"src":"3428:431:18","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3704,"nodeType":"Block","src":"4007:200:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3687,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4029:4:18","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$3809","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$3809","typeString":"contract EIP712"}],"id":3686,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4021:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3685,"name":"address","nodeType":"ElementaryTypeName","src":"4021:7:18","typeDescriptions":{}}},"id":3688,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4021:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3689,"name":"_cachedThis","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3607,"src":"4038:11:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4021:28:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3691,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4053:5:18","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4059:7:18","memberName":"chainid","nodeType":"MemberAccess","src":"4053:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3693,"name":"_cachedChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3605,"src":"4070:14:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4053:31:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4021:63:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3702,"nodeType":"Block","src":"4146:55:18","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3699,"name":"_buildDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3726,"src":"4167:21:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":3700,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4167:23:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3684,"id":3701,"nodeType":"Return","src":"4160:30:18"}]},"id":3703,"nodeType":"IfStatement","src":"4017:184:18","trueBody":{"id":3698,"nodeType":"Block","src":"4086:54:18","statements":[{"expression":{"id":3696,"name":"_cachedDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3603,"src":"4107:22:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3684,"id":3697,"nodeType":"Return","src":"4100:29:18"}]}}]},"documentation":{"id":3680,"nodeType":"StructuredDocumentation","src":"3865:75:18","text":" @dev Returns the domain separator for the current chain."},"id":3705,"implemented":true,"kind":"function","modifiers":[],"name":"_domainSeparatorV4","nameLocation":"3954:18:18","nodeType":"FunctionDefinition","parameters":{"id":3681,"nodeType":"ParameterList","parameters":[],"src":"3972:2:18"},"returnParameters":{"id":3684,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3683,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3705,"src":"3998:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3682,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3998:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3997:9:18"},"scope":3809,"src":"3945:262:18","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3725,"nodeType":"Block","src":"4277:115:18","statements":[{"expression":{"arguments":[{"arguments":[{"id":3713,"name":"TYPE_HASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3601,"src":"4315:9:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3714,"name":"_hashedName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3609,"src":"4326:11:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3715,"name":"_hashedVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3611,"src":"4339:14:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":3716,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4355:5:18","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4361:7:18","memberName":"chainid","nodeType":"MemberAccess","src":"4355:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":3720,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4378:4:18","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$3809","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$3809","typeString":"contract EIP712"}],"id":3719,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4370:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3718,"name":"address","nodeType":"ElementaryTypeName","src":"4370:7:18","typeDescriptions":{}}},"id":3721,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4370:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3711,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4304:3:18","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3712,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4308:6:18","memberName":"encode","nodeType":"MemberAccess","src":"4304:10:18","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3722,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4304:80:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3710,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4294:9:18","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3723,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4294:91:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3709,"id":3724,"nodeType":"Return","src":"4287:98:18"}]},"id":3726,"implemented":true,"kind":"function","modifiers":[],"name":"_buildDomainSeparator","nameLocation":"4222:21:18","nodeType":"FunctionDefinition","parameters":{"id":3706,"nodeType":"ParameterList","parameters":[],"src":"4243:2:18"},"returnParameters":{"id":3709,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3708,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3726,"src":"4268:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3707,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4268:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4267:9:18"},"scope":3809,"src":"4213:179:18","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":3741,"nodeType":"Block","src":"5103:90:18","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":3736,"name":"_domainSeparatorV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3705,"src":"5153:18:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":3737,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5153:20:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3738,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3729,"src":"5175:10:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":3734,"name":"MessageHashUtils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3895,"src":"5120:16:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MessageHashUtils_$3895_$","typeString":"type(library MessageHashUtils)"}},"id":3735,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5137:15:18","memberName":"toTypedDataHash","nodeType":"MemberAccess","referencedDeclaration":3894,"src":"5120:32:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":3739,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5120:66:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3733,"id":3740,"nodeType":"Return","src":"5113:73:18"}]},"documentation":{"id":3727,"nodeType":"StructuredDocumentation","src":"4398:614:18","text":" @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n function returns the hash of the fully encoded EIP712 message for this domain.\n This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n ```solidity\n bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     keccak256(\"Mail(address to,string contents)\"),\n     mailTo,\n     keccak256(bytes(mailContents))\n )));\n address signer = ECDSA.recover(digest, signature);\n ```"},"id":3742,"implemented":true,"kind":"function","modifiers":[],"name":"_hashTypedDataV4","nameLocation":"5026:16:18","nodeType":"FunctionDefinition","parameters":{"id":3730,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3729,"mutability":"mutable","name":"structHash","nameLocation":"5051:10:18","nodeType":"VariableDeclaration","scope":3742,"src":"5043:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3728,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5043:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5042:20:18"},"returnParameters":{"id":3733,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3732,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3742,"src":"5094:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3731,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5094:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5093:9:18"},"scope":3809,"src":"5017:176:18","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[171],"body":{"id":3783,"nodeType":"Block","src":"5571:229:18","statements":[{"expression":{"components":[{"hexValue":"0f","id":3761,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"5602:7:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c","typeString":"literal_string hex\"0f\""},"value":"\u000f"},{"arguments":[],"expression":{"argumentTypes":[],"id":3762,"name":"_EIP712Name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3796,"src":"5632:11:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":3763,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5632:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[],"expression":{"argumentTypes":[],"id":3764,"name":"_EIP712Version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3808,"src":"5659:14:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":3765,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5659:16:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":3766,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5689:5:18","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5695:7:18","memberName":"chainid","nodeType":"MemberAccess","src":"5689:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":3770,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5724:4:18","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$3809","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$3809","typeString":"contract EIP712"}],"id":3769,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5716:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3768,"name":"address","nodeType":"ElementaryTypeName","src":"5716:7:18","typeDescriptions":{}}},"id":3771,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5716:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":3774,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5751:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3773,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5743:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3772,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5743:7:18","typeDescriptions":{}}},"id":3775,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5743:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"hexValue":"30","id":3779,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5781:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3778,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"5767:13:18","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":3776,"name":"uint256","nodeType":"ElementaryTypeName","src":"5771:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3777,"nodeType":"ArrayTypeName","src":"5771:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":3780,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5767:16:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"id":3781,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5588:205:18","typeDescriptions":{"typeIdentifier":"t_tuple$_t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_address_$_t_bytes32_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(literal_string hex\"0f\",string memory,string memory,uint256,address,bytes32,uint256[] memory)"}},"functionReturnParameters":3760,"id":3782,"nodeType":"Return","src":"5581:212:18"}]},"documentation":{"id":3743,"nodeType":"StructuredDocumentation","src":"5199:39:18","text":" @inheritdoc IERC5267"},"functionSelector":"84b0196e","id":3784,"implemented":true,"kind":"function","modifiers":[],"name":"eip712Domain","nameLocation":"5252:12:18","nodeType":"FunctionDefinition","parameters":{"id":3744,"nodeType":"ParameterList","parameters":[],"src":"5264:2:18"},"returnParameters":{"id":3760,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3746,"mutability":"mutable","name":"fields","nameLocation":"5348:6:18","nodeType":"VariableDeclaration","scope":3784,"src":"5341:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":3745,"name":"bytes1","nodeType":"ElementaryTypeName","src":"5341:6:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"},{"constant":false,"id":3748,"mutability":"mutable","name":"name","nameLocation":"5382:4:18","nodeType":"VariableDeclaration","scope":3784,"src":"5368:18:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3747,"name":"string","nodeType":"ElementaryTypeName","src":"5368:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3750,"mutability":"mutable","name":"version","nameLocation":"5414:7:18","nodeType":"VariableDeclaration","scope":3784,"src":"5400:21:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3749,"name":"string","nodeType":"ElementaryTypeName","src":"5400:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3752,"mutability":"mutable","name":"chainId","nameLocation":"5443:7:18","nodeType":"VariableDeclaration","scope":3784,"src":"5435:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3751,"name":"uint256","nodeType":"ElementaryTypeName","src":"5435:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3754,"mutability":"mutable","name":"verifyingContract","nameLocation":"5472:17:18","nodeType":"VariableDeclaration","scope":3784,"src":"5464:25:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3753,"name":"address","nodeType":"ElementaryTypeName","src":"5464:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3756,"mutability":"mutable","name":"salt","nameLocation":"5511:4:18","nodeType":"VariableDeclaration","scope":3784,"src":"5503:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3755,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5503:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3759,"mutability":"mutable","name":"extensions","nameLocation":"5546:10:18","nodeType":"VariableDeclaration","scope":3784,"src":"5529:27:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3757,"name":"uint256","nodeType":"ElementaryTypeName","src":"5529:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3758,"nodeType":"ArrayTypeName","src":"5529:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"5327:239:18"},"scope":3809,"src":"5243:557:18","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":3795,"nodeType":"Block","src":"6181:65:18","statements":[{"expression":{"arguments":[{"id":3792,"name":"_nameFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3619,"src":"6225:13:18","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":3790,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3614,"src":"6198:5:18","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1497","typeString":"ShortString"}},"id":3791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6204:20:18","memberName":"toStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":1676,"src":"6198:26:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1497_$_t_string_storage_ptr_$returns$_t_string_memory_ptr_$attached_to$_t_userDefinedValueType$_ShortString_$1497_$","typeString":"function (ShortString,string storage pointer) pure returns (string memory)"}},"id":3793,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6198:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3789,"id":3794,"nodeType":"Return","src":"6191:48:18"}]},"documentation":{"id":3785,"nodeType":"StructuredDocumentation","src":"5806:256:18","text":" @dev The name parameter for the EIP712 domain.\n NOTE: By default this function reads _name which is an immutable value.\n It only reads from storage if necessary (in case the value is too large to fit in a ShortString)."},"id":3796,"implemented":true,"kind":"function","modifiers":[],"name":"_EIP712Name","nameLocation":"6129:11:18","nodeType":"FunctionDefinition","parameters":{"id":3786,"nodeType":"ParameterList","parameters":[],"src":"6140:2:18"},"returnParameters":{"id":3789,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3788,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3796,"src":"6166:13:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3787,"name":"string","nodeType":"ElementaryTypeName","src":"6166:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6165:15:18"},"scope":3809,"src":"6120:126:18","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3807,"nodeType":"Block","src":"6636:71:18","statements":[{"expression":{"arguments":[{"id":3804,"name":"_versionFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3621,"src":"6683:16:18","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":3802,"name":"_version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3617,"src":"6653:8:18","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1497","typeString":"ShortString"}},"id":3803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6662:20:18","memberName":"toStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":1676,"src":"6653:29:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1497_$_t_string_storage_ptr_$returns$_t_string_memory_ptr_$attached_to$_t_userDefinedValueType$_ShortString_$1497_$","typeString":"function (ShortString,string storage pointer) pure returns (string memory)"}},"id":3805,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6653:47:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3801,"id":3806,"nodeType":"Return","src":"6646:54:18"}]},"documentation":{"id":3797,"nodeType":"StructuredDocumentation","src":"6252:262:18","text":" @dev The version parameter for the EIP712 domain.\n NOTE: By default this function reads _version which is an immutable value.\n It only reads from storage if necessary (in case the value is too large to fit in a ShortString)."},"id":3808,"implemented":true,"kind":"function","modifiers":[],"name":"_EIP712Version","nameLocation":"6581:14:18","nodeType":"FunctionDefinition","parameters":{"id":3798,"nodeType":"ParameterList","parameters":[],"src":"6595:2:18"},"returnParameters":{"id":3801,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3800,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3808,"src":"6621:13:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3799,"name":"string","nodeType":"ElementaryTypeName","src":"6621:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6620:15:18"},"scope":3809,"src":"6572:135:18","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":3810,"src":"1960:4749:18","usedErrors":[1505,1507],"usedEvents":[152]}],"src":"113:6597:18"},"id":18},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol","exportedSymbols":{"MessageHashUtils":[3895],"Strings":[3234]},"id":3896,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3811,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"123:24:19"},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../Strings.sol","id":3813,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3896,"sourceUnit":3235,"src":"149:39:19","symbolAliases":[{"foreign":{"id":3812,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3234,"src":"157:7:19","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"MessageHashUtils","contractDependencies":[],"contractKind":"library","documentation":{"id":3814,"nodeType":"StructuredDocumentation","src":"190:330:19","text":" @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n The library provides methods for generating a hash of a message that conforms to the\n https://eips.ethereum.org/EIPS/eip-191[ERC-191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n specifications."},"fullyImplemented":true,"id":3895,"linearizedBaseContracts":[3895],"name":"MessageHashUtils","nameLocation":"529:16:19","nodeType":"ContractDefinition","nodes":[{"body":{"id":3823,"nodeType":"Block","src":"1339:341:19","statements":[{"AST":{"nodeType":"YulBlock","src":"1374:300:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1395:4:19","type":"","value":"0x00"},{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a3332","kind":"string","nodeType":"YulLiteral","src":"1401:34:19","type":"","value":"\u0019Ethereum Signed Message:\n32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1388:6:19"},"nodeType":"YulFunctionCall","src":"1388:48:19"},"nodeType":"YulExpressionStatement","src":"1388:48:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1497:4:19","type":"","value":"0x1c"},{"name":"messageHash","nodeType":"YulIdentifier","src":"1503:11:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1490:6:19"},"nodeType":"YulFunctionCall","src":"1490:25:19"},"nodeType":"YulExpressionStatement","src":"1490:25:19"},{"nodeType":"YulAssignment","src":"1569:31:19","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1589:4:19","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"1595:4:19","type":"","value":"0x3c"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"1579:9:19"},"nodeType":"YulFunctionCall","src":"1579:21:19"},"variableNames":[{"name":"digest","nodeType":"YulIdentifier","src":"1569:6:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3820,"isOffset":false,"isSlot":false,"src":"1569:6:19","valueSize":1},{"declaration":3817,"isOffset":false,"isSlot":false,"src":"1503:11:19","valueSize":1}],"flags":["memory-safe"],"id":3822,"nodeType":"InlineAssembly","src":"1349:325:19"}]},"documentation":{"id":3815,"nodeType":"StructuredDocumentation","src":"552:690:19","text":" @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing a bytes32 `messageHash` with\n `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n hash signed when using the https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sign[`eth_sign`] JSON-RPC method.\n NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n keccak256, although any bytes32 value can be safely used because the final digest will\n be re-hashed.\n See {ECDSA-recover}."},"id":3824,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"1256:22:19","nodeType":"FunctionDefinition","parameters":{"id":3818,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3817,"mutability":"mutable","name":"messageHash","nameLocation":"1287:11:19","nodeType":"VariableDeclaration","scope":3824,"src":"1279:19:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3816,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1279:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1278:21:19"},"returnParameters":{"id":3821,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3820,"mutability":"mutable","name":"digest","nameLocation":"1331:6:19","nodeType":"VariableDeclaration","scope":3824,"src":"1323:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3819,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1323:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1322:16:19"},"scope":3895,"src":"1247:433:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3849,"nodeType":"Block","src":"2257:143:19","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a","id":3836,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2309:32:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},"value":"\u0019Ethereum Signed Message:\n"},{"arguments":[{"arguments":[{"expression":{"id":3841,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3827,"src":"2366:7:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2374:6:19","memberName":"length","nodeType":"MemberAccess","src":"2366:14:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3839,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3234,"src":"2349:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$3234_$","typeString":"type(library Strings)"}},"id":3840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2357:8:19","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":1946,"src":"2349:16:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":3843,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2349:32:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3838,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2343:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3837,"name":"bytes","nodeType":"ElementaryTypeName","src":"2343:5:19","typeDescriptions":{}}},"id":3844,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2343:39:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3845,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3827,"src":"2384:7:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3834,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2296:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3833,"name":"bytes","nodeType":"ElementaryTypeName","src":"2296:5:19","typeDescriptions":{}}},"id":3835,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2302:6:19","memberName":"concat","nodeType":"MemberAccess","src":"2296:12:19","typeDescriptions":{"typeIdentifier":"t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3846,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2296:96:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3832,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2286:9:19","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3847,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2286:107:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3831,"id":3848,"nodeType":"Return","src":"2267:126:19"}]},"documentation":{"id":3825,"nodeType":"StructuredDocumentation","src":"1686:480:19","text":" @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing an arbitrary `message` with\n `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n hash signed when using the https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sign[`eth_sign`] JSON-RPC method.\n See {ECDSA-recover}."},"id":3850,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"2180:22:19","nodeType":"FunctionDefinition","parameters":{"id":3828,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3827,"mutability":"mutable","name":"message","nameLocation":"2216:7:19","nodeType":"VariableDeclaration","scope":3850,"src":"2203:20:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3826,"name":"bytes","nodeType":"ElementaryTypeName","src":"2203:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2202:22:19"},"returnParameters":{"id":3831,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3830,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3850,"src":"2248:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3829,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2248:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2247:9:19"},"scope":3895,"src":"2171:229:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3869,"nodeType":"Block","src":"2854:80:19","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"1900","id":3863,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"2898:10:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},"value":"\u0019\u0000"},{"id":3864,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3853,"src":"2910:9:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3865,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3855,"src":"2921:4:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3861,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2881:3:19","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3862,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2885:12:19","memberName":"encodePacked","nodeType":"MemberAccess","src":"2881:16:19","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3866,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2881:45:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3860,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2871:9:19","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3867,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2871:56:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3859,"id":3868,"nodeType":"Return","src":"2864:63:19"}]},"documentation":{"id":3851,"nodeType":"StructuredDocumentation","src":"2406:332:19","text":" @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x00` (data with intended validator).\n The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n `validator` address. Then hashing the result.\n See {ECDSA-recover}."},"id":3870,"implemented":true,"kind":"function","modifiers":[],"name":"toDataWithIntendedValidatorHash","nameLocation":"2752:31:19","nodeType":"FunctionDefinition","parameters":{"id":3856,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3853,"mutability":"mutable","name":"validator","nameLocation":"2792:9:19","nodeType":"VariableDeclaration","scope":3870,"src":"2784:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3852,"name":"address","nodeType":"ElementaryTypeName","src":"2784:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3855,"mutability":"mutable","name":"data","nameLocation":"2816:4:19","nodeType":"VariableDeclaration","scope":3870,"src":"2803:17:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3854,"name":"bytes","nodeType":"ElementaryTypeName","src":"2803:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2783:38:19"},"returnParameters":{"id":3859,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3858,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3870,"src":"2845:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3857,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2845:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2844:9:19"},"scope":3895,"src":"2743:191:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3881,"nodeType":"Block","src":"3216:216:19","statements":[{"AST":{"nodeType":"YulBlock","src":"3251:175:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3272:4:19","type":"","value":"0x00"},{"hexValue":"1900","kind":"string","nodeType":"YulLiteral","src":"3278:10:19","type":"","value":"\u0019\u0000"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3265:6:19"},"nodeType":"YulFunctionCall","src":"3265:24:19"},"nodeType":"YulExpressionStatement","src":"3265:24:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3309:4:19","type":"","value":"0x02"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3319:2:19","type":"","value":"96"},{"name":"validator","nodeType":"YulIdentifier","src":"3323:9:19"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3315:3:19"},"nodeType":"YulFunctionCall","src":"3315:18:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3302:6:19"},"nodeType":"YulFunctionCall","src":"3302:32:19"},"nodeType":"YulExpressionStatement","src":"3302:32:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3354:4:19","type":"","value":"0x16"},{"name":"messageHash","nodeType":"YulIdentifier","src":"3360:11:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3347:6:19"},"nodeType":"YulFunctionCall","src":"3347:25:19"},"nodeType":"YulExpressionStatement","src":"3347:25:19"},{"nodeType":"YulAssignment","src":"3385:31:19","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3405:4:19","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"3411:4:19","type":"","value":"0x36"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"3395:9:19"},"nodeType":"YulFunctionCall","src":"3395:21:19"},"variableNames":[{"name":"digest","nodeType":"YulIdentifier","src":"3385:6:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3878,"isOffset":false,"isSlot":false,"src":"3385:6:19","valueSize":1},{"declaration":3875,"isOffset":false,"isSlot":false,"src":"3360:11:19","valueSize":1},{"declaration":3873,"isOffset":false,"isSlot":false,"src":"3323:9:19","valueSize":1}],"flags":["memory-safe"],"id":3880,"nodeType":"InlineAssembly","src":"3226:200:19"}]},"documentation":{"id":3871,"nodeType":"StructuredDocumentation","src":"2940:129:19","text":" @dev Variant of {toDataWithIntendedValidatorHash-address-bytes} optimized for cases where `data` is a bytes32."},"id":3882,"implemented":true,"kind":"function","modifiers":[],"name":"toDataWithIntendedValidatorHash","nameLocation":"3083:31:19","nodeType":"FunctionDefinition","parameters":{"id":3876,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3873,"mutability":"mutable","name":"validator","nameLocation":"3132:9:19","nodeType":"VariableDeclaration","scope":3882,"src":"3124:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3872,"name":"address","nodeType":"ElementaryTypeName","src":"3124:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3875,"mutability":"mutable","name":"messageHash","nameLocation":"3159:11:19","nodeType":"VariableDeclaration","scope":3882,"src":"3151:19:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3874,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3151:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3114:62:19"},"returnParameters":{"id":3879,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3878,"mutability":"mutable","name":"digest","nameLocation":"3208:6:19","nodeType":"VariableDeclaration","scope":3882,"src":"3200:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3877,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3200:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3199:16:19"},"scope":3895,"src":"3074:358:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3893,"nodeType":"Block","src":"3983:265:19","statements":[{"AST":{"nodeType":"YulBlock","src":"4018:224:19","statements":[{"nodeType":"YulVariableDeclaration","src":"4032:22:19","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4049:4:19","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4043:5:19"},"nodeType":"YulFunctionCall","src":"4043:11:19"},"variables":[{"name":"ptr","nodeType":"YulTypedName","src":"4036:3:19","type":""}]},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"4074:3:19"},{"hexValue":"1901","kind":"string","nodeType":"YulLiteral","src":"4079:10:19","type":"","value":"\u0019\u0001"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4067:6:19"},"nodeType":"YulFunctionCall","src":"4067:23:19"},"nodeType":"YulExpressionStatement","src":"4067:23:19"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"4114:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"4119:4:19","type":"","value":"0x02"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4110:3:19"},"nodeType":"YulFunctionCall","src":"4110:14:19"},{"name":"domainSeparator","nodeType":"YulIdentifier","src":"4126:15:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4103:6:19"},"nodeType":"YulFunctionCall","src":"4103:39:19"},"nodeType":"YulExpressionStatement","src":"4103:39:19"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"4166:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"4171:4:19","type":"","value":"0x22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4162:3:19"},"nodeType":"YulFunctionCall","src":"4162:14:19"},{"name":"structHash","nodeType":"YulIdentifier","src":"4178:10:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4155:6:19"},"nodeType":"YulFunctionCall","src":"4155:34:19"},"nodeType":"YulExpressionStatement","src":"4155:34:19"},{"nodeType":"YulAssignment","src":"4202:30:19","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"4222:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"4227:4:19","type":"","value":"0x42"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"4212:9:19"},"nodeType":"YulFunctionCall","src":"4212:20:19"},"variableNames":[{"name":"digest","nodeType":"YulIdentifier","src":"4202:6:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3890,"isOffset":false,"isSlot":false,"src":"4202:6:19","valueSize":1},{"declaration":3885,"isOffset":false,"isSlot":false,"src":"4126:15:19","valueSize":1},{"declaration":3887,"isOffset":false,"isSlot":false,"src":"4178:10:19","valueSize":1}],"flags":["memory-safe"],"id":3892,"nodeType":"InlineAssembly","src":"3993:249:19"}]},"documentation":{"id":3883,"nodeType":"StructuredDocumentation","src":"3438:431:19","text":" @dev Returns the keccak256 digest of an EIP-712 typed data (ERC-191 version `0x01`).\n The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n See {ECDSA-recover}."},"id":3894,"implemented":true,"kind":"function","modifiers":[],"name":"toTypedDataHash","nameLocation":"3883:15:19","nodeType":"FunctionDefinition","parameters":{"id":3888,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3885,"mutability":"mutable","name":"domainSeparator","nameLocation":"3907:15:19","nodeType":"VariableDeclaration","scope":3894,"src":"3899:23:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3884,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3899:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3887,"mutability":"mutable","name":"structHash","nameLocation":"3932:10:19","nodeType":"VariableDeclaration","scope":3894,"src":"3924:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3886,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3924:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3898:45:19"},"returnParameters":{"id":3891,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3890,"mutability":"mutable","name":"digest","nameLocation":"3975:6:19","nodeType":"VariableDeclaration","scope":3894,"src":"3967:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3889,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3967:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3966:16:19"},"scope":3895,"src":"3874:374:19","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3896,"src":"521:3729:19","usedErrors":[],"usedEvents":[]}],"src":"123:4128:19"},"id":19},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[5516],"Panic":[1314],"SafeCast":[7281]},"id":5517,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3897,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"103:24:20"},{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","file":"../Panic.sol","id":3899,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5517,"sourceUnit":1315,"src":"129:35:20","symbolAliases":[{"foreign":{"id":3898,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1314,"src":"137:5:20","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":3901,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5517,"sourceUnit":7282,"src":"165:40:20","symbolAliases":[{"foreign":{"id":3900,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7281,"src":"173:8:20","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":3902,"nodeType":"StructuredDocumentation","src":"207:73:20","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":5516,"linearizedBaseContracts":[5516],"name":"Math","nameLocation":"289:4:20","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":3907,"members":[{"id":3903,"name":"Floor","nameLocation":"324:5:20","nodeType":"EnumValue","src":"324:5:20"},{"id":3904,"name":"Ceil","nameLocation":"367:4:20","nodeType":"EnumValue","src":"367:4:20"},{"id":3905,"name":"Trunc","nameLocation":"409:5:20","nodeType":"EnumValue","src":"409:5:20"},{"id":3906,"name":"Expand","nameLocation":"439:6:20","nodeType":"EnumValue","src":"439:6:20"}],"name":"Rounding","nameLocation":"305:8:20","nodeType":"EnumDefinition","src":"300:169:20"},{"body":{"id":3920,"nodeType":"Block","src":"731:112:20","statements":[{"AST":{"nodeType":"YulBlock","src":"766:71:20","statements":[{"nodeType":"YulAssignment","src":"780:16:20","value":{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"791:1:20"},{"name":"b","nodeType":"YulIdentifier","src":"794:1:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"787:3:20"},"nodeType":"YulFunctionCall","src":"787:9:20"},"variableNames":[{"name":"low","nodeType":"YulIdentifier","src":"780:3:20"}]},{"nodeType":"YulAssignment","src":"809:18:20","value":{"arguments":[{"name":"low","nodeType":"YulIdentifier","src":"820:3:20"},{"name":"a","nodeType":"YulIdentifier","src":"825:1:20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"817:2:20"},"nodeType":"YulFunctionCall","src":"817:10:20"},"variableNames":[{"name":"high","nodeType":"YulIdentifier","src":"809:4:20"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3910,"isOffset":false,"isSlot":false,"src":"791:1:20","valueSize":1},{"declaration":3910,"isOffset":false,"isSlot":false,"src":"825:1:20","valueSize":1},{"declaration":3912,"isOffset":false,"isSlot":false,"src":"794:1:20","valueSize":1},{"declaration":3915,"isOffset":false,"isSlot":false,"src":"809:4:20","valueSize":1},{"declaration":3917,"isOffset":false,"isSlot":false,"src":"780:3:20","valueSize":1},{"declaration":3917,"isOffset":false,"isSlot":false,"src":"820:3:20","valueSize":1}],"flags":["memory-safe"],"id":3919,"nodeType":"InlineAssembly","src":"741:96:20"}]},"documentation":{"id":3908,"nodeType":"StructuredDocumentation","src":"475:163:20","text":" @dev Return the 512-bit addition of two uint256.\n The result is stored in two 256 variables such that sum = high * 2²⁵⁶ + low."},"id":3921,"implemented":true,"kind":"function","modifiers":[],"name":"add512","nameLocation":"652:6:20","nodeType":"FunctionDefinition","parameters":{"id":3913,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3910,"mutability":"mutable","name":"a","nameLocation":"667:1:20","nodeType":"VariableDeclaration","scope":3921,"src":"659:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3909,"name":"uint256","nodeType":"ElementaryTypeName","src":"659:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3912,"mutability":"mutable","name":"b","nameLocation":"678:1:20","nodeType":"VariableDeclaration","scope":3921,"src":"670:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3911,"name":"uint256","nodeType":"ElementaryTypeName","src":"670:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"658:22:20"},"returnParameters":{"id":3918,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3915,"mutability":"mutable","name":"high","nameLocation":"712:4:20","nodeType":"VariableDeclaration","scope":3921,"src":"704:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3914,"name":"uint256","nodeType":"ElementaryTypeName","src":"704:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3917,"mutability":"mutable","name":"low","nameLocation":"726:3:20","nodeType":"VariableDeclaration","scope":3921,"src":"718:11:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3916,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"703:27:20"},"scope":5516,"src":"643:200:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3934,"nodeType":"Block","src":"1115:462:20","statements":[{"AST":{"nodeType":"YulBlock","src":"1437:134:20","statements":[{"nodeType":"YulVariableDeclaration","src":"1451:30:20","value":{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"1468:1:20"},{"name":"b","nodeType":"YulIdentifier","src":"1471:1:20"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1478:1:20","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1474:3:20"},"nodeType":"YulFunctionCall","src":"1474:6:20"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"1461:6:20"},"nodeType":"YulFunctionCall","src":"1461:20:20"},"variables":[{"name":"mm","nodeType":"YulTypedName","src":"1455:2:20","type":""}]},{"nodeType":"YulAssignment","src":"1494:16:20","value":{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"1505:1:20"},{"name":"b","nodeType":"YulIdentifier","src":"1508:1:20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"1501:3:20"},"nodeType":"YulFunctionCall","src":"1501:9:20"},"variableNames":[{"name":"low","nodeType":"YulIdentifier","src":"1494:3:20"}]},{"nodeType":"YulAssignment","src":"1523:38:20","value":{"arguments":[{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"1539:2:20"},{"name":"low","nodeType":"YulIdentifier","src":"1543:3:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1535:3:20"},"nodeType":"YulFunctionCall","src":"1535:12:20"},{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"1552:2:20"},{"name":"low","nodeType":"YulIdentifier","src":"1556:3:20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1549:2:20"},"nodeType":"YulFunctionCall","src":"1549:11:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1531:3:20"},"nodeType":"YulFunctionCall","src":"1531:30:20"},"variableNames":[{"name":"high","nodeType":"YulIdentifier","src":"1523:4:20"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3924,"isOffset":false,"isSlot":false,"src":"1468:1:20","valueSize":1},{"declaration":3924,"isOffset":false,"isSlot":false,"src":"1505:1:20","valueSize":1},{"declaration":3926,"isOffset":false,"isSlot":false,"src":"1471:1:20","valueSize":1},{"declaration":3926,"isOffset":false,"isSlot":false,"src":"1508:1:20","valueSize":1},{"declaration":3929,"isOffset":false,"isSlot":false,"src":"1523:4:20","valueSize":1},{"declaration":3931,"isOffset":false,"isSlot":false,"src":"1494:3:20","valueSize":1},{"declaration":3931,"isOffset":false,"isSlot":false,"src":"1543:3:20","valueSize":1},{"declaration":3931,"isOffset":false,"isSlot":false,"src":"1556:3:20","valueSize":1}],"flags":["memory-safe"],"id":3933,"nodeType":"InlineAssembly","src":"1412:159:20"}]},"documentation":{"id":3922,"nodeType":"StructuredDocumentation","src":"849:173:20","text":" @dev Return the 512-bit multiplication of two uint256.\n The result is stored in two 256 variables such that product = high * 2²⁵⁶ + low."},"id":3935,"implemented":true,"kind":"function","modifiers":[],"name":"mul512","nameLocation":"1036:6:20","nodeType":"FunctionDefinition","parameters":{"id":3927,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3924,"mutability":"mutable","name":"a","nameLocation":"1051:1:20","nodeType":"VariableDeclaration","scope":3935,"src":"1043:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3923,"name":"uint256","nodeType":"ElementaryTypeName","src":"1043:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3926,"mutability":"mutable","name":"b","nameLocation":"1062:1:20","nodeType":"VariableDeclaration","scope":3935,"src":"1054:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3925,"name":"uint256","nodeType":"ElementaryTypeName","src":"1054:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1042:22:20"},"returnParameters":{"id":3932,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3929,"mutability":"mutable","name":"high","nameLocation":"1096:4:20","nodeType":"VariableDeclaration","scope":3935,"src":"1088:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3928,"name":"uint256","nodeType":"ElementaryTypeName","src":"1088:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3931,"mutability":"mutable","name":"low","nameLocation":"1110:3:20","nodeType":"VariableDeclaration","scope":3935,"src":"1102:11:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3930,"name":"uint256","nodeType":"ElementaryTypeName","src":"1102:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1087:27:20"},"scope":5516,"src":"1027:550:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3969,"nodeType":"Block","src":"1784:149:20","statements":[{"id":3968,"nodeType":"UncheckedBlock","src":"1794:133:20","statements":[{"assignments":[3948],"declarations":[{"constant":false,"id":3948,"mutability":"mutable","name":"c","nameLocation":"1826:1:20","nodeType":"VariableDeclaration","scope":3968,"src":"1818:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3947,"name":"uint256","nodeType":"ElementaryTypeName","src":"1818:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3952,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3949,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3938,"src":"1830:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3950,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3940,"src":"1834:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1830:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1818:17:20"},{"expression":{"id":3957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3953,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3943,"src":"1849:7:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3954,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3948,"src":"1859:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":3955,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3938,"src":"1864:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1859:6:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1849:16:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3958,"nodeType":"ExpressionStatement","src":"1849:16:20"},{"expression":{"id":3966,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3959,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3945,"src":"1879:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3960,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3948,"src":"1888:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":3963,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3943,"src":"1908:7:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3961,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7281,"src":"1892:8:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7281_$","typeString":"type(library SafeCast)"}},"id":3962,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1901:6:20","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7280,"src":"1892:15:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3964,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1892:24:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1888:28:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1879:37:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3967,"nodeType":"ExpressionStatement","src":"1879:37:20"}]}]},"documentation":{"id":3936,"nodeType":"StructuredDocumentation","src":"1583:105:20","text":" @dev Returns the addition of two unsigned integers, with a success flag (no overflow)."},"id":3970,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nameLocation":"1702:6:20","nodeType":"FunctionDefinition","parameters":{"id":3941,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3938,"mutability":"mutable","name":"a","nameLocation":"1717:1:20","nodeType":"VariableDeclaration","scope":3970,"src":"1709:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3937,"name":"uint256","nodeType":"ElementaryTypeName","src":"1709:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3940,"mutability":"mutable","name":"b","nameLocation":"1728:1:20","nodeType":"VariableDeclaration","scope":3970,"src":"1720:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3939,"name":"uint256","nodeType":"ElementaryTypeName","src":"1720:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1708:22:20"},"returnParameters":{"id":3946,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3943,"mutability":"mutable","name":"success","nameLocation":"1759:7:20","nodeType":"VariableDeclaration","scope":3970,"src":"1754:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3942,"name":"bool","nodeType":"ElementaryTypeName","src":"1754:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3945,"mutability":"mutable","name":"result","nameLocation":"1776:6:20","nodeType":"VariableDeclaration","scope":3970,"src":"1768:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3944,"name":"uint256","nodeType":"ElementaryTypeName","src":"1768:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1753:30:20"},"scope":5516,"src":"1693:240:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4004,"nodeType":"Block","src":"2143:149:20","statements":[{"id":4003,"nodeType":"UncheckedBlock","src":"2153:133:20","statements":[{"assignments":[3983],"declarations":[{"constant":false,"id":3983,"mutability":"mutable","name":"c","nameLocation":"2185:1:20","nodeType":"VariableDeclaration","scope":4003,"src":"2177:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3982,"name":"uint256","nodeType":"ElementaryTypeName","src":"2177:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3987,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3986,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3984,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3973,"src":"2189:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3985,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3975,"src":"2193:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2189:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2177:17:20"},{"expression":{"id":3992,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3988,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3978,"src":"2208:7:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3991,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3989,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3983,"src":"2218:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":3990,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3973,"src":"2223:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2218:6:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2208:16:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3993,"nodeType":"ExpressionStatement","src":"2208:16:20"},{"expression":{"id":4001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3994,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3980,"src":"2238:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4000,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3995,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3983,"src":"2247:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":3998,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3978,"src":"2267:7:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3996,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7281,"src":"2251:8:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7281_$","typeString":"type(library SafeCast)"}},"id":3997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2260:6:20","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7280,"src":"2251:15:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3999,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2251:24:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2247:28:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2238:37:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4002,"nodeType":"ExpressionStatement","src":"2238:37:20"}]}]},"documentation":{"id":3971,"nodeType":"StructuredDocumentation","src":"1939:108:20","text":" @dev Returns the subtraction of two unsigned integers, with a success flag (no overflow)."},"id":4005,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nameLocation":"2061:6:20","nodeType":"FunctionDefinition","parameters":{"id":3976,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3973,"mutability":"mutable","name":"a","nameLocation":"2076:1:20","nodeType":"VariableDeclaration","scope":4005,"src":"2068:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3972,"name":"uint256","nodeType":"ElementaryTypeName","src":"2068:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3975,"mutability":"mutable","name":"b","nameLocation":"2087:1:20","nodeType":"VariableDeclaration","scope":4005,"src":"2079:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3974,"name":"uint256","nodeType":"ElementaryTypeName","src":"2079:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2067:22:20"},"returnParameters":{"id":3981,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3978,"mutability":"mutable","name":"success","nameLocation":"2118:7:20","nodeType":"VariableDeclaration","scope":4005,"src":"2113:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3977,"name":"bool","nodeType":"ElementaryTypeName","src":"2113:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3980,"mutability":"mutable","name":"result","nameLocation":"2135:6:20","nodeType":"VariableDeclaration","scope":4005,"src":"2127:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3979,"name":"uint256","nodeType":"ElementaryTypeName","src":"2127:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2112:30:20"},"scope":5516,"src":"2052:240:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4034,"nodeType":"Block","src":"2505:391:20","statements":[{"id":4033,"nodeType":"UncheckedBlock","src":"2515:375:20","statements":[{"assignments":[4018],"declarations":[{"constant":false,"id":4018,"mutability":"mutable","name":"c","nameLocation":"2547:1:20","nodeType":"VariableDeclaration","scope":4033,"src":"2539:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4017,"name":"uint256","nodeType":"ElementaryTypeName","src":"2539:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4022,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4019,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4008,"src":"2551:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4020,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4010,"src":"2555:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2551:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2539:17:20"},{"AST":{"nodeType":"YulBlock","src":"2595:188:20","statements":[{"nodeType":"YulAssignment","src":"2727:42:20","value":{"arguments":[{"arguments":[{"arguments":[{"name":"c","nodeType":"YulIdentifier","src":"2748:1:20"},{"name":"a","nodeType":"YulIdentifier","src":"2751:1:20"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"2744:3:20"},"nodeType":"YulFunctionCall","src":"2744:9:20"},{"name":"b","nodeType":"YulIdentifier","src":"2755:1:20"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2741:2:20"},"nodeType":"YulFunctionCall","src":"2741:16:20"},{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"2766:1:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2759:6:20"},"nodeType":"YulFunctionCall","src":"2759:9:20"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"2738:2:20"},"nodeType":"YulFunctionCall","src":"2738:31:20"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"2727:7:20"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4008,"isOffset":false,"isSlot":false,"src":"2751:1:20","valueSize":1},{"declaration":4008,"isOffset":false,"isSlot":false,"src":"2766:1:20","valueSize":1},{"declaration":4010,"isOffset":false,"isSlot":false,"src":"2755:1:20","valueSize":1},{"declaration":4018,"isOffset":false,"isSlot":false,"src":"2748:1:20","valueSize":1},{"declaration":4013,"isOffset":false,"isSlot":false,"src":"2727:7:20","valueSize":1}],"flags":["memory-safe"],"id":4023,"nodeType":"InlineAssembly","src":"2570:213:20"},{"expression":{"id":4031,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4024,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4015,"src":"2842:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4030,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4025,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4018,"src":"2851:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":4028,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4013,"src":"2871:7:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4026,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7281,"src":"2855:8:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7281_$","typeString":"type(library SafeCast)"}},"id":4027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2864:6:20","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7280,"src":"2855:15:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4029,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2855:24:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2851:28:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2842:37:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4032,"nodeType":"ExpressionStatement","src":"2842:37:20"}]}]},"documentation":{"id":4006,"nodeType":"StructuredDocumentation","src":"2298:111:20","text":" @dev Returns the multiplication of two unsigned integers, with a success flag (no overflow)."},"id":4035,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nameLocation":"2423:6:20","nodeType":"FunctionDefinition","parameters":{"id":4011,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4008,"mutability":"mutable","name":"a","nameLocation":"2438:1:20","nodeType":"VariableDeclaration","scope":4035,"src":"2430:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4007,"name":"uint256","nodeType":"ElementaryTypeName","src":"2430:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4010,"mutability":"mutable","name":"b","nameLocation":"2449:1:20","nodeType":"VariableDeclaration","scope":4035,"src":"2441:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4009,"name":"uint256","nodeType":"ElementaryTypeName","src":"2441:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2429:22:20"},"returnParameters":{"id":4016,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4013,"mutability":"mutable","name":"success","nameLocation":"2480:7:20","nodeType":"VariableDeclaration","scope":4035,"src":"2475:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4012,"name":"bool","nodeType":"ElementaryTypeName","src":"2475:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4015,"mutability":"mutable","name":"result","nameLocation":"2497:6:20","nodeType":"VariableDeclaration","scope":4035,"src":"2489:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4014,"name":"uint256","nodeType":"ElementaryTypeName","src":"2489:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2474:30:20"},"scope":5516,"src":"2414:482:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4055,"nodeType":"Block","src":"3111:231:20","statements":[{"id":4054,"nodeType":"UncheckedBlock","src":"3121:215:20","statements":[{"expression":{"id":4051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4047,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4043,"src":"3145:7:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4050,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4048,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4040,"src":"3155:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4049,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3159:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3155:5:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3145:15:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4052,"nodeType":"ExpressionStatement","src":"3145:15:20"},{"AST":{"nodeType":"YulBlock","src":"3199:127:20","statements":[{"nodeType":"YulAssignment","src":"3293:19:20","value":{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"3307:1:20"},{"name":"b","nodeType":"YulIdentifier","src":"3310:1:20"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"3303:3:20"},"nodeType":"YulFunctionCall","src":"3303:9:20"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"3293:6:20"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4038,"isOffset":false,"isSlot":false,"src":"3307:1:20","valueSize":1},{"declaration":4040,"isOffset":false,"isSlot":false,"src":"3310:1:20","valueSize":1},{"declaration":4045,"isOffset":false,"isSlot":false,"src":"3293:6:20","valueSize":1}],"flags":["memory-safe"],"id":4053,"nodeType":"InlineAssembly","src":"3174:152:20"}]}]},"documentation":{"id":4036,"nodeType":"StructuredDocumentation","src":"2902:113:20","text":" @dev Returns the division of two unsigned integers, with a success flag (no division by zero)."},"id":4056,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nameLocation":"3029:6:20","nodeType":"FunctionDefinition","parameters":{"id":4041,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4038,"mutability":"mutable","name":"a","nameLocation":"3044:1:20","nodeType":"VariableDeclaration","scope":4056,"src":"3036:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4037,"name":"uint256","nodeType":"ElementaryTypeName","src":"3036:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4040,"mutability":"mutable","name":"b","nameLocation":"3055:1:20","nodeType":"VariableDeclaration","scope":4056,"src":"3047:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4039,"name":"uint256","nodeType":"ElementaryTypeName","src":"3047:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3035:22:20"},"returnParameters":{"id":4046,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4043,"mutability":"mutable","name":"success","nameLocation":"3086:7:20","nodeType":"VariableDeclaration","scope":4056,"src":"3081:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4042,"name":"bool","nodeType":"ElementaryTypeName","src":"3081:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4045,"mutability":"mutable","name":"result","nameLocation":"3103:6:20","nodeType":"VariableDeclaration","scope":4056,"src":"3095:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4044,"name":"uint256","nodeType":"ElementaryTypeName","src":"3095:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3080:30:20"},"scope":5516,"src":"3020:322:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4076,"nodeType":"Block","src":"3567:231:20","statements":[{"id":4075,"nodeType":"UncheckedBlock","src":"3577:215:20","statements":[{"expression":{"id":4072,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4068,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4064,"src":"3601:7:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4069,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4061,"src":"3611:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4070,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3615:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3611:5:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3601:15:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4073,"nodeType":"ExpressionStatement","src":"3601:15:20"},{"AST":{"nodeType":"YulBlock","src":"3655:127:20","statements":[{"nodeType":"YulAssignment","src":"3749:19:20","value":{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"3763:1:20"},{"name":"b","nodeType":"YulIdentifier","src":"3766:1:20"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"3759:3:20"},"nodeType":"YulFunctionCall","src":"3759:9:20"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"3749:6:20"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4059,"isOffset":false,"isSlot":false,"src":"3763:1:20","valueSize":1},{"declaration":4061,"isOffset":false,"isSlot":false,"src":"3766:1:20","valueSize":1},{"declaration":4066,"isOffset":false,"isSlot":false,"src":"3749:6:20","valueSize":1}],"flags":["memory-safe"],"id":4074,"nodeType":"InlineAssembly","src":"3630:152:20"}]}]},"documentation":{"id":4057,"nodeType":"StructuredDocumentation","src":"3348:123:20","text":" @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero)."},"id":4077,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nameLocation":"3485:6:20","nodeType":"FunctionDefinition","parameters":{"id":4062,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4059,"mutability":"mutable","name":"a","nameLocation":"3500:1:20","nodeType":"VariableDeclaration","scope":4077,"src":"3492:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4058,"name":"uint256","nodeType":"ElementaryTypeName","src":"3492:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4061,"mutability":"mutable","name":"b","nameLocation":"3511:1:20","nodeType":"VariableDeclaration","scope":4077,"src":"3503:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4060,"name":"uint256","nodeType":"ElementaryTypeName","src":"3503:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3491:22:20"},"returnParameters":{"id":4067,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4064,"mutability":"mutable","name":"success","nameLocation":"3542:7:20","nodeType":"VariableDeclaration","scope":4077,"src":"3537:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4063,"name":"bool","nodeType":"ElementaryTypeName","src":"3537:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4066,"mutability":"mutable","name":"result","nameLocation":"3559:6:20","nodeType":"VariableDeclaration","scope":4077,"src":"3551:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4065,"name":"uint256","nodeType":"ElementaryTypeName","src":"3551:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3536:30:20"},"scope":5516,"src":"3476:322:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4106,"nodeType":"Block","src":"3989:122:20","statements":[{"assignments":[4088,4090],"declarations":[{"constant":false,"id":4088,"mutability":"mutable","name":"success","nameLocation":"4005:7:20","nodeType":"VariableDeclaration","scope":4106,"src":"4000:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4087,"name":"bool","nodeType":"ElementaryTypeName","src":"4000:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4090,"mutability":"mutable","name":"result","nameLocation":"4022:6:20","nodeType":"VariableDeclaration","scope":4106,"src":"4014:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4089,"name":"uint256","nodeType":"ElementaryTypeName","src":"4014:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4095,"initialValue":{"arguments":[{"id":4092,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4080,"src":"4039:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4093,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4082,"src":"4042:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4091,"name":"tryAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3970,"src":"4032:6:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":4094,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4032:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"3999:45:20"},{"expression":{"arguments":[{"id":4097,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4088,"src":"4069:7:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":4098,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4090,"src":"4078:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"arguments":[{"id":4101,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4091:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4100,"name":"uint256","nodeType":"ElementaryTypeName","src":"4091:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":4099,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4086:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4102,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4086:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":4103,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4100:3:20","memberName":"max","nodeType":"MemberAccess","src":"4086:17:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4096,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4184,"src":"4061:7:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":4104,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4061:43:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4086,"id":4105,"nodeType":"Return","src":"4054:50:20"}]},"documentation":{"id":4078,"nodeType":"StructuredDocumentation","src":"3804:103:20","text":" @dev Unsigned saturating addition, bounds to `2²⁵⁶ - 1` instead of overflowing."},"id":4107,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingAdd","nameLocation":"3921:13:20","nodeType":"FunctionDefinition","parameters":{"id":4083,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4080,"mutability":"mutable","name":"a","nameLocation":"3943:1:20","nodeType":"VariableDeclaration","scope":4107,"src":"3935:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4079,"name":"uint256","nodeType":"ElementaryTypeName","src":"3935:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4082,"mutability":"mutable","name":"b","nameLocation":"3954:1:20","nodeType":"VariableDeclaration","scope":4107,"src":"3946:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4081,"name":"uint256","nodeType":"ElementaryTypeName","src":"3946:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3934:22:20"},"returnParameters":{"id":4086,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4085,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4107,"src":"3980:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4084,"name":"uint256","nodeType":"ElementaryTypeName","src":"3980:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3979:9:20"},"scope":5516,"src":"3912:199:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4126,"nodeType":"Block","src":"4294:73:20","statements":[{"assignments":[null,4118],"declarations":[null,{"constant":false,"id":4118,"mutability":"mutable","name":"result","nameLocation":"4315:6:20","nodeType":"VariableDeclaration","scope":4126,"src":"4307:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4117,"name":"uint256","nodeType":"ElementaryTypeName","src":"4307:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4123,"initialValue":{"arguments":[{"id":4120,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4110,"src":"4332:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4121,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4112,"src":"4335:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4119,"name":"trySub","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4005,"src":"4325:6:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":4122,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4325:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"4304:33:20"},{"expression":{"id":4124,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4118,"src":"4354:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4116,"id":4125,"nodeType":"Return","src":"4347:13:20"}]},"documentation":{"id":4108,"nodeType":"StructuredDocumentation","src":"4117:95:20","text":" @dev Unsigned saturating subtraction, bounds to zero instead of overflowing."},"id":4127,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingSub","nameLocation":"4226:13:20","nodeType":"FunctionDefinition","parameters":{"id":4113,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4110,"mutability":"mutable","name":"a","nameLocation":"4248:1:20","nodeType":"VariableDeclaration","scope":4127,"src":"4240:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4109,"name":"uint256","nodeType":"ElementaryTypeName","src":"4240:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4112,"mutability":"mutable","name":"b","nameLocation":"4259:1:20","nodeType":"VariableDeclaration","scope":4127,"src":"4251:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4111,"name":"uint256","nodeType":"ElementaryTypeName","src":"4251:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4239:22:20"},"returnParameters":{"id":4116,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4115,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4127,"src":"4285:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4114,"name":"uint256","nodeType":"ElementaryTypeName","src":"4285:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4284:9:20"},"scope":5516,"src":"4217:150:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4156,"nodeType":"Block","src":"4564:122:20","statements":[{"assignments":[4138,4140],"declarations":[{"constant":false,"id":4138,"mutability":"mutable","name":"success","nameLocation":"4580:7:20","nodeType":"VariableDeclaration","scope":4156,"src":"4575:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4137,"name":"bool","nodeType":"ElementaryTypeName","src":"4575:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4140,"mutability":"mutable","name":"result","nameLocation":"4597:6:20","nodeType":"VariableDeclaration","scope":4156,"src":"4589:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4139,"name":"uint256","nodeType":"ElementaryTypeName","src":"4589:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4145,"initialValue":{"arguments":[{"id":4142,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4130,"src":"4614:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4143,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4132,"src":"4617:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4141,"name":"tryMul","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4035,"src":"4607:6:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":4144,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4607:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"4574:45:20"},{"expression":{"arguments":[{"id":4147,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4138,"src":"4644:7:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":4148,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4140,"src":"4653:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"arguments":[{"id":4151,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4666:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4150,"name":"uint256","nodeType":"ElementaryTypeName","src":"4666:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":4149,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4661:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4152,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4661:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":4153,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4675:3:20","memberName":"max","nodeType":"MemberAccess","src":"4661:17:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4146,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4184,"src":"4636:7:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":4154,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4636:43:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4136,"id":4155,"nodeType":"Return","src":"4629:50:20"}]},"documentation":{"id":4128,"nodeType":"StructuredDocumentation","src":"4373:109:20","text":" @dev Unsigned saturating multiplication, bounds to `2²⁵⁶ - 1` instead of overflowing."},"id":4157,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingMul","nameLocation":"4496:13:20","nodeType":"FunctionDefinition","parameters":{"id":4133,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4130,"mutability":"mutable","name":"a","nameLocation":"4518:1:20","nodeType":"VariableDeclaration","scope":4157,"src":"4510:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4129,"name":"uint256","nodeType":"ElementaryTypeName","src":"4510:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4132,"mutability":"mutable","name":"b","nameLocation":"4529:1:20","nodeType":"VariableDeclaration","scope":4157,"src":"4521:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4131,"name":"uint256","nodeType":"ElementaryTypeName","src":"4521:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4509:22:20"},"returnParameters":{"id":4136,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4135,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4157,"src":"4555:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4134,"name":"uint256","nodeType":"ElementaryTypeName","src":"4555:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4554:9:20"},"scope":5516,"src":"4487:199:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4183,"nodeType":"Block","src":"5158:207:20","statements":[{"id":4182,"nodeType":"UncheckedBlock","src":"5168:191:20","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4169,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4164,"src":"5306:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4170,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4162,"src":"5312:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":4171,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4164,"src":"5316:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5312:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4173,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5311:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":4176,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4160,"src":"5337:9:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4174,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7281,"src":"5321:8:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7281_$","typeString":"type(library SafeCast)"}},"id":4175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5330:6:20","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7280,"src":"5321:15:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4177,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5321:26:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5311:36:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4179,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5310:38:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5306:42:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4168,"id":4181,"nodeType":"Return","src":"5299:49:20"}]}]},"documentation":{"id":4158,"nodeType":"StructuredDocumentation","src":"4692:374:20","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":4184,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"5080:7:20","nodeType":"FunctionDefinition","parameters":{"id":4165,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4160,"mutability":"mutable","name":"condition","nameLocation":"5093:9:20","nodeType":"VariableDeclaration","scope":4184,"src":"5088:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4159,"name":"bool","nodeType":"ElementaryTypeName","src":"5088:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4162,"mutability":"mutable","name":"a","nameLocation":"5112:1:20","nodeType":"VariableDeclaration","scope":4184,"src":"5104:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4161,"name":"uint256","nodeType":"ElementaryTypeName","src":"5104:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4164,"mutability":"mutable","name":"b","nameLocation":"5123:1:20","nodeType":"VariableDeclaration","scope":4184,"src":"5115:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4163,"name":"uint256","nodeType":"ElementaryTypeName","src":"5115:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5087:38:20"},"returnParameters":{"id":4168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4167,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4184,"src":"5149:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4166,"name":"uint256","nodeType":"ElementaryTypeName","src":"5149:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5148:9:20"},"scope":5516,"src":"5071:294:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4202,"nodeType":"Block","src":"5502:44:20","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4195,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4187,"src":"5527:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4196,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4189,"src":"5531:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5527:5:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":4198,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4187,"src":"5534:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4199,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4189,"src":"5537:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4194,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4184,"src":"5519:7:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":4200,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5519:20:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4193,"id":4201,"nodeType":"Return","src":"5512:27:20"}]},"documentation":{"id":4185,"nodeType":"StructuredDocumentation","src":"5371:59:20","text":" @dev Returns the largest of two numbers."},"id":4203,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"5444:3:20","nodeType":"FunctionDefinition","parameters":{"id":4190,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4187,"mutability":"mutable","name":"a","nameLocation":"5456:1:20","nodeType":"VariableDeclaration","scope":4203,"src":"5448:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4186,"name":"uint256","nodeType":"ElementaryTypeName","src":"5448:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4189,"mutability":"mutable","name":"b","nameLocation":"5467:1:20","nodeType":"VariableDeclaration","scope":4203,"src":"5459:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4188,"name":"uint256","nodeType":"ElementaryTypeName","src":"5459:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5447:22:20"},"returnParameters":{"id":4193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4192,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4203,"src":"5493:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4191,"name":"uint256","nodeType":"ElementaryTypeName","src":"5493:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5492:9:20"},"scope":5516,"src":"5435:111:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4221,"nodeType":"Block","src":"5684:44:20","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4216,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4214,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4206,"src":"5709:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4215,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4208,"src":"5713:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5709:5:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":4217,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4206,"src":"5716:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4218,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4208,"src":"5719:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4213,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4184,"src":"5701:7:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":4219,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5701:20:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4212,"id":4220,"nodeType":"Return","src":"5694:27:20"}]},"documentation":{"id":4204,"nodeType":"StructuredDocumentation","src":"5552:60:20","text":" @dev Returns the smallest of two numbers."},"id":4222,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"5626:3:20","nodeType":"FunctionDefinition","parameters":{"id":4209,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4206,"mutability":"mutable","name":"a","nameLocation":"5638:1:20","nodeType":"VariableDeclaration","scope":4222,"src":"5630:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4205,"name":"uint256","nodeType":"ElementaryTypeName","src":"5630:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4208,"mutability":"mutable","name":"b","nameLocation":"5649:1:20","nodeType":"VariableDeclaration","scope":4222,"src":"5641:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4207,"name":"uint256","nodeType":"ElementaryTypeName","src":"5641:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5629:22:20"},"returnParameters":{"id":4212,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4211,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4222,"src":"5675:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4210,"name":"uint256","nodeType":"ElementaryTypeName","src":"5675:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5674:9:20"},"scope":5516,"src":"5617:111:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4244,"nodeType":"Block","src":"5912:82:20","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4232,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4225,"src":"5967:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":4233,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4227,"src":"5971:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5967:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4235,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5966:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4238,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4236,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4225,"src":"5977:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":4237,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4227,"src":"5981:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5977:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4239,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5976:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":4240,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5986:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"5976:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5966:21:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4231,"id":4243,"nodeType":"Return","src":"5959:28:20"}]},"documentation":{"id":4223,"nodeType":"StructuredDocumentation","src":"5734:102:20","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":4245,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"5850:7:20","nodeType":"FunctionDefinition","parameters":{"id":4228,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4225,"mutability":"mutable","name":"a","nameLocation":"5866:1:20","nodeType":"VariableDeclaration","scope":4245,"src":"5858:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4224,"name":"uint256","nodeType":"ElementaryTypeName","src":"5858:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4227,"mutability":"mutable","name":"b","nameLocation":"5877:1:20","nodeType":"VariableDeclaration","scope":4245,"src":"5869:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4226,"name":"uint256","nodeType":"ElementaryTypeName","src":"5869:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5857:22:20"},"returnParameters":{"id":4231,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4230,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4245,"src":"5903:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4229,"name":"uint256","nodeType":"ElementaryTypeName","src":"5903:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5902:9:20"},"scope":5516,"src":"5841:153:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4285,"nodeType":"Block","src":"6286:633:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4255,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4250,"src":"6300:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4256,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6305:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6300:6:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4266,"nodeType":"IfStatement","src":"6296:150:20","trueBody":{"id":4265,"nodeType":"Block","src":"6308:138:20","statements":[{"expression":{"arguments":[{"expression":{"id":4261,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1314,"src":"6412:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1314_$","typeString":"type(library Panic)"}},"id":4262,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6418:16:20","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":1281,"src":"6412:22:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4258,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1314,"src":"6400:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1314_$","typeString":"type(library Panic)"}},"id":4260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6406:5:20","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1313,"src":"6400:11:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4263,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6400:35:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4264,"nodeType":"ExpressionStatement","src":"6400:35:20"}]}},{"id":4284,"nodeType":"UncheckedBlock","src":"6829:84:20","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4269,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4248,"src":"6876:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4270,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6880:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6876:5:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4267,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7281,"src":"6860:8:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7281_$","typeString":"type(library SafeCast)"}},"id":4268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6869:6:20","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7280,"src":"6860:15:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4272,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6860:22:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4273,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4248,"src":"6887:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4274,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6891:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6887:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4276,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6886:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4277,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4250,"src":"6896:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6886:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4279,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6900:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6886:15:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4281,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6885:17:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6860:42:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4254,"id":4283,"nodeType":"Return","src":"6853:49:20"}]}]},"documentation":{"id":4246,"nodeType":"StructuredDocumentation","src":"6000:210:20","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."},"id":4286,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"6224:7:20","nodeType":"FunctionDefinition","parameters":{"id":4251,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4248,"mutability":"mutable","name":"a","nameLocation":"6240:1:20","nodeType":"VariableDeclaration","scope":4286,"src":"6232:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4247,"name":"uint256","nodeType":"ElementaryTypeName","src":"6232:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4250,"mutability":"mutable","name":"b","nameLocation":"6251:1:20","nodeType":"VariableDeclaration","scope":4286,"src":"6243:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4249,"name":"uint256","nodeType":"ElementaryTypeName","src":"6243:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6231:22:20"},"returnParameters":{"id":4254,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4253,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4286,"src":"6277:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4252,"name":"uint256","nodeType":"ElementaryTypeName","src":"6277:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6276:9:20"},"scope":5516,"src":"6215:704:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4421,"nodeType":"Block","src":"7340:3585:20","statements":[{"id":4420,"nodeType":"UncheckedBlock","src":"7350:3569:20","statements":[{"assignments":[4299,4301],"declarations":[{"constant":false,"id":4299,"mutability":"mutable","name":"high","nameLocation":"7383:4:20","nodeType":"VariableDeclaration","scope":4420,"src":"7375:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4298,"name":"uint256","nodeType":"ElementaryTypeName","src":"7375:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4301,"mutability":"mutable","name":"low","nameLocation":"7397:3:20","nodeType":"VariableDeclaration","scope":4420,"src":"7389:11:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4300,"name":"uint256","nodeType":"ElementaryTypeName","src":"7389:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4306,"initialValue":{"arguments":[{"id":4303,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4289,"src":"7411:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4304,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4291,"src":"7414:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4302,"name":"mul512","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3935,"src":"7404:6:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256,uint256)"}},"id":4305,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7404:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"7374:42:20"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4309,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4307,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4299,"src":"7498:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4308,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7506:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7498:9:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4315,"nodeType":"IfStatement","src":"7494:365:20","trueBody":{"id":4314,"nodeType":"Block","src":"7509:350:20","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4310,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4301,"src":"7827:3:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4311,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4293,"src":"7833:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7827:17:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4297,"id":4313,"nodeType":"Return","src":"7820:24:20"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4316,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4293,"src":"7969:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":4317,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4299,"src":"7984:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7969:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4334,"nodeType":"IfStatement","src":"7965:142:20","trueBody":{"id":4333,"nodeType":"Block","src":"7990:117:20","statements":[{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4323,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4293,"src":"8028:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4324,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8043:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8028:16:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":4326,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1314,"src":"8046:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1314_$","typeString":"type(library Panic)"}},"id":4327,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8052:16:20","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":1281,"src":"8046:22:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":4328,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1314,"src":"8070:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1314_$","typeString":"type(library Panic)"}},"id":4329,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8076:14:20","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":1277,"src":"8070:20:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4322,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4184,"src":"8020:7:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":4330,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8020:71:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4319,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1314,"src":"8008:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1314_$","typeString":"type(library Panic)"}},"id":4321,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8014:5:20","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1313,"src":"8008:11:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4331,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8008:84:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4332,"nodeType":"ExpressionStatement","src":"8008:84:20"}]}},{"assignments":[4336],"declarations":[{"constant":false,"id":4336,"mutability":"mutable","name":"remainder","nameLocation":"8367:9:20","nodeType":"VariableDeclaration","scope":4420,"src":"8359:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4335,"name":"uint256","nodeType":"ElementaryTypeName","src":"8359:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4337,"nodeType":"VariableDeclarationStatement","src":"8359:17:20"},{"AST":{"nodeType":"YulBlock","src":"8415:283:20","statements":[{"nodeType":"YulAssignment","src":"8484:38:20","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"8504:1:20"},{"name":"y","nodeType":"YulIdentifier","src":"8507:1:20"},{"name":"denominator","nodeType":"YulIdentifier","src":"8510:11:20"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"8497:6:20"},"nodeType":"YulFunctionCall","src":"8497:25:20"},"variableNames":[{"name":"remainder","nodeType":"YulIdentifier","src":"8484:9:20"}]},{"nodeType":"YulAssignment","src":"8604:37:20","value":{"arguments":[{"name":"high","nodeType":"YulIdentifier","src":"8616:4:20"},{"arguments":[{"name":"remainder","nodeType":"YulIdentifier","src":"8625:9:20"},{"name":"low","nodeType":"YulIdentifier","src":"8636:3:20"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8622:2:20"},"nodeType":"YulFunctionCall","src":"8622:18:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8612:3:20"},"nodeType":"YulFunctionCall","src":"8612:29:20"},"variableNames":[{"name":"high","nodeType":"YulIdentifier","src":"8604:4:20"}]},{"nodeType":"YulAssignment","src":"8658:26:20","value":{"arguments":[{"name":"low","nodeType":"YulIdentifier","src":"8669:3:20"},{"name":"remainder","nodeType":"YulIdentifier","src":"8674:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8665:3:20"},"nodeType":"YulFunctionCall","src":"8665:19:20"},"variableNames":[{"name":"low","nodeType":"YulIdentifier","src":"8658:3:20"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4293,"isOffset":false,"isSlot":false,"src":"8510:11:20","valueSize":1},{"declaration":4299,"isOffset":false,"isSlot":false,"src":"8604:4:20","valueSize":1},{"declaration":4299,"isOffset":false,"isSlot":false,"src":"8616:4:20","valueSize":1},{"declaration":4301,"isOffset":false,"isSlot":false,"src":"8636:3:20","valueSize":1},{"declaration":4301,"isOffset":false,"isSlot":false,"src":"8658:3:20","valueSize":1},{"declaration":4301,"isOffset":false,"isSlot":false,"src":"8669:3:20","valueSize":1},{"declaration":4336,"isOffset":false,"isSlot":false,"src":"8484:9:20","valueSize":1},{"declaration":4336,"isOffset":false,"isSlot":false,"src":"8625:9:20","valueSize":1},{"declaration":4336,"isOffset":false,"isSlot":false,"src":"8674:9:20","valueSize":1},{"declaration":4289,"isOffset":false,"isSlot":false,"src":"8504:1:20","valueSize":1},{"declaration":4291,"isOffset":false,"isSlot":false,"src":"8507:1:20","valueSize":1}],"flags":["memory-safe"],"id":4338,"nodeType":"InlineAssembly","src":"8390:308:20"},{"assignments":[4340],"declarations":[{"constant":false,"id":4340,"mutability":"mutable","name":"twos","nameLocation":"8910:4:20","nodeType":"VariableDeclaration","scope":4420,"src":"8902:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4339,"name":"uint256","nodeType":"ElementaryTypeName","src":"8902:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4347,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4341,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4293,"src":"8917:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"30","id":4342,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8932:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4343,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4293,"src":"8936:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8932:15:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4345,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8931:17:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8917:31:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8902:46:20"},{"AST":{"nodeType":"YulBlock","src":"8987:359:20","statements":[{"nodeType":"YulAssignment","src":"9052:37:20","value":{"arguments":[{"name":"denominator","nodeType":"YulIdentifier","src":"9071:11:20"},{"name":"twos","nodeType":"YulIdentifier","src":"9084:4:20"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"9067:3:20"},"nodeType":"YulFunctionCall","src":"9067:22:20"},"variableNames":[{"name":"denominator","nodeType":"YulIdentifier","src":"9052:11:20"}]},{"nodeType":"YulAssignment","src":"9153:21:20","value":{"arguments":[{"name":"low","nodeType":"YulIdentifier","src":"9164:3:20"},{"name":"twos","nodeType":"YulIdentifier","src":"9169:4:20"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"9160:3:20"},"nodeType":"YulFunctionCall","src":"9160:14:20"},"variableNames":[{"name":"low","nodeType":"YulIdentifier","src":"9153:3:20"}]},{"nodeType":"YulAssignment","src":"9293:39:20","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9313:1:20","type":"","value":"0"},{"name":"twos","nodeType":"YulIdentifier","src":"9316:4:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9309:3:20"},"nodeType":"YulFunctionCall","src":"9309:12:20"},{"name":"twos","nodeType":"YulIdentifier","src":"9323:4:20"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"9305:3:20"},"nodeType":"YulFunctionCall","src":"9305:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"9330:1:20","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9301:3:20"},"nodeType":"YulFunctionCall","src":"9301:31:20"},"variableNames":[{"name":"twos","nodeType":"YulIdentifier","src":"9293:4:20"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4293,"isOffset":false,"isSlot":false,"src":"9052:11:20","valueSize":1},{"declaration":4293,"isOffset":false,"isSlot":false,"src":"9071:11:20","valueSize":1},{"declaration":4301,"isOffset":false,"isSlot":false,"src":"9153:3:20","valueSize":1},{"declaration":4301,"isOffset":false,"isSlot":false,"src":"9164:3:20","valueSize":1},{"declaration":4340,"isOffset":false,"isSlot":false,"src":"9084:4:20","valueSize":1},{"declaration":4340,"isOffset":false,"isSlot":false,"src":"9169:4:20","valueSize":1},{"declaration":4340,"isOffset":false,"isSlot":false,"src":"9293:4:20","valueSize":1},{"declaration":4340,"isOffset":false,"isSlot":false,"src":"9316:4:20","valueSize":1},{"declaration":4340,"isOffset":false,"isSlot":false,"src":"9323:4:20","valueSize":1}],"flags":["memory-safe"],"id":4348,"nodeType":"InlineAssembly","src":"8962:384:20"},{"expression":{"id":4353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4349,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4301,"src":"9409:3:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4350,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4299,"src":"9416:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4351,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4340,"src":"9423:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9416:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9409:18:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4354,"nodeType":"ExpressionStatement","src":"9409:18:20"},{"assignments":[4356],"declarations":[{"constant":false,"id":4356,"mutability":"mutable","name":"inverse","nameLocation":"9770:7:20","nodeType":"VariableDeclaration","scope":4420,"src":"9762:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4355,"name":"uint256","nodeType":"ElementaryTypeName","src":"9762:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4363,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":4357,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9781:1:20","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4358,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4293,"src":"9785:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9781:15:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4360,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9780:17:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":4361,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9800:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9780:21:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9762:39:20"},{"expression":{"id":4370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4364,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4356,"src":"10018:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4365,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10029:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4366,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4293,"src":"10033:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4367,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4356,"src":"10047:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10033:21:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10029:25:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10018:36:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4371,"nodeType":"ExpressionStatement","src":"10018:36:20"},{"expression":{"id":4378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4372,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4356,"src":"10088:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4373,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10099:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4374,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4293,"src":"10103:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4375,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4356,"src":"10117:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10103:21:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10099:25:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10088:36:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4379,"nodeType":"ExpressionStatement","src":"10088:36:20"},{"expression":{"id":4386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4380,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4356,"src":"10160:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4381,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10171:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4382,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4293,"src":"10175:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4383,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4356,"src":"10189:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10175:21:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10171:25:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10160:36:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4387,"nodeType":"ExpressionStatement","src":"10160:36:20"},{"expression":{"id":4394,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4388,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4356,"src":"10231:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4393,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4389,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10242:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4390,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4293,"src":"10246:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4391,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4356,"src":"10260:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10246:21:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10242:25:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10231:36:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4395,"nodeType":"ExpressionStatement","src":"10231:36:20"},{"expression":{"id":4402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4396,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4356,"src":"10304:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4397,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10315:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4398,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4293,"src":"10319:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4399,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4356,"src":"10333:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10319:21:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10315:25:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10304:36:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4403,"nodeType":"ExpressionStatement","src":"10304:36:20"},{"expression":{"id":4410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4404,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4356,"src":"10378:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4405,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10389:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4406,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4293,"src":"10393:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4407,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4356,"src":"10407:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10393:21:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10389:25:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10378:36:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4411,"nodeType":"ExpressionStatement","src":"10378:36:20"},{"expression":{"id":4416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4412,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4296,"src":"10859:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4413,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4301,"src":"10868:3:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4414,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4356,"src":"10874:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10868:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10859:22:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4417,"nodeType":"ExpressionStatement","src":"10859:22:20"},{"expression":{"id":4418,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4296,"src":"10902:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4297,"id":4419,"nodeType":"Return","src":"10895:13:20"}]}]},"documentation":{"id":4287,"nodeType":"StructuredDocumentation","src":"6925:312:20","text":" @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."},"id":4422,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"7251:6:20","nodeType":"FunctionDefinition","parameters":{"id":4294,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4289,"mutability":"mutable","name":"x","nameLocation":"7266:1:20","nodeType":"VariableDeclaration","scope":4422,"src":"7258:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4288,"name":"uint256","nodeType":"ElementaryTypeName","src":"7258:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4291,"mutability":"mutable","name":"y","nameLocation":"7277:1:20","nodeType":"VariableDeclaration","scope":4422,"src":"7269:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4290,"name":"uint256","nodeType":"ElementaryTypeName","src":"7269:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4293,"mutability":"mutable","name":"denominator","nameLocation":"7288:11:20","nodeType":"VariableDeclaration","scope":4422,"src":"7280:19:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4292,"name":"uint256","nodeType":"ElementaryTypeName","src":"7280:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7257:43:20"},"returnParameters":{"id":4297,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4296,"mutability":"mutable","name":"result","nameLocation":"7332:6:20","nodeType":"VariableDeclaration","scope":4422,"src":"7324:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4295,"name":"uint256","nodeType":"ElementaryTypeName","src":"7324:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7323:16:20"},"scope":5516,"src":"7242:3683:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4458,"nodeType":"Block","src":"11164:128:20","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4438,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4425,"src":"11188:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4439,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4427,"src":"11191:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4440,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4429,"src":"11194:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4437,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[4422,4459],"referencedDeclaration":4422,"src":"11181:6:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":4441,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11181:25:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4445,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4432,"src":"11242:8:20","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3907","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3907","typeString":"enum Math.Rounding"}],"id":4444,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5515,"src":"11225:16:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3907_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4446,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11225:26:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4448,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4425,"src":"11262:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4449,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4427,"src":"11265:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4450,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4429,"src":"11268:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4447,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"11255:6:20","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":4451,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11255:25:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4452,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11283:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11255:29:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11225:59:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4442,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7281,"src":"11209:8:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7281_$","typeString":"type(library SafeCast)"}},"id":4443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11218:6:20","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7280,"src":"11209:15:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4455,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11209:76:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11181:104:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4436,"id":4457,"nodeType":"Return","src":"11174:111:20"}]},"documentation":{"id":4423,"nodeType":"StructuredDocumentation","src":"10931:118:20","text":" @dev Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":4459,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"11063:6:20","nodeType":"FunctionDefinition","parameters":{"id":4433,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4425,"mutability":"mutable","name":"x","nameLocation":"11078:1:20","nodeType":"VariableDeclaration","scope":4459,"src":"11070:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4424,"name":"uint256","nodeType":"ElementaryTypeName","src":"11070:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4427,"mutability":"mutable","name":"y","nameLocation":"11089:1:20","nodeType":"VariableDeclaration","scope":4459,"src":"11081:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4426,"name":"uint256","nodeType":"ElementaryTypeName","src":"11081:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4429,"mutability":"mutable","name":"denominator","nameLocation":"11100:11:20","nodeType":"VariableDeclaration","scope":4459,"src":"11092:19:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4428,"name":"uint256","nodeType":"ElementaryTypeName","src":"11092:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4432,"mutability":"mutable","name":"rounding","nameLocation":"11122:8:20","nodeType":"VariableDeclaration","scope":4459,"src":"11113:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3907","typeString":"enum Math.Rounding"},"typeName":{"id":4431,"nodeType":"UserDefinedTypeName","pathNode":{"id":4430,"name":"Rounding","nameLocations":["11113:8:20"],"nodeType":"IdentifierPath","referencedDeclaration":3907,"src":"11113:8:20"},"referencedDeclaration":3907,"src":"11113:8:20","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3907","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11069:62:20"},"returnParameters":{"id":4436,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4435,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4459,"src":"11155:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4434,"name":"uint256","nodeType":"ElementaryTypeName","src":"11155:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11154:9:20"},"scope":5516,"src":"11054:238:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4508,"nodeType":"Block","src":"11500:245:20","statements":[{"id":4507,"nodeType":"UncheckedBlock","src":"11510:229:20","statements":[{"assignments":[4472,4474],"declarations":[{"constant":false,"id":4472,"mutability":"mutable","name":"high","nameLocation":"11543:4:20","nodeType":"VariableDeclaration","scope":4507,"src":"11535:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4471,"name":"uint256","nodeType":"ElementaryTypeName","src":"11535:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4474,"mutability":"mutable","name":"low","nameLocation":"11557:3:20","nodeType":"VariableDeclaration","scope":4507,"src":"11549:11:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4473,"name":"uint256","nodeType":"ElementaryTypeName","src":"11549:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4479,"initialValue":{"arguments":[{"id":4476,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4462,"src":"11571:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4477,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4464,"src":"11574:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4475,"name":"mul512","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3935,"src":"11564:6:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256,uint256)"}},"id":4478,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11564:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"11534:42:20"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4480,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4472,"src":"11594:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4481,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11602:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":4482,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4466,"src":"11607:1:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11602:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11594:14:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4493,"nodeType":"IfStatement","src":"11590:86:20","trueBody":{"id":4492,"nodeType":"Block","src":"11610:66:20","statements":[{"expression":{"arguments":[{"expression":{"id":4488,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1314,"src":"11640:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1314_$","typeString":"type(library Panic)"}},"id":4489,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11646:14:20","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":1277,"src":"11640:20:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4485,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1314,"src":"11628:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1314_$","typeString":"type(library Panic)"}},"id":4487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11634:5:20","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1313,"src":"11628:11:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4490,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11628:33:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4491,"nodeType":"ExpressionStatement","src":"11628:33:20"}]}},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4499,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4494,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4472,"src":"11697:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint16","typeString":"uint16"},"id":4497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"323536","id":4495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11706:3:20","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"value":"256"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4496,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4466,"src":"11712:1:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11706:7:20","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}}],"id":4498,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11705:9:20","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"11697:17:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4500,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11696:19:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4501,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4474,"src":"11719:3:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4502,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4466,"src":"11726:1:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11719:8:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4504,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11718:10:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11696:32:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4470,"id":4506,"nodeType":"Return","src":"11689:39:20"}]}]},"documentation":{"id":4460,"nodeType":"StructuredDocumentation","src":"11298:111:20","text":" @dev Calculates floor(x * y >> n) with full precision. Throws if result overflows a uint256."},"id":4509,"implemented":true,"kind":"function","modifiers":[],"name":"mulShr","nameLocation":"11423:6:20","nodeType":"FunctionDefinition","parameters":{"id":4467,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4462,"mutability":"mutable","name":"x","nameLocation":"11438:1:20","nodeType":"VariableDeclaration","scope":4509,"src":"11430:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4461,"name":"uint256","nodeType":"ElementaryTypeName","src":"11430:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4464,"mutability":"mutable","name":"y","nameLocation":"11449:1:20","nodeType":"VariableDeclaration","scope":4509,"src":"11441:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4463,"name":"uint256","nodeType":"ElementaryTypeName","src":"11441:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4466,"mutability":"mutable","name":"n","nameLocation":"11458:1:20","nodeType":"VariableDeclaration","scope":4509,"src":"11452:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4465,"name":"uint8","nodeType":"ElementaryTypeName","src":"11452:5:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"11429:31:20"},"returnParameters":{"id":4470,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4469,"mutability":"mutable","name":"result","nameLocation":"11492:6:20","nodeType":"VariableDeclaration","scope":4509,"src":"11484:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4468,"name":"uint256","nodeType":"ElementaryTypeName","src":"11484:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11483:16:20"},"scope":5516,"src":"11414:331:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4547,"nodeType":"Block","src":"11963:113:20","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4525,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4512,"src":"11987:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4526,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4514,"src":"11990:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4527,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4516,"src":"11993:1:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":4524,"name":"mulShr","nodeType":"Identifier","overloadedDeclarations":[4509,4548],"referencedDeclaration":4509,"src":"11980:6:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint8_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint8) pure returns (uint256)"}},"id":4528,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11980:15:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4532,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4519,"src":"12031:8:20","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3907","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3907","typeString":"enum Math.Rounding"}],"id":4531,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5515,"src":"12014:16:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3907_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4533,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12014:26:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4535,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4512,"src":"12051:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4536,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4514,"src":"12054:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4537,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12057:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":4538,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4516,"src":"12062:1:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"12057:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4534,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"12044:6:20","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":4540,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12044:20:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4541,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12067:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12044:24:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12014:54:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4529,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7281,"src":"11998:8:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7281_$","typeString":"type(library SafeCast)"}},"id":4530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12007:6:20","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7280,"src":"11998:15:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4544,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11998:71:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11980:89:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4523,"id":4546,"nodeType":"Return","src":"11973:96:20"}]},"documentation":{"id":4510,"nodeType":"StructuredDocumentation","src":"11751:109:20","text":" @dev Calculates x * y >> n with full precision, following the selected rounding direction."},"id":4548,"implemented":true,"kind":"function","modifiers":[],"name":"mulShr","nameLocation":"11874:6:20","nodeType":"FunctionDefinition","parameters":{"id":4520,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4512,"mutability":"mutable","name":"x","nameLocation":"11889:1:20","nodeType":"VariableDeclaration","scope":4548,"src":"11881:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4511,"name":"uint256","nodeType":"ElementaryTypeName","src":"11881:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4514,"mutability":"mutable","name":"y","nameLocation":"11900:1:20","nodeType":"VariableDeclaration","scope":4548,"src":"11892:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4513,"name":"uint256","nodeType":"ElementaryTypeName","src":"11892:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4516,"mutability":"mutable","name":"n","nameLocation":"11909:1:20","nodeType":"VariableDeclaration","scope":4548,"src":"11903:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4515,"name":"uint8","nodeType":"ElementaryTypeName","src":"11903:5:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":4519,"mutability":"mutable","name":"rounding","nameLocation":"11921:8:20","nodeType":"VariableDeclaration","scope":4548,"src":"11912:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3907","typeString":"enum Math.Rounding"},"typeName":{"id":4518,"nodeType":"UserDefinedTypeName","pathNode":{"id":4517,"name":"Rounding","nameLocations":["11912:8:20"],"nodeType":"IdentifierPath","referencedDeclaration":3907,"src":"11912:8:20"},"referencedDeclaration":3907,"src":"11912:8:20","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3907","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11880:50:20"},"returnParameters":{"id":4523,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4522,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4548,"src":"11954:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4521,"name":"uint256","nodeType":"ElementaryTypeName","src":"11954:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11953:9:20"},"scope":5516,"src":"11865:211:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4644,"nodeType":"Block","src":"12710:1849:20","statements":[{"id":4643,"nodeType":"UncheckedBlock","src":"12720:1833:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4558,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4553,"src":"12748:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4559,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12753:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12748:6:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4563,"nodeType":"IfStatement","src":"12744:20:20","trueBody":{"expression":{"hexValue":"30","id":4561,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12763:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":4557,"id":4562,"nodeType":"Return","src":"12756:8:20"}},{"assignments":[4565],"declarations":[{"constant":false,"id":4565,"mutability":"mutable","name":"remainder","nameLocation":"13243:9:20","nodeType":"VariableDeclaration","scope":4643,"src":"13235:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4564,"name":"uint256","nodeType":"ElementaryTypeName","src":"13235:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4569,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4568,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4566,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4551,"src":"13255:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":4567,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4553,"src":"13259:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13255:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13235:25:20"},{"assignments":[4571],"declarations":[{"constant":false,"id":4571,"mutability":"mutable","name":"gcd","nameLocation":"13282:3:20","nodeType":"VariableDeclaration","scope":4643,"src":"13274:11:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4570,"name":"uint256","nodeType":"ElementaryTypeName","src":"13274:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4573,"initialValue":{"id":4572,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4553,"src":"13288:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13274:15:20"},{"assignments":[4575],"declarations":[{"constant":false,"id":4575,"mutability":"mutable","name":"x","nameLocation":"13432:1:20","nodeType":"VariableDeclaration","scope":4643,"src":"13425:8:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4574,"name":"int256","nodeType":"ElementaryTypeName","src":"13425:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":4577,"initialValue":{"hexValue":"30","id":4576,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13436:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13425:12:20"},{"assignments":[4579],"declarations":[{"constant":false,"id":4579,"mutability":"mutable","name":"y","nameLocation":"13458:1:20","nodeType":"VariableDeclaration","scope":4643,"src":"13451:8:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4578,"name":"int256","nodeType":"ElementaryTypeName","src":"13451:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":4581,"initialValue":{"hexValue":"31","id":4580,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13462:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"13451:12:20"},{"body":{"id":4618,"nodeType":"Block","src":"13501:882:20","statements":[{"assignments":[4586],"declarations":[{"constant":false,"id":4586,"mutability":"mutable","name":"quotient","nameLocation":"13527:8:20","nodeType":"VariableDeclaration","scope":4618,"src":"13519:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4585,"name":"uint256","nodeType":"ElementaryTypeName","src":"13519:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4590,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4587,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4571,"src":"13538:3:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4588,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4565,"src":"13544:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13538:15:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13519:34:20"},{"expression":{"id":4601,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":4591,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4571,"src":"13573:3:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4592,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4565,"src":"13578:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4593,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"13572:16:20","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":4594,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4565,"src":"13678:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4595,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4571,"src":"13923:3:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4596,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4565,"src":"13929:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4597,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4586,"src":"13941:8:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13929:20:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13923:26:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4600,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13591:376:20","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"src":"13572:395:20","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4602,"nodeType":"ExpressionStatement","src":"13572:395:20"},{"expression":{"id":4616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":4603,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4575,"src":"13987:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":4604,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4579,"src":"13990:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4605,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"13986:6:20","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":4606,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4579,"src":"14072:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4607,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4575,"src":"14326:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4608,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4579,"src":"14330:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":4611,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4586,"src":"14341:8:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4610,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14334:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":4609,"name":"int256","nodeType":"ElementaryTypeName","src":"14334:6:20","typeDescriptions":{}}},"id":4612,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14334:16:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"14330:20:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"14326:24:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4615,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13995:373:20","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"src":"13986:382:20","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4617,"nodeType":"ExpressionStatement","src":"13986:382:20"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4582,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4565,"src":"13485:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":4583,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13498:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13485:14:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4619,"nodeType":"WhileStatement","src":"13478:905:20"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4622,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4620,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4571,"src":"14401:3:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"31","id":4621,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14408:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"14401:8:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4625,"nodeType":"IfStatement","src":"14397:22:20","trueBody":{"expression":{"hexValue":"30","id":4623,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14418:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":4557,"id":4624,"nodeType":"Return","src":"14411:8:20"}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4629,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4627,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4575,"src":"14470:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":4628,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14474:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14470:5:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4630,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4553,"src":"14477:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"id":4634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"14489:2:20","subExpression":{"id":4633,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4575,"src":"14490:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4632,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14481:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4631,"name":"uint256","nodeType":"ElementaryTypeName","src":"14481:7:20","typeDescriptions":{}}},"id":4635,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14481:11:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14477:15:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":4639,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4575,"src":"14502:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4638,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14494:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4637,"name":"uint256","nodeType":"ElementaryTypeName","src":"14494:7:20","typeDescriptions":{}}},"id":4640,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14494:10:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4626,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4184,"src":"14462:7:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":4641,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14462:43:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4557,"id":4642,"nodeType":"Return","src":"14455:50:20"}]}]},"documentation":{"id":4549,"nodeType":"StructuredDocumentation","src":"12082:553:20","text":" @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n If the input value is not inversible, 0 is returned.\n NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}."},"id":4645,"implemented":true,"kind":"function","modifiers":[],"name":"invMod","nameLocation":"12649:6:20","nodeType":"FunctionDefinition","parameters":{"id":4554,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4551,"mutability":"mutable","name":"a","nameLocation":"12664:1:20","nodeType":"VariableDeclaration","scope":4645,"src":"12656:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4550,"name":"uint256","nodeType":"ElementaryTypeName","src":"12656:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4553,"mutability":"mutable","name":"n","nameLocation":"12675:1:20","nodeType":"VariableDeclaration","scope":4645,"src":"12667:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4552,"name":"uint256","nodeType":"ElementaryTypeName","src":"12667:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12655:22:20"},"returnParameters":{"id":4557,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4556,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4645,"src":"12701:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4555,"name":"uint256","nodeType":"ElementaryTypeName","src":"12701:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12700:9:20"},"scope":5516,"src":"12640:1919:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4665,"nodeType":"Block","src":"15159:82:20","statements":[{"id":4664,"nodeType":"UncheckedBlock","src":"15169:66:20","statements":[{"expression":{"arguments":[{"id":4657,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4648,"src":"15212:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4658,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4650,"src":"15215:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"32","id":4659,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15219:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15215:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4661,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4650,"src":"15222:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4655,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5516,"src":"15200:4:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5516_$","typeString":"type(library Math)"}},"id":4656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15205:6:20","memberName":"modExp","nodeType":"MemberAccess","referencedDeclaration":4702,"src":"15200:11:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (uint256)"}},"id":4662,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15200:24:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4654,"id":4663,"nodeType":"Return","src":"15193:31:20"}]}]},"documentation":{"id":4646,"nodeType":"StructuredDocumentation","src":"14565:514:20","text":" @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n NOTE: this function does NOT check that `p` is a prime greater than `2`."},"id":4666,"implemented":true,"kind":"function","modifiers":[],"name":"invModPrime","nameLocation":"15093:11:20","nodeType":"FunctionDefinition","parameters":{"id":4651,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4648,"mutability":"mutable","name":"a","nameLocation":"15113:1:20","nodeType":"VariableDeclaration","scope":4666,"src":"15105:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4647,"name":"uint256","nodeType":"ElementaryTypeName","src":"15105:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4650,"mutability":"mutable","name":"p","nameLocation":"15124:1:20","nodeType":"VariableDeclaration","scope":4666,"src":"15116:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4649,"name":"uint256","nodeType":"ElementaryTypeName","src":"15116:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15104:22:20"},"returnParameters":{"id":4654,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4653,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4666,"src":"15150:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4652,"name":"uint256","nodeType":"ElementaryTypeName","src":"15150:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15149:9:20"},"scope":5516,"src":"15084:157:20","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4701,"nodeType":"Block","src":"16011:174:20","statements":[{"assignments":[4679,4681],"declarations":[{"constant":false,"id":4679,"mutability":"mutable","name":"success","nameLocation":"16027:7:20","nodeType":"VariableDeclaration","scope":4701,"src":"16022:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4678,"name":"bool","nodeType":"ElementaryTypeName","src":"16022:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4681,"mutability":"mutable","name":"result","nameLocation":"16044:6:20","nodeType":"VariableDeclaration","scope":4701,"src":"16036:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4680,"name":"uint256","nodeType":"ElementaryTypeName","src":"16036:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4687,"initialValue":{"arguments":[{"id":4683,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4669,"src":"16064:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4684,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4671,"src":"16067:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4685,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4673,"src":"16070:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4682,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[4726,4808],"referencedDeclaration":4726,"src":"16054:9:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (bool,uint256)"}},"id":4686,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16054:18:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"16021:51:20"},{"condition":{"id":4689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"16086:8:20","subExpression":{"id":4688,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4679,"src":"16087:7:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4698,"nodeType":"IfStatement","src":"16082:74:20","trueBody":{"id":4697,"nodeType":"Block","src":"16096:60:20","statements":[{"expression":{"arguments":[{"expression":{"id":4693,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1314,"src":"16122:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1314_$","typeString":"type(library Panic)"}},"id":4694,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16128:16:20","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":1281,"src":"16122:22:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4690,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1314,"src":"16110:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1314_$","typeString":"type(library Panic)"}},"id":4692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16116:5:20","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1313,"src":"16110:11:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4695,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16110:35:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4696,"nodeType":"ExpressionStatement","src":"16110:35:20"}]}},{"expression":{"id":4699,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4681,"src":"16172:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4677,"id":4700,"nodeType":"Return","src":"16165:13:20"}]},"documentation":{"id":4667,"nodeType":"StructuredDocumentation","src":"15247:678:20","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n Requirements:\n - modulus can't be zero\n - underlying staticcall to precompile must succeed\n IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n sure the chain you're using it on supports the precompiled contract for modular exponentiation\n at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n interpreted as 0."},"id":4702,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"15939:6:20","nodeType":"FunctionDefinition","parameters":{"id":4674,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4669,"mutability":"mutable","name":"b","nameLocation":"15954:1:20","nodeType":"VariableDeclaration","scope":4702,"src":"15946:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4668,"name":"uint256","nodeType":"ElementaryTypeName","src":"15946:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4671,"mutability":"mutable","name":"e","nameLocation":"15965:1:20","nodeType":"VariableDeclaration","scope":4702,"src":"15957:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4670,"name":"uint256","nodeType":"ElementaryTypeName","src":"15957:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4673,"mutability":"mutable","name":"m","nameLocation":"15976:1:20","nodeType":"VariableDeclaration","scope":4702,"src":"15968:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4672,"name":"uint256","nodeType":"ElementaryTypeName","src":"15968:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15945:33:20"},"returnParameters":{"id":4677,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4676,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4702,"src":"16002:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4675,"name":"uint256","nodeType":"ElementaryTypeName","src":"16002:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16001:9:20"},"scope":5516,"src":"15930:255:20","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4725,"nodeType":"Block","src":"17039:1493:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4718,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4716,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4709,"src":"17053:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4717,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17058:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17053:6:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4723,"nodeType":"IfStatement","src":"17049:29:20","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4719,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17069:5:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4720,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17076:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4721,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"17068:10:20","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4715,"id":4722,"nodeType":"Return","src":"17061:17:20"}},{"AST":{"nodeType":"YulBlock","src":"17113:1413:20","statements":[{"nodeType":"YulVariableDeclaration","src":"17127:22:20","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17144:4:20","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17138:5:20"},"nodeType":"YulFunctionCall","src":"17138:11:20"},"variables":[{"name":"ptr","nodeType":"YulTypedName","src":"17131:3:20","type":""}]},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18057:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"18062:4:20","type":"","value":"0x20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18050:6:20"},"nodeType":"YulFunctionCall","src":"18050:17:20"},"nodeType":"YulExpressionStatement","src":"18050:17:20"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18091:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"18096:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18087:3:20"},"nodeType":"YulFunctionCall","src":"18087:14:20"},{"kind":"number","nodeType":"YulLiteral","src":"18103:4:20","type":"","value":"0x20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18080:6:20"},"nodeType":"YulFunctionCall","src":"18080:28:20"},"nodeType":"YulExpressionStatement","src":"18080:28:20"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18132:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"18137:4:20","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18128:3:20"},"nodeType":"YulFunctionCall","src":"18128:14:20"},{"kind":"number","nodeType":"YulLiteral","src":"18144:4:20","type":"","value":"0x20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18121:6:20"},"nodeType":"YulFunctionCall","src":"18121:28:20"},"nodeType":"YulExpressionStatement","src":"18121:28:20"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18173:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"18178:4:20","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18169:3:20"},"nodeType":"YulFunctionCall","src":"18169:14:20"},{"name":"b","nodeType":"YulIdentifier","src":"18185:1:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18162:6:20"},"nodeType":"YulFunctionCall","src":"18162:25:20"},"nodeType":"YulExpressionStatement","src":"18162:25:20"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18211:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"18216:4:20","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18207:3:20"},"nodeType":"YulFunctionCall","src":"18207:14:20"},{"name":"e","nodeType":"YulIdentifier","src":"18223:1:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18200:6:20"},"nodeType":"YulFunctionCall","src":"18200:25:20"},"nodeType":"YulExpressionStatement","src":"18200:25:20"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18249:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"18254:4:20","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18245:3:20"},"nodeType":"YulFunctionCall","src":"18245:14:20"},{"name":"m","nodeType":"YulIdentifier","src":"18261:1:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18238:6:20"},"nodeType":"YulFunctionCall","src":"18238:25:20"},"nodeType":"YulExpressionStatement","src":"18238:25:20"},{"nodeType":"YulAssignment","src":"18425:57:20","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"18447:3:20"},"nodeType":"YulFunctionCall","src":"18447:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"18454:4:20","type":"","value":"0x05"},{"name":"ptr","nodeType":"YulIdentifier","src":"18460:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"18465:4:20","type":"","value":"0xc0"},{"kind":"number","nodeType":"YulLiteral","src":"18471:4:20","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"18477:4:20","type":"","value":"0x20"}],"functionName":{"name":"staticcall","nodeType":"YulIdentifier","src":"18436:10:20"},"nodeType":"YulFunctionCall","src":"18436:46:20"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"18425:7:20"}]},{"nodeType":"YulAssignment","src":"18495:21:20","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18511:4:20","type":"","value":"0x00"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"18505:5:20"},"nodeType":"YulFunctionCall","src":"18505:11:20"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"18495:6:20"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4705,"isOffset":false,"isSlot":false,"src":"18185:1:20","valueSize":1},{"declaration":4707,"isOffset":false,"isSlot":false,"src":"18223:1:20","valueSize":1},{"declaration":4709,"isOffset":false,"isSlot":false,"src":"18261:1:20","valueSize":1},{"declaration":4714,"isOffset":false,"isSlot":false,"src":"18495:6:20","valueSize":1},{"declaration":4712,"isOffset":false,"isSlot":false,"src":"18425:7:20","valueSize":1}],"flags":["memory-safe"],"id":4724,"nodeType":"InlineAssembly","src":"17088:1438:20"}]},"documentation":{"id":4703,"nodeType":"StructuredDocumentation","src":"16191:738:20","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n to operate modulo 0 or if the underlying precompile reverted.\n IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n of a revert, but the result may be incorrectly interpreted as 0."},"id":4726,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"16943:9:20","nodeType":"FunctionDefinition","parameters":{"id":4710,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4705,"mutability":"mutable","name":"b","nameLocation":"16961:1:20","nodeType":"VariableDeclaration","scope":4726,"src":"16953:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4704,"name":"uint256","nodeType":"ElementaryTypeName","src":"16953:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4707,"mutability":"mutable","name":"e","nameLocation":"16972:1:20","nodeType":"VariableDeclaration","scope":4726,"src":"16964:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4706,"name":"uint256","nodeType":"ElementaryTypeName","src":"16964:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4709,"mutability":"mutable","name":"m","nameLocation":"16983:1:20","nodeType":"VariableDeclaration","scope":4726,"src":"16975:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4708,"name":"uint256","nodeType":"ElementaryTypeName","src":"16975:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16952:33:20"},"returnParameters":{"id":4715,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4712,"mutability":"mutable","name":"success","nameLocation":"17014:7:20","nodeType":"VariableDeclaration","scope":4726,"src":"17009:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4711,"name":"bool","nodeType":"ElementaryTypeName","src":"17009:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4714,"mutability":"mutable","name":"result","nameLocation":"17031:6:20","nodeType":"VariableDeclaration","scope":4726,"src":"17023:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4713,"name":"uint256","nodeType":"ElementaryTypeName","src":"17023:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17008:30:20"},"scope":5516,"src":"16934:1598:20","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4761,"nodeType":"Block","src":"18729:179:20","statements":[{"assignments":[4739,4741],"declarations":[{"constant":false,"id":4739,"mutability":"mutable","name":"success","nameLocation":"18745:7:20","nodeType":"VariableDeclaration","scope":4761,"src":"18740:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4738,"name":"bool","nodeType":"ElementaryTypeName","src":"18740:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4741,"mutability":"mutable","name":"result","nameLocation":"18767:6:20","nodeType":"VariableDeclaration","scope":4761,"src":"18754:19:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4740,"name":"bytes","nodeType":"ElementaryTypeName","src":"18754:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4747,"initialValue":{"arguments":[{"id":4743,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4729,"src":"18787:1:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4744,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4731,"src":"18790:1:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4745,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4733,"src":"18793:1:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4742,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[4726,4808],"referencedDeclaration":4808,"src":"18777:9:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory,bytes memory,bytes memory) view returns (bool,bytes memory)"}},"id":4746,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18777:18:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"18739:56:20"},{"condition":{"id":4749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"18809:8:20","subExpression":{"id":4748,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4739,"src":"18810:7:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4758,"nodeType":"IfStatement","src":"18805:74:20","trueBody":{"id":4757,"nodeType":"Block","src":"18819:60:20","statements":[{"expression":{"arguments":[{"expression":{"id":4753,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1314,"src":"18845:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1314_$","typeString":"type(library Panic)"}},"id":4754,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"18851:16:20","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":1281,"src":"18845:22:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4750,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1314,"src":"18833:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1314_$","typeString":"type(library Panic)"}},"id":4752,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18839:5:20","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1313,"src":"18833:11:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4755,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18833:35:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4756,"nodeType":"ExpressionStatement","src":"18833:35:20"}]}},{"expression":{"id":4759,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4741,"src":"18895:6:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":4737,"id":4760,"nodeType":"Return","src":"18888:13:20"}]},"documentation":{"id":4727,"nodeType":"StructuredDocumentation","src":"18538:85:20","text":" @dev Variant of {modExp} that supports inputs of arbitrary length."},"id":4762,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"18637:6:20","nodeType":"FunctionDefinition","parameters":{"id":4734,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4729,"mutability":"mutable","name":"b","nameLocation":"18657:1:20","nodeType":"VariableDeclaration","scope":4762,"src":"18644:14:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4728,"name":"bytes","nodeType":"ElementaryTypeName","src":"18644:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4731,"mutability":"mutable","name":"e","nameLocation":"18673:1:20","nodeType":"VariableDeclaration","scope":4762,"src":"18660:14:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4730,"name":"bytes","nodeType":"ElementaryTypeName","src":"18660:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4733,"mutability":"mutable","name":"m","nameLocation":"18689:1:20","nodeType":"VariableDeclaration","scope":4762,"src":"18676:14:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4732,"name":"bytes","nodeType":"ElementaryTypeName","src":"18676:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"18643:48:20"},"returnParameters":{"id":4737,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4736,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4762,"src":"18715:12:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4735,"name":"bytes","nodeType":"ElementaryTypeName","src":"18715:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"18714:14:20"},"scope":5516,"src":"18628:280:20","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4807,"nodeType":"Block","src":"19162:771:20","statements":[{"condition":{"arguments":[{"id":4777,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4769,"src":"19187:1:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4776,"name":"_zeroBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4841,"src":"19176:10:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (bytes memory) pure returns (bool)"}},"id":4778,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19176:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4786,"nodeType":"IfStatement","src":"19172:47:20","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4779,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"19199:5:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":4782,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19216:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4781,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"19206:9:20","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":4780,"name":"bytes","nodeType":"ElementaryTypeName","src":"19210:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":4783,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19206:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"id":4784,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19198:21:20","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"functionReturnParameters":4775,"id":4785,"nodeType":"Return","src":"19191:28:20"}},{"assignments":[4788],"declarations":[{"constant":false,"id":4788,"mutability":"mutable","name":"mLen","nameLocation":"19238:4:20","nodeType":"VariableDeclaration","scope":4807,"src":"19230:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4787,"name":"uint256","nodeType":"ElementaryTypeName","src":"19230:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4791,"initialValue":{"expression":{"id":4789,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4769,"src":"19245:1:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19247:6:20","memberName":"length","nodeType":"MemberAccess","src":"19245:8:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19230:23:20"},{"expression":{"id":4804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4792,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4774,"src":"19335:6:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":4795,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4765,"src":"19361:1:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19363:6:20","memberName":"length","nodeType":"MemberAccess","src":"19361:8:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":4797,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4767,"src":"19371:1:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19373:6:20","memberName":"length","nodeType":"MemberAccess","src":"19371:8:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4799,"name":"mLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4788,"src":"19381:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4800,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4765,"src":"19387:1:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4801,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4767,"src":"19390:1:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4802,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4769,"src":"19393:1:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":4793,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"19344:3:20","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4794,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"19348:12:20","memberName":"encodePacked","nodeType":"MemberAccess","src":"19344:16:20","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4803,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19344:51:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"19335:60:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4805,"nodeType":"ExpressionStatement","src":"19335:60:20"},{"AST":{"nodeType":"YulBlock","src":"19431:496:20","statements":[{"nodeType":"YulVariableDeclaration","src":"19445:32:20","value":{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"19464:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"19472:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19460:3:20"},"nodeType":"YulFunctionCall","src":"19460:17:20"},"variables":[{"name":"dataPtr","nodeType":"YulTypedName","src":"19449:7:20","type":""}]},{"nodeType":"YulAssignment","src":"19567:73:20","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"19589:3:20"},"nodeType":"YulFunctionCall","src":"19589:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"19596:4:20","type":"","value":"0x05"},{"name":"dataPtr","nodeType":"YulIdentifier","src":"19602:7:20"},{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"19617:6:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"19611:5:20"},"nodeType":"YulFunctionCall","src":"19611:13:20"},{"name":"dataPtr","nodeType":"YulIdentifier","src":"19626:7:20"},{"name":"mLen","nodeType":"YulIdentifier","src":"19635:4:20"}],"functionName":{"name":"staticcall","nodeType":"YulIdentifier","src":"19578:10:20"},"nodeType":"YulFunctionCall","src":"19578:62:20"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"19567:7:20"}]},{"expression":{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"19796:6:20"},{"name":"mLen","nodeType":"YulIdentifier","src":"19804:4:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19789:6:20"},"nodeType":"YulFunctionCall","src":"19789:20:20"},"nodeType":"YulExpressionStatement","src":"19789:20:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19892:4:20","type":"","value":"0x40"},{"arguments":[{"name":"dataPtr","nodeType":"YulIdentifier","src":"19902:7:20"},{"name":"mLen","nodeType":"YulIdentifier","src":"19911:4:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19898:3:20"},"nodeType":"YulFunctionCall","src":"19898:18:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19885:6:20"},"nodeType":"YulFunctionCall","src":"19885:32:20"},"nodeType":"YulExpressionStatement","src":"19885:32:20"}]},"evmVersion":"paris","externalReferences":[{"declaration":4788,"isOffset":false,"isSlot":false,"src":"19635:4:20","valueSize":1},{"declaration":4788,"isOffset":false,"isSlot":false,"src":"19804:4:20","valueSize":1},{"declaration":4788,"isOffset":false,"isSlot":false,"src":"19911:4:20","valueSize":1},{"declaration":4774,"isOffset":false,"isSlot":false,"src":"19464:6:20","valueSize":1},{"declaration":4774,"isOffset":false,"isSlot":false,"src":"19617:6:20","valueSize":1},{"declaration":4774,"isOffset":false,"isSlot":false,"src":"19796:6:20","valueSize":1},{"declaration":4772,"isOffset":false,"isSlot":false,"src":"19567:7:20","valueSize":1}],"flags":["memory-safe"],"id":4806,"nodeType":"InlineAssembly","src":"19406:521:20"}]},"documentation":{"id":4763,"nodeType":"StructuredDocumentation","src":"18914:88:20","text":" @dev Variant of {tryModExp} that supports inputs of arbitrary length."},"id":4808,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"19016:9:20","nodeType":"FunctionDefinition","parameters":{"id":4770,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4765,"mutability":"mutable","name":"b","nameLocation":"19048:1:20","nodeType":"VariableDeclaration","scope":4808,"src":"19035:14:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4764,"name":"bytes","nodeType":"ElementaryTypeName","src":"19035:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4767,"mutability":"mutable","name":"e","nameLocation":"19072:1:20","nodeType":"VariableDeclaration","scope":4808,"src":"19059:14:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4766,"name":"bytes","nodeType":"ElementaryTypeName","src":"19059:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4769,"mutability":"mutable","name":"m","nameLocation":"19096:1:20","nodeType":"VariableDeclaration","scope":4808,"src":"19083:14:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4768,"name":"bytes","nodeType":"ElementaryTypeName","src":"19083:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"19025:78:20"},"returnParameters":{"id":4775,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4772,"mutability":"mutable","name":"success","nameLocation":"19132:7:20","nodeType":"VariableDeclaration","scope":4808,"src":"19127:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4771,"name":"bool","nodeType":"ElementaryTypeName","src":"19127:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4774,"mutability":"mutable","name":"result","nameLocation":"19154:6:20","nodeType":"VariableDeclaration","scope":4808,"src":"19141:19:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4773,"name":"bytes","nodeType":"ElementaryTypeName","src":"19141:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"19126:35:20"},"scope":5516,"src":"19007:926:20","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4840,"nodeType":"Block","src":"20088:176:20","statements":[{"body":{"id":4836,"nodeType":"Block","src":"20145:92:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":4831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":4827,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4811,"src":"20163:9:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4829,"indexExpression":{"id":4828,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4817,"src":"20173:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20163:12:20","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":4830,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20179:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"20163:17:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4835,"nodeType":"IfStatement","src":"20159:68:20","trueBody":{"id":4834,"nodeType":"Block","src":"20182:45:20","statements":[{"expression":{"hexValue":"66616c7365","id":4832,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20207:5:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":4815,"id":4833,"nodeType":"Return","src":"20200:12:20"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4820,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4817,"src":"20118:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4821,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4811,"src":"20122:9:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20132:6:20","memberName":"length","nodeType":"MemberAccess","src":"20122:16:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20118:20:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4837,"initializationExpression":{"assignments":[4817],"declarations":[{"constant":false,"id":4817,"mutability":"mutable","name":"i","nameLocation":"20111:1:20","nodeType":"VariableDeclaration","scope":4837,"src":"20103:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4816,"name":"uint256","nodeType":"ElementaryTypeName","src":"20103:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4819,"initialValue":{"hexValue":"30","id":4818,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20115:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"20103:13:20"},"loopExpression":{"expression":{"id":4825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"20140:3:20","subExpression":{"id":4824,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4817,"src":"20142:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4826,"nodeType":"ExpressionStatement","src":"20140:3:20"},"nodeType":"ForStatement","src":"20098:139:20"},{"expression":{"hexValue":"74727565","id":4838,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20253:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":4815,"id":4839,"nodeType":"Return","src":"20246:11:20"}]},"documentation":{"id":4809,"nodeType":"StructuredDocumentation","src":"19939:72:20","text":" @dev Returns whether the provided byte array is zero."},"id":4841,"implemented":true,"kind":"function","modifiers":[],"name":"_zeroBytes","nameLocation":"20025:10:20","nodeType":"FunctionDefinition","parameters":{"id":4812,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4811,"mutability":"mutable","name":"byteArray","nameLocation":"20049:9:20","nodeType":"VariableDeclaration","scope":4841,"src":"20036:22:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4810,"name":"bytes","nodeType":"ElementaryTypeName","src":"20036:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"20035:24:20"},"returnParameters":{"id":4815,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4814,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4841,"src":"20082:4:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4813,"name":"bool","nodeType":"ElementaryTypeName","src":"20082:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"20081:6:20"},"scope":5516,"src":"20016:248:20","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":5059,"nodeType":"Block","src":"20624:5124:20","statements":[{"id":5058,"nodeType":"UncheckedBlock","src":"20634:5108:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4849,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4844,"src":"20728:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"31","id":4850,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20733:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"20728:6:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4855,"nodeType":"IfStatement","src":"20724:53:20","trueBody":{"id":4854,"nodeType":"Block","src":"20736:41:20","statements":[{"expression":{"id":4852,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4844,"src":"20761:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4848,"id":4853,"nodeType":"Return","src":"20754:8:20"}]}},{"assignments":[4857],"declarations":[{"constant":false,"id":4857,"mutability":"mutable","name":"aa","nameLocation":"21712:2:20","nodeType":"VariableDeclaration","scope":5058,"src":"21704:10:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4856,"name":"uint256","nodeType":"ElementaryTypeName","src":"21704:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4859,"initialValue":{"id":4858,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4844,"src":"21717:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"21704:14:20"},{"assignments":[4861],"declarations":[{"constant":false,"id":4861,"mutability":"mutable","name":"xn","nameLocation":"21740:2:20","nodeType":"VariableDeclaration","scope":5058,"src":"21732:10:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4860,"name":"uint256","nodeType":"ElementaryTypeName","src":"21732:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4863,"initialValue":{"hexValue":"31","id":4862,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21745:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"21732:14:20"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4869,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4864,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4857,"src":"21765:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":4867,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4865,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21772:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":4866,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21777:3:20","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"21772:8:20","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":4868,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21771:10:20","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"src":"21765:16:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4879,"nodeType":"IfStatement","src":"21761:92:20","trueBody":{"id":4878,"nodeType":"Block","src":"21783:70:20","statements":[{"expression":{"id":4872,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4870,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4857,"src":"21801:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":4871,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21808:3:20","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"21801:10:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4873,"nodeType":"ExpressionStatement","src":"21801:10:20"},{"expression":{"id":4876,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4874,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4861,"src":"21829:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3634","id":4875,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21836:2:20","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21829:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4877,"nodeType":"ExpressionStatement","src":"21829:9:20"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4885,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4880,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4857,"src":"21870:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":4883,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4881,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21877:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":4882,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21882:2:20","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21877:7:20","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":4884,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21876:9:20","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"src":"21870:15:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4895,"nodeType":"IfStatement","src":"21866:90:20","trueBody":{"id":4894,"nodeType":"Block","src":"21887:69:20","statements":[{"expression":{"id":4888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4886,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4857,"src":"21905:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":4887,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21912:2:20","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21905:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4889,"nodeType":"ExpressionStatement","src":"21905:9:20"},{"expression":{"id":4892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4890,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4861,"src":"21932:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3332","id":4891,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21939:2:20","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"21932:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4893,"nodeType":"ExpressionStatement","src":"21932:9:20"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4896,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4857,"src":"21973:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":4899,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4897,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21980:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":4898,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21985:2:20","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"21980:7:20","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":4900,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21979:9:20","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"src":"21973:15:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4911,"nodeType":"IfStatement","src":"21969:90:20","trueBody":{"id":4910,"nodeType":"Block","src":"21990:69:20","statements":[{"expression":{"id":4904,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4902,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4857,"src":"22008:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":4903,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22015:2:20","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"22008:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4905,"nodeType":"ExpressionStatement","src":"22008:9:20"},{"expression":{"id":4908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4906,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4861,"src":"22035:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3136","id":4907,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22042:2:20","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22035:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4909,"nodeType":"ExpressionStatement","src":"22035:9:20"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4912,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4857,"src":"22076:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":4915,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4913,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22083:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":4914,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22088:2:20","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22083:7:20","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":4916,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22082:9:20","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"src":"22076:15:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4927,"nodeType":"IfStatement","src":"22072:89:20","trueBody":{"id":4926,"nodeType":"Block","src":"22093:68:20","statements":[{"expression":{"id":4920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4918,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4857,"src":"22111:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":4919,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22118:2:20","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22111:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4921,"nodeType":"ExpressionStatement","src":"22111:9:20"},{"expression":{"id":4924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4922,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4861,"src":"22138:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"38","id":4923,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22145:1:20","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22138:8:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4925,"nodeType":"ExpressionStatement","src":"22138:8:20"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4928,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4857,"src":"22178:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":4931,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4929,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22185:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":4930,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22190:1:20","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22185:6:20","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":4932,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22184:8:20","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"src":"22178:14:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4943,"nodeType":"IfStatement","src":"22174:87:20","trueBody":{"id":4942,"nodeType":"Block","src":"22194:67:20","statements":[{"expression":{"id":4936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4934,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4857,"src":"22212:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":4935,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22219:1:20","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22212:8:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4937,"nodeType":"ExpressionStatement","src":"22212:8:20"},{"expression":{"id":4940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4938,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4861,"src":"22238:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"34","id":4939,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22245:1:20","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22238:8:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4941,"nodeType":"ExpressionStatement","src":"22238:8:20"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4944,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4857,"src":"22278:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"id":4947,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4945,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22285:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":4946,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22290:1:20","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22285:6:20","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}}],"id":4948,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22284:8:20","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}},"src":"22278:14:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4959,"nodeType":"IfStatement","src":"22274:87:20","trueBody":{"id":4958,"nodeType":"Block","src":"22294:67:20","statements":[{"expression":{"id":4952,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4950,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4857,"src":"22312:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":4951,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22319:1:20","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22312:8:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4953,"nodeType":"ExpressionStatement","src":"22312:8:20"},{"expression":{"id":4956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4954,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4861,"src":"22338:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"32","id":4955,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22345:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"22338:8:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4957,"nodeType":"ExpressionStatement","src":"22338:8:20"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4960,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4857,"src":"22378:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"id":4963,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4961,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22385:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":4962,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22390:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"22385:6:20","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}}],"id":4964,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22384:8:20","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}},"src":"22378:14:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4971,"nodeType":"IfStatement","src":"22374:61:20","trueBody":{"id":4970,"nodeType":"Block","src":"22394:41:20","statements":[{"expression":{"id":4968,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4966,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4861,"src":"22412:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"31","id":4967,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22419:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22412:8:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4969,"nodeType":"ExpressionStatement","src":"22412:8:20"}]}},{"expression":{"id":4979,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4972,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4861,"src":"22855:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":4973,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22861:1:20","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4974,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4861,"src":"22865:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22861:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4976,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22860:8:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4977,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22872:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22860:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22855:18:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4980,"nodeType":"ExpressionStatement","src":"22855:18:20"},{"expression":{"id":4990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4981,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4861,"src":"24760:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4989,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4986,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4982,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4861,"src":"24766:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4983,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4844,"src":"24771:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4984,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4861,"src":"24775:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24771:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24766:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4987,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24765:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4988,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24782:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24765:18:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24760:23:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4991,"nodeType":"ExpressionStatement","src":"24760:23:20"},{"expression":{"id":5001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4992,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4861,"src":"24869:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5000,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4993,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4861,"src":"24875:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4994,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4844,"src":"24880:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4995,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4861,"src":"24884:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24880:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24875:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4998,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24874:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4999,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24891:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24874:18:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24869:23:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5002,"nodeType":"ExpressionStatement","src":"24869:23:20"},{"expression":{"id":5012,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5003,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4861,"src":"24980:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5008,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5004,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4861,"src":"24986:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5005,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4844,"src":"24991:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5006,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4861,"src":"24995:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24991:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24986:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5009,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24985:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5010,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25002:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24985:18:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24980:23:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5013,"nodeType":"ExpressionStatement","src":"24980:23:20"},{"expression":{"id":5023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5014,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4861,"src":"25089:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5015,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4861,"src":"25095:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5018,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5016,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4844,"src":"25100:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5017,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4861,"src":"25104:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25100:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25095:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5020,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25094:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5021,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25111:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25094:18:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25089:23:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5024,"nodeType":"ExpressionStatement","src":"25089:23:20"},{"expression":{"id":5034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5025,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4861,"src":"25199:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5030,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5026,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4861,"src":"25205:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5029,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5027,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4844,"src":"25210:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5028,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4861,"src":"25214:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25210:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25205:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5031,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25204:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5032,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25221:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25204:18:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25199:23:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5035,"nodeType":"ExpressionStatement","src":"25199:23:20"},{"expression":{"id":5045,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5036,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4861,"src":"25309:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5044,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5041,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5037,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4861,"src":"25315:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5038,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4844,"src":"25320:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5039,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4861,"src":"25324:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25320:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25315:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5042,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25314:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5043,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25331:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25314:18:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25309:23:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5046,"nodeType":"ExpressionStatement","src":"25309:23:20"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5047,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4861,"src":"25698:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5054,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5050,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4861,"src":"25719:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5053,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5051,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4844,"src":"25724:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5052,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4861,"src":"25728:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25724:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25719:11:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5048,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7281,"src":"25703:8:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7281_$","typeString":"type(library SafeCast)"}},"id":5049,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25712:6:20","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7280,"src":"25703:15:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5055,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25703:28:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25698:33:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4848,"id":5057,"nodeType":"Return","src":"25691:40:20"}]}]},"documentation":{"id":4842,"nodeType":"StructuredDocumentation","src":"20270:292:20","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n using integer operations."},"id":5060,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"20576:4:20","nodeType":"FunctionDefinition","parameters":{"id":4845,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4844,"mutability":"mutable","name":"a","nameLocation":"20589:1:20","nodeType":"VariableDeclaration","scope":5060,"src":"20581:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4843,"name":"uint256","nodeType":"ElementaryTypeName","src":"20581:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20580:11:20"},"returnParameters":{"id":4848,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4847,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5060,"src":"20615:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4846,"name":"uint256","nodeType":"ElementaryTypeName","src":"20615:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20614:9:20"},"scope":5516,"src":"20567:5181:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5093,"nodeType":"Block","src":"25921:171:20","statements":[{"id":5092,"nodeType":"UncheckedBlock","src":"25931:155:20","statements":[{"assignments":[5072],"declarations":[{"constant":false,"id":5072,"mutability":"mutable","name":"result","nameLocation":"25963:6:20","nodeType":"VariableDeclaration","scope":5092,"src":"25955:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5071,"name":"uint256","nodeType":"ElementaryTypeName","src":"25955:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5076,"initialValue":{"arguments":[{"id":5074,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5063,"src":"25977:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5073,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[5060,5094],"referencedDeclaration":5060,"src":"25972:4:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5075,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25972:7:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"25955:24:20"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5090,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5077,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5072,"src":"26000:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5088,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5081,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5066,"src":"26042:8:20","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3907","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3907","typeString":"enum Math.Rounding"}],"id":5080,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5515,"src":"26025:16:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3907_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":5082,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26025:26:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5087,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5083,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5072,"src":"26055:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5084,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5072,"src":"26064:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26055:15:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5086,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5063,"src":"26073:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26055:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"26025:49:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5078,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7281,"src":"26009:8:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7281_$","typeString":"type(library SafeCast)"}},"id":5079,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26018:6:20","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7280,"src":"26009:15:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5089,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26009:66:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26000:75:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5070,"id":5091,"nodeType":"Return","src":"25993:82:20"}]}]},"documentation":{"id":5061,"nodeType":"StructuredDocumentation","src":"25754:86:20","text":" @dev Calculates sqrt(a), following the selected rounding direction."},"id":5094,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"25854:4:20","nodeType":"FunctionDefinition","parameters":{"id":5067,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5063,"mutability":"mutable","name":"a","nameLocation":"25867:1:20","nodeType":"VariableDeclaration","scope":5094,"src":"25859:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5062,"name":"uint256","nodeType":"ElementaryTypeName","src":"25859:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5066,"mutability":"mutable","name":"rounding","nameLocation":"25879:8:20","nodeType":"VariableDeclaration","scope":5094,"src":"25870:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3907","typeString":"enum Math.Rounding"},"typeName":{"id":5065,"nodeType":"UserDefinedTypeName","pathNode":{"id":5064,"name":"Rounding","nameLocations":["25870:8:20"],"nodeType":"IdentifierPath","referencedDeclaration":3907,"src":"25870:8:20"},"referencedDeclaration":3907,"src":"25870:8:20","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3907","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"25858:30:20"},"returnParameters":{"id":5070,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5069,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5094,"src":"25912:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5068,"name":"uint256","nodeType":"ElementaryTypeName","src":"25912:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25911:9:20"},"scope":5516,"src":"25845:247:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5184,"nodeType":"Block","src":"26281:2334:20","statements":[{"expression":{"id":5111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5102,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5100,"src":"26363:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5105,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5097,"src":"26383:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666666666666666666666666666666666666666666666666666","id":5106,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26387:34:20","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"value":"0xffffffffffffffffffffffffffffffff"},"src":"26383:38:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5103,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7281,"src":"26367:8:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7281_$","typeString":"type(library SafeCast)"}},"id":5104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26376:6:20","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7280,"src":"26367:15:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5108,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26367:55:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"37","id":5109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26426:1:20","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"26367:60:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26363:64:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5112,"nodeType":"ExpressionStatement","src":"26363:64:20"},{"expression":{"id":5125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5113,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5100,"src":"26503:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5124,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5116,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5097,"src":"26525:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5117,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5100,"src":"26530:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26525:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5119,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26524:8:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666666666666666666666666666","id":5120,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26535:18:20","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"value":"0xffffffffffffffff"},"src":"26524:29:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5114,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7281,"src":"26508:8:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7281_$","typeString":"type(library SafeCast)"}},"id":5115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26517:6:20","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7280,"src":"26508:15:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5122,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26508:46:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"36","id":5123,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26558:1:20","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"26508:51:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26503:56:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5126,"nodeType":"ExpressionStatement","src":"26503:56:20"},{"expression":{"id":5139,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5127,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5100,"src":"26634:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5135,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5130,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5097,"src":"26656:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5131,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5100,"src":"26661:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26656:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5133,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26655:8:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666","id":5134,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26666:10:20","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"value":"0xffffffff"},"src":"26655:21:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5128,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7281,"src":"26639:8:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7281_$","typeString":"type(library SafeCast)"}},"id":5129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26648:6:20","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7280,"src":"26639:15:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5136,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26639:38:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":5137,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26681:1:20","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"26639:43:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26634:48:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5140,"nodeType":"ExpressionStatement","src":"26634:48:20"},{"expression":{"id":5153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5141,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5100,"src":"26757:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5146,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5144,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5097,"src":"26779:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5145,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5100,"src":"26784:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26779:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5147,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26778:8:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666","id":5148,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26789:6:20","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"value":"0xffff"},"src":"26778:17:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5142,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7281,"src":"26762:8:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7281_$","typeString":"type(library SafeCast)"}},"id":5143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26771:6:20","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7280,"src":"26762:15:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5150,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26762:34:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":5151,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26800:1:20","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"26762:39:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26757:44:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5154,"nodeType":"ExpressionStatement","src":"26757:44:20"},{"expression":{"id":5167,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5155,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5100,"src":"26874:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5158,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5097,"src":"26896:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5159,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5100,"src":"26901:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26896:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5161,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26895:8:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666","id":5162,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26906:4:20","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xff"},"src":"26895:15:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5156,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7281,"src":"26879:8:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7281_$","typeString":"type(library SafeCast)"}},"id":5157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26888:6:20","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7280,"src":"26879:15:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5164,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26879:32:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":5165,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26915:1:20","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"26879:37:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26874:42:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5168,"nodeType":"ExpressionStatement","src":"26874:42:20"},{"expression":{"id":5181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5169,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5100,"src":"26988:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5174,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5172,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5097,"src":"27010:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5173,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5100,"src":"27015:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27010:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5175,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"27009:8:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866","id":5176,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27020:3:20","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"27009:14:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5170,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7281,"src":"26993:8:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7281_$","typeString":"type(library SafeCast)"}},"id":5171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27002:6:20","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7280,"src":"26993:15:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5178,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26993:31:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":5179,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27028:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26993:36:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26988:41:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5182,"nodeType":"ExpressionStatement","src":"26988:41:20"},{"AST":{"nodeType":"YulBlock","src":"28490:119:20","statements":[{"nodeType":"YulAssignment","src":"28504:95:20","value":{"arguments":[{"name":"r","nodeType":"YulIdentifier","src":"28512:1:20"},{"arguments":[{"arguments":[{"name":"r","nodeType":"YulIdentifier","src":"28524:1:20"},{"name":"x","nodeType":"YulIdentifier","src":"28527:1:20"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"28520:3:20"},"nodeType":"YulFunctionCall","src":"28520:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"28531:66:20","type":"","value":"0x0000010102020202030303030303030300000000000000000000000000000000"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"28515:4:20"},"nodeType":"YulFunctionCall","src":"28515:83:20"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"28509:2:20"},"nodeType":"YulFunctionCall","src":"28509:90:20"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"28504:1:20"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5100,"isOffset":false,"isSlot":false,"src":"28504:1:20","valueSize":1},{"declaration":5100,"isOffset":false,"isSlot":false,"src":"28512:1:20","valueSize":1},{"declaration":5100,"isOffset":false,"isSlot":false,"src":"28524:1:20","valueSize":1},{"declaration":5097,"isOffset":false,"isSlot":false,"src":"28527:1:20","valueSize":1}],"flags":["memory-safe"],"id":5183,"nodeType":"InlineAssembly","src":"28465:144:20"}]},"documentation":{"id":5095,"nodeType":"StructuredDocumentation","src":"26098:119:20","text":" @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":5185,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"26231:4:20","nodeType":"FunctionDefinition","parameters":{"id":5098,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5097,"mutability":"mutable","name":"x","nameLocation":"26244:1:20","nodeType":"VariableDeclaration","scope":5185,"src":"26236:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5096,"name":"uint256","nodeType":"ElementaryTypeName","src":"26236:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26235:11:20"},"returnParameters":{"id":5101,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5100,"mutability":"mutable","name":"r","nameLocation":"26278:1:20","nodeType":"VariableDeclaration","scope":5185,"src":"26270:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5099,"name":"uint256","nodeType":"ElementaryTypeName","src":"26270:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26269:11:20"},"scope":5516,"src":"26222:2393:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5218,"nodeType":"Block","src":"28848:175:20","statements":[{"id":5217,"nodeType":"UncheckedBlock","src":"28858:159:20","statements":[{"assignments":[5197],"declarations":[{"constant":false,"id":5197,"mutability":"mutable","name":"result","nameLocation":"28890:6:20","nodeType":"VariableDeclaration","scope":5217,"src":"28882:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5196,"name":"uint256","nodeType":"ElementaryTypeName","src":"28882:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5201,"initialValue":{"arguments":[{"id":5199,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5188,"src":"28904:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5198,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[5185,5219],"referencedDeclaration":5185,"src":"28899:4:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5200,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28899:11:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"28882:28:20"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5202,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5197,"src":"28931:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5206,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5191,"src":"28973:8:20","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3907","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3907","typeString":"enum Math.Rounding"}],"id":5205,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5515,"src":"28956:16:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3907_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":5207,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28956:26:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5208,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28986:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":5209,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5197,"src":"28991:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28986:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5211,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5188,"src":"29000:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28986:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"28956:49:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5203,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7281,"src":"28940:8:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7281_$","typeString":"type(library SafeCast)"}},"id":5204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"28949:6:20","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7280,"src":"28940:15:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5214,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28940:66:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28931:75:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5195,"id":5216,"nodeType":"Return","src":"28924:82:20"}]}]},"documentation":{"id":5186,"nodeType":"StructuredDocumentation","src":"28621:142:20","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":5219,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"28777:4:20","nodeType":"FunctionDefinition","parameters":{"id":5192,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5188,"mutability":"mutable","name":"value","nameLocation":"28790:5:20","nodeType":"VariableDeclaration","scope":5219,"src":"28782:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5187,"name":"uint256","nodeType":"ElementaryTypeName","src":"28782:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5191,"mutability":"mutable","name":"rounding","nameLocation":"28806:8:20","nodeType":"VariableDeclaration","scope":5219,"src":"28797:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3907","typeString":"enum Math.Rounding"},"typeName":{"id":5190,"nodeType":"UserDefinedTypeName","pathNode":{"id":5189,"name":"Rounding","nameLocations":["28797:8:20"],"nodeType":"IdentifierPath","referencedDeclaration":3907,"src":"28797:8:20"},"referencedDeclaration":3907,"src":"28797:8:20","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3907","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"28781:34:20"},"returnParameters":{"id":5195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5194,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5219,"src":"28839:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5193,"name":"uint256","nodeType":"ElementaryTypeName","src":"28839:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"28838:9:20"},"scope":5516,"src":"28768:255:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5347,"nodeType":"Block","src":"29216:854:20","statements":[{"assignments":[5228],"declarations":[{"constant":false,"id":5228,"mutability":"mutable","name":"result","nameLocation":"29234:6:20","nodeType":"VariableDeclaration","scope":5347,"src":"29226:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5227,"name":"uint256","nodeType":"ElementaryTypeName","src":"29226:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5230,"initialValue":{"hexValue":"30","id":5229,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29243:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"29226:18:20"},{"id":5344,"nodeType":"UncheckedBlock","src":"29254:787:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5231,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5222,"src":"29282:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":5234,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5232,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29291:2:20","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":5233,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29297:2:20","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29291:8:20","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"29282:17:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5247,"nodeType":"IfStatement","src":"29278:103:20","trueBody":{"id":5246,"nodeType":"Block","src":"29301:80:20","statements":[{"expression":{"id":5240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5236,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5222,"src":"29319:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":5239,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5237,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29328:2:20","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":5238,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29334:2:20","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29328:8:20","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"29319:17:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5241,"nodeType":"ExpressionStatement","src":"29319:17:20"},{"expression":{"id":5244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5242,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5228,"src":"29354:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":5243,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29364:2:20","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29354:12:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5245,"nodeType":"ExpressionStatement","src":"29354:12:20"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5248,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5222,"src":"29398:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":5251,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5249,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29407:2:20","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":5250,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29413:2:20","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29407:8:20","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"29398:17:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5264,"nodeType":"IfStatement","src":"29394:103:20","trueBody":{"id":5263,"nodeType":"Block","src":"29417:80:20","statements":[{"expression":{"id":5257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5253,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5222,"src":"29435:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":5256,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5254,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29444:2:20","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":5255,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29450:2:20","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29444:8:20","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"29435:17:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5258,"nodeType":"ExpressionStatement","src":"29435:17:20"},{"expression":{"id":5261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5259,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5228,"src":"29470:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":5260,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29480:2:20","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29470:12:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5262,"nodeType":"ExpressionStatement","src":"29470:12:20"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5265,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5222,"src":"29514:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":5268,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5266,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29523:2:20","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":5267,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29529:2:20","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29523:8:20","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"29514:17:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5281,"nodeType":"IfStatement","src":"29510:103:20","trueBody":{"id":5280,"nodeType":"Block","src":"29533:80:20","statements":[{"expression":{"id":5274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5270,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5222,"src":"29551:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":5273,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5271,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29560:2:20","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":5272,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29566:2:20","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29560:8:20","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"29551:17:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5275,"nodeType":"ExpressionStatement","src":"29551:17:20"},{"expression":{"id":5278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5276,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5228,"src":"29586:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":5277,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29596:2:20","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29586:12:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5279,"nodeType":"ExpressionStatement","src":"29586:12:20"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5282,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5222,"src":"29630:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":5285,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5283,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29639:2:20","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":5284,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29645:1:20","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29639:7:20","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"29630:16:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5298,"nodeType":"IfStatement","src":"29626:100:20","trueBody":{"id":5297,"nodeType":"Block","src":"29648:78:20","statements":[{"expression":{"id":5291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5287,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5222,"src":"29666:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":5290,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5288,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29675:2:20","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":5289,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29681:1:20","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29675:7:20","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"29666:16:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5292,"nodeType":"ExpressionStatement","src":"29666:16:20"},{"expression":{"id":5295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5293,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5228,"src":"29700:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":5294,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29710:1:20","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29700:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5296,"nodeType":"ExpressionStatement","src":"29700:11:20"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5299,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5222,"src":"29743:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":5302,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5300,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29752:2:20","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":5301,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29758:1:20","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29752:7:20","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"29743:16:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5315,"nodeType":"IfStatement","src":"29739:100:20","trueBody":{"id":5314,"nodeType":"Block","src":"29761:78:20","statements":[{"expression":{"id":5308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5304,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5222,"src":"29779:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":5307,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5305,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29788:2:20","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":5306,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29794:1:20","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29788:7:20","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"29779:16:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5309,"nodeType":"ExpressionStatement","src":"29779:16:20"},{"expression":{"id":5312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5310,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5228,"src":"29813:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":5311,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29823:1:20","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29813:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5313,"nodeType":"ExpressionStatement","src":"29813:11:20"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5320,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5316,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5222,"src":"29856:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":5319,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5317,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29865:2:20","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":5318,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29871:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29865:7:20","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"29856:16:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5332,"nodeType":"IfStatement","src":"29852:100:20","trueBody":{"id":5331,"nodeType":"Block","src":"29874:78:20","statements":[{"expression":{"id":5325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5321,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5222,"src":"29892:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":5324,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5322,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29901:2:20","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":5323,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29907:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29901:7:20","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"29892:16:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5326,"nodeType":"ExpressionStatement","src":"29892:16:20"},{"expression":{"id":5329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5327,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5228,"src":"29926:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":5328,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29936:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29926:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5330,"nodeType":"ExpressionStatement","src":"29926:11:20"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5333,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5222,"src":"29969:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":5336,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5334,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29978:2:20","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":5335,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29984:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"29978:7:20","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"29969:16:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5343,"nodeType":"IfStatement","src":"29965:66:20","trueBody":{"id":5342,"nodeType":"Block","src":"29987:44:20","statements":[{"expression":{"id":5340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5338,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5228,"src":"30005:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":5339,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30015:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"30005:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5341,"nodeType":"ExpressionStatement","src":"30005:11:20"}]}}]},{"expression":{"id":5345,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5228,"src":"30057:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5226,"id":5346,"nodeType":"Return","src":"30050:13:20"}]},"documentation":{"id":5220,"nodeType":"StructuredDocumentation","src":"29029:120:20","text":" @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":5348,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"29163:5:20","nodeType":"FunctionDefinition","parameters":{"id":5223,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5222,"mutability":"mutable","name":"value","nameLocation":"29177:5:20","nodeType":"VariableDeclaration","scope":5348,"src":"29169:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5221,"name":"uint256","nodeType":"ElementaryTypeName","src":"29169:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29168:15:20"},"returnParameters":{"id":5226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5225,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5348,"src":"29207:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5224,"name":"uint256","nodeType":"ElementaryTypeName","src":"29207:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29206:9:20"},"scope":5516,"src":"29154:916:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5381,"nodeType":"Block","src":"30305:177:20","statements":[{"id":5380,"nodeType":"UncheckedBlock","src":"30315:161:20","statements":[{"assignments":[5360],"declarations":[{"constant":false,"id":5360,"mutability":"mutable","name":"result","nameLocation":"30347:6:20","nodeType":"VariableDeclaration","scope":5380,"src":"30339:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5359,"name":"uint256","nodeType":"ElementaryTypeName","src":"30339:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5364,"initialValue":{"arguments":[{"id":5362,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5351,"src":"30362:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5361,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[5348,5382],"referencedDeclaration":5348,"src":"30356:5:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5363,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30356:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"30339:29:20"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5365,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5360,"src":"30389:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5369,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5354,"src":"30431:8:20","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3907","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3907","typeString":"enum Math.Rounding"}],"id":5368,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5515,"src":"30414:16:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3907_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":5370,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30414:26:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5371,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30444:2:20","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":5372,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5360,"src":"30450:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30444:12:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5374,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5351,"src":"30459:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30444:20:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"30414:50:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5366,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7281,"src":"30398:8:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7281_$","typeString":"type(library SafeCast)"}},"id":5367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"30407:6:20","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7280,"src":"30398:15:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5377,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30398:67:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30389:76:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5358,"id":5379,"nodeType":"Return","src":"30382:83:20"}]}]},"documentation":{"id":5349,"nodeType":"StructuredDocumentation","src":"30076:143:20","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":5382,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"30233:5:20","nodeType":"FunctionDefinition","parameters":{"id":5355,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5351,"mutability":"mutable","name":"value","nameLocation":"30247:5:20","nodeType":"VariableDeclaration","scope":5382,"src":"30239:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5350,"name":"uint256","nodeType":"ElementaryTypeName","src":"30239:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5354,"mutability":"mutable","name":"rounding","nameLocation":"30263:8:20","nodeType":"VariableDeclaration","scope":5382,"src":"30254:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3907","typeString":"enum Math.Rounding"},"typeName":{"id":5353,"nodeType":"UserDefinedTypeName","pathNode":{"id":5352,"name":"Rounding","nameLocations":["30254:8:20"],"nodeType":"IdentifierPath","referencedDeclaration":3907,"src":"30254:8:20"},"referencedDeclaration":3907,"src":"30254:8:20","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3907","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"30238:34:20"},"returnParameters":{"id":5358,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5357,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5382,"src":"30296:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5356,"name":"uint256","nodeType":"ElementaryTypeName","src":"30296:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30295:9:20"},"scope":5516,"src":"30224:258:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5458,"nodeType":"Block","src":"30800:675:20","statements":[{"expression":{"id":5399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5390,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5388,"src":"30882:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5393,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5385,"src":"30902:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666666666666666666666666666666666666666666666666666","id":5394,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30906:34:20","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"value":"0xffffffffffffffffffffffffffffffff"},"src":"30902:38:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5391,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7281,"src":"30886:8:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7281_$","typeString":"type(library SafeCast)"}},"id":5392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"30895:6:20","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7280,"src":"30886:15:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5396,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30886:55:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"37","id":5397,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30945:1:20","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"30886:60:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30882:64:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5400,"nodeType":"ExpressionStatement","src":"30882:64:20"},{"expression":{"id":5413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5401,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5388,"src":"31022:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5404,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5385,"src":"31044:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5405,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5388,"src":"31049:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31044:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5407,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31043:8:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666666666666666666666666666","id":5408,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31054:18:20","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"value":"0xffffffffffffffff"},"src":"31043:29:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5402,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7281,"src":"31027:8:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7281_$","typeString":"type(library SafeCast)"}},"id":5403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31036:6:20","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7280,"src":"31027:15:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5410,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31027:46:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"36","id":5411,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31077:1:20","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"31027:51:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31022:56:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5414,"nodeType":"ExpressionStatement","src":"31022:56:20"},{"expression":{"id":5427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5415,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5388,"src":"31153:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5418,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5385,"src":"31175:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5419,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5388,"src":"31180:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31175:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5421,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31174:8:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666","id":5422,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31185:10:20","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"value":"0xffffffff"},"src":"31174:21:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5416,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7281,"src":"31158:8:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7281_$","typeString":"type(library SafeCast)"}},"id":5417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31167:6:20","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7280,"src":"31158:15:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5424,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31158:38:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":5425,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31200:1:20","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"31158:43:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31153:48:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5428,"nodeType":"ExpressionStatement","src":"31153:48:20"},{"expression":{"id":5441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5429,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5388,"src":"31276:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5432,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5385,"src":"31298:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5433,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5388,"src":"31303:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31298:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5435,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31297:8:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666","id":5436,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31308:6:20","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"value":"0xffff"},"src":"31297:17:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5430,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7281,"src":"31281:8:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7281_$","typeString":"type(library SafeCast)"}},"id":5431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31290:6:20","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7280,"src":"31281:15:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5438,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31281:34:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":5439,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31319:1:20","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"31281:39:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31276:44:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5442,"nodeType":"ExpressionStatement","src":"31276:44:20"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5443,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5388,"src":"31426:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"33","id":5444,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31431:1:20","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"31426:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5446,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31425:8:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5449,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5385,"src":"31453:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5450,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5388,"src":"31458:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31453:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5452,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31452:8:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666","id":5453,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31463:4:20","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xff"},"src":"31452:15:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5447,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7281,"src":"31436:8:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7281_$","typeString":"type(library SafeCast)"}},"id":5448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31445:6:20","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7280,"src":"31436:15:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5455,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31436:32:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31425:43:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5389,"id":5457,"nodeType":"Return","src":"31418:50:20"}]},"documentation":{"id":5383,"nodeType":"StructuredDocumentation","src":"30488:246:20","text":" @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":5459,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"30748:6:20","nodeType":"FunctionDefinition","parameters":{"id":5386,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5385,"mutability":"mutable","name":"x","nameLocation":"30763:1:20","nodeType":"VariableDeclaration","scope":5459,"src":"30755:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5384,"name":"uint256","nodeType":"ElementaryTypeName","src":"30755:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30754:11:20"},"returnParameters":{"id":5389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5388,"mutability":"mutable","name":"r","nameLocation":"30797:1:20","nodeType":"VariableDeclaration","scope":5459,"src":"30789:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5387,"name":"uint256","nodeType":"ElementaryTypeName","src":"30789:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30788:11:20"},"scope":5516,"src":"30739:736:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5495,"nodeType":"Block","src":"31712:184:20","statements":[{"id":5494,"nodeType":"UncheckedBlock","src":"31722:168:20","statements":[{"assignments":[5471],"declarations":[{"constant":false,"id":5471,"mutability":"mutable","name":"result","nameLocation":"31754:6:20","nodeType":"VariableDeclaration","scope":5494,"src":"31746:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5470,"name":"uint256","nodeType":"ElementaryTypeName","src":"31746:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5475,"initialValue":{"arguments":[{"id":5473,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5462,"src":"31770:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5472,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[5459,5496],"referencedDeclaration":5459,"src":"31763:6:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5474,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31763:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"31746:30:20"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5476,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5471,"src":"31797:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5480,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5465,"src":"31839:8:20","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3907","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3907","typeString":"enum Math.Rounding"}],"id":5479,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5515,"src":"31822:16:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3907_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":5481,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31822:26:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5482,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31852:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5483,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5471,"src":"31858:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":5484,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31868:1:20","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"31858:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5486,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31857:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31852:18:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5488,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5462,"src":"31873:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31852:26:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"31822:56:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5477,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7281,"src":"31806:8:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7281_$","typeString":"type(library SafeCast)"}},"id":5478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31815:6:20","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7280,"src":"31806:15:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5491,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31806:73:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31797:82:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5469,"id":5493,"nodeType":"Return","src":"31790:89:20"}]}]},"documentation":{"id":5460,"nodeType":"StructuredDocumentation","src":"31481:144:20","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":5496,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"31639:6:20","nodeType":"FunctionDefinition","parameters":{"id":5466,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5462,"mutability":"mutable","name":"value","nameLocation":"31654:5:20","nodeType":"VariableDeclaration","scope":5496,"src":"31646:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5461,"name":"uint256","nodeType":"ElementaryTypeName","src":"31646:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5465,"mutability":"mutable","name":"rounding","nameLocation":"31670:8:20","nodeType":"VariableDeclaration","scope":5496,"src":"31661:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3907","typeString":"enum Math.Rounding"},"typeName":{"id":5464,"nodeType":"UserDefinedTypeName","pathNode":{"id":5463,"name":"Rounding","nameLocations":["31661:8:20"],"nodeType":"IdentifierPath","referencedDeclaration":3907,"src":"31661:8:20"},"referencedDeclaration":3907,"src":"31661:8:20","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3907","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"31645:34:20"},"returnParameters":{"id":5469,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5468,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5496,"src":"31703:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5467,"name":"uint256","nodeType":"ElementaryTypeName","src":"31703:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"31702:9:20"},"scope":5516,"src":"31630:266:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5514,"nodeType":"Block","src":"32094:48:20","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":5512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":5510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5507,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5500,"src":"32117:8:20","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3907","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3907","typeString":"enum Math.Rounding"}],"id":5506,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32111:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":5505,"name":"uint8","nodeType":"ElementaryTypeName","src":"32111:5:20","typeDescriptions":{}}},"id":5508,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32111:15:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":5509,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32129:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"32111:19:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":5511,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32134:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"32111:24:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5504,"id":5513,"nodeType":"Return","src":"32104:31:20"}]},"documentation":{"id":5497,"nodeType":"StructuredDocumentation","src":"31902:113:20","text":" @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."},"id":5515,"implemented":true,"kind":"function","modifiers":[],"name":"unsignedRoundsUp","nameLocation":"32029:16:20","nodeType":"FunctionDefinition","parameters":{"id":5501,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5500,"mutability":"mutable","name":"rounding","nameLocation":"32055:8:20","nodeType":"VariableDeclaration","scope":5515,"src":"32046:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3907","typeString":"enum Math.Rounding"},"typeName":{"id":5499,"nodeType":"UserDefinedTypeName","pathNode":{"id":5498,"name":"Rounding","nameLocations":["32046:8:20"],"nodeType":"IdentifierPath","referencedDeclaration":3907,"src":"32046:8:20"},"referencedDeclaration":3907,"src":"32046:8:20","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3907","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"32045:19:20"},"returnParameters":{"id":5504,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5503,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5515,"src":"32088:4:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5502,"name":"bool","nodeType":"ElementaryTypeName","src":"32088:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"32087:6:20"},"scope":5516,"src":"32020:122:20","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":5517,"src":"281:31863:20","usedErrors":[],"usedEvents":[]}],"src":"103:32042:20"},"id":20},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","exportedSymbols":{"SafeCast":[7281]},"id":7282,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5518,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"192:24:21"},{"abstract":false,"baseContracts":[],"canonicalName":"SafeCast","contractDependencies":[],"contractKind":"library","documentation":{"id":5519,"nodeType":"StructuredDocumentation","src":"218:550:21","text":" @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n checks.\n Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n easily result in undesired exploitation or bugs, since developers usually\n assume that overflows raise errors. `SafeCast` restores this intuition by\n reverting the transaction when such an operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."},"fullyImplemented":true,"id":7281,"linearizedBaseContracts":[7281],"name":"SafeCast","nameLocation":"777:8:21","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":5520,"nodeType":"StructuredDocumentation","src":"792:68:21","text":" @dev Value doesn't fit in an uint of `bits` size."},"errorSelector":"6dfcc650","id":5526,"name":"SafeCastOverflowedUintDowncast","nameLocation":"871:30:21","nodeType":"ErrorDefinition","parameters":{"id":5525,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5522,"mutability":"mutable","name":"bits","nameLocation":"908:4:21","nodeType":"VariableDeclaration","scope":5526,"src":"902:10:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5521,"name":"uint8","nodeType":"ElementaryTypeName","src":"902:5:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":5524,"mutability":"mutable","name":"value","nameLocation":"922:5:21","nodeType":"VariableDeclaration","scope":5526,"src":"914:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5523,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"901:27:21"},"src":"865:64:21"},{"documentation":{"id":5527,"nodeType":"StructuredDocumentation","src":"935:75:21","text":" @dev An int value doesn't fit in an uint of `bits` size."},"errorSelector":"a8ce4432","id":5531,"name":"SafeCastOverflowedIntToUint","nameLocation":"1021:27:21","nodeType":"ErrorDefinition","parameters":{"id":5530,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5529,"mutability":"mutable","name":"value","nameLocation":"1056:5:21","nodeType":"VariableDeclaration","scope":5531,"src":"1049:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5528,"name":"int256","nodeType":"ElementaryTypeName","src":"1049:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1048:14:21"},"src":"1015:48:21"},{"documentation":{"id":5532,"nodeType":"StructuredDocumentation","src":"1069:67:21","text":" @dev Value doesn't fit in an int of `bits` size."},"errorSelector":"327269a7","id":5538,"name":"SafeCastOverflowedIntDowncast","nameLocation":"1147:29:21","nodeType":"ErrorDefinition","parameters":{"id":5537,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5534,"mutability":"mutable","name":"bits","nameLocation":"1183:4:21","nodeType":"VariableDeclaration","scope":5538,"src":"1177:10:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5533,"name":"uint8","nodeType":"ElementaryTypeName","src":"1177:5:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":5536,"mutability":"mutable","name":"value","nameLocation":"1196:5:21","nodeType":"VariableDeclaration","scope":5538,"src":"1189:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5535,"name":"int256","nodeType":"ElementaryTypeName","src":"1189:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1176:26:21"},"src":"1141:62:21"},{"documentation":{"id":5539,"nodeType":"StructuredDocumentation","src":"1209:75:21","text":" @dev An uint value doesn't fit in an int of `bits` size."},"errorSelector":"24775e06","id":5543,"name":"SafeCastOverflowedUintToInt","nameLocation":"1295:27:21","nodeType":"ErrorDefinition","parameters":{"id":5542,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5541,"mutability":"mutable","name":"value","nameLocation":"1331:5:21","nodeType":"VariableDeclaration","scope":5543,"src":"1323:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5540,"name":"uint256","nodeType":"ElementaryTypeName","src":"1323:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1322:15:21"},"src":"1289:49:21"},{"body":{"id":5570,"nodeType":"Block","src":"1695:152:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5551,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5546,"src":"1709:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5554,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1722:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":5553,"name":"uint248","nodeType":"ElementaryTypeName","src":"1722:7:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"}],"id":5552,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1717:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5555,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1717:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint248","typeString":"type(uint248)"}},"id":5556,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1731:3:21","memberName":"max","nodeType":"MemberAccess","src":"1717:17:21","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"src":"1709:25:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5564,"nodeType":"IfStatement","src":"1705:105:21","trueBody":{"id":5563,"nodeType":"Block","src":"1736:74:21","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":5559,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1788:3:21","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":5560,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5546,"src":"1793:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5558,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5526,"src":"1757:30:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5561,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1757:42:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5562,"nodeType":"RevertStatement","src":"1750:49:21"}]}},{"expression":{"arguments":[{"id":5567,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5546,"src":"1834:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5566,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1826:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":5565,"name":"uint248","nodeType":"ElementaryTypeName","src":"1826:7:21","typeDescriptions":{}}},"id":5568,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1826:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"functionReturnParameters":5550,"id":5569,"nodeType":"Return","src":"1819:21:21"}]},"documentation":{"id":5544,"nodeType":"StructuredDocumentation","src":"1344:280:21","text":" @dev Returns the downcasted uint248 from uint256, reverting on\n overflow (when the input is greater than largest uint248).\n Counterpart to Solidity's `uint248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":5571,"implemented":true,"kind":"function","modifiers":[],"name":"toUint248","nameLocation":"1638:9:21","nodeType":"FunctionDefinition","parameters":{"id":5547,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5546,"mutability":"mutable","name":"value","nameLocation":"1656:5:21","nodeType":"VariableDeclaration","scope":5571,"src":"1648:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5545,"name":"uint256","nodeType":"ElementaryTypeName","src":"1648:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1647:15:21"},"returnParameters":{"id":5550,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5549,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5571,"src":"1686:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"},"typeName":{"id":5548,"name":"uint248","nodeType":"ElementaryTypeName","src":"1686:7:21","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"visibility":"internal"}],"src":"1685:9:21"},"scope":7281,"src":"1629:218:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5598,"nodeType":"Block","src":"2204:152:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5585,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5579,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5574,"src":"2218:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5582,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2231:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":5581,"name":"uint240","nodeType":"ElementaryTypeName","src":"2231:7:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"}],"id":5580,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2226:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5583,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2226:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint240","typeString":"type(uint240)"}},"id":5584,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2240:3:21","memberName":"max","nodeType":"MemberAccess","src":"2226:17:21","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"src":"2218:25:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5592,"nodeType":"IfStatement","src":"2214:105:21","trueBody":{"id":5591,"nodeType":"Block","src":"2245:74:21","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":5587,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2297:3:21","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":5588,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5574,"src":"2302:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5586,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5526,"src":"2266:30:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5589,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2266:42:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5590,"nodeType":"RevertStatement","src":"2259:49:21"}]}},{"expression":{"arguments":[{"id":5595,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5574,"src":"2343:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5594,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2335:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":5593,"name":"uint240","nodeType":"ElementaryTypeName","src":"2335:7:21","typeDescriptions":{}}},"id":5596,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2335:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"functionReturnParameters":5578,"id":5597,"nodeType":"Return","src":"2328:21:21"}]},"documentation":{"id":5572,"nodeType":"StructuredDocumentation","src":"1853:280:21","text":" @dev Returns the downcasted uint240 from uint256, reverting on\n overflow (when the input is greater than largest uint240).\n Counterpart to Solidity's `uint240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":5599,"implemented":true,"kind":"function","modifiers":[],"name":"toUint240","nameLocation":"2147:9:21","nodeType":"FunctionDefinition","parameters":{"id":5575,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5574,"mutability":"mutable","name":"value","nameLocation":"2165:5:21","nodeType":"VariableDeclaration","scope":5599,"src":"2157:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5573,"name":"uint256","nodeType":"ElementaryTypeName","src":"2157:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2156:15:21"},"returnParameters":{"id":5578,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5577,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5599,"src":"2195:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"},"typeName":{"id":5576,"name":"uint240","nodeType":"ElementaryTypeName","src":"2195:7:21","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"visibility":"internal"}],"src":"2194:9:21"},"scope":7281,"src":"2138:218:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5626,"nodeType":"Block","src":"2713:152:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5607,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5602,"src":"2727:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5610,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2740:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":5609,"name":"uint232","nodeType":"ElementaryTypeName","src":"2740:7:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"}],"id":5608,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2735:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5611,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2735:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint232","typeString":"type(uint232)"}},"id":5612,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2749:3:21","memberName":"max","nodeType":"MemberAccess","src":"2735:17:21","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"src":"2727:25:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5620,"nodeType":"IfStatement","src":"2723:105:21","trueBody":{"id":5619,"nodeType":"Block","src":"2754:74:21","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":5615,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2806:3:21","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":5616,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5602,"src":"2811:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5614,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5526,"src":"2775:30:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5617,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2775:42:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5618,"nodeType":"RevertStatement","src":"2768:49:21"}]}},{"expression":{"arguments":[{"id":5623,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5602,"src":"2852:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5622,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2844:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":5621,"name":"uint232","nodeType":"ElementaryTypeName","src":"2844:7:21","typeDescriptions":{}}},"id":5624,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2844:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"functionReturnParameters":5606,"id":5625,"nodeType":"Return","src":"2837:21:21"}]},"documentation":{"id":5600,"nodeType":"StructuredDocumentation","src":"2362:280:21","text":" @dev Returns the downcasted uint232 from uint256, reverting on\n overflow (when the input is greater than largest uint232).\n Counterpart to Solidity's `uint232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":5627,"implemented":true,"kind":"function","modifiers":[],"name":"toUint232","nameLocation":"2656:9:21","nodeType":"FunctionDefinition","parameters":{"id":5603,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5602,"mutability":"mutable","name":"value","nameLocation":"2674:5:21","nodeType":"VariableDeclaration","scope":5627,"src":"2666:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5601,"name":"uint256","nodeType":"ElementaryTypeName","src":"2666:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2665:15:21"},"returnParameters":{"id":5606,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5605,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5627,"src":"2704:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"},"typeName":{"id":5604,"name":"uint232","nodeType":"ElementaryTypeName","src":"2704:7:21","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"visibility":"internal"}],"src":"2703:9:21"},"scope":7281,"src":"2647:218:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5654,"nodeType":"Block","src":"3222:152:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5635,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5630,"src":"3236:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5638,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3249:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":5637,"name":"uint224","nodeType":"ElementaryTypeName","src":"3249:7:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"}],"id":5636,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3244:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5639,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3244:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint224","typeString":"type(uint224)"}},"id":5640,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3258:3:21","memberName":"max","nodeType":"MemberAccess","src":"3244:17:21","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"3236:25:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5648,"nodeType":"IfStatement","src":"3232:105:21","trueBody":{"id":5647,"nodeType":"Block","src":"3263:74:21","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":5643,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3315:3:21","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":5644,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5630,"src":"3320:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5642,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5526,"src":"3284:30:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5645,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3284:42:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5646,"nodeType":"RevertStatement","src":"3277:49:21"}]}},{"expression":{"arguments":[{"id":5651,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5630,"src":"3361:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5650,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3353:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":5649,"name":"uint224","nodeType":"ElementaryTypeName","src":"3353:7:21","typeDescriptions":{}}},"id":5652,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3353:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":5634,"id":5653,"nodeType":"Return","src":"3346:21:21"}]},"documentation":{"id":5628,"nodeType":"StructuredDocumentation","src":"2871:280:21","text":" @dev Returns the downcasted uint224 from uint256, reverting on\n overflow (when the input is greater than largest uint224).\n Counterpart to Solidity's `uint224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":5655,"implemented":true,"kind":"function","modifiers":[],"name":"toUint224","nameLocation":"3165:9:21","nodeType":"FunctionDefinition","parameters":{"id":5631,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5630,"mutability":"mutable","name":"value","nameLocation":"3183:5:21","nodeType":"VariableDeclaration","scope":5655,"src":"3175:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5629,"name":"uint256","nodeType":"ElementaryTypeName","src":"3175:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3174:15:21"},"returnParameters":{"id":5634,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5633,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5655,"src":"3213:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":5632,"name":"uint224","nodeType":"ElementaryTypeName","src":"3213:7:21","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"3212:9:21"},"scope":7281,"src":"3156:218:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5682,"nodeType":"Block","src":"3731:152:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5663,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5658,"src":"3745:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5666,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3758:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":5665,"name":"uint216","nodeType":"ElementaryTypeName","src":"3758:7:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"}],"id":5664,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3753:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5667,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3753:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint216","typeString":"type(uint216)"}},"id":5668,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3767:3:21","memberName":"max","nodeType":"MemberAccess","src":"3753:17:21","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"src":"3745:25:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5676,"nodeType":"IfStatement","src":"3741:105:21","trueBody":{"id":5675,"nodeType":"Block","src":"3772:74:21","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":5671,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3824:3:21","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":5672,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5658,"src":"3829:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5670,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5526,"src":"3793:30:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5673,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3793:42:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5674,"nodeType":"RevertStatement","src":"3786:49:21"}]}},{"expression":{"arguments":[{"id":5679,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5658,"src":"3870:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5678,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3862:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":5677,"name":"uint216","nodeType":"ElementaryTypeName","src":"3862:7:21","typeDescriptions":{}}},"id":5680,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3862:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"functionReturnParameters":5662,"id":5681,"nodeType":"Return","src":"3855:21:21"}]},"documentation":{"id":5656,"nodeType":"StructuredDocumentation","src":"3380:280:21","text":" @dev Returns the downcasted uint216 from uint256, reverting on\n overflow (when the input is greater than largest uint216).\n Counterpart to Solidity's `uint216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":5683,"implemented":true,"kind":"function","modifiers":[],"name":"toUint216","nameLocation":"3674:9:21","nodeType":"FunctionDefinition","parameters":{"id":5659,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5658,"mutability":"mutable","name":"value","nameLocation":"3692:5:21","nodeType":"VariableDeclaration","scope":5683,"src":"3684:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5657,"name":"uint256","nodeType":"ElementaryTypeName","src":"3684:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3683:15:21"},"returnParameters":{"id":5662,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5661,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5683,"src":"3722:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"},"typeName":{"id":5660,"name":"uint216","nodeType":"ElementaryTypeName","src":"3722:7:21","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"visibility":"internal"}],"src":"3721:9:21"},"scope":7281,"src":"3665:218:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5710,"nodeType":"Block","src":"4240:152:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5691,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5686,"src":"4254:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5694,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4267:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":5693,"name":"uint208","nodeType":"ElementaryTypeName","src":"4267:7:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"}],"id":5692,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4262:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5695,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4262:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint208","typeString":"type(uint208)"}},"id":5696,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4276:3:21","memberName":"max","nodeType":"MemberAccess","src":"4262:17:21","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"4254:25:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5704,"nodeType":"IfStatement","src":"4250:105:21","trueBody":{"id":5703,"nodeType":"Block","src":"4281:74:21","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":5699,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4333:3:21","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":5700,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5686,"src":"4338:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5698,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5526,"src":"4302:30:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5701,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4302:42:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5702,"nodeType":"RevertStatement","src":"4295:49:21"}]}},{"expression":{"arguments":[{"id":5707,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5686,"src":"4379:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5706,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4371:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":5705,"name":"uint208","nodeType":"ElementaryTypeName","src":"4371:7:21","typeDescriptions":{}}},"id":5708,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4371:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":5690,"id":5709,"nodeType":"Return","src":"4364:21:21"}]},"documentation":{"id":5684,"nodeType":"StructuredDocumentation","src":"3889:280:21","text":" @dev Returns the downcasted uint208 from uint256, reverting on\n overflow (when the input is greater than largest uint208).\n Counterpart to Solidity's `uint208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":5711,"implemented":true,"kind":"function","modifiers":[],"name":"toUint208","nameLocation":"4183:9:21","nodeType":"FunctionDefinition","parameters":{"id":5687,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5686,"mutability":"mutable","name":"value","nameLocation":"4201:5:21","nodeType":"VariableDeclaration","scope":5711,"src":"4193:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5685,"name":"uint256","nodeType":"ElementaryTypeName","src":"4193:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4192:15:21"},"returnParameters":{"id":5690,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5689,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5711,"src":"4231:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":5688,"name":"uint208","nodeType":"ElementaryTypeName","src":"4231:7:21","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"4230:9:21"},"scope":7281,"src":"4174:218:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5738,"nodeType":"Block","src":"4749:152:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5725,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5719,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5714,"src":"4763:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5722,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4776:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":5721,"name":"uint200","nodeType":"ElementaryTypeName","src":"4776:7:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"}],"id":5720,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4771:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5723,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4771:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint200","typeString":"type(uint200)"}},"id":5724,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4785:3:21","memberName":"max","nodeType":"MemberAccess","src":"4771:17:21","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"src":"4763:25:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5732,"nodeType":"IfStatement","src":"4759:105:21","trueBody":{"id":5731,"nodeType":"Block","src":"4790:74:21","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":5727,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4842:3:21","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":5728,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5714,"src":"4847:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5726,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5526,"src":"4811:30:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5729,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4811:42:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5730,"nodeType":"RevertStatement","src":"4804:49:21"}]}},{"expression":{"arguments":[{"id":5735,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5714,"src":"4888:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5734,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4880:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":5733,"name":"uint200","nodeType":"ElementaryTypeName","src":"4880:7:21","typeDescriptions":{}}},"id":5736,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4880:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"functionReturnParameters":5718,"id":5737,"nodeType":"Return","src":"4873:21:21"}]},"documentation":{"id":5712,"nodeType":"StructuredDocumentation","src":"4398:280:21","text":" @dev Returns the downcasted uint200 from uint256, reverting on\n overflow (when the input is greater than largest uint200).\n Counterpart to Solidity's `uint200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":5739,"implemented":true,"kind":"function","modifiers":[],"name":"toUint200","nameLocation":"4692:9:21","nodeType":"FunctionDefinition","parameters":{"id":5715,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5714,"mutability":"mutable","name":"value","nameLocation":"4710:5:21","nodeType":"VariableDeclaration","scope":5739,"src":"4702:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5713,"name":"uint256","nodeType":"ElementaryTypeName","src":"4702:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4701:15:21"},"returnParameters":{"id":5718,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5717,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5739,"src":"4740:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"},"typeName":{"id":5716,"name":"uint200","nodeType":"ElementaryTypeName","src":"4740:7:21","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"visibility":"internal"}],"src":"4739:9:21"},"scope":7281,"src":"4683:218:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5766,"nodeType":"Block","src":"5258:152:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5747,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5742,"src":"5272:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5750,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5285:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":5749,"name":"uint192","nodeType":"ElementaryTypeName","src":"5285:7:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"}],"id":5748,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5280:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5751,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5280:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint192","typeString":"type(uint192)"}},"id":5752,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5294:3:21","memberName":"max","nodeType":"MemberAccess","src":"5280:17:21","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"src":"5272:25:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5760,"nodeType":"IfStatement","src":"5268:105:21","trueBody":{"id":5759,"nodeType":"Block","src":"5299:74:21","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":5755,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5351:3:21","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":5756,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5742,"src":"5356:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5754,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5526,"src":"5320:30:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5757,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5320:42:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5758,"nodeType":"RevertStatement","src":"5313:49:21"}]}},{"expression":{"arguments":[{"id":5763,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5742,"src":"5397:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5762,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5389:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":5761,"name":"uint192","nodeType":"ElementaryTypeName","src":"5389:7:21","typeDescriptions":{}}},"id":5764,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5389:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"functionReturnParameters":5746,"id":5765,"nodeType":"Return","src":"5382:21:21"}]},"documentation":{"id":5740,"nodeType":"StructuredDocumentation","src":"4907:280:21","text":" @dev Returns the downcasted uint192 from uint256, reverting on\n overflow (when the input is greater than largest uint192).\n Counterpart to Solidity's `uint192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":5767,"implemented":true,"kind":"function","modifiers":[],"name":"toUint192","nameLocation":"5201:9:21","nodeType":"FunctionDefinition","parameters":{"id":5743,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5742,"mutability":"mutable","name":"value","nameLocation":"5219:5:21","nodeType":"VariableDeclaration","scope":5767,"src":"5211:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5741,"name":"uint256","nodeType":"ElementaryTypeName","src":"5211:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5210:15:21"},"returnParameters":{"id":5746,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5745,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5767,"src":"5249:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":5744,"name":"uint192","nodeType":"ElementaryTypeName","src":"5249:7:21","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"5248:9:21"},"scope":7281,"src":"5192:218:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5794,"nodeType":"Block","src":"5767:152:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5775,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5770,"src":"5781:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5778,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5794:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":5777,"name":"uint184","nodeType":"ElementaryTypeName","src":"5794:7:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"}],"id":5776,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5789:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5779,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5789:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint184","typeString":"type(uint184)"}},"id":5780,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5803:3:21","memberName":"max","nodeType":"MemberAccess","src":"5789:17:21","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"src":"5781:25:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5788,"nodeType":"IfStatement","src":"5777:105:21","trueBody":{"id":5787,"nodeType":"Block","src":"5808:74:21","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":5783,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5860:3:21","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":5784,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5770,"src":"5865:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5782,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5526,"src":"5829:30:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5785,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5829:42:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5786,"nodeType":"RevertStatement","src":"5822:49:21"}]}},{"expression":{"arguments":[{"id":5791,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5770,"src":"5906:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5790,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5898:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":5789,"name":"uint184","nodeType":"ElementaryTypeName","src":"5898:7:21","typeDescriptions":{}}},"id":5792,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5898:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"functionReturnParameters":5774,"id":5793,"nodeType":"Return","src":"5891:21:21"}]},"documentation":{"id":5768,"nodeType":"StructuredDocumentation","src":"5416:280:21","text":" @dev Returns the downcasted uint184 from uint256, reverting on\n overflow (when the input is greater than largest uint184).\n Counterpart to Solidity's `uint184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":5795,"implemented":true,"kind":"function","modifiers":[],"name":"toUint184","nameLocation":"5710:9:21","nodeType":"FunctionDefinition","parameters":{"id":5771,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5770,"mutability":"mutable","name":"value","nameLocation":"5728:5:21","nodeType":"VariableDeclaration","scope":5795,"src":"5720:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5769,"name":"uint256","nodeType":"ElementaryTypeName","src":"5720:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5719:15:21"},"returnParameters":{"id":5774,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5773,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5795,"src":"5758:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"},"typeName":{"id":5772,"name":"uint184","nodeType":"ElementaryTypeName","src":"5758:7:21","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"visibility":"internal"}],"src":"5757:9:21"},"scope":7281,"src":"5701:218:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5822,"nodeType":"Block","src":"6276:152:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5803,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5798,"src":"6290:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5806,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6303:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":5805,"name":"uint176","nodeType":"ElementaryTypeName","src":"6303:7:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"}],"id":5804,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6298:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5807,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6298:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint176","typeString":"type(uint176)"}},"id":5808,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6312:3:21","memberName":"max","nodeType":"MemberAccess","src":"6298:17:21","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"src":"6290:25:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5816,"nodeType":"IfStatement","src":"6286:105:21","trueBody":{"id":5815,"nodeType":"Block","src":"6317:74:21","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":5811,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6369:3:21","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":5812,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5798,"src":"6374:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5810,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5526,"src":"6338:30:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5813,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6338:42:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5814,"nodeType":"RevertStatement","src":"6331:49:21"}]}},{"expression":{"arguments":[{"id":5819,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5798,"src":"6415:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5818,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6407:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":5817,"name":"uint176","nodeType":"ElementaryTypeName","src":"6407:7:21","typeDescriptions":{}}},"id":5820,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6407:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"functionReturnParameters":5802,"id":5821,"nodeType":"Return","src":"6400:21:21"}]},"documentation":{"id":5796,"nodeType":"StructuredDocumentation","src":"5925:280:21","text":" @dev Returns the downcasted uint176 from uint256, reverting on\n overflow (when the input is greater than largest uint176).\n Counterpart to Solidity's `uint176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":5823,"implemented":true,"kind":"function","modifiers":[],"name":"toUint176","nameLocation":"6219:9:21","nodeType":"FunctionDefinition","parameters":{"id":5799,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5798,"mutability":"mutable","name":"value","nameLocation":"6237:5:21","nodeType":"VariableDeclaration","scope":5823,"src":"6229:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5797,"name":"uint256","nodeType":"ElementaryTypeName","src":"6229:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6228:15:21"},"returnParameters":{"id":5802,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5801,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5823,"src":"6267:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"},"typeName":{"id":5800,"name":"uint176","nodeType":"ElementaryTypeName","src":"6267:7:21","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"visibility":"internal"}],"src":"6266:9:21"},"scope":7281,"src":"6210:218:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5850,"nodeType":"Block","src":"6785:152:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5837,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5831,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5826,"src":"6799:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5834,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6812:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":5833,"name":"uint168","nodeType":"ElementaryTypeName","src":"6812:7:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"}],"id":5832,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6807:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5835,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6807:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint168","typeString":"type(uint168)"}},"id":5836,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6821:3:21","memberName":"max","nodeType":"MemberAccess","src":"6807:17:21","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"src":"6799:25:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5844,"nodeType":"IfStatement","src":"6795:105:21","trueBody":{"id":5843,"nodeType":"Block","src":"6826:74:21","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":5839,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6878:3:21","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":5840,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5826,"src":"6883:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5838,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5526,"src":"6847:30:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5841,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6847:42:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5842,"nodeType":"RevertStatement","src":"6840:49:21"}]}},{"expression":{"arguments":[{"id":5847,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5826,"src":"6924:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5846,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6916:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":5845,"name":"uint168","nodeType":"ElementaryTypeName","src":"6916:7:21","typeDescriptions":{}}},"id":5848,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6916:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"functionReturnParameters":5830,"id":5849,"nodeType":"Return","src":"6909:21:21"}]},"documentation":{"id":5824,"nodeType":"StructuredDocumentation","src":"6434:280:21","text":" @dev Returns the downcasted uint168 from uint256, reverting on\n overflow (when the input is greater than largest uint168).\n Counterpart to Solidity's `uint168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":5851,"implemented":true,"kind":"function","modifiers":[],"name":"toUint168","nameLocation":"6728:9:21","nodeType":"FunctionDefinition","parameters":{"id":5827,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5826,"mutability":"mutable","name":"value","nameLocation":"6746:5:21","nodeType":"VariableDeclaration","scope":5851,"src":"6738:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5825,"name":"uint256","nodeType":"ElementaryTypeName","src":"6738:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6737:15:21"},"returnParameters":{"id":5830,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5829,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5851,"src":"6776:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"},"typeName":{"id":5828,"name":"uint168","nodeType":"ElementaryTypeName","src":"6776:7:21","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"visibility":"internal"}],"src":"6775:9:21"},"scope":7281,"src":"6719:218:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5878,"nodeType":"Block","src":"7294:152:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5859,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5854,"src":"7308:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5862,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7321:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":5861,"name":"uint160","nodeType":"ElementaryTypeName","src":"7321:7:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"}],"id":5860,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7316:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5863,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7316:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint160","typeString":"type(uint160)"}},"id":5864,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7330:3:21","memberName":"max","nodeType":"MemberAccess","src":"7316:17:21","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"7308:25:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5872,"nodeType":"IfStatement","src":"7304:105:21","trueBody":{"id":5871,"nodeType":"Block","src":"7335:74:21","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":5867,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7387:3:21","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":5868,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5854,"src":"7392:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5866,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5526,"src":"7356:30:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5869,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7356:42:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5870,"nodeType":"RevertStatement","src":"7349:49:21"}]}},{"expression":{"arguments":[{"id":5875,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5854,"src":"7433:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5874,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7425:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":5873,"name":"uint160","nodeType":"ElementaryTypeName","src":"7425:7:21","typeDescriptions":{}}},"id":5876,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7425:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":5858,"id":5877,"nodeType":"Return","src":"7418:21:21"}]},"documentation":{"id":5852,"nodeType":"StructuredDocumentation","src":"6943:280:21","text":" @dev Returns the downcasted uint160 from uint256, reverting on\n overflow (when the input is greater than largest uint160).\n Counterpart to Solidity's `uint160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":5879,"implemented":true,"kind":"function","modifiers":[],"name":"toUint160","nameLocation":"7237:9:21","nodeType":"FunctionDefinition","parameters":{"id":5855,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5854,"mutability":"mutable","name":"value","nameLocation":"7255:5:21","nodeType":"VariableDeclaration","scope":5879,"src":"7247:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5853,"name":"uint256","nodeType":"ElementaryTypeName","src":"7247:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7246:15:21"},"returnParameters":{"id":5858,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5857,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5879,"src":"7285:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":5856,"name":"uint160","nodeType":"ElementaryTypeName","src":"7285:7:21","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"7284:9:21"},"scope":7281,"src":"7228:218:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5906,"nodeType":"Block","src":"7803:152:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5887,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5882,"src":"7817:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5890,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7830:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":5889,"name":"uint152","nodeType":"ElementaryTypeName","src":"7830:7:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"}],"id":5888,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7825:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5891,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7825:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint152","typeString":"type(uint152)"}},"id":5892,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7839:3:21","memberName":"max","nodeType":"MemberAccess","src":"7825:17:21","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"src":"7817:25:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5900,"nodeType":"IfStatement","src":"7813:105:21","trueBody":{"id":5899,"nodeType":"Block","src":"7844:74:21","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":5895,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7896:3:21","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":5896,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5882,"src":"7901:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5894,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5526,"src":"7865:30:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5897,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7865:42:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5898,"nodeType":"RevertStatement","src":"7858:49:21"}]}},{"expression":{"arguments":[{"id":5903,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5882,"src":"7942:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5902,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7934:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":5901,"name":"uint152","nodeType":"ElementaryTypeName","src":"7934:7:21","typeDescriptions":{}}},"id":5904,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7934:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"functionReturnParameters":5886,"id":5905,"nodeType":"Return","src":"7927:21:21"}]},"documentation":{"id":5880,"nodeType":"StructuredDocumentation","src":"7452:280:21","text":" @dev Returns the downcasted uint152 from uint256, reverting on\n overflow (when the input is greater than largest uint152).\n Counterpart to Solidity's `uint152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":5907,"implemented":true,"kind":"function","modifiers":[],"name":"toUint152","nameLocation":"7746:9:21","nodeType":"FunctionDefinition","parameters":{"id":5883,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5882,"mutability":"mutable","name":"value","nameLocation":"7764:5:21","nodeType":"VariableDeclaration","scope":5907,"src":"7756:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5881,"name":"uint256","nodeType":"ElementaryTypeName","src":"7756:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7755:15:21"},"returnParameters":{"id":5886,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5885,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5907,"src":"7794:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"},"typeName":{"id":5884,"name":"uint152","nodeType":"ElementaryTypeName","src":"7794:7:21","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"visibility":"internal"}],"src":"7793:9:21"},"scope":7281,"src":"7737:218:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5934,"nodeType":"Block","src":"8312:152:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5915,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5910,"src":"8326:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5918,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8339:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":5917,"name":"uint144","nodeType":"ElementaryTypeName","src":"8339:7:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"}],"id":5916,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8334:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5919,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8334:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint144","typeString":"type(uint144)"}},"id":5920,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8348:3:21","memberName":"max","nodeType":"MemberAccess","src":"8334:17:21","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"src":"8326:25:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5928,"nodeType":"IfStatement","src":"8322:105:21","trueBody":{"id":5927,"nodeType":"Block","src":"8353:74:21","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":5923,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8405:3:21","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":5924,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5910,"src":"8410:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5922,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5526,"src":"8374:30:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5925,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8374:42:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5926,"nodeType":"RevertStatement","src":"8367:49:21"}]}},{"expression":{"arguments":[{"id":5931,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5910,"src":"8451:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5930,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8443:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":5929,"name":"uint144","nodeType":"ElementaryTypeName","src":"8443:7:21","typeDescriptions":{}}},"id":5932,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8443:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"functionReturnParameters":5914,"id":5933,"nodeType":"Return","src":"8436:21:21"}]},"documentation":{"id":5908,"nodeType":"StructuredDocumentation","src":"7961:280:21","text":" @dev Returns the downcasted uint144 from uint256, reverting on\n overflow (when the input is greater than largest uint144).\n Counterpart to Solidity's `uint144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":5935,"implemented":true,"kind":"function","modifiers":[],"name":"toUint144","nameLocation":"8255:9:21","nodeType":"FunctionDefinition","parameters":{"id":5911,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5910,"mutability":"mutable","name":"value","nameLocation":"8273:5:21","nodeType":"VariableDeclaration","scope":5935,"src":"8265:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5909,"name":"uint256","nodeType":"ElementaryTypeName","src":"8265:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8264:15:21"},"returnParameters":{"id":5914,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5913,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5935,"src":"8303:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"},"typeName":{"id":5912,"name":"uint144","nodeType":"ElementaryTypeName","src":"8303:7:21","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"visibility":"internal"}],"src":"8302:9:21"},"scope":7281,"src":"8246:218:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5962,"nodeType":"Block","src":"8821:152:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5943,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5938,"src":"8835:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5946,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8848:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":5945,"name":"uint136","nodeType":"ElementaryTypeName","src":"8848:7:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"}],"id":5944,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8843:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5947,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8843:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint136","typeString":"type(uint136)"}},"id":5948,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8857:3:21","memberName":"max","nodeType":"MemberAccess","src":"8843:17:21","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"src":"8835:25:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5956,"nodeType":"IfStatement","src":"8831:105:21","trueBody":{"id":5955,"nodeType":"Block","src":"8862:74:21","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":5951,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8914:3:21","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":5952,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5938,"src":"8919:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5950,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5526,"src":"8883:30:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5953,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8883:42:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5954,"nodeType":"RevertStatement","src":"8876:49:21"}]}},{"expression":{"arguments":[{"id":5959,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5938,"src":"8960:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5958,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8952:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":5957,"name":"uint136","nodeType":"ElementaryTypeName","src":"8952:7:21","typeDescriptions":{}}},"id":5960,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8952:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"functionReturnParameters":5942,"id":5961,"nodeType":"Return","src":"8945:21:21"}]},"documentation":{"id":5936,"nodeType":"StructuredDocumentation","src":"8470:280:21","text":" @dev Returns the downcasted uint136 from uint256, reverting on\n overflow (when the input is greater than largest uint136).\n Counterpart to Solidity's `uint136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":5963,"implemented":true,"kind":"function","modifiers":[],"name":"toUint136","nameLocation":"8764:9:21","nodeType":"FunctionDefinition","parameters":{"id":5939,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5938,"mutability":"mutable","name":"value","nameLocation":"8782:5:21","nodeType":"VariableDeclaration","scope":5963,"src":"8774:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5937,"name":"uint256","nodeType":"ElementaryTypeName","src":"8774:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8773:15:21"},"returnParameters":{"id":5942,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5941,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5963,"src":"8812:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"},"typeName":{"id":5940,"name":"uint136","nodeType":"ElementaryTypeName","src":"8812:7:21","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"visibility":"internal"}],"src":"8811:9:21"},"scope":7281,"src":"8755:218:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5990,"nodeType":"Block","src":"9330:152:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5971,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5966,"src":"9344:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5974,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9357:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":5973,"name":"uint128","nodeType":"ElementaryTypeName","src":"9357:7:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"}],"id":5972,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9352:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5975,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9352:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint128","typeString":"type(uint128)"}},"id":5976,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9366:3:21","memberName":"max","nodeType":"MemberAccess","src":"9352:17:21","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"9344:25:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5984,"nodeType":"IfStatement","src":"9340:105:21","trueBody":{"id":5983,"nodeType":"Block","src":"9371:74:21","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":5979,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9423:3:21","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":5980,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5966,"src":"9428:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5978,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5526,"src":"9392:30:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5981,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9392:42:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5982,"nodeType":"RevertStatement","src":"9385:49:21"}]}},{"expression":{"arguments":[{"id":5987,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5966,"src":"9469:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5986,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9461:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":5985,"name":"uint128","nodeType":"ElementaryTypeName","src":"9461:7:21","typeDescriptions":{}}},"id":5988,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9461:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":5970,"id":5989,"nodeType":"Return","src":"9454:21:21"}]},"documentation":{"id":5964,"nodeType":"StructuredDocumentation","src":"8979:280:21","text":" @dev Returns the downcasted uint128 from uint256, reverting on\n overflow (when the input is greater than largest uint128).\n Counterpart to Solidity's `uint128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":5991,"implemented":true,"kind":"function","modifiers":[],"name":"toUint128","nameLocation":"9273:9:21","nodeType":"FunctionDefinition","parameters":{"id":5967,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5966,"mutability":"mutable","name":"value","nameLocation":"9291:5:21","nodeType":"VariableDeclaration","scope":5991,"src":"9283:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5965,"name":"uint256","nodeType":"ElementaryTypeName","src":"9283:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9282:15:21"},"returnParameters":{"id":5970,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5969,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5991,"src":"9321:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":5968,"name":"uint128","nodeType":"ElementaryTypeName","src":"9321:7:21","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"9320:9:21"},"scope":7281,"src":"9264:218:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6018,"nodeType":"Block","src":"9839:152:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6005,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5999,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5994,"src":"9853:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6002,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9866:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":6001,"name":"uint120","nodeType":"ElementaryTypeName","src":"9866:7:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"}],"id":6000,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9861:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6003,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9861:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint120","typeString":"type(uint120)"}},"id":6004,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9875:3:21","memberName":"max","nodeType":"MemberAccess","src":"9861:17:21","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"src":"9853:25:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6012,"nodeType":"IfStatement","src":"9849:105:21","trueBody":{"id":6011,"nodeType":"Block","src":"9880:74:21","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":6007,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9932:3:21","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":6008,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5994,"src":"9937:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6006,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5526,"src":"9901:30:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6009,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9901:42:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6010,"nodeType":"RevertStatement","src":"9894:49:21"}]}},{"expression":{"arguments":[{"id":6015,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5994,"src":"9978:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6014,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9970:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":6013,"name":"uint120","nodeType":"ElementaryTypeName","src":"9970:7:21","typeDescriptions":{}}},"id":6016,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9970:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"functionReturnParameters":5998,"id":6017,"nodeType":"Return","src":"9963:21:21"}]},"documentation":{"id":5992,"nodeType":"StructuredDocumentation","src":"9488:280:21","text":" @dev Returns the downcasted uint120 from uint256, reverting on\n overflow (when the input is greater than largest uint120).\n Counterpart to Solidity's `uint120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":6019,"implemented":true,"kind":"function","modifiers":[],"name":"toUint120","nameLocation":"9782:9:21","nodeType":"FunctionDefinition","parameters":{"id":5995,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5994,"mutability":"mutable","name":"value","nameLocation":"9800:5:21","nodeType":"VariableDeclaration","scope":6019,"src":"9792:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5993,"name":"uint256","nodeType":"ElementaryTypeName","src":"9792:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9791:15:21"},"returnParameters":{"id":5998,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5997,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6019,"src":"9830:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"},"typeName":{"id":5996,"name":"uint120","nodeType":"ElementaryTypeName","src":"9830:7:21","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"visibility":"internal"}],"src":"9829:9:21"},"scope":7281,"src":"9773:218:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6046,"nodeType":"Block","src":"10348:152:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6027,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6022,"src":"10362:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6030,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10375:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":6029,"name":"uint112","nodeType":"ElementaryTypeName","src":"10375:7:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"}],"id":6028,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10370:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6031,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10370:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint112","typeString":"type(uint112)"}},"id":6032,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10384:3:21","memberName":"max","nodeType":"MemberAccess","src":"10370:17:21","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"10362:25:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6040,"nodeType":"IfStatement","src":"10358:105:21","trueBody":{"id":6039,"nodeType":"Block","src":"10389:74:21","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":6035,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10441:3:21","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":6036,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6022,"src":"10446:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6034,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5526,"src":"10410:30:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6037,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10410:42:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6038,"nodeType":"RevertStatement","src":"10403:49:21"}]}},{"expression":{"arguments":[{"id":6043,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6022,"src":"10487:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6042,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10479:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":6041,"name":"uint112","nodeType":"ElementaryTypeName","src":"10479:7:21","typeDescriptions":{}}},"id":6044,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10479:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"functionReturnParameters":6026,"id":6045,"nodeType":"Return","src":"10472:21:21"}]},"documentation":{"id":6020,"nodeType":"StructuredDocumentation","src":"9997:280:21","text":" @dev Returns the downcasted uint112 from uint256, reverting on\n overflow (when the input is greater than largest uint112).\n Counterpart to Solidity's `uint112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":6047,"implemented":true,"kind":"function","modifiers":[],"name":"toUint112","nameLocation":"10291:9:21","nodeType":"FunctionDefinition","parameters":{"id":6023,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6022,"mutability":"mutable","name":"value","nameLocation":"10309:5:21","nodeType":"VariableDeclaration","scope":6047,"src":"10301:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6021,"name":"uint256","nodeType":"ElementaryTypeName","src":"10301:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10300:15:21"},"returnParameters":{"id":6026,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6025,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6047,"src":"10339:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":6024,"name":"uint112","nodeType":"ElementaryTypeName","src":"10339:7:21","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"}],"src":"10338:9:21"},"scope":7281,"src":"10282:218:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6074,"nodeType":"Block","src":"10857:152:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6061,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6055,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6050,"src":"10871:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6058,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10884:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":6057,"name":"uint104","nodeType":"ElementaryTypeName","src":"10884:7:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"}],"id":6056,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10879:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6059,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10879:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint104","typeString":"type(uint104)"}},"id":6060,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10893:3:21","memberName":"max","nodeType":"MemberAccess","src":"10879:17:21","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"src":"10871:25:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6068,"nodeType":"IfStatement","src":"10867:105:21","trueBody":{"id":6067,"nodeType":"Block","src":"10898:74:21","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":6063,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10950:3:21","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":6064,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6050,"src":"10955:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6062,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5526,"src":"10919:30:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6065,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10919:42:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6066,"nodeType":"RevertStatement","src":"10912:49:21"}]}},{"expression":{"arguments":[{"id":6071,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6050,"src":"10996:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6070,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10988:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":6069,"name":"uint104","nodeType":"ElementaryTypeName","src":"10988:7:21","typeDescriptions":{}}},"id":6072,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10988:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"functionReturnParameters":6054,"id":6073,"nodeType":"Return","src":"10981:21:21"}]},"documentation":{"id":6048,"nodeType":"StructuredDocumentation","src":"10506:280:21","text":" @dev Returns the downcasted uint104 from uint256, reverting on\n overflow (when the input is greater than largest uint104).\n Counterpart to Solidity's `uint104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":6075,"implemented":true,"kind":"function","modifiers":[],"name":"toUint104","nameLocation":"10800:9:21","nodeType":"FunctionDefinition","parameters":{"id":6051,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6050,"mutability":"mutable","name":"value","nameLocation":"10818:5:21","nodeType":"VariableDeclaration","scope":6075,"src":"10810:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6049,"name":"uint256","nodeType":"ElementaryTypeName","src":"10810:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10809:15:21"},"returnParameters":{"id":6054,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6053,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6075,"src":"10848:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"},"typeName":{"id":6052,"name":"uint104","nodeType":"ElementaryTypeName","src":"10848:7:21","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"visibility":"internal"}],"src":"10847:9:21"},"scope":7281,"src":"10791:218:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6102,"nodeType":"Block","src":"11360:149:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6089,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6083,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6078,"src":"11374:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6086,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11387:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":6085,"name":"uint96","nodeType":"ElementaryTypeName","src":"11387:6:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"}],"id":6084,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11382:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6087,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11382:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint96","typeString":"type(uint96)"}},"id":6088,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11395:3:21","memberName":"max","nodeType":"MemberAccess","src":"11382:16:21","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"11374:24:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6096,"nodeType":"IfStatement","src":"11370:103:21","trueBody":{"id":6095,"nodeType":"Block","src":"11400:73:21","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":6091,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11452:2:21","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":6092,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6078,"src":"11456:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6090,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5526,"src":"11421:30:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6093,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11421:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6094,"nodeType":"RevertStatement","src":"11414:48:21"}]}},{"expression":{"arguments":[{"id":6099,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6078,"src":"11496:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6098,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11489:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":6097,"name":"uint96","nodeType":"ElementaryTypeName","src":"11489:6:21","typeDescriptions":{}}},"id":6100,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11489:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"functionReturnParameters":6082,"id":6101,"nodeType":"Return","src":"11482:20:21"}]},"documentation":{"id":6076,"nodeType":"StructuredDocumentation","src":"11015:276:21","text":" @dev Returns the downcasted uint96 from uint256, reverting on\n overflow (when the input is greater than largest uint96).\n Counterpart to Solidity's `uint96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":6103,"implemented":true,"kind":"function","modifiers":[],"name":"toUint96","nameLocation":"11305:8:21","nodeType":"FunctionDefinition","parameters":{"id":6079,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6078,"mutability":"mutable","name":"value","nameLocation":"11322:5:21","nodeType":"VariableDeclaration","scope":6103,"src":"11314:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6077,"name":"uint256","nodeType":"ElementaryTypeName","src":"11314:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11313:15:21"},"returnParameters":{"id":6082,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6081,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6103,"src":"11352:6:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":6080,"name":"uint96","nodeType":"ElementaryTypeName","src":"11352:6:21","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"11351:8:21"},"scope":7281,"src":"11296:213:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6130,"nodeType":"Block","src":"11860:149:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6111,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6106,"src":"11874:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6114,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11887:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":6113,"name":"uint88","nodeType":"ElementaryTypeName","src":"11887:6:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"}],"id":6112,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11882:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11882:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint88","typeString":"type(uint88)"}},"id":6116,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11895:3:21","memberName":"max","nodeType":"MemberAccess","src":"11882:16:21","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"src":"11874:24:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6124,"nodeType":"IfStatement","src":"11870:103:21","trueBody":{"id":6123,"nodeType":"Block","src":"11900:73:21","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":6119,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11952:2:21","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":6120,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6106,"src":"11956:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6118,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5526,"src":"11921:30:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6121,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11921:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6122,"nodeType":"RevertStatement","src":"11914:48:21"}]}},{"expression":{"arguments":[{"id":6127,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6106,"src":"11996:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6126,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11989:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":6125,"name":"uint88","nodeType":"ElementaryTypeName","src":"11989:6:21","typeDescriptions":{}}},"id":6128,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11989:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"functionReturnParameters":6110,"id":6129,"nodeType":"Return","src":"11982:20:21"}]},"documentation":{"id":6104,"nodeType":"StructuredDocumentation","src":"11515:276:21","text":" @dev Returns the downcasted uint88 from uint256, reverting on\n overflow (when the input is greater than largest uint88).\n Counterpart to Solidity's `uint88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":6131,"implemented":true,"kind":"function","modifiers":[],"name":"toUint88","nameLocation":"11805:8:21","nodeType":"FunctionDefinition","parameters":{"id":6107,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6106,"mutability":"mutable","name":"value","nameLocation":"11822:5:21","nodeType":"VariableDeclaration","scope":6131,"src":"11814:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6105,"name":"uint256","nodeType":"ElementaryTypeName","src":"11814:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11813:15:21"},"returnParameters":{"id":6110,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6109,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6131,"src":"11852:6:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"},"typeName":{"id":6108,"name":"uint88","nodeType":"ElementaryTypeName","src":"11852:6:21","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"visibility":"internal"}],"src":"11851:8:21"},"scope":7281,"src":"11796:213:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6158,"nodeType":"Block","src":"12360:149:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6139,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6134,"src":"12374:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6142,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12387:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":6141,"name":"uint80","nodeType":"ElementaryTypeName","src":"12387:6:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"}],"id":6140,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12382:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6143,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12382:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint80","typeString":"type(uint80)"}},"id":6144,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12395:3:21","memberName":"max","nodeType":"MemberAccess","src":"12382:16:21","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"src":"12374:24:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6152,"nodeType":"IfStatement","src":"12370:103:21","trueBody":{"id":6151,"nodeType":"Block","src":"12400:73:21","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":6147,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12452:2:21","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":6148,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6134,"src":"12456:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6146,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5526,"src":"12421:30:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6149,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12421:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6150,"nodeType":"RevertStatement","src":"12414:48:21"}]}},{"expression":{"arguments":[{"id":6155,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6134,"src":"12496:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6154,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12489:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":6153,"name":"uint80","nodeType":"ElementaryTypeName","src":"12489:6:21","typeDescriptions":{}}},"id":6156,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12489:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"functionReturnParameters":6138,"id":6157,"nodeType":"Return","src":"12482:20:21"}]},"documentation":{"id":6132,"nodeType":"StructuredDocumentation","src":"12015:276:21","text":" @dev Returns the downcasted uint80 from uint256, reverting on\n overflow (when the input is greater than largest uint80).\n Counterpart to Solidity's `uint80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":6159,"implemented":true,"kind":"function","modifiers":[],"name":"toUint80","nameLocation":"12305:8:21","nodeType":"FunctionDefinition","parameters":{"id":6135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6134,"mutability":"mutable","name":"value","nameLocation":"12322:5:21","nodeType":"VariableDeclaration","scope":6159,"src":"12314:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6133,"name":"uint256","nodeType":"ElementaryTypeName","src":"12314:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12313:15:21"},"returnParameters":{"id":6138,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6137,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6159,"src":"12352:6:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":6136,"name":"uint80","nodeType":"ElementaryTypeName","src":"12352:6:21","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"12351:8:21"},"scope":7281,"src":"12296:213:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6186,"nodeType":"Block","src":"12860:149:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6167,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6162,"src":"12874:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6170,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12887:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":6169,"name":"uint72","nodeType":"ElementaryTypeName","src":"12887:6:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"}],"id":6168,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12882:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6171,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12882:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint72","typeString":"type(uint72)"}},"id":6172,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12895:3:21","memberName":"max","nodeType":"MemberAccess","src":"12882:16:21","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"src":"12874:24:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6180,"nodeType":"IfStatement","src":"12870:103:21","trueBody":{"id":6179,"nodeType":"Block","src":"12900:73:21","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":6175,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12952:2:21","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":6176,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6162,"src":"12956:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6174,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5526,"src":"12921:30:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6177,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12921:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6178,"nodeType":"RevertStatement","src":"12914:48:21"}]}},{"expression":{"arguments":[{"id":6183,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6162,"src":"12996:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6182,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12989:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":6181,"name":"uint72","nodeType":"ElementaryTypeName","src":"12989:6:21","typeDescriptions":{}}},"id":6184,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12989:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"functionReturnParameters":6166,"id":6185,"nodeType":"Return","src":"12982:20:21"}]},"documentation":{"id":6160,"nodeType":"StructuredDocumentation","src":"12515:276:21","text":" @dev Returns the downcasted uint72 from uint256, reverting on\n overflow (when the input is greater than largest uint72).\n Counterpart to Solidity's `uint72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":6187,"implemented":true,"kind":"function","modifiers":[],"name":"toUint72","nameLocation":"12805:8:21","nodeType":"FunctionDefinition","parameters":{"id":6163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6162,"mutability":"mutable","name":"value","nameLocation":"12822:5:21","nodeType":"VariableDeclaration","scope":6187,"src":"12814:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6161,"name":"uint256","nodeType":"ElementaryTypeName","src":"12814:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12813:15:21"},"returnParameters":{"id":6166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6165,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6187,"src":"12852:6:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"},"typeName":{"id":6164,"name":"uint72","nodeType":"ElementaryTypeName","src":"12852:6:21","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"visibility":"internal"}],"src":"12851:8:21"},"scope":7281,"src":"12796:213:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6214,"nodeType":"Block","src":"13360:149:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6195,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6190,"src":"13374:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6198,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13387:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":6197,"name":"uint64","nodeType":"ElementaryTypeName","src":"13387:6:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":6196,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13382:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6199,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13382:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":6200,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13395:3:21","memberName":"max","nodeType":"MemberAccess","src":"13382:16:21","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"13374:24:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6208,"nodeType":"IfStatement","src":"13370:103:21","trueBody":{"id":6207,"nodeType":"Block","src":"13400:73:21","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":6203,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13452:2:21","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":6204,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6190,"src":"13456:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6202,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5526,"src":"13421:30:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6205,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13421:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6206,"nodeType":"RevertStatement","src":"13414:48:21"}]}},{"expression":{"arguments":[{"id":6211,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6190,"src":"13496:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6210,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13489:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":6209,"name":"uint64","nodeType":"ElementaryTypeName","src":"13489:6:21","typeDescriptions":{}}},"id":6212,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13489:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":6194,"id":6213,"nodeType":"Return","src":"13482:20:21"}]},"documentation":{"id":6188,"nodeType":"StructuredDocumentation","src":"13015:276:21","text":" @dev Returns the downcasted uint64 from uint256, reverting on\n overflow (when the input is greater than largest uint64).\n Counterpart to Solidity's `uint64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":6215,"implemented":true,"kind":"function","modifiers":[],"name":"toUint64","nameLocation":"13305:8:21","nodeType":"FunctionDefinition","parameters":{"id":6191,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6190,"mutability":"mutable","name":"value","nameLocation":"13322:5:21","nodeType":"VariableDeclaration","scope":6215,"src":"13314:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6189,"name":"uint256","nodeType":"ElementaryTypeName","src":"13314:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13313:15:21"},"returnParameters":{"id":6194,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6193,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6215,"src":"13352:6:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":6192,"name":"uint64","nodeType":"ElementaryTypeName","src":"13352:6:21","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"13351:8:21"},"scope":7281,"src":"13296:213:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6242,"nodeType":"Block","src":"13860:149:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6223,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6218,"src":"13874:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6226,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13887:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":6225,"name":"uint56","nodeType":"ElementaryTypeName","src":"13887:6:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"}],"id":6224,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13882:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6227,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13882:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint56","typeString":"type(uint56)"}},"id":6228,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13895:3:21","memberName":"max","nodeType":"MemberAccess","src":"13882:16:21","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"src":"13874:24:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6236,"nodeType":"IfStatement","src":"13870:103:21","trueBody":{"id":6235,"nodeType":"Block","src":"13900:73:21","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":6231,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13952:2:21","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":6232,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6218,"src":"13956:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6230,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5526,"src":"13921:30:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6233,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13921:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6234,"nodeType":"RevertStatement","src":"13914:48:21"}]}},{"expression":{"arguments":[{"id":6239,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6218,"src":"13996:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6238,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13989:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":6237,"name":"uint56","nodeType":"ElementaryTypeName","src":"13989:6:21","typeDescriptions":{}}},"id":6240,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13989:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"functionReturnParameters":6222,"id":6241,"nodeType":"Return","src":"13982:20:21"}]},"documentation":{"id":6216,"nodeType":"StructuredDocumentation","src":"13515:276:21","text":" @dev Returns the downcasted uint56 from uint256, reverting on\n overflow (when the input is greater than largest uint56).\n Counterpart to Solidity's `uint56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":6243,"implemented":true,"kind":"function","modifiers":[],"name":"toUint56","nameLocation":"13805:8:21","nodeType":"FunctionDefinition","parameters":{"id":6219,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6218,"mutability":"mutable","name":"value","nameLocation":"13822:5:21","nodeType":"VariableDeclaration","scope":6243,"src":"13814:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6217,"name":"uint256","nodeType":"ElementaryTypeName","src":"13814:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13813:15:21"},"returnParameters":{"id":6222,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6221,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6243,"src":"13852:6:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"},"typeName":{"id":6220,"name":"uint56","nodeType":"ElementaryTypeName","src":"13852:6:21","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"visibility":"internal"}],"src":"13851:8:21"},"scope":7281,"src":"13796:213:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6270,"nodeType":"Block","src":"14360:149:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6251,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6246,"src":"14374:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6254,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14387:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":6253,"name":"uint48","nodeType":"ElementaryTypeName","src":"14387:6:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"}],"id":6252,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14382:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6255,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14382:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint48","typeString":"type(uint48)"}},"id":6256,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14395:3:21","memberName":"max","nodeType":"MemberAccess","src":"14382:16:21","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"14374:24:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6264,"nodeType":"IfStatement","src":"14370:103:21","trueBody":{"id":6263,"nodeType":"Block","src":"14400:73:21","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":6259,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14452:2:21","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":6260,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6246,"src":"14456:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6258,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5526,"src":"14421:30:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6261,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14421:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6262,"nodeType":"RevertStatement","src":"14414:48:21"}]}},{"expression":{"arguments":[{"id":6267,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6246,"src":"14496:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6266,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14489:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":6265,"name":"uint48","nodeType":"ElementaryTypeName","src":"14489:6:21","typeDescriptions":{}}},"id":6268,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14489:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":6250,"id":6269,"nodeType":"Return","src":"14482:20:21"}]},"documentation":{"id":6244,"nodeType":"StructuredDocumentation","src":"14015:276:21","text":" @dev Returns the downcasted uint48 from uint256, reverting on\n overflow (when the input is greater than largest uint48).\n Counterpart to Solidity's `uint48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":6271,"implemented":true,"kind":"function","modifiers":[],"name":"toUint48","nameLocation":"14305:8:21","nodeType":"FunctionDefinition","parameters":{"id":6247,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6246,"mutability":"mutable","name":"value","nameLocation":"14322:5:21","nodeType":"VariableDeclaration","scope":6271,"src":"14314:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6245,"name":"uint256","nodeType":"ElementaryTypeName","src":"14314:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14313:15:21"},"returnParameters":{"id":6250,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6249,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6271,"src":"14352:6:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":6248,"name":"uint48","nodeType":"ElementaryTypeName","src":"14352:6:21","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"14351:8:21"},"scope":7281,"src":"14296:213:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6298,"nodeType":"Block","src":"14860:149:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6279,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6274,"src":"14874:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6282,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14887:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":6281,"name":"uint40","nodeType":"ElementaryTypeName","src":"14887:6:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"}],"id":6280,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14882:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6283,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14882:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint40","typeString":"type(uint40)"}},"id":6284,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14895:3:21","memberName":"max","nodeType":"MemberAccess","src":"14882:16:21","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"src":"14874:24:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6292,"nodeType":"IfStatement","src":"14870:103:21","trueBody":{"id":6291,"nodeType":"Block","src":"14900:73:21","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":6287,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14952:2:21","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":6288,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6274,"src":"14956:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6286,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5526,"src":"14921:30:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6289,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14921:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6290,"nodeType":"RevertStatement","src":"14914:48:21"}]}},{"expression":{"arguments":[{"id":6295,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6274,"src":"14996:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6294,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14989:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":6293,"name":"uint40","nodeType":"ElementaryTypeName","src":"14989:6:21","typeDescriptions":{}}},"id":6296,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14989:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"functionReturnParameters":6278,"id":6297,"nodeType":"Return","src":"14982:20:21"}]},"documentation":{"id":6272,"nodeType":"StructuredDocumentation","src":"14515:276:21","text":" @dev Returns the downcasted uint40 from uint256, reverting on\n overflow (when the input is greater than largest uint40).\n Counterpart to Solidity's `uint40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":6299,"implemented":true,"kind":"function","modifiers":[],"name":"toUint40","nameLocation":"14805:8:21","nodeType":"FunctionDefinition","parameters":{"id":6275,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6274,"mutability":"mutable","name":"value","nameLocation":"14822:5:21","nodeType":"VariableDeclaration","scope":6299,"src":"14814:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6273,"name":"uint256","nodeType":"ElementaryTypeName","src":"14814:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14813:15:21"},"returnParameters":{"id":6278,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6277,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6299,"src":"14852:6:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":6276,"name":"uint40","nodeType":"ElementaryTypeName","src":"14852:6:21","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"14851:8:21"},"scope":7281,"src":"14796:213:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6326,"nodeType":"Block","src":"15360:149:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6307,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6302,"src":"15374:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6310,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15387:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":6309,"name":"uint32","nodeType":"ElementaryTypeName","src":"15387:6:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"}],"id":6308,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15382:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6311,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15382:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint32","typeString":"type(uint32)"}},"id":6312,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15395:3:21","memberName":"max","nodeType":"MemberAccess","src":"15382:16:21","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"15374:24:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6320,"nodeType":"IfStatement","src":"15370:103:21","trueBody":{"id":6319,"nodeType":"Block","src":"15400:73:21","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":6315,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15452:2:21","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":6316,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6302,"src":"15456:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6314,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5526,"src":"15421:30:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6317,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15421:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6318,"nodeType":"RevertStatement","src":"15414:48:21"}]}},{"expression":{"arguments":[{"id":6323,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6302,"src":"15496:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6322,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15489:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":6321,"name":"uint32","nodeType":"ElementaryTypeName","src":"15489:6:21","typeDescriptions":{}}},"id":6324,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15489:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":6306,"id":6325,"nodeType":"Return","src":"15482:20:21"}]},"documentation":{"id":6300,"nodeType":"StructuredDocumentation","src":"15015:276:21","text":" @dev Returns the downcasted uint32 from uint256, reverting on\n overflow (when the input is greater than largest uint32).\n Counterpart to Solidity's `uint32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":6327,"implemented":true,"kind":"function","modifiers":[],"name":"toUint32","nameLocation":"15305:8:21","nodeType":"FunctionDefinition","parameters":{"id":6303,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6302,"mutability":"mutable","name":"value","nameLocation":"15322:5:21","nodeType":"VariableDeclaration","scope":6327,"src":"15314:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6301,"name":"uint256","nodeType":"ElementaryTypeName","src":"15314:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15313:15:21"},"returnParameters":{"id":6306,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6305,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6327,"src":"15352:6:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":6304,"name":"uint32","nodeType":"ElementaryTypeName","src":"15352:6:21","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"15351:8:21"},"scope":7281,"src":"15296:213:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6354,"nodeType":"Block","src":"15860:149:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6335,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6330,"src":"15874:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6338,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15887:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":6337,"name":"uint24","nodeType":"ElementaryTypeName","src":"15887:6:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"}],"id":6336,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15882:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6339,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15882:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint24","typeString":"type(uint24)"}},"id":6340,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15895:3:21","memberName":"max","nodeType":"MemberAccess","src":"15882:16:21","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"15874:24:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6348,"nodeType":"IfStatement","src":"15870:103:21","trueBody":{"id":6347,"nodeType":"Block","src":"15900:73:21","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":6343,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15952:2:21","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":6344,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6330,"src":"15956:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6342,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5526,"src":"15921:30:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6345,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15921:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6346,"nodeType":"RevertStatement","src":"15914:48:21"}]}},{"expression":{"arguments":[{"id":6351,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6330,"src":"15996:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6350,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15989:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":6349,"name":"uint24","nodeType":"ElementaryTypeName","src":"15989:6:21","typeDescriptions":{}}},"id":6352,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15989:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"functionReturnParameters":6334,"id":6353,"nodeType":"Return","src":"15982:20:21"}]},"documentation":{"id":6328,"nodeType":"StructuredDocumentation","src":"15515:276:21","text":" @dev Returns the downcasted uint24 from uint256, reverting on\n overflow (when the input is greater than largest uint24).\n Counterpart to Solidity's `uint24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":6355,"implemented":true,"kind":"function","modifiers":[],"name":"toUint24","nameLocation":"15805:8:21","nodeType":"FunctionDefinition","parameters":{"id":6331,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6330,"mutability":"mutable","name":"value","nameLocation":"15822:5:21","nodeType":"VariableDeclaration","scope":6355,"src":"15814:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6329,"name":"uint256","nodeType":"ElementaryTypeName","src":"15814:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15813:15:21"},"returnParameters":{"id":6334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6333,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6355,"src":"15852:6:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":6332,"name":"uint24","nodeType":"ElementaryTypeName","src":"15852:6:21","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"15851:8:21"},"scope":7281,"src":"15796:213:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6382,"nodeType":"Block","src":"16360:149:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6363,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6358,"src":"16374:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6366,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16387:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":6365,"name":"uint16","nodeType":"ElementaryTypeName","src":"16387:6:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"}],"id":6364,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16382:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6367,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16382:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint16","typeString":"type(uint16)"}},"id":6368,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16395:3:21","memberName":"max","nodeType":"MemberAccess","src":"16382:16:21","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"16374:24:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6376,"nodeType":"IfStatement","src":"16370:103:21","trueBody":{"id":6375,"nodeType":"Block","src":"16400:73:21","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":6371,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16452:2:21","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":6372,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6358,"src":"16456:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6370,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5526,"src":"16421:30:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6373,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16421:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6374,"nodeType":"RevertStatement","src":"16414:48:21"}]}},{"expression":{"arguments":[{"id":6379,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6358,"src":"16496:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6378,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16489:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":6377,"name":"uint16","nodeType":"ElementaryTypeName","src":"16489:6:21","typeDescriptions":{}}},"id":6380,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16489:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"functionReturnParameters":6362,"id":6381,"nodeType":"Return","src":"16482:20:21"}]},"documentation":{"id":6356,"nodeType":"StructuredDocumentation","src":"16015:276:21","text":" @dev Returns the downcasted uint16 from uint256, reverting on\n overflow (when the input is greater than largest uint16).\n Counterpart to Solidity's `uint16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":6383,"implemented":true,"kind":"function","modifiers":[],"name":"toUint16","nameLocation":"16305:8:21","nodeType":"FunctionDefinition","parameters":{"id":6359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6358,"mutability":"mutable","name":"value","nameLocation":"16322:5:21","nodeType":"VariableDeclaration","scope":6383,"src":"16314:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6357,"name":"uint256","nodeType":"ElementaryTypeName","src":"16314:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16313:15:21"},"returnParameters":{"id":6362,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6361,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6383,"src":"16352:6:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":6360,"name":"uint16","nodeType":"ElementaryTypeName","src":"16352:6:21","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"16351:8:21"},"scope":7281,"src":"16296:213:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6410,"nodeType":"Block","src":"16854:146:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6391,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6386,"src":"16868:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6394,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16881:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":6393,"name":"uint8","nodeType":"ElementaryTypeName","src":"16881:5:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":6392,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16876:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6395,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16876:11:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":6396,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16888:3:21","memberName":"max","nodeType":"MemberAccess","src":"16876:15:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"16868:23:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6404,"nodeType":"IfStatement","src":"16864:101:21","trueBody":{"id":6403,"nodeType":"Block","src":"16893:72:21","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":6399,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16945:1:21","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":6400,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6386,"src":"16948:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6398,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5526,"src":"16914:30:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6401,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16914:40:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6402,"nodeType":"RevertStatement","src":"16907:47:21"}]}},{"expression":{"arguments":[{"id":6407,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6386,"src":"16987:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6406,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16981:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":6405,"name":"uint8","nodeType":"ElementaryTypeName","src":"16981:5:21","typeDescriptions":{}}},"id":6408,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16981:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":6390,"id":6409,"nodeType":"Return","src":"16974:19:21"}]},"documentation":{"id":6384,"nodeType":"StructuredDocumentation","src":"16515:272:21","text":" @dev Returns the downcasted uint8 from uint256, reverting on\n overflow (when the input is greater than largest uint8).\n Counterpart to Solidity's `uint8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":6411,"implemented":true,"kind":"function","modifiers":[],"name":"toUint8","nameLocation":"16801:7:21","nodeType":"FunctionDefinition","parameters":{"id":6387,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6386,"mutability":"mutable","name":"value","nameLocation":"16817:5:21","nodeType":"VariableDeclaration","scope":6411,"src":"16809:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6385,"name":"uint256","nodeType":"ElementaryTypeName","src":"16809:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16808:15:21"},"returnParameters":{"id":6390,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6389,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6411,"src":"16847:5:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":6388,"name":"uint8","nodeType":"ElementaryTypeName","src":"16847:5:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16846:7:21"},"scope":7281,"src":"16792:208:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6433,"nodeType":"Block","src":"17236:128:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6419,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6414,"src":"17250:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":6420,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17258:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17250:9:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6427,"nodeType":"IfStatement","src":"17246:81:21","trueBody":{"id":6426,"nodeType":"Block","src":"17261:66:21","statements":[{"errorCall":{"arguments":[{"id":6423,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6414,"src":"17310:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6422,"name":"SafeCastOverflowedIntToUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5531,"src":"17282:27:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_int256_$returns$__$","typeString":"function (int256) pure"}},"id":6424,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17282:34:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6425,"nodeType":"RevertStatement","src":"17275:41:21"}]}},{"expression":{"arguments":[{"id":6430,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6414,"src":"17351:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6429,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17343:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6428,"name":"uint256","nodeType":"ElementaryTypeName","src":"17343:7:21","typeDescriptions":{}}},"id":6431,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17343:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6418,"id":6432,"nodeType":"Return","src":"17336:21:21"}]},"documentation":{"id":6412,"nodeType":"StructuredDocumentation","src":"17006:160:21","text":" @dev Converts a signed int256 into an unsigned uint256.\n Requirements:\n - input must be greater than or equal to 0."},"id":6434,"implemented":true,"kind":"function","modifiers":[],"name":"toUint256","nameLocation":"17180:9:21","nodeType":"FunctionDefinition","parameters":{"id":6415,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6414,"mutability":"mutable","name":"value","nameLocation":"17197:5:21","nodeType":"VariableDeclaration","scope":6434,"src":"17190:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6413,"name":"int256","nodeType":"ElementaryTypeName","src":"17190:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17189:14:21"},"returnParameters":{"id":6418,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6417,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6434,"src":"17227:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6416,"name":"uint256","nodeType":"ElementaryTypeName","src":"17227:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17226:9:21"},"scope":7281,"src":"17171:193:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6459,"nodeType":"Block","src":"17761:150:21","statements":[{"expression":{"id":6447,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6442,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6440,"src":"17771:10:21","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6445,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6437,"src":"17791:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6444,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17784:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int248_$","typeString":"type(int248)"},"typeName":{"id":6443,"name":"int248","nodeType":"ElementaryTypeName","src":"17784:6:21","typeDescriptions":{}}},"id":6446,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17784:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"src":"17771:26:21","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"id":6448,"nodeType":"ExpressionStatement","src":"17771:26:21"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6449,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6440,"src":"17811:10:21","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6450,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6437,"src":"17825:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"17811:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6458,"nodeType":"IfStatement","src":"17807:98:21","trueBody":{"id":6457,"nodeType":"Block","src":"17832:73:21","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":6453,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17883:3:21","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":6454,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6437,"src":"17888:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6452,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5538,"src":"17853:29:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6455,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17853:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6456,"nodeType":"RevertStatement","src":"17846:48:21"}]}}]},"documentation":{"id":6435,"nodeType":"StructuredDocumentation","src":"17370:312:21","text":" @dev Returns the downcasted int248 from int256, reverting on\n overflow (when the input is less than smallest int248 or\n greater than largest int248).\n Counterpart to Solidity's `int248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":6460,"implemented":true,"kind":"function","modifiers":[],"name":"toInt248","nameLocation":"17696:8:21","nodeType":"FunctionDefinition","parameters":{"id":6438,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6437,"mutability":"mutable","name":"value","nameLocation":"17712:5:21","nodeType":"VariableDeclaration","scope":6460,"src":"17705:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6436,"name":"int256","nodeType":"ElementaryTypeName","src":"17705:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17704:14:21"},"returnParameters":{"id":6441,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6440,"mutability":"mutable","name":"downcasted","nameLocation":"17749:10:21","nodeType":"VariableDeclaration","scope":6460,"src":"17742:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"},"typeName":{"id":6439,"name":"int248","nodeType":"ElementaryTypeName","src":"17742:6:21","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"visibility":"internal"}],"src":"17741:19:21"},"scope":7281,"src":"17687:224:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6485,"nodeType":"Block","src":"18308:150:21","statements":[{"expression":{"id":6473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6468,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6466,"src":"18318:10:21","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6471,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6463,"src":"18338:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6470,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18331:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int240_$","typeString":"type(int240)"},"typeName":{"id":6469,"name":"int240","nodeType":"ElementaryTypeName","src":"18331:6:21","typeDescriptions":{}}},"id":6472,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18331:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"src":"18318:26:21","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"id":6474,"nodeType":"ExpressionStatement","src":"18318:26:21"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6477,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6475,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6466,"src":"18358:10:21","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6476,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6463,"src":"18372:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18358:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6484,"nodeType":"IfStatement","src":"18354:98:21","trueBody":{"id":6483,"nodeType":"Block","src":"18379:73:21","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":6479,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18430:3:21","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":6480,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6463,"src":"18435:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6478,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5538,"src":"18400:29:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6481,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18400:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6482,"nodeType":"RevertStatement","src":"18393:48:21"}]}}]},"documentation":{"id":6461,"nodeType":"StructuredDocumentation","src":"17917:312:21","text":" @dev Returns the downcasted int240 from int256, reverting on\n overflow (when the input is less than smallest int240 or\n greater than largest int240).\n Counterpart to Solidity's `int240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":6486,"implemented":true,"kind":"function","modifiers":[],"name":"toInt240","nameLocation":"18243:8:21","nodeType":"FunctionDefinition","parameters":{"id":6464,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6463,"mutability":"mutable","name":"value","nameLocation":"18259:5:21","nodeType":"VariableDeclaration","scope":6486,"src":"18252:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6462,"name":"int256","nodeType":"ElementaryTypeName","src":"18252:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18251:14:21"},"returnParameters":{"id":6467,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6466,"mutability":"mutable","name":"downcasted","nameLocation":"18296:10:21","nodeType":"VariableDeclaration","scope":6486,"src":"18289:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"},"typeName":{"id":6465,"name":"int240","nodeType":"ElementaryTypeName","src":"18289:6:21","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"visibility":"internal"}],"src":"18288:19:21"},"scope":7281,"src":"18234:224:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6511,"nodeType":"Block","src":"18855:150:21","statements":[{"expression":{"id":6499,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6494,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6492,"src":"18865:10:21","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6497,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6489,"src":"18885:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6496,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18878:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int232_$","typeString":"type(int232)"},"typeName":{"id":6495,"name":"int232","nodeType":"ElementaryTypeName","src":"18878:6:21","typeDescriptions":{}}},"id":6498,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18878:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"src":"18865:26:21","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"id":6500,"nodeType":"ExpressionStatement","src":"18865:26:21"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6501,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6492,"src":"18905:10:21","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6502,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6489,"src":"18919:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18905:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6510,"nodeType":"IfStatement","src":"18901:98:21","trueBody":{"id":6509,"nodeType":"Block","src":"18926:73:21","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":6505,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18977:3:21","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":6506,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6489,"src":"18982:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6504,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5538,"src":"18947:29:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6507,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18947:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6508,"nodeType":"RevertStatement","src":"18940:48:21"}]}}]},"documentation":{"id":6487,"nodeType":"StructuredDocumentation","src":"18464:312:21","text":" @dev Returns the downcasted int232 from int256, reverting on\n overflow (when the input is less than smallest int232 or\n greater than largest int232).\n Counterpart to Solidity's `int232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":6512,"implemented":true,"kind":"function","modifiers":[],"name":"toInt232","nameLocation":"18790:8:21","nodeType":"FunctionDefinition","parameters":{"id":6490,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6489,"mutability":"mutable","name":"value","nameLocation":"18806:5:21","nodeType":"VariableDeclaration","scope":6512,"src":"18799:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6488,"name":"int256","nodeType":"ElementaryTypeName","src":"18799:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18798:14:21"},"returnParameters":{"id":6493,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6492,"mutability":"mutable","name":"downcasted","nameLocation":"18843:10:21","nodeType":"VariableDeclaration","scope":6512,"src":"18836:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"},"typeName":{"id":6491,"name":"int232","nodeType":"ElementaryTypeName","src":"18836:6:21","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"visibility":"internal"}],"src":"18835:19:21"},"scope":7281,"src":"18781:224:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6537,"nodeType":"Block","src":"19402:150:21","statements":[{"expression":{"id":6525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6520,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6518,"src":"19412:10:21","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6523,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6515,"src":"19432:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6522,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19425:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int224_$","typeString":"type(int224)"},"typeName":{"id":6521,"name":"int224","nodeType":"ElementaryTypeName","src":"19425:6:21","typeDescriptions":{}}},"id":6524,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19425:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"src":"19412:26:21","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"id":6526,"nodeType":"ExpressionStatement","src":"19412:26:21"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6527,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6518,"src":"19452:10:21","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6528,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6515,"src":"19466:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19452:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6536,"nodeType":"IfStatement","src":"19448:98:21","trueBody":{"id":6535,"nodeType":"Block","src":"19473:73:21","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":6531,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19524:3:21","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":6532,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6515,"src":"19529:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6530,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5538,"src":"19494:29:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6533,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19494:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6534,"nodeType":"RevertStatement","src":"19487:48:21"}]}}]},"documentation":{"id":6513,"nodeType":"StructuredDocumentation","src":"19011:312:21","text":" @dev Returns the downcasted int224 from int256, reverting on\n overflow (when the input is less than smallest int224 or\n greater than largest int224).\n Counterpart to Solidity's `int224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":6538,"implemented":true,"kind":"function","modifiers":[],"name":"toInt224","nameLocation":"19337:8:21","nodeType":"FunctionDefinition","parameters":{"id":6516,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6515,"mutability":"mutable","name":"value","nameLocation":"19353:5:21","nodeType":"VariableDeclaration","scope":6538,"src":"19346:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6514,"name":"int256","nodeType":"ElementaryTypeName","src":"19346:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19345:14:21"},"returnParameters":{"id":6519,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6518,"mutability":"mutable","name":"downcasted","nameLocation":"19390:10:21","nodeType":"VariableDeclaration","scope":6538,"src":"19383:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"},"typeName":{"id":6517,"name":"int224","nodeType":"ElementaryTypeName","src":"19383:6:21","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"visibility":"internal"}],"src":"19382:19:21"},"scope":7281,"src":"19328:224:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6563,"nodeType":"Block","src":"19949:150:21","statements":[{"expression":{"id":6551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6546,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6544,"src":"19959:10:21","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6549,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6541,"src":"19979:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6548,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19972:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int216_$","typeString":"type(int216)"},"typeName":{"id":6547,"name":"int216","nodeType":"ElementaryTypeName","src":"19972:6:21","typeDescriptions":{}}},"id":6550,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19972:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"src":"19959:26:21","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"id":6552,"nodeType":"ExpressionStatement","src":"19959:26:21"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6553,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6544,"src":"19999:10:21","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6554,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6541,"src":"20013:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19999:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6562,"nodeType":"IfStatement","src":"19995:98:21","trueBody":{"id":6561,"nodeType":"Block","src":"20020:73:21","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":6557,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20071:3:21","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":6558,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6541,"src":"20076:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6556,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5538,"src":"20041:29:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6559,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20041:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6560,"nodeType":"RevertStatement","src":"20034:48:21"}]}}]},"documentation":{"id":6539,"nodeType":"StructuredDocumentation","src":"19558:312:21","text":" @dev Returns the downcasted int216 from int256, reverting on\n overflow (when the input is less than smallest int216 or\n greater than largest int216).\n Counterpart to Solidity's `int216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":6564,"implemented":true,"kind":"function","modifiers":[],"name":"toInt216","nameLocation":"19884:8:21","nodeType":"FunctionDefinition","parameters":{"id":6542,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6541,"mutability":"mutable","name":"value","nameLocation":"19900:5:21","nodeType":"VariableDeclaration","scope":6564,"src":"19893:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6540,"name":"int256","nodeType":"ElementaryTypeName","src":"19893:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19892:14:21"},"returnParameters":{"id":6545,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6544,"mutability":"mutable","name":"downcasted","nameLocation":"19937:10:21","nodeType":"VariableDeclaration","scope":6564,"src":"19930:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"},"typeName":{"id":6543,"name":"int216","nodeType":"ElementaryTypeName","src":"19930:6:21","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"visibility":"internal"}],"src":"19929:19:21"},"scope":7281,"src":"19875:224:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6589,"nodeType":"Block","src":"20496:150:21","statements":[{"expression":{"id":6577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6572,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6570,"src":"20506:10:21","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6575,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6567,"src":"20526:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6574,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20519:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int208_$","typeString":"type(int208)"},"typeName":{"id":6573,"name":"int208","nodeType":"ElementaryTypeName","src":"20519:6:21","typeDescriptions":{}}},"id":6576,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20519:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"src":"20506:26:21","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"id":6578,"nodeType":"ExpressionStatement","src":"20506:26:21"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6579,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6570,"src":"20546:10:21","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6580,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6567,"src":"20560:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20546:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6588,"nodeType":"IfStatement","src":"20542:98:21","trueBody":{"id":6587,"nodeType":"Block","src":"20567:73:21","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":6583,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20618:3:21","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":6584,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6567,"src":"20623:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6582,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5538,"src":"20588:29:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6585,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20588:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6586,"nodeType":"RevertStatement","src":"20581:48:21"}]}}]},"documentation":{"id":6565,"nodeType":"StructuredDocumentation","src":"20105:312:21","text":" @dev Returns the downcasted int208 from int256, reverting on\n overflow (when the input is less than smallest int208 or\n greater than largest int208).\n Counterpart to Solidity's `int208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":6590,"implemented":true,"kind":"function","modifiers":[],"name":"toInt208","nameLocation":"20431:8:21","nodeType":"FunctionDefinition","parameters":{"id":6568,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6567,"mutability":"mutable","name":"value","nameLocation":"20447:5:21","nodeType":"VariableDeclaration","scope":6590,"src":"20440:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6566,"name":"int256","nodeType":"ElementaryTypeName","src":"20440:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20439:14:21"},"returnParameters":{"id":6571,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6570,"mutability":"mutable","name":"downcasted","nameLocation":"20484:10:21","nodeType":"VariableDeclaration","scope":6590,"src":"20477:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"},"typeName":{"id":6569,"name":"int208","nodeType":"ElementaryTypeName","src":"20477:6:21","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"visibility":"internal"}],"src":"20476:19:21"},"scope":7281,"src":"20422:224:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6615,"nodeType":"Block","src":"21043:150:21","statements":[{"expression":{"id":6603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6598,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6596,"src":"21053:10:21","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6601,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6593,"src":"21073:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6600,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21066:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int200_$","typeString":"type(int200)"},"typeName":{"id":6599,"name":"int200","nodeType":"ElementaryTypeName","src":"21066:6:21","typeDescriptions":{}}},"id":6602,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21066:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"src":"21053:26:21","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"id":6604,"nodeType":"ExpressionStatement","src":"21053:26:21"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6605,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6596,"src":"21093:10:21","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6606,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6593,"src":"21107:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21093:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6614,"nodeType":"IfStatement","src":"21089:98:21","trueBody":{"id":6613,"nodeType":"Block","src":"21114:73:21","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":6609,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21165:3:21","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":6610,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6593,"src":"21170:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6608,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5538,"src":"21135:29:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6611,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21135:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6612,"nodeType":"RevertStatement","src":"21128:48:21"}]}}]},"documentation":{"id":6591,"nodeType":"StructuredDocumentation","src":"20652:312:21","text":" @dev Returns the downcasted int200 from int256, reverting on\n overflow (when the input is less than smallest int200 or\n greater than largest int200).\n Counterpart to Solidity's `int200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":6616,"implemented":true,"kind":"function","modifiers":[],"name":"toInt200","nameLocation":"20978:8:21","nodeType":"FunctionDefinition","parameters":{"id":6594,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6593,"mutability":"mutable","name":"value","nameLocation":"20994:5:21","nodeType":"VariableDeclaration","scope":6616,"src":"20987:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6592,"name":"int256","nodeType":"ElementaryTypeName","src":"20987:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20986:14:21"},"returnParameters":{"id":6597,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6596,"mutability":"mutable","name":"downcasted","nameLocation":"21031:10:21","nodeType":"VariableDeclaration","scope":6616,"src":"21024:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"},"typeName":{"id":6595,"name":"int200","nodeType":"ElementaryTypeName","src":"21024:6:21","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"visibility":"internal"}],"src":"21023:19:21"},"scope":7281,"src":"20969:224:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6641,"nodeType":"Block","src":"21590:150:21","statements":[{"expression":{"id":6629,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6624,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6622,"src":"21600:10:21","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6627,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6619,"src":"21620:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6626,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21613:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int192_$","typeString":"type(int192)"},"typeName":{"id":6625,"name":"int192","nodeType":"ElementaryTypeName","src":"21613:6:21","typeDescriptions":{}}},"id":6628,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21613:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"src":"21600:26:21","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"id":6630,"nodeType":"ExpressionStatement","src":"21600:26:21"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6631,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6622,"src":"21640:10:21","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6632,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6619,"src":"21654:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21640:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6640,"nodeType":"IfStatement","src":"21636:98:21","trueBody":{"id":6639,"nodeType":"Block","src":"21661:73:21","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":6635,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21712:3:21","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":6636,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6619,"src":"21717:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6634,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5538,"src":"21682:29:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6637,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21682:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6638,"nodeType":"RevertStatement","src":"21675:48:21"}]}}]},"documentation":{"id":6617,"nodeType":"StructuredDocumentation","src":"21199:312:21","text":" @dev Returns the downcasted int192 from int256, reverting on\n overflow (when the input is less than smallest int192 or\n greater than largest int192).\n Counterpart to Solidity's `int192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":6642,"implemented":true,"kind":"function","modifiers":[],"name":"toInt192","nameLocation":"21525:8:21","nodeType":"FunctionDefinition","parameters":{"id":6620,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6619,"mutability":"mutable","name":"value","nameLocation":"21541:5:21","nodeType":"VariableDeclaration","scope":6642,"src":"21534:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6618,"name":"int256","nodeType":"ElementaryTypeName","src":"21534:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21533:14:21"},"returnParameters":{"id":6623,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6622,"mutability":"mutable","name":"downcasted","nameLocation":"21578:10:21","nodeType":"VariableDeclaration","scope":6642,"src":"21571:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"},"typeName":{"id":6621,"name":"int192","nodeType":"ElementaryTypeName","src":"21571:6:21","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"visibility":"internal"}],"src":"21570:19:21"},"scope":7281,"src":"21516:224:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6667,"nodeType":"Block","src":"22137:150:21","statements":[{"expression":{"id":6655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6650,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6648,"src":"22147:10:21","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6653,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6645,"src":"22167:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6652,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22160:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int184_$","typeString":"type(int184)"},"typeName":{"id":6651,"name":"int184","nodeType":"ElementaryTypeName","src":"22160:6:21","typeDescriptions":{}}},"id":6654,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22160:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"src":"22147:26:21","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"id":6656,"nodeType":"ExpressionStatement","src":"22147:26:21"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6657,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6648,"src":"22187:10:21","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6658,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6645,"src":"22201:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22187:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6666,"nodeType":"IfStatement","src":"22183:98:21","trueBody":{"id":6665,"nodeType":"Block","src":"22208:73:21","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":6661,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22259:3:21","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":6662,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6645,"src":"22264:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6660,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5538,"src":"22229:29:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6663,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22229:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6664,"nodeType":"RevertStatement","src":"22222:48:21"}]}}]},"documentation":{"id":6643,"nodeType":"StructuredDocumentation","src":"21746:312:21","text":" @dev Returns the downcasted int184 from int256, reverting on\n overflow (when the input is less than smallest int184 or\n greater than largest int184).\n Counterpart to Solidity's `int184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":6668,"implemented":true,"kind":"function","modifiers":[],"name":"toInt184","nameLocation":"22072:8:21","nodeType":"FunctionDefinition","parameters":{"id":6646,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6645,"mutability":"mutable","name":"value","nameLocation":"22088:5:21","nodeType":"VariableDeclaration","scope":6668,"src":"22081:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6644,"name":"int256","nodeType":"ElementaryTypeName","src":"22081:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22080:14:21"},"returnParameters":{"id":6649,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6648,"mutability":"mutable","name":"downcasted","nameLocation":"22125:10:21","nodeType":"VariableDeclaration","scope":6668,"src":"22118:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"},"typeName":{"id":6647,"name":"int184","nodeType":"ElementaryTypeName","src":"22118:6:21","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"visibility":"internal"}],"src":"22117:19:21"},"scope":7281,"src":"22063:224:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6693,"nodeType":"Block","src":"22684:150:21","statements":[{"expression":{"id":6681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6676,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6674,"src":"22694:10:21","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6679,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6671,"src":"22714:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6678,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22707:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int176_$","typeString":"type(int176)"},"typeName":{"id":6677,"name":"int176","nodeType":"ElementaryTypeName","src":"22707:6:21","typeDescriptions":{}}},"id":6680,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22707:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"src":"22694:26:21","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"id":6682,"nodeType":"ExpressionStatement","src":"22694:26:21"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6683,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6674,"src":"22734:10:21","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6684,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6671,"src":"22748:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22734:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6692,"nodeType":"IfStatement","src":"22730:98:21","trueBody":{"id":6691,"nodeType":"Block","src":"22755:73:21","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":6687,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22806:3:21","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":6688,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6671,"src":"22811:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6686,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5538,"src":"22776:29:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6689,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22776:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6690,"nodeType":"RevertStatement","src":"22769:48:21"}]}}]},"documentation":{"id":6669,"nodeType":"StructuredDocumentation","src":"22293:312:21","text":" @dev Returns the downcasted int176 from int256, reverting on\n overflow (when the input is less than smallest int176 or\n greater than largest int176).\n Counterpart to Solidity's `int176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":6694,"implemented":true,"kind":"function","modifiers":[],"name":"toInt176","nameLocation":"22619:8:21","nodeType":"FunctionDefinition","parameters":{"id":6672,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6671,"mutability":"mutable","name":"value","nameLocation":"22635:5:21","nodeType":"VariableDeclaration","scope":6694,"src":"22628:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6670,"name":"int256","nodeType":"ElementaryTypeName","src":"22628:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22627:14:21"},"returnParameters":{"id":6675,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6674,"mutability":"mutable","name":"downcasted","nameLocation":"22672:10:21","nodeType":"VariableDeclaration","scope":6694,"src":"22665:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"},"typeName":{"id":6673,"name":"int176","nodeType":"ElementaryTypeName","src":"22665:6:21","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"visibility":"internal"}],"src":"22664:19:21"},"scope":7281,"src":"22610:224:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6719,"nodeType":"Block","src":"23231:150:21","statements":[{"expression":{"id":6707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6702,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6700,"src":"23241:10:21","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6705,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6697,"src":"23261:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6704,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23254:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int168_$","typeString":"type(int168)"},"typeName":{"id":6703,"name":"int168","nodeType":"ElementaryTypeName","src":"23254:6:21","typeDescriptions":{}}},"id":6706,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23254:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"src":"23241:26:21","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"id":6708,"nodeType":"ExpressionStatement","src":"23241:26:21"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6709,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6700,"src":"23281:10:21","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6710,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6697,"src":"23295:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23281:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6718,"nodeType":"IfStatement","src":"23277:98:21","trueBody":{"id":6717,"nodeType":"Block","src":"23302:73:21","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":6713,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23353:3:21","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":6714,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6697,"src":"23358:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6712,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5538,"src":"23323:29:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6715,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23323:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6716,"nodeType":"RevertStatement","src":"23316:48:21"}]}}]},"documentation":{"id":6695,"nodeType":"StructuredDocumentation","src":"22840:312:21","text":" @dev Returns the downcasted int168 from int256, reverting on\n overflow (when the input is less than smallest int168 or\n greater than largest int168).\n Counterpart to Solidity's `int168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":6720,"implemented":true,"kind":"function","modifiers":[],"name":"toInt168","nameLocation":"23166:8:21","nodeType":"FunctionDefinition","parameters":{"id":6698,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6697,"mutability":"mutable","name":"value","nameLocation":"23182:5:21","nodeType":"VariableDeclaration","scope":6720,"src":"23175:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6696,"name":"int256","nodeType":"ElementaryTypeName","src":"23175:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23174:14:21"},"returnParameters":{"id":6701,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6700,"mutability":"mutable","name":"downcasted","nameLocation":"23219:10:21","nodeType":"VariableDeclaration","scope":6720,"src":"23212:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"},"typeName":{"id":6699,"name":"int168","nodeType":"ElementaryTypeName","src":"23212:6:21","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"visibility":"internal"}],"src":"23211:19:21"},"scope":7281,"src":"23157:224:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6745,"nodeType":"Block","src":"23778:150:21","statements":[{"expression":{"id":6733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6728,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6726,"src":"23788:10:21","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6731,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6723,"src":"23808:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6730,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23801:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int160_$","typeString":"type(int160)"},"typeName":{"id":6729,"name":"int160","nodeType":"ElementaryTypeName","src":"23801:6:21","typeDescriptions":{}}},"id":6732,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23801:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"src":"23788:26:21","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"id":6734,"nodeType":"ExpressionStatement","src":"23788:26:21"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6735,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6726,"src":"23828:10:21","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6736,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6723,"src":"23842:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23828:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6744,"nodeType":"IfStatement","src":"23824:98:21","trueBody":{"id":6743,"nodeType":"Block","src":"23849:73:21","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":6739,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23900:3:21","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":6740,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6723,"src":"23905:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6738,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5538,"src":"23870:29:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6741,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23870:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6742,"nodeType":"RevertStatement","src":"23863:48:21"}]}}]},"documentation":{"id":6721,"nodeType":"StructuredDocumentation","src":"23387:312:21","text":" @dev Returns the downcasted int160 from int256, reverting on\n overflow (when the input is less than smallest int160 or\n greater than largest int160).\n Counterpart to Solidity's `int160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":6746,"implemented":true,"kind":"function","modifiers":[],"name":"toInt160","nameLocation":"23713:8:21","nodeType":"FunctionDefinition","parameters":{"id":6724,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6723,"mutability":"mutable","name":"value","nameLocation":"23729:5:21","nodeType":"VariableDeclaration","scope":6746,"src":"23722:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6722,"name":"int256","nodeType":"ElementaryTypeName","src":"23722:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23721:14:21"},"returnParameters":{"id":6727,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6726,"mutability":"mutable","name":"downcasted","nameLocation":"23766:10:21","nodeType":"VariableDeclaration","scope":6746,"src":"23759:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"},"typeName":{"id":6725,"name":"int160","nodeType":"ElementaryTypeName","src":"23759:6:21","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"visibility":"internal"}],"src":"23758:19:21"},"scope":7281,"src":"23704:224:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6771,"nodeType":"Block","src":"24325:150:21","statements":[{"expression":{"id":6759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6754,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6752,"src":"24335:10:21","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6757,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6749,"src":"24355:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6756,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24348:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int152_$","typeString":"type(int152)"},"typeName":{"id":6755,"name":"int152","nodeType":"ElementaryTypeName","src":"24348:6:21","typeDescriptions":{}}},"id":6758,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24348:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"src":"24335:26:21","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"id":6760,"nodeType":"ExpressionStatement","src":"24335:26:21"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6761,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6752,"src":"24375:10:21","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6762,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6749,"src":"24389:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24375:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6770,"nodeType":"IfStatement","src":"24371:98:21","trueBody":{"id":6769,"nodeType":"Block","src":"24396:73:21","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":6765,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24447:3:21","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":6766,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6749,"src":"24452:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6764,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5538,"src":"24417:29:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6767,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24417:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6768,"nodeType":"RevertStatement","src":"24410:48:21"}]}}]},"documentation":{"id":6747,"nodeType":"StructuredDocumentation","src":"23934:312:21","text":" @dev Returns the downcasted int152 from int256, reverting on\n overflow (when the input is less than smallest int152 or\n greater than largest int152).\n Counterpart to Solidity's `int152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":6772,"implemented":true,"kind":"function","modifiers":[],"name":"toInt152","nameLocation":"24260:8:21","nodeType":"FunctionDefinition","parameters":{"id":6750,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6749,"mutability":"mutable","name":"value","nameLocation":"24276:5:21","nodeType":"VariableDeclaration","scope":6772,"src":"24269:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6748,"name":"int256","nodeType":"ElementaryTypeName","src":"24269:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24268:14:21"},"returnParameters":{"id":6753,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6752,"mutability":"mutable","name":"downcasted","nameLocation":"24313:10:21","nodeType":"VariableDeclaration","scope":6772,"src":"24306:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"},"typeName":{"id":6751,"name":"int152","nodeType":"ElementaryTypeName","src":"24306:6:21","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"visibility":"internal"}],"src":"24305:19:21"},"scope":7281,"src":"24251:224:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6797,"nodeType":"Block","src":"24872:150:21","statements":[{"expression":{"id":6785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6780,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6778,"src":"24882:10:21","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6783,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6775,"src":"24902:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6782,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24895:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int144_$","typeString":"type(int144)"},"typeName":{"id":6781,"name":"int144","nodeType":"ElementaryTypeName","src":"24895:6:21","typeDescriptions":{}}},"id":6784,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24895:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"src":"24882:26:21","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"id":6786,"nodeType":"ExpressionStatement","src":"24882:26:21"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6787,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6778,"src":"24922:10:21","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6788,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6775,"src":"24936:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24922:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6796,"nodeType":"IfStatement","src":"24918:98:21","trueBody":{"id":6795,"nodeType":"Block","src":"24943:73:21","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":6791,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24994:3:21","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":6792,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6775,"src":"24999:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6790,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5538,"src":"24964:29:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6793,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24964:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6794,"nodeType":"RevertStatement","src":"24957:48:21"}]}}]},"documentation":{"id":6773,"nodeType":"StructuredDocumentation","src":"24481:312:21","text":" @dev Returns the downcasted int144 from int256, reverting on\n overflow (when the input is less than smallest int144 or\n greater than largest int144).\n Counterpart to Solidity's `int144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":6798,"implemented":true,"kind":"function","modifiers":[],"name":"toInt144","nameLocation":"24807:8:21","nodeType":"FunctionDefinition","parameters":{"id":6776,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6775,"mutability":"mutable","name":"value","nameLocation":"24823:5:21","nodeType":"VariableDeclaration","scope":6798,"src":"24816:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6774,"name":"int256","nodeType":"ElementaryTypeName","src":"24816:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24815:14:21"},"returnParameters":{"id":6779,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6778,"mutability":"mutable","name":"downcasted","nameLocation":"24860:10:21","nodeType":"VariableDeclaration","scope":6798,"src":"24853:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"},"typeName":{"id":6777,"name":"int144","nodeType":"ElementaryTypeName","src":"24853:6:21","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"visibility":"internal"}],"src":"24852:19:21"},"scope":7281,"src":"24798:224:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6823,"nodeType":"Block","src":"25419:150:21","statements":[{"expression":{"id":6811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6806,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6804,"src":"25429:10:21","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6809,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6801,"src":"25449:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6808,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25442:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int136_$","typeString":"type(int136)"},"typeName":{"id":6807,"name":"int136","nodeType":"ElementaryTypeName","src":"25442:6:21","typeDescriptions":{}}},"id":6810,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25442:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"src":"25429:26:21","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"id":6812,"nodeType":"ExpressionStatement","src":"25429:26:21"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6815,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6813,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6804,"src":"25469:10:21","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6814,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6801,"src":"25483:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"25469:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6822,"nodeType":"IfStatement","src":"25465:98:21","trueBody":{"id":6821,"nodeType":"Block","src":"25490:73:21","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":6817,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25541:3:21","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":6818,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6801,"src":"25546:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6816,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5538,"src":"25511:29:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6819,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25511:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6820,"nodeType":"RevertStatement","src":"25504:48:21"}]}}]},"documentation":{"id":6799,"nodeType":"StructuredDocumentation","src":"25028:312:21","text":" @dev Returns the downcasted int136 from int256, reverting on\n overflow (when the input is less than smallest int136 or\n greater than largest int136).\n Counterpart to Solidity's `int136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":6824,"implemented":true,"kind":"function","modifiers":[],"name":"toInt136","nameLocation":"25354:8:21","nodeType":"FunctionDefinition","parameters":{"id":6802,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6801,"mutability":"mutable","name":"value","nameLocation":"25370:5:21","nodeType":"VariableDeclaration","scope":6824,"src":"25363:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6800,"name":"int256","nodeType":"ElementaryTypeName","src":"25363:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25362:14:21"},"returnParameters":{"id":6805,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6804,"mutability":"mutable","name":"downcasted","nameLocation":"25407:10:21","nodeType":"VariableDeclaration","scope":6824,"src":"25400:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"},"typeName":{"id":6803,"name":"int136","nodeType":"ElementaryTypeName","src":"25400:6:21","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"visibility":"internal"}],"src":"25399:19:21"},"scope":7281,"src":"25345:224:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6849,"nodeType":"Block","src":"25966:150:21","statements":[{"expression":{"id":6837,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6832,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6830,"src":"25976:10:21","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6835,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6827,"src":"25996:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6834,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25989:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":6833,"name":"int128","nodeType":"ElementaryTypeName","src":"25989:6:21","typeDescriptions":{}}},"id":6836,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25989:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"25976:26:21","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":6838,"nodeType":"ExpressionStatement","src":"25976:26:21"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6841,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6839,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6830,"src":"26016:10:21","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6840,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6827,"src":"26030:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26016:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6848,"nodeType":"IfStatement","src":"26012:98:21","trueBody":{"id":6847,"nodeType":"Block","src":"26037:73:21","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":6843,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26088:3:21","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":6844,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6827,"src":"26093:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6842,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5538,"src":"26058:29:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6845,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26058:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6846,"nodeType":"RevertStatement","src":"26051:48:21"}]}}]},"documentation":{"id":6825,"nodeType":"StructuredDocumentation","src":"25575:312:21","text":" @dev Returns the downcasted int128 from int256, reverting on\n overflow (when the input is less than smallest int128 or\n greater than largest int128).\n Counterpart to Solidity's `int128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":6850,"implemented":true,"kind":"function","modifiers":[],"name":"toInt128","nameLocation":"25901:8:21","nodeType":"FunctionDefinition","parameters":{"id":6828,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6827,"mutability":"mutable","name":"value","nameLocation":"25917:5:21","nodeType":"VariableDeclaration","scope":6850,"src":"25910:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6826,"name":"int256","nodeType":"ElementaryTypeName","src":"25910:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25909:14:21"},"returnParameters":{"id":6831,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6830,"mutability":"mutable","name":"downcasted","nameLocation":"25954:10:21","nodeType":"VariableDeclaration","scope":6850,"src":"25947:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":6829,"name":"int128","nodeType":"ElementaryTypeName","src":"25947:6:21","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"25946:19:21"},"scope":7281,"src":"25892:224:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6875,"nodeType":"Block","src":"26513:150:21","statements":[{"expression":{"id":6863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6858,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6856,"src":"26523:10:21","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6861,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6853,"src":"26543:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6860,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26536:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int120_$","typeString":"type(int120)"},"typeName":{"id":6859,"name":"int120","nodeType":"ElementaryTypeName","src":"26536:6:21","typeDescriptions":{}}},"id":6862,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26536:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"src":"26523:26:21","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"id":6864,"nodeType":"ExpressionStatement","src":"26523:26:21"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6865,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6856,"src":"26563:10:21","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6866,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6853,"src":"26577:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26563:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6874,"nodeType":"IfStatement","src":"26559:98:21","trueBody":{"id":6873,"nodeType":"Block","src":"26584:73:21","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":6869,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26635:3:21","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":6870,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6853,"src":"26640:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6868,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5538,"src":"26605:29:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6871,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26605:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6872,"nodeType":"RevertStatement","src":"26598:48:21"}]}}]},"documentation":{"id":6851,"nodeType":"StructuredDocumentation","src":"26122:312:21","text":" @dev Returns the downcasted int120 from int256, reverting on\n overflow (when the input is less than smallest int120 or\n greater than largest int120).\n Counterpart to Solidity's `int120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":6876,"implemented":true,"kind":"function","modifiers":[],"name":"toInt120","nameLocation":"26448:8:21","nodeType":"FunctionDefinition","parameters":{"id":6854,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6853,"mutability":"mutable","name":"value","nameLocation":"26464:5:21","nodeType":"VariableDeclaration","scope":6876,"src":"26457:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6852,"name":"int256","nodeType":"ElementaryTypeName","src":"26457:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26456:14:21"},"returnParameters":{"id":6857,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6856,"mutability":"mutable","name":"downcasted","nameLocation":"26501:10:21","nodeType":"VariableDeclaration","scope":6876,"src":"26494:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"},"typeName":{"id":6855,"name":"int120","nodeType":"ElementaryTypeName","src":"26494:6:21","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"visibility":"internal"}],"src":"26493:19:21"},"scope":7281,"src":"26439:224:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6901,"nodeType":"Block","src":"27060:150:21","statements":[{"expression":{"id":6889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6884,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6882,"src":"27070:10:21","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6887,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6879,"src":"27090:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6886,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27083:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int112_$","typeString":"type(int112)"},"typeName":{"id":6885,"name":"int112","nodeType":"ElementaryTypeName","src":"27083:6:21","typeDescriptions":{}}},"id":6888,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27083:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"src":"27070:26:21","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"id":6890,"nodeType":"ExpressionStatement","src":"27070:26:21"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6891,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6882,"src":"27110:10:21","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6892,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6879,"src":"27124:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27110:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6900,"nodeType":"IfStatement","src":"27106:98:21","trueBody":{"id":6899,"nodeType":"Block","src":"27131:73:21","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":6895,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27182:3:21","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":6896,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6879,"src":"27187:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6894,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5538,"src":"27152:29:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6897,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27152:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6898,"nodeType":"RevertStatement","src":"27145:48:21"}]}}]},"documentation":{"id":6877,"nodeType":"StructuredDocumentation","src":"26669:312:21","text":" @dev Returns the downcasted int112 from int256, reverting on\n overflow (when the input is less than smallest int112 or\n greater than largest int112).\n Counterpart to Solidity's `int112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":6902,"implemented":true,"kind":"function","modifiers":[],"name":"toInt112","nameLocation":"26995:8:21","nodeType":"FunctionDefinition","parameters":{"id":6880,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6879,"mutability":"mutable","name":"value","nameLocation":"27011:5:21","nodeType":"VariableDeclaration","scope":6902,"src":"27004:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6878,"name":"int256","nodeType":"ElementaryTypeName","src":"27004:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27003:14:21"},"returnParameters":{"id":6883,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6882,"mutability":"mutable","name":"downcasted","nameLocation":"27048:10:21","nodeType":"VariableDeclaration","scope":6902,"src":"27041:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"},"typeName":{"id":6881,"name":"int112","nodeType":"ElementaryTypeName","src":"27041:6:21","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"visibility":"internal"}],"src":"27040:19:21"},"scope":7281,"src":"26986:224:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6927,"nodeType":"Block","src":"27607:150:21","statements":[{"expression":{"id":6915,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6910,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6908,"src":"27617:10:21","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6913,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6905,"src":"27637:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6912,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27630:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int104_$","typeString":"type(int104)"},"typeName":{"id":6911,"name":"int104","nodeType":"ElementaryTypeName","src":"27630:6:21","typeDescriptions":{}}},"id":6914,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27630:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"src":"27617:26:21","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"id":6916,"nodeType":"ExpressionStatement","src":"27617:26:21"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6917,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6908,"src":"27657:10:21","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6918,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6905,"src":"27671:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27657:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6926,"nodeType":"IfStatement","src":"27653:98:21","trueBody":{"id":6925,"nodeType":"Block","src":"27678:73:21","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":6921,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27729:3:21","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":6922,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6905,"src":"27734:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6920,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5538,"src":"27699:29:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6923,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27699:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6924,"nodeType":"RevertStatement","src":"27692:48:21"}]}}]},"documentation":{"id":6903,"nodeType":"StructuredDocumentation","src":"27216:312:21","text":" @dev Returns the downcasted int104 from int256, reverting on\n overflow (when the input is less than smallest int104 or\n greater than largest int104).\n Counterpart to Solidity's `int104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":6928,"implemented":true,"kind":"function","modifiers":[],"name":"toInt104","nameLocation":"27542:8:21","nodeType":"FunctionDefinition","parameters":{"id":6906,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6905,"mutability":"mutable","name":"value","nameLocation":"27558:5:21","nodeType":"VariableDeclaration","scope":6928,"src":"27551:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6904,"name":"int256","nodeType":"ElementaryTypeName","src":"27551:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27550:14:21"},"returnParameters":{"id":6909,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6908,"mutability":"mutable","name":"downcasted","nameLocation":"27595:10:21","nodeType":"VariableDeclaration","scope":6928,"src":"27588:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"},"typeName":{"id":6907,"name":"int104","nodeType":"ElementaryTypeName","src":"27588:6:21","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"visibility":"internal"}],"src":"27587:19:21"},"scope":7281,"src":"27533:224:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6953,"nodeType":"Block","src":"28147:148:21","statements":[{"expression":{"id":6941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6936,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6934,"src":"28157:10:21","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6939,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6931,"src":"28176:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6938,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28170:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int96_$","typeString":"type(int96)"},"typeName":{"id":6937,"name":"int96","nodeType":"ElementaryTypeName","src":"28170:5:21","typeDescriptions":{}}},"id":6940,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28170:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"src":"28157:25:21","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"id":6942,"nodeType":"ExpressionStatement","src":"28157:25:21"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6943,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6934,"src":"28196:10:21","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6944,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6931,"src":"28210:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28196:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6952,"nodeType":"IfStatement","src":"28192:97:21","trueBody":{"id":6951,"nodeType":"Block","src":"28217:72:21","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":6947,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28268:2:21","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":6948,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6931,"src":"28272:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6946,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5538,"src":"28238:29:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6949,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28238:40:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6950,"nodeType":"RevertStatement","src":"28231:47:21"}]}}]},"documentation":{"id":6929,"nodeType":"StructuredDocumentation","src":"27763:307:21","text":" @dev Returns the downcasted int96 from int256, reverting on\n overflow (when the input is less than smallest int96 or\n greater than largest int96).\n Counterpart to Solidity's `int96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":6954,"implemented":true,"kind":"function","modifiers":[],"name":"toInt96","nameLocation":"28084:7:21","nodeType":"FunctionDefinition","parameters":{"id":6932,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6931,"mutability":"mutable","name":"value","nameLocation":"28099:5:21","nodeType":"VariableDeclaration","scope":6954,"src":"28092:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6930,"name":"int256","nodeType":"ElementaryTypeName","src":"28092:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28091:14:21"},"returnParameters":{"id":6935,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6934,"mutability":"mutable","name":"downcasted","nameLocation":"28135:10:21","nodeType":"VariableDeclaration","scope":6954,"src":"28129:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"},"typeName":{"id":6933,"name":"int96","nodeType":"ElementaryTypeName","src":"28129:5:21","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"visibility":"internal"}],"src":"28128:18:21"},"scope":7281,"src":"28075:220:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6979,"nodeType":"Block","src":"28685:148:21","statements":[{"expression":{"id":6967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6962,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6960,"src":"28695:10:21","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6965,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6957,"src":"28714:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6964,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28708:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int88_$","typeString":"type(int88)"},"typeName":{"id":6963,"name":"int88","nodeType":"ElementaryTypeName","src":"28708:5:21","typeDescriptions":{}}},"id":6966,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28708:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"src":"28695:25:21","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"id":6968,"nodeType":"ExpressionStatement","src":"28695:25:21"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6969,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6960,"src":"28734:10:21","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6970,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6957,"src":"28748:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28734:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6978,"nodeType":"IfStatement","src":"28730:97:21","trueBody":{"id":6977,"nodeType":"Block","src":"28755:72:21","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":6973,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28806:2:21","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":6974,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6957,"src":"28810:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6972,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5538,"src":"28776:29:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6975,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28776:40:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6976,"nodeType":"RevertStatement","src":"28769:47:21"}]}}]},"documentation":{"id":6955,"nodeType":"StructuredDocumentation","src":"28301:307:21","text":" @dev Returns the downcasted int88 from int256, reverting on\n overflow (when the input is less than smallest int88 or\n greater than largest int88).\n Counterpart to Solidity's `int88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":6980,"implemented":true,"kind":"function","modifiers":[],"name":"toInt88","nameLocation":"28622:7:21","nodeType":"FunctionDefinition","parameters":{"id":6958,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6957,"mutability":"mutable","name":"value","nameLocation":"28637:5:21","nodeType":"VariableDeclaration","scope":6980,"src":"28630:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6956,"name":"int256","nodeType":"ElementaryTypeName","src":"28630:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28629:14:21"},"returnParameters":{"id":6961,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6960,"mutability":"mutable","name":"downcasted","nameLocation":"28673:10:21","nodeType":"VariableDeclaration","scope":6980,"src":"28667:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"},"typeName":{"id":6959,"name":"int88","nodeType":"ElementaryTypeName","src":"28667:5:21","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"visibility":"internal"}],"src":"28666:18:21"},"scope":7281,"src":"28613:220:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7005,"nodeType":"Block","src":"29223:148:21","statements":[{"expression":{"id":6993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6988,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6986,"src":"29233:10:21","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6991,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6983,"src":"29252:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6990,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29246:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int80_$","typeString":"type(int80)"},"typeName":{"id":6989,"name":"int80","nodeType":"ElementaryTypeName","src":"29246:5:21","typeDescriptions":{}}},"id":6992,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29246:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"src":"29233:25:21","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"id":6994,"nodeType":"ExpressionStatement","src":"29233:25:21"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6995,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6986,"src":"29272:10:21","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6996,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6983,"src":"29286:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29272:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7004,"nodeType":"IfStatement","src":"29268:97:21","trueBody":{"id":7003,"nodeType":"Block","src":"29293:72:21","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":6999,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29344:2:21","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":7000,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6983,"src":"29348:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6998,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5538,"src":"29314:29:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7001,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29314:40:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7002,"nodeType":"RevertStatement","src":"29307:47:21"}]}}]},"documentation":{"id":6981,"nodeType":"StructuredDocumentation","src":"28839:307:21","text":" @dev Returns the downcasted int80 from int256, reverting on\n overflow (when the input is less than smallest int80 or\n greater than largest int80).\n Counterpart to Solidity's `int80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":7006,"implemented":true,"kind":"function","modifiers":[],"name":"toInt80","nameLocation":"29160:7:21","nodeType":"FunctionDefinition","parameters":{"id":6984,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6983,"mutability":"mutable","name":"value","nameLocation":"29175:5:21","nodeType":"VariableDeclaration","scope":7006,"src":"29168:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6982,"name":"int256","nodeType":"ElementaryTypeName","src":"29168:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29167:14:21"},"returnParameters":{"id":6987,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6986,"mutability":"mutable","name":"downcasted","nameLocation":"29211:10:21","nodeType":"VariableDeclaration","scope":7006,"src":"29205:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"},"typeName":{"id":6985,"name":"int80","nodeType":"ElementaryTypeName","src":"29205:5:21","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"visibility":"internal"}],"src":"29204:18:21"},"scope":7281,"src":"29151:220:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7031,"nodeType":"Block","src":"29761:148:21","statements":[{"expression":{"id":7019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7014,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7012,"src":"29771:10:21","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7017,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7009,"src":"29790:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7016,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29784:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int72_$","typeString":"type(int72)"},"typeName":{"id":7015,"name":"int72","nodeType":"ElementaryTypeName","src":"29784:5:21","typeDescriptions":{}}},"id":7018,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29784:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"src":"29771:25:21","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"id":7020,"nodeType":"ExpressionStatement","src":"29771:25:21"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7021,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7012,"src":"29810:10:21","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7022,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7009,"src":"29824:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29810:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7030,"nodeType":"IfStatement","src":"29806:97:21","trueBody":{"id":7029,"nodeType":"Block","src":"29831:72:21","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":7025,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29882:2:21","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":7026,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7009,"src":"29886:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7024,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5538,"src":"29852:29:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7027,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29852:40:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7028,"nodeType":"RevertStatement","src":"29845:47:21"}]}}]},"documentation":{"id":7007,"nodeType":"StructuredDocumentation","src":"29377:307:21","text":" @dev Returns the downcasted int72 from int256, reverting on\n overflow (when the input is less than smallest int72 or\n greater than largest int72).\n Counterpart to Solidity's `int72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":7032,"implemented":true,"kind":"function","modifiers":[],"name":"toInt72","nameLocation":"29698:7:21","nodeType":"FunctionDefinition","parameters":{"id":7010,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7009,"mutability":"mutable","name":"value","nameLocation":"29713:5:21","nodeType":"VariableDeclaration","scope":7032,"src":"29706:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7008,"name":"int256","nodeType":"ElementaryTypeName","src":"29706:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29705:14:21"},"returnParameters":{"id":7013,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7012,"mutability":"mutable","name":"downcasted","nameLocation":"29749:10:21","nodeType":"VariableDeclaration","scope":7032,"src":"29743:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"},"typeName":{"id":7011,"name":"int72","nodeType":"ElementaryTypeName","src":"29743:5:21","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"visibility":"internal"}],"src":"29742:18:21"},"scope":7281,"src":"29689:220:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7057,"nodeType":"Block","src":"30299:148:21","statements":[{"expression":{"id":7045,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7040,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7038,"src":"30309:10:21","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7043,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7035,"src":"30328:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7042,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30322:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"},"typeName":{"id":7041,"name":"int64","nodeType":"ElementaryTypeName","src":"30322:5:21","typeDescriptions":{}}},"id":7044,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30322:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"src":"30309:25:21","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"id":7046,"nodeType":"ExpressionStatement","src":"30309:25:21"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7049,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7047,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7038,"src":"30348:10:21","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7048,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7035,"src":"30362:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30348:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7056,"nodeType":"IfStatement","src":"30344:97:21","trueBody":{"id":7055,"nodeType":"Block","src":"30369:72:21","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":7051,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30420:2:21","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":7052,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7035,"src":"30424:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7050,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5538,"src":"30390:29:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7053,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30390:40:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7054,"nodeType":"RevertStatement","src":"30383:47:21"}]}}]},"documentation":{"id":7033,"nodeType":"StructuredDocumentation","src":"29915:307:21","text":" @dev Returns the downcasted int64 from int256, reverting on\n overflow (when the input is less than smallest int64 or\n greater than largest int64).\n Counterpart to Solidity's `int64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":7058,"implemented":true,"kind":"function","modifiers":[],"name":"toInt64","nameLocation":"30236:7:21","nodeType":"FunctionDefinition","parameters":{"id":7036,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7035,"mutability":"mutable","name":"value","nameLocation":"30251:5:21","nodeType":"VariableDeclaration","scope":7058,"src":"30244:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7034,"name":"int256","nodeType":"ElementaryTypeName","src":"30244:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30243:14:21"},"returnParameters":{"id":7039,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7038,"mutability":"mutable","name":"downcasted","nameLocation":"30287:10:21","nodeType":"VariableDeclaration","scope":7058,"src":"30281:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":7037,"name":"int64","nodeType":"ElementaryTypeName","src":"30281:5:21","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"30280:18:21"},"scope":7281,"src":"30227:220:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7083,"nodeType":"Block","src":"30837:148:21","statements":[{"expression":{"id":7071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7066,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7064,"src":"30847:10:21","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7069,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7061,"src":"30866:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7068,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30860:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int56_$","typeString":"type(int56)"},"typeName":{"id":7067,"name":"int56","nodeType":"ElementaryTypeName","src":"30860:5:21","typeDescriptions":{}}},"id":7070,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30860:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"src":"30847:25:21","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"id":7072,"nodeType":"ExpressionStatement","src":"30847:25:21"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7073,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7064,"src":"30886:10:21","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7074,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7061,"src":"30900:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30886:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7082,"nodeType":"IfStatement","src":"30882:97:21","trueBody":{"id":7081,"nodeType":"Block","src":"30907:72:21","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":7077,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30958:2:21","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":7078,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7061,"src":"30962:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7076,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5538,"src":"30928:29:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7079,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30928:40:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7080,"nodeType":"RevertStatement","src":"30921:47:21"}]}}]},"documentation":{"id":7059,"nodeType":"StructuredDocumentation","src":"30453:307:21","text":" @dev Returns the downcasted int56 from int256, reverting on\n overflow (when the input is less than smallest int56 or\n greater than largest int56).\n Counterpart to Solidity's `int56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":7084,"implemented":true,"kind":"function","modifiers":[],"name":"toInt56","nameLocation":"30774:7:21","nodeType":"FunctionDefinition","parameters":{"id":7062,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7061,"mutability":"mutable","name":"value","nameLocation":"30789:5:21","nodeType":"VariableDeclaration","scope":7084,"src":"30782:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7060,"name":"int256","nodeType":"ElementaryTypeName","src":"30782:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30781:14:21"},"returnParameters":{"id":7065,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7064,"mutability":"mutable","name":"downcasted","nameLocation":"30825:10:21","nodeType":"VariableDeclaration","scope":7084,"src":"30819:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"},"typeName":{"id":7063,"name":"int56","nodeType":"ElementaryTypeName","src":"30819:5:21","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"visibility":"internal"}],"src":"30818:18:21"},"scope":7281,"src":"30765:220:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7109,"nodeType":"Block","src":"31375:148:21","statements":[{"expression":{"id":7097,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7092,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7090,"src":"31385:10:21","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7095,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7087,"src":"31404:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7094,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31398:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int48_$","typeString":"type(int48)"},"typeName":{"id":7093,"name":"int48","nodeType":"ElementaryTypeName","src":"31398:5:21","typeDescriptions":{}}},"id":7096,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31398:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"src":"31385:25:21","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"id":7098,"nodeType":"ExpressionStatement","src":"31385:25:21"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7099,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7090,"src":"31424:10:21","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7100,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7087,"src":"31438:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31424:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7108,"nodeType":"IfStatement","src":"31420:97:21","trueBody":{"id":7107,"nodeType":"Block","src":"31445:72:21","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":7103,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31496:2:21","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":7104,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7087,"src":"31500:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7102,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5538,"src":"31466:29:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7105,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31466:40:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7106,"nodeType":"RevertStatement","src":"31459:47:21"}]}}]},"documentation":{"id":7085,"nodeType":"StructuredDocumentation","src":"30991:307:21","text":" @dev Returns the downcasted int48 from int256, reverting on\n overflow (when the input is less than smallest int48 or\n greater than largest int48).\n Counterpart to Solidity's `int48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":7110,"implemented":true,"kind":"function","modifiers":[],"name":"toInt48","nameLocation":"31312:7:21","nodeType":"FunctionDefinition","parameters":{"id":7088,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7087,"mutability":"mutable","name":"value","nameLocation":"31327:5:21","nodeType":"VariableDeclaration","scope":7110,"src":"31320:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7086,"name":"int256","nodeType":"ElementaryTypeName","src":"31320:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31319:14:21"},"returnParameters":{"id":7091,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7090,"mutability":"mutable","name":"downcasted","nameLocation":"31363:10:21","nodeType":"VariableDeclaration","scope":7110,"src":"31357:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"},"typeName":{"id":7089,"name":"int48","nodeType":"ElementaryTypeName","src":"31357:5:21","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"visibility":"internal"}],"src":"31356:18:21"},"scope":7281,"src":"31303:220:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7135,"nodeType":"Block","src":"31913:148:21","statements":[{"expression":{"id":7123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7118,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7116,"src":"31923:10:21","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7121,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7113,"src":"31942:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7120,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31936:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int40_$","typeString":"type(int40)"},"typeName":{"id":7119,"name":"int40","nodeType":"ElementaryTypeName","src":"31936:5:21","typeDescriptions":{}}},"id":7122,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31936:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"src":"31923:25:21","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"id":7124,"nodeType":"ExpressionStatement","src":"31923:25:21"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7125,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7116,"src":"31962:10:21","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7126,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7113,"src":"31976:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31962:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7134,"nodeType":"IfStatement","src":"31958:97:21","trueBody":{"id":7133,"nodeType":"Block","src":"31983:72:21","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":7129,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32034:2:21","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":7130,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7113,"src":"32038:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7128,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5538,"src":"32004:29:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7131,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32004:40:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7132,"nodeType":"RevertStatement","src":"31997:47:21"}]}}]},"documentation":{"id":7111,"nodeType":"StructuredDocumentation","src":"31529:307:21","text":" @dev Returns the downcasted int40 from int256, reverting on\n overflow (when the input is less than smallest int40 or\n greater than largest int40).\n Counterpart to Solidity's `int40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":7136,"implemented":true,"kind":"function","modifiers":[],"name":"toInt40","nameLocation":"31850:7:21","nodeType":"FunctionDefinition","parameters":{"id":7114,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7113,"mutability":"mutable","name":"value","nameLocation":"31865:5:21","nodeType":"VariableDeclaration","scope":7136,"src":"31858:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7112,"name":"int256","nodeType":"ElementaryTypeName","src":"31858:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31857:14:21"},"returnParameters":{"id":7117,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7116,"mutability":"mutable","name":"downcasted","nameLocation":"31901:10:21","nodeType":"VariableDeclaration","scope":7136,"src":"31895:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"},"typeName":{"id":7115,"name":"int40","nodeType":"ElementaryTypeName","src":"31895:5:21","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"visibility":"internal"}],"src":"31894:18:21"},"scope":7281,"src":"31841:220:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7161,"nodeType":"Block","src":"32451:148:21","statements":[{"expression":{"id":7149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7144,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7142,"src":"32461:10:21","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7147,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7139,"src":"32480:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7146,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32474:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":7145,"name":"int32","nodeType":"ElementaryTypeName","src":"32474:5:21","typeDescriptions":{}}},"id":7148,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32474:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"32461:25:21","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"id":7150,"nodeType":"ExpressionStatement","src":"32461:25:21"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7151,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7142,"src":"32500:10:21","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7152,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7139,"src":"32514:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"32500:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7160,"nodeType":"IfStatement","src":"32496:97:21","trueBody":{"id":7159,"nodeType":"Block","src":"32521:72:21","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":7155,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32572:2:21","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":7156,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7139,"src":"32576:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7154,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5538,"src":"32542:29:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7157,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32542:40:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7158,"nodeType":"RevertStatement","src":"32535:47:21"}]}}]},"documentation":{"id":7137,"nodeType":"StructuredDocumentation","src":"32067:307:21","text":" @dev Returns the downcasted int32 from int256, reverting on\n overflow (when the input is less than smallest int32 or\n greater than largest int32).\n Counterpart to Solidity's `int32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":7162,"implemented":true,"kind":"function","modifiers":[],"name":"toInt32","nameLocation":"32388:7:21","nodeType":"FunctionDefinition","parameters":{"id":7140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7139,"mutability":"mutable","name":"value","nameLocation":"32403:5:21","nodeType":"VariableDeclaration","scope":7162,"src":"32396:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7138,"name":"int256","nodeType":"ElementaryTypeName","src":"32396:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32395:14:21"},"returnParameters":{"id":7143,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7142,"mutability":"mutable","name":"downcasted","nameLocation":"32439:10:21","nodeType":"VariableDeclaration","scope":7162,"src":"32433:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":7141,"name":"int32","nodeType":"ElementaryTypeName","src":"32433:5:21","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"}],"src":"32432:18:21"},"scope":7281,"src":"32379:220:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7187,"nodeType":"Block","src":"32989:148:21","statements":[{"expression":{"id":7175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7170,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7168,"src":"32999:10:21","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7173,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7165,"src":"33018:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7172,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33012:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int24_$","typeString":"type(int24)"},"typeName":{"id":7171,"name":"int24","nodeType":"ElementaryTypeName","src":"33012:5:21","typeDescriptions":{}}},"id":7174,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33012:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"32999:25:21","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"id":7176,"nodeType":"ExpressionStatement","src":"32999:25:21"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7177,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7168,"src":"33038:10:21","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7178,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7165,"src":"33052:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33038:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7186,"nodeType":"IfStatement","src":"33034:97:21","trueBody":{"id":7185,"nodeType":"Block","src":"33059:72:21","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":7181,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33110:2:21","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":7182,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7165,"src":"33114:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7180,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5538,"src":"33080:29:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7183,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33080:40:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7184,"nodeType":"RevertStatement","src":"33073:47:21"}]}}]},"documentation":{"id":7163,"nodeType":"StructuredDocumentation","src":"32605:307:21","text":" @dev Returns the downcasted int24 from int256, reverting on\n overflow (when the input is less than smallest int24 or\n greater than largest int24).\n Counterpart to Solidity's `int24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":7188,"implemented":true,"kind":"function","modifiers":[],"name":"toInt24","nameLocation":"32926:7:21","nodeType":"FunctionDefinition","parameters":{"id":7166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7165,"mutability":"mutable","name":"value","nameLocation":"32941:5:21","nodeType":"VariableDeclaration","scope":7188,"src":"32934:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7164,"name":"int256","nodeType":"ElementaryTypeName","src":"32934:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32933:14:21"},"returnParameters":{"id":7169,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7168,"mutability":"mutable","name":"downcasted","nameLocation":"32977:10:21","nodeType":"VariableDeclaration","scope":7188,"src":"32971:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":7167,"name":"int24","nodeType":"ElementaryTypeName","src":"32971:5:21","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"32970:18:21"},"scope":7281,"src":"32917:220:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7213,"nodeType":"Block","src":"33527:148:21","statements":[{"expression":{"id":7201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7196,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7194,"src":"33537:10:21","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7199,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7191,"src":"33556:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7198,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33550:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int16_$","typeString":"type(int16)"},"typeName":{"id":7197,"name":"int16","nodeType":"ElementaryTypeName","src":"33550:5:21","typeDescriptions":{}}},"id":7200,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33550:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"src":"33537:25:21","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"id":7202,"nodeType":"ExpressionStatement","src":"33537:25:21"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7203,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7194,"src":"33576:10:21","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7204,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7191,"src":"33590:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33576:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7212,"nodeType":"IfStatement","src":"33572:97:21","trueBody":{"id":7211,"nodeType":"Block","src":"33597:72:21","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":7207,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33648:2:21","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":7208,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7191,"src":"33652:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7206,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5538,"src":"33618:29:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7209,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33618:40:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7210,"nodeType":"RevertStatement","src":"33611:47:21"}]}}]},"documentation":{"id":7189,"nodeType":"StructuredDocumentation","src":"33143:307:21","text":" @dev Returns the downcasted int16 from int256, reverting on\n overflow (when the input is less than smallest int16 or\n greater than largest int16).\n Counterpart to Solidity's `int16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":7214,"implemented":true,"kind":"function","modifiers":[],"name":"toInt16","nameLocation":"33464:7:21","nodeType":"FunctionDefinition","parameters":{"id":7192,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7191,"mutability":"mutable","name":"value","nameLocation":"33479:5:21","nodeType":"VariableDeclaration","scope":7214,"src":"33472:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7190,"name":"int256","nodeType":"ElementaryTypeName","src":"33472:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33471:14:21"},"returnParameters":{"id":7195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7194,"mutability":"mutable","name":"downcasted","nameLocation":"33515:10:21","nodeType":"VariableDeclaration","scope":7214,"src":"33509:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"},"typeName":{"id":7193,"name":"int16","nodeType":"ElementaryTypeName","src":"33509:5:21","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"visibility":"internal"}],"src":"33508:18:21"},"scope":7281,"src":"33455:220:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7239,"nodeType":"Block","src":"34058:146:21","statements":[{"expression":{"id":7227,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7222,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7220,"src":"34068:10:21","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7225,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7217,"src":"34086:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7224,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34081:4:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"},"typeName":{"id":7223,"name":"int8","nodeType":"ElementaryTypeName","src":"34081:4:21","typeDescriptions":{}}},"id":7226,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34081:11:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"src":"34068:24:21","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"id":7228,"nodeType":"ExpressionStatement","src":"34068:24:21"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7229,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7220,"src":"34106:10:21","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7230,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7217,"src":"34120:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"34106:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7238,"nodeType":"IfStatement","src":"34102:96:21","trueBody":{"id":7237,"nodeType":"Block","src":"34127:71:21","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":7233,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"34178:1:21","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":7234,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7217,"src":"34181:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7232,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5538,"src":"34148:29:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7235,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34148:39:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7236,"nodeType":"RevertStatement","src":"34141:46:21"}]}}]},"documentation":{"id":7215,"nodeType":"StructuredDocumentation","src":"33681:302:21","text":" @dev Returns the downcasted int8 from int256, reverting on\n overflow (when the input is less than smallest int8 or\n greater than largest int8).\n Counterpart to Solidity's `int8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":7240,"implemented":true,"kind":"function","modifiers":[],"name":"toInt8","nameLocation":"33997:6:21","nodeType":"FunctionDefinition","parameters":{"id":7218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7217,"mutability":"mutable","name":"value","nameLocation":"34011:5:21","nodeType":"VariableDeclaration","scope":7240,"src":"34004:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7216,"name":"int256","nodeType":"ElementaryTypeName","src":"34004:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34003:14:21"},"returnParameters":{"id":7221,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7220,"mutability":"mutable","name":"downcasted","nameLocation":"34046:10:21","nodeType":"VariableDeclaration","scope":7240,"src":"34041:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"},"typeName":{"id":7219,"name":"int8","nodeType":"ElementaryTypeName","src":"34041:4:21","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"visibility":"internal"}],"src":"34040:17:21"},"scope":7281,"src":"33988:216:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7269,"nodeType":"Block","src":"34444:250:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7248,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7243,"src":"34557:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"arguments":[{"expression":{"arguments":[{"id":7253,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34578:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":7252,"name":"int256","nodeType":"ElementaryTypeName","src":"34578:6:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":7251,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"34573:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7254,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34573:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":7255,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"34586:3:21","memberName":"max","nodeType":"MemberAccess","src":"34573:16:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7250,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34565:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7249,"name":"uint256","nodeType":"ElementaryTypeName","src":"34565:7:21","typeDescriptions":{}}},"id":7256,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34565:25:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"34557:33:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7263,"nodeType":"IfStatement","src":"34553:105:21","trueBody":{"id":7262,"nodeType":"Block","src":"34592:66:21","statements":[{"errorCall":{"arguments":[{"id":7259,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7243,"src":"34641:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7258,"name":"SafeCastOverflowedUintToInt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5543,"src":"34613:27:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":7260,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34613:34:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7261,"nodeType":"RevertStatement","src":"34606:41:21"}]}},{"expression":{"arguments":[{"id":7266,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7243,"src":"34681:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7265,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34674:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":7264,"name":"int256","nodeType":"ElementaryTypeName","src":"34674:6:21","typeDescriptions":{}}},"id":7267,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34674:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7247,"id":7268,"nodeType":"Return","src":"34667:20:21"}]},"documentation":{"id":7241,"nodeType":"StructuredDocumentation","src":"34210:165:21","text":" @dev Converts an unsigned uint256 into a signed int256.\n Requirements:\n - input must be less than or equal to maxInt256."},"id":7270,"implemented":true,"kind":"function","modifiers":[],"name":"toInt256","nameLocation":"34389:8:21","nodeType":"FunctionDefinition","parameters":{"id":7244,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7243,"mutability":"mutable","name":"value","nameLocation":"34406:5:21","nodeType":"VariableDeclaration","scope":7270,"src":"34398:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7242,"name":"uint256","nodeType":"ElementaryTypeName","src":"34398:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34397:15:21"},"returnParameters":{"id":7247,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7246,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7270,"src":"34436:6:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7245,"name":"int256","nodeType":"ElementaryTypeName","src":"34436:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34435:8:21"},"scope":7281,"src":"34380:314:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7279,"nodeType":"Block","src":"34853:87:21","statements":[{"AST":{"nodeType":"YulBlock","src":"34888:46:21","statements":[{"nodeType":"YulAssignment","src":"34902:22:21","value":{"arguments":[{"arguments":[{"name":"b","nodeType":"YulIdentifier","src":"34921:1:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"34914:6:21"},"nodeType":"YulFunctionCall","src":"34914:9:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"34907:6:21"},"nodeType":"YulFunctionCall","src":"34907:17:21"},"variableNames":[{"name":"u","nodeType":"YulIdentifier","src":"34902:1:21"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":7273,"isOffset":false,"isSlot":false,"src":"34921:1:21","valueSize":1},{"declaration":7276,"isOffset":false,"isSlot":false,"src":"34902:1:21","valueSize":1}],"flags":["memory-safe"],"id":7278,"nodeType":"InlineAssembly","src":"34863:71:21"}]},"documentation":{"id":7271,"nodeType":"StructuredDocumentation","src":"34700:90:21","text":" @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump."},"id":7280,"implemented":true,"kind":"function","modifiers":[],"name":"toUint","nameLocation":"34804:6:21","nodeType":"FunctionDefinition","parameters":{"id":7274,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7273,"mutability":"mutable","name":"b","nameLocation":"34816:1:21","nodeType":"VariableDeclaration","scope":7280,"src":"34811:6:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7272,"name":"bool","nodeType":"ElementaryTypeName","src":"34811:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"34810:8:21"},"returnParameters":{"id":7277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7276,"mutability":"mutable","name":"u","nameLocation":"34850:1:21","nodeType":"VariableDeclaration","scope":7280,"src":"34842:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7275,"name":"uint256","nodeType":"ElementaryTypeName","src":"34842:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34841:11:21"},"scope":7281,"src":"34795:145:21","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":7282,"src":"769:34173:21","usedErrors":[5526,5531,5538,5543],"usedEvents":[]}],"src":"192:34751:21"},"id":21},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","exportedSymbols":{"SafeCast":[7281],"SignedMath":[7425]},"id":7426,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":7283,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:22"},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":7285,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7426,"sourceUnit":7282,"src":"135:40:22","symbolAliases":[{"foreign":{"id":7284,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7281,"src":"143:8:22","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SignedMath","contractDependencies":[],"contractKind":"library","documentation":{"id":7286,"nodeType":"StructuredDocumentation","src":"177:80:22","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":7425,"linearizedBaseContracts":[7425],"name":"SignedMath","nameLocation":"266:10:22","nodeType":"ContractDefinition","nodes":[{"body":{"id":7315,"nodeType":"Block","src":"746:215:22","statements":[{"id":7314,"nodeType":"UncheckedBlock","src":"756:199:22","statements":[{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7298,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7293,"src":"894:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7299,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7291,"src":"900:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":7300,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7293,"src":"904:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"900:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7302,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"899:7:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"arguments":[{"id":7307,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7289,"src":"932:9:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":7305,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7281,"src":"916:8:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7281_$","typeString":"type(library SafeCast)"}},"id":7306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"925:6:22","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7280,"src":"916:15:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":7308,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"916:26:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7304,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"909:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":7303,"name":"int256","nodeType":"ElementaryTypeName","src":"909:6:22","typeDescriptions":{}}},"id":7309,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"909:34:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"899:44:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7311,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"898:46:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"894:50:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7297,"id":7313,"nodeType":"Return","src":"887:57:22"}]}]},"documentation":{"id":7287,"nodeType":"StructuredDocumentation","src":"283:374:22","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":7316,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"671:7:22","nodeType":"FunctionDefinition","parameters":{"id":7294,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7289,"mutability":"mutable","name":"condition","nameLocation":"684:9:22","nodeType":"VariableDeclaration","scope":7316,"src":"679:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7288,"name":"bool","nodeType":"ElementaryTypeName","src":"679:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":7291,"mutability":"mutable","name":"a","nameLocation":"702:1:22","nodeType":"VariableDeclaration","scope":7316,"src":"695:8:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7290,"name":"int256","nodeType":"ElementaryTypeName","src":"695:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":7293,"mutability":"mutable","name":"b","nameLocation":"712:1:22","nodeType":"VariableDeclaration","scope":7316,"src":"705:8:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7292,"name":"int256","nodeType":"ElementaryTypeName","src":"705:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"678:36:22"},"returnParameters":{"id":7297,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7296,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7316,"src":"738:6:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7295,"name":"int256","nodeType":"ElementaryTypeName","src":"738:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"737:8:22"},"scope":7425,"src":"662:299:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7334,"nodeType":"Block","src":"1102:44:22","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7327,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7319,"src":"1127:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":7328,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7321,"src":"1131:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1127:5:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":7330,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7319,"src":"1134:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":7331,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7321,"src":"1137:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7326,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7316,"src":"1119:7:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":7332,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1119:20:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7325,"id":7333,"nodeType":"Return","src":"1112:27:22"}]},"documentation":{"id":7317,"nodeType":"StructuredDocumentation","src":"967:66:22","text":" @dev Returns the largest of two signed numbers."},"id":7335,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"1047:3:22","nodeType":"FunctionDefinition","parameters":{"id":7322,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7319,"mutability":"mutable","name":"a","nameLocation":"1058:1:22","nodeType":"VariableDeclaration","scope":7335,"src":"1051:8:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7318,"name":"int256","nodeType":"ElementaryTypeName","src":"1051:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":7321,"mutability":"mutable","name":"b","nameLocation":"1068:1:22","nodeType":"VariableDeclaration","scope":7335,"src":"1061:8:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7320,"name":"int256","nodeType":"ElementaryTypeName","src":"1061:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1050:20:22"},"returnParameters":{"id":7325,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7324,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7335,"src":"1094:6:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7323,"name":"int256","nodeType":"ElementaryTypeName","src":"1094:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1093:8:22"},"scope":7425,"src":"1038:108:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7353,"nodeType":"Block","src":"1288:44:22","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7346,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7338,"src":"1313:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":7347,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7340,"src":"1317:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1313:5:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":7349,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7338,"src":"1320:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":7350,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7340,"src":"1323:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7345,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7316,"src":"1305:7:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":7351,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1305:20:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7344,"id":7352,"nodeType":"Return","src":"1298:27:22"}]},"documentation":{"id":7336,"nodeType":"StructuredDocumentation","src":"1152:67:22","text":" @dev Returns the smallest of two signed numbers."},"id":7354,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"1233:3:22","nodeType":"FunctionDefinition","parameters":{"id":7341,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7338,"mutability":"mutable","name":"a","nameLocation":"1244:1:22","nodeType":"VariableDeclaration","scope":7354,"src":"1237:8:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7337,"name":"int256","nodeType":"ElementaryTypeName","src":"1237:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":7340,"mutability":"mutable","name":"b","nameLocation":"1254:1:22","nodeType":"VariableDeclaration","scope":7354,"src":"1247:8:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7339,"name":"int256","nodeType":"ElementaryTypeName","src":"1247:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1236:20:22"},"returnParameters":{"id":7344,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7343,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7354,"src":"1280:6:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7342,"name":"int256","nodeType":"ElementaryTypeName","src":"1280:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1279:8:22"},"scope":7425,"src":"1224:108:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7397,"nodeType":"Block","src":"1537:162:22","statements":[{"assignments":[7365],"declarations":[{"constant":false,"id":7365,"mutability":"mutable","name":"x","nameLocation":"1606:1:22","nodeType":"VariableDeclaration","scope":7397,"src":"1599:8:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7364,"name":"int256","nodeType":"ElementaryTypeName","src":"1599:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":7378,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7366,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7357,"src":"1611:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":7367,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7359,"src":"1615:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1611:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7369,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1610:7:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7370,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7357,"src":"1622:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":7371,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7359,"src":"1626:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1622:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7373,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1621:7:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":7374,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1632:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1621:12:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7376,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1620:14:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1610:24:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"1599:35:22"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7379,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7365,"src":"1651:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7393,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":7384,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7365,"src":"1671:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7383,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1663:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7382,"name":"uint256","nodeType":"ElementaryTypeName","src":"1663:7:22","typeDescriptions":{}}},"id":7385,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1663:10:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":7386,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1677:3:22","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"1663:17:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7381,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1656:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":7380,"name":"int256","nodeType":"ElementaryTypeName","src":"1656:6:22","typeDescriptions":{}}},"id":7388,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1656:25:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7389,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7357,"src":"1685:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":7390,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7359,"src":"1689:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1685:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7392,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1684:7:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1656:35:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7394,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1655:37:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1651:41:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7363,"id":7396,"nodeType":"Return","src":"1644:48:22"}]},"documentation":{"id":7355,"nodeType":"StructuredDocumentation","src":"1338:126:22","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":7398,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"1478:7:22","nodeType":"FunctionDefinition","parameters":{"id":7360,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7357,"mutability":"mutable","name":"a","nameLocation":"1493:1:22","nodeType":"VariableDeclaration","scope":7398,"src":"1486:8:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7356,"name":"int256","nodeType":"ElementaryTypeName","src":"1486:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":7359,"mutability":"mutable","name":"b","nameLocation":"1503:1:22","nodeType":"VariableDeclaration","scope":7398,"src":"1496:8:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7358,"name":"int256","nodeType":"ElementaryTypeName","src":"1496:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1485:20:22"},"returnParameters":{"id":7363,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7362,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7398,"src":"1529:6:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7361,"name":"int256","nodeType":"ElementaryTypeName","src":"1529:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1528:8:22"},"scope":7425,"src":"1469:230:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7423,"nodeType":"Block","src":"1843:767:22","statements":[{"id":7422,"nodeType":"UncheckedBlock","src":"1853:751:22","statements":[{"assignments":[7407],"declarations":[{"constant":false,"id":7407,"mutability":"mutable","name":"mask","nameLocation":"2424:4:22","nodeType":"VariableDeclaration","scope":7422,"src":"2417:11:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7406,"name":"int256","nodeType":"ElementaryTypeName","src":"2417:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":7411,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7408,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7401,"src":"2431:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":7409,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2436:3:22","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"2431:8:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"2417:22:22"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7414,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7401,"src":"2576:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":7415,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7407,"src":"2580:4:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2576:8:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7417,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2575:10:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":7418,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7407,"src":"2588:4:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2575:17:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7413,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2567:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7412,"name":"uint256","nodeType":"ElementaryTypeName","src":"2567:7:22","typeDescriptions":{}}},"id":7420,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2567:26:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7405,"id":7421,"nodeType":"Return","src":"2560:33:22"}]}]},"documentation":{"id":7399,"nodeType":"StructuredDocumentation","src":"1705:78:22","text":" @dev Returns the absolute unsigned value of a signed value."},"id":7424,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1797:3:22","nodeType":"FunctionDefinition","parameters":{"id":7402,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7401,"mutability":"mutable","name":"n","nameLocation":"1808:1:22","nodeType":"VariableDeclaration","scope":7424,"src":"1801:8:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7400,"name":"int256","nodeType":"ElementaryTypeName","src":"1801:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1800:10:22"},"returnParameters":{"id":7405,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7404,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7424,"src":"1834:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7403,"name":"uint256","nodeType":"ElementaryTypeName","src":"1834:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1833:9:22"},"scope":7425,"src":"1788:822:22","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":7426,"src":"258:2354:22","usedErrors":[],"usedEvents":[]}],"src":"109:2504:22"},"id":22},"contracts/FairLaunchToken.sol":{"ast":{"absolutePath":"contracts/FairLaunchToken.sol","exportedSymbols":{"Context":[1194],"ECDSA":[3582],"EIP712":[3809],"ERC20":[824],"ERC20Burnable":[948],"ERC20Permit":[1102],"FairLaunchToken":[8283],"IERC20":[902],"IERC20Errors":[214],"IERC20Metadata":[1128],"IERC20Permit":[1164],"Nonces":[1262],"Ownable":[147],"ReentrancyGuard":[1491]},"id":8284,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":7427,"literals":["solidity","^","0.8",".19"],"nodeType":"PragmaDirective","src":"32:24:23"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"@openzeppelin/contracts/token/ERC20/ERC20.sol","id":7428,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8284,"sourceUnit":825,"src":"58:55:23","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol","file":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol","id":7429,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8284,"sourceUnit":949,"src":"114:74:23","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol","file":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol","id":7430,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8284,"sourceUnit":1103,"src":"189:72:23","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":7431,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8284,"sourceUnit":148,"src":"262:52:23","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","file":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","id":7432,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8284,"sourceUnit":1492,"src":"315:59:23","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":7434,"name":"ERC20","nameLocations":["531:5:23"],"nodeType":"IdentifierPath","referencedDeclaration":824,"src":"531:5:23"},"id":7435,"nodeType":"InheritanceSpecifier","src":"531:5:23"},{"baseName":{"id":7436,"name":"ERC20Burnable","nameLocations":["538:13:23"],"nodeType":"IdentifierPath","referencedDeclaration":948,"src":"538:13:23"},"id":7437,"nodeType":"InheritanceSpecifier","src":"538:13:23"},{"baseName":{"id":7438,"name":"ERC20Permit","nameLocations":["553:11:23"],"nodeType":"IdentifierPath","referencedDeclaration":1102,"src":"553:11:23"},"id":7439,"nodeType":"InheritanceSpecifier","src":"553:11:23"},{"baseName":{"id":7440,"name":"Ownable","nameLocations":["566:7:23"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"566:7:23"},"id":7441,"nodeType":"InheritanceSpecifier","src":"566:7:23"},{"baseName":{"id":7442,"name":"ReentrancyGuard","nameLocations":["575:15:23"],"nodeType":"IdentifierPath","referencedDeclaration":1491,"src":"575:15:23"},"id":7443,"nodeType":"InheritanceSpecifier","src":"575:15:23"}],"canonicalName":"FairLaunchToken","contractDependencies":[],"contractKind":"contract","documentation":{"id":7433,"nodeType":"StructuredDocumentation","src":"376:126:23","text":" @title FairLaunchToken\n @dev Meme token with fair launch mechanisms, anti-snipe protection, and advanced features"},"fullyImplemented":true,"id":8283,"linearizedBaseContracts":[8283,1491,147,1102,1262,3809,172,1164,948,824,214,1128,902,1194],"name":"FairLaunchToken","nameLocation":"512:15:23","nodeType":"ContractDefinition","nodes":[{"canonicalName":"FairLaunchToken.FairLaunchConfig","id":7454,"members":[{"constant":false,"id":7445,"mutability":"mutable","name":"maxBuyPerWallet","nameLocation":"672:15:23","nodeType":"VariableDeclaration","scope":7454,"src":"664:23:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7444,"name":"uint256","nodeType":"ElementaryTypeName","src":"664:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7447,"mutability":"mutable","name":"maxBuyPerTx","nameLocation":"746:11:23","nodeType":"VariableDeclaration","scope":7454,"src":"738:19:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7446,"name":"uint256","nodeType":"ElementaryTypeName","src":"738:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7449,"mutability":"mutable","name":"cooldownPeriod","nameLocation":"817:14:23","nodeType":"VariableDeclaration","scope":7454,"src":"809:22:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7448,"name":"uint256","nodeType":"ElementaryTypeName","src":"809:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7451,"mutability":"mutable","name":"antiSnipeBlocks","nameLocation":"884:15:23","nodeType":"VariableDeclaration","scope":7454,"src":"876:23:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7450,"name":"uint256","nodeType":"ElementaryTypeName","src":"876:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7453,"mutability":"mutable","name":"enabled","nameLocation":"964:7:23","nodeType":"VariableDeclaration","scope":7454,"src":"959:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7452,"name":"bool","nodeType":"ElementaryTypeName","src":"959:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"FairLaunchConfig","nameLocation":"637:16:23","nodeType":"StructDefinition","scope":8283,"src":"630:396:23","visibility":"public"},{"canonicalName":"FairLaunchToken.AutoLiquidityConfig","id":7463,"members":[{"constant":false,"id":7456,"mutability":"mutable","name":"liquidityFeePercent","nameLocation":"1113:19:23","nodeType":"VariableDeclaration","scope":7463,"src":"1105:27:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7455,"name":"uint256","nodeType":"ElementaryTypeName","src":"1105:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7458,"mutability":"mutable","name":"minTokensBeforeSwap","nameLocation":"1202:19:23","nodeType":"VariableDeclaration","scope":7463,"src":"1194:27:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7457,"name":"uint256","nodeType":"ElementaryTypeName","src":"1194:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7460,"mutability":"mutable","name":"liquidityPair","nameLocation":"1281:13:23","nodeType":"VariableDeclaration","scope":7463,"src":"1273:21:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7459,"name":"address","nodeType":"ElementaryTypeName","src":"1273:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7462,"mutability":"mutable","name":"enabled","nameLocation":"1335:7:23","nodeType":"VariableDeclaration","scope":7463,"src":"1330:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7461,"name":"bool","nodeType":"ElementaryTypeName","src":"1330:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"AutoLiquidityConfig","nameLocation":"1075:19:23","nodeType":"StructDefinition","scope":8283,"src":"1068:332:23","visibility":"public"},{"canonicalName":"FairLaunchToken.ReflectionConfig","id":7468,"members":[{"constant":false,"id":7465,"mutability":"mutable","name":"reflectionFeePercent","nameLocation":"1488:20:23","nodeType":"VariableDeclaration","scope":7468,"src":"1480:28:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7464,"name":"uint256","nodeType":"ElementaryTypeName","src":"1480:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7467,"mutability":"mutable","name":"enabled","nameLocation":"1572:7:23","nodeType":"VariableDeclaration","scope":7468,"src":"1567:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7466,"name":"bool","nodeType":"ElementaryTypeName","src":"1567:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"ReflectionConfig","nameLocation":"1453:16:23","nodeType":"StructDefinition","scope":8283,"src":"1446:191:23","visibility":"public"},{"constant":false,"functionSelector":"49a64d93","id":7471,"mutability":"mutable","name":"fairLaunchConfig","nameLocation":"1690:16:23","nodeType":"VariableDeclaration","scope":8283,"src":"1666:40:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_FairLaunchConfig_$7454_storage","typeString":"struct FairLaunchToken.FairLaunchConfig"},"typeName":{"id":7470,"nodeType":"UserDefinedTypeName","pathNode":{"id":7469,"name":"FairLaunchConfig","nameLocations":["1666:16:23"],"nodeType":"IdentifierPath","referencedDeclaration":7454,"src":"1666:16:23"},"referencedDeclaration":7454,"src":"1666:16:23","typeDescriptions":{"typeIdentifier":"t_struct$_FairLaunchConfig_$7454_storage_ptr","typeString":"struct FairLaunchToken.FairLaunchConfig"}},"visibility":"public"},{"constant":false,"functionSelector":"9e7e42cd","id":7474,"mutability":"mutable","name":"autoLiquidityConfig","nameLocation":"1739:19:23","nodeType":"VariableDeclaration","scope":8283,"src":"1712:46:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_AutoLiquidityConfig_$7463_storage","typeString":"struct FairLaunchToken.AutoLiquidityConfig"},"typeName":{"id":7473,"nodeType":"UserDefinedTypeName","pathNode":{"id":7472,"name":"AutoLiquidityConfig","nameLocations":["1712:19:23"],"nodeType":"IdentifierPath","referencedDeclaration":7463,"src":"1712:19:23"},"referencedDeclaration":7463,"src":"1712:19:23","typeDescriptions":{"typeIdentifier":"t_struct$_AutoLiquidityConfig_$7463_storage_ptr","typeString":"struct FairLaunchToken.AutoLiquidityConfig"}},"visibility":"public"},{"constant":false,"functionSelector":"180aa7c7","id":7477,"mutability":"mutable","name":"reflectionConfig","nameLocation":"1788:16:23","nodeType":"VariableDeclaration","scope":8283,"src":"1764:40:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_ReflectionConfig_$7468_storage","typeString":"struct FairLaunchToken.ReflectionConfig"},"typeName":{"id":7476,"nodeType":"UserDefinedTypeName","pathNode":{"id":7475,"name":"ReflectionConfig","nameLocations":["1764:16:23"],"nodeType":"IdentifierPath","referencedDeclaration":7468,"src":"1764:16:23"},"referencedDeclaration":7468,"src":"1764:16:23","typeDescriptions":{"typeIdentifier":"t_struct$_ReflectionConfig_$7468_storage_ptr","typeString":"struct FairLaunchToken.ReflectionConfig"}},"visibility":"public"},{"constant":false,"functionSelector":"d00efb2f","id":7479,"mutability":"mutable","name":"launchBlock","nameLocation":"1830:11:23","nodeType":"VariableDeclaration","scope":8283,"src":"1815:26:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7478,"name":"uint256","nodeType":"ElementaryTypeName","src":"1815:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"4e0856a7","id":7482,"mutability":"mutable","name":"burnFeePercent","nameLocation":"1862:14:23","nodeType":"VariableDeclaration","scope":8283,"src":"1847:35:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7480,"name":"uint256","nodeType":"ElementaryTypeName","src":"1847:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"313030","id":7481,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1879:3:23","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"visibility":"public"},{"constant":false,"functionSelector":"4ada218b","id":7485,"mutability":"mutable","name":"tradingEnabled","nameLocation":"1930:14:23","nodeType":"VariableDeclaration","scope":8283,"src":"1918:34:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7483,"name":"bool","nodeType":"ElementaryTypeName","src":"1918:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":{"hexValue":"66616c7365","id":7484,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1947:5:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"visibility":"public"},{"constant":false,"functionSelector":"3fecc2e2","id":7489,"mutability":"mutable","name":"lastBuyTime","nameLocation":"1998:11:23","nodeType":"VariableDeclaration","scope":8283,"src":"1963:46:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":7488,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":7486,"name":"address","nodeType":"ElementaryTypeName","src":"1971:7:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1963:27:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":7487,"name":"uint256","nodeType":"ElementaryTypeName","src":"1982:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"functionSelector":"4663b1b2","id":7493,"mutability":"mutable","name":"totalBought","nameLocation":"2050:11:23","nodeType":"VariableDeclaration","scope":8283,"src":"2015:46:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":7492,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":7490,"name":"address","nodeType":"ElementaryTypeName","src":"2023:7:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2015:27:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":7491,"name":"uint256","nodeType":"ElementaryTypeName","src":"2034:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"functionSelector":"4fbee193","id":7497,"mutability":"mutable","name":"isExcludedFromFees","nameLocation":"2099:18:23","nodeType":"VariableDeclaration","scope":8283,"src":"2067:50:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":7496,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":7494,"name":"address","nodeType":"ElementaryTypeName","src":"2075:7:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2067:24:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":7495,"name":"bool","nodeType":"ElementaryTypeName","src":"2086:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"public"},{"constant":false,"functionSelector":"fe575a87","id":7501,"mutability":"mutable","name":"isBlacklisted","nameLocation":"2155:13:23","nodeType":"VariableDeclaration","scope":8283,"src":"2123:45:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":7500,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":7498,"name":"address","nodeType":"ElementaryTypeName","src":"2131:7:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2123:24:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":7499,"name":"bool","nodeType":"ElementaryTypeName","src":"2142:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"public"},{"constant":false,"id":7503,"mutability":"mutable","name":"_totalReflections","nameLocation":"2222:17:23","nodeType":"VariableDeclaration","scope":8283,"src":"2206:33:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7502,"name":"uint256","nodeType":"ElementaryTypeName","src":"2206:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":7507,"mutability":"mutable","name":"_reflectionBalances","nameLocation":"2281:19:23","nodeType":"VariableDeclaration","scope":8283,"src":"2245:55:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":7506,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":7504,"name":"address","nodeType":"ElementaryTypeName","src":"2253:7:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2245:27:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":7505,"name":"uint256","nodeType":"ElementaryTypeName","src":"2264:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":7511,"mutability":"mutable","name":"_isExcludedFromReflections","nameLocation":"2339:26:23","nodeType":"VariableDeclaration","scope":8283,"src":"2306:59:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":7510,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":7508,"name":"address","nodeType":"ElementaryTypeName","src":"2314:7:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2306:24:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":7509,"name":"bool","nodeType":"ElementaryTypeName","src":"2325:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"private"},{"constant":false,"id":7514,"mutability":"mutable","name":"_excluded","nameLocation":"2389:9:23","nodeType":"VariableDeclaration","scope":8283,"src":"2371:27:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[]"},"typeName":{"baseType":{"id":7512,"name":"address","nodeType":"ElementaryTypeName","src":"2371:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7513,"nodeType":"ArrayTypeName","src":"2371:9:23","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"private"},{"anonymous":false,"eventSelector":"028a38ff37ea5c05388a99b81090ae2d9a9230d695258ae73bf5765411cb80b8","id":7524,"name":"FairLaunchConfigured","nameLocation":"2429:20:23","nodeType":"EventDefinition","parameters":{"id":7523,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7516,"indexed":false,"mutability":"mutable","name":"maxBuyPerWallet","nameLocation":"2467:15:23","nodeType":"VariableDeclaration","scope":7524,"src":"2459:23:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7515,"name":"uint256","nodeType":"ElementaryTypeName","src":"2459:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7518,"indexed":false,"mutability":"mutable","name":"maxBuyPerTx","nameLocation":"2500:11:23","nodeType":"VariableDeclaration","scope":7524,"src":"2492:19:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7517,"name":"uint256","nodeType":"ElementaryTypeName","src":"2492:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7520,"indexed":false,"mutability":"mutable","name":"cooldownPeriod","nameLocation":"2529:14:23","nodeType":"VariableDeclaration","scope":7524,"src":"2521:22:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7519,"name":"uint256","nodeType":"ElementaryTypeName","src":"2521:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7522,"indexed":false,"mutability":"mutable","name":"antiSnipeBlocks","nameLocation":"2561:15:23","nodeType":"VariableDeclaration","scope":7524,"src":"2553:23:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7521,"name":"uint256","nodeType":"ElementaryTypeName","src":"2553:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2449:133:23"},"src":"2423:160:23"},{"anonymous":false,"eventSelector":"b3da2db3dfc3778f99852546c6e9ab39ec253f9de7b0847afec61bd27878e923","id":7528,"name":"TradingEnabled","nameLocation":"2594:14:23","nodeType":"EventDefinition","parameters":{"id":7527,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7526,"indexed":false,"mutability":"mutable","name":"blockNumber","nameLocation":"2617:11:23","nodeType":"VariableDeclaration","scope":7528,"src":"2609:19:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7525,"name":"uint256","nodeType":"ElementaryTypeName","src":"2609:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2608:21:23"},"src":"2588:42:23"},{"anonymous":false,"eventSelector":"296b893bf381a651931cd8b6223c9898a7ef89764a6be65d11bc8c0abf88bbd7","id":7534,"name":"AutoLiquidityAdded","nameLocation":"2641:18:23","nodeType":"EventDefinition","parameters":{"id":7533,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7530,"indexed":false,"mutability":"mutable","name":"tokensSwapped","nameLocation":"2668:13:23","nodeType":"VariableDeclaration","scope":7534,"src":"2660:21:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7529,"name":"uint256","nodeType":"ElementaryTypeName","src":"2660:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7532,"indexed":false,"mutability":"mutable","name":"ethReceived","nameLocation":"2691:11:23","nodeType":"VariableDeclaration","scope":7534,"src":"2683:19:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7531,"name":"uint256","nodeType":"ElementaryTypeName","src":"2683:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2659:44:23"},"src":"2635:69:23"},{"anonymous":false,"eventSelector":"3eeb9763473a030c467b8f096a99e1825a88c6a821c131e1fbb007246a80359c","id":7538,"name":"ReflectionsDistributed","nameLocation":"2715:22:23","nodeType":"EventDefinition","parameters":{"id":7537,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7536,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"2746:6:23","nodeType":"VariableDeclaration","scope":7538,"src":"2738:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7535,"name":"uint256","nodeType":"ElementaryTypeName","src":"2738:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2737:16:23"},"src":"2709:45:23"},{"anonymous":false,"eventSelector":"cf3473b85df1594d47b6958f29a32bea0abff9dd68296f7bf33443646793cfd8","id":7544,"name":"Blacklisted","nameLocation":"2765:11:23","nodeType":"EventDefinition","parameters":{"id":7543,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7540,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"2793:7:23","nodeType":"VariableDeclaration","scope":7544,"src":"2777:23:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7539,"name":"address","nodeType":"ElementaryTypeName","src":"2777:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7542,"indexed":false,"mutability":"mutable","name":"isBlacklisted","nameLocation":"2807:13:23","nodeType":"VariableDeclaration","scope":7544,"src":"2802:18:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7541,"name":"bool","nodeType":"ElementaryTypeName","src":"2802:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2776:45:23"},"src":"2759:63:23"},{"body":{"id":7558,"nodeType":"Block","src":"2876:99:23","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":7553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7547,"name":"tradingEnabled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7485,"src":"2894:14:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7548,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2912:3:23","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2916:6:23","memberName":"sender","nodeType":"MemberAccess","src":"2912:10:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":7550,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"2926:5:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":7551,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2926:7:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2912:21:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2894:39:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"54726164696e67206e6f7420656e61626c6564","id":7554,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2935:21:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_aba53b7bc56fd10d1bb2cac393e26b489ca53cf0c676cd3f5a7c5c185bf6cd4c","typeString":"literal_string \"Trading not enabled\""},"value":"Trading not enabled"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_aba53b7bc56fd10d1bb2cac393e26b489ca53cf0c676cd3f5a7c5c185bf6cd4c","typeString":"literal_string \"Trading not enabled\""}],"id":7546,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2886:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7555,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2886:71:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7556,"nodeType":"ExpressionStatement","src":"2886:71:23"},{"id":7557,"nodeType":"PlaceholderStatement","src":"2967:1:23"}]},"id":7559,"name":"onlyWhenTrading","nameLocation":"2858:15:23","nodeType":"ModifierDefinition","parameters":{"id":7545,"nodeType":"ParameterList","parameters":[],"src":"2873:2:23"},"src":"2849:126:23","virtual":false,"visibility":"internal"},{"body":{"id":7620,"nodeType":"Block","src":"3182:654:23","statements":[{"expression":{"arguments":[{"id":7581,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7567,"src":"3198:12:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7582,"name":"initialSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7565,"src":"3212:13:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7580,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":664,"src":"3192:5:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":7583,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3192:34:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7584,"nodeType":"ExpressionStatement","src":"3192:34:23"},{"expression":{"id":7589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7585,"name":"isExcludedFromFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7497,"src":"3293:18:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":7587,"indexExpression":{"id":7586,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7567,"src":"3312:12:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3293:32:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":7588,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3328:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"3293:39:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7590,"nodeType":"ExpressionStatement","src":"3293:39:23"},{"expression":{"id":7598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7591,"name":"isExcludedFromFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7497,"src":"3342:18:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":7596,"indexExpression":{"arguments":[{"id":7594,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3369:4:23","typeDescriptions":{"typeIdentifier":"t_contract$_FairLaunchToken_$8283","typeString":"contract FairLaunchToken"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_FairLaunchToken_$8283","typeString":"contract FairLaunchToken"}],"id":7593,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3361:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7592,"name":"address","nodeType":"ElementaryTypeName","src":"3361:7:23","typeDescriptions":{}}},"id":7595,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3361:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3342:33:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":7597,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3378:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"3342:40:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7599,"nodeType":"ExpressionStatement","src":"3342:40:23"},{"expression":{"id":7618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7600,"name":"fairLaunchConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7471,"src":"3455:16:23","typeDescriptions":{"typeIdentifier":"t_struct$_FairLaunchConfig_$7454_storage","typeString":"struct FairLaunchToken.FairLaunchConfig storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7602,"name":"initialSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7565,"src":"3523:13:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"313030","id":7603,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3539:3:23","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"3523:19:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7605,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3522:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"3130303030","id":7606,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3546:5:23","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"src":"3522:29:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7608,"name":"initialSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7565,"src":"3595:13:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3530","id":7609,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3611:2:23","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"50"},"src":"3595:18:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7611,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3594:20:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"3130303030","id":7612,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3617:5:23","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"src":"3594:28:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"333030","id":7614,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3675:3:23","typeDescriptions":{"typeIdentifier":"t_rational_300_by_1","typeString":"int_const 300"},"value":"300"},{"hexValue":"33","id":7615,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3749:1:23","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},{"hexValue":"74727565","id":7616,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3814:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_300_by_1","typeString":"int_const 300"},{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":7601,"name":"FairLaunchConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7454,"src":"3474:16:23","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_FairLaunchConfig_$7454_storage_ptr_$","typeString":"type(struct FairLaunchToken.FairLaunchConfig storage pointer)"}},"id":7617,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["3505:15:23","3581:11:23","3659:14:23","3732:15:23","3805:7:23"],"names":["maxBuyPerWallet","maxBuyPerTx","cooldownPeriod","antiSnipeBlocks","enabled"],"nodeType":"FunctionCall","src":"3474:355:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_FairLaunchConfig_$7454_memory_ptr","typeString":"struct FairLaunchToken.FairLaunchConfig memory"}},"src":"3455:374:23","typeDescriptions":{"typeIdentifier":"t_struct$_FairLaunchConfig_$7454_storage","typeString":"struct FairLaunchToken.FairLaunchConfig storage ref"}},"id":7619,"nodeType":"ExpressionStatement","src":"3455:374:23"}]},"id":7621,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":7570,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7561,"src":"3128:4:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":7571,"name":"symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7563,"src":"3134:6:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"id":7572,"kind":"baseConstructorSpecifier","modifierName":{"id":7569,"name":"ERC20","nameLocations":["3122:5:23"],"nodeType":"IdentifierPath","referencedDeclaration":824,"src":"3122:5:23"},"nodeType":"ModifierInvocation","src":"3122:19:23"},{"arguments":[{"id":7574,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7561,"src":"3154:4:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"id":7575,"kind":"baseConstructorSpecifier","modifierName":{"id":7573,"name":"ERC20Permit","nameLocations":["3142:11:23"],"nodeType":"IdentifierPath","referencedDeclaration":1102,"src":"3142:11:23"},"nodeType":"ModifierInvocation","src":"3142:17:23"},{"arguments":[{"id":7577,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7567,"src":"3168:12:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":7578,"kind":"baseConstructorSpecifier","modifierName":{"id":7576,"name":"Ownable","nameLocations":["3160:7:23"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"3160:7:23"},"nodeType":"ModifierInvocation","src":"3160:21:23"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":7568,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7561,"mutability":"mutable","name":"name","nameLocation":"3020:4:23","nodeType":"VariableDeclaration","scope":7621,"src":"3006:18:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7560,"name":"string","nodeType":"ElementaryTypeName","src":"3006:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7563,"mutability":"mutable","name":"symbol","nameLocation":"3048:6:23","nodeType":"VariableDeclaration","scope":7621,"src":"3034:20:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7562,"name":"string","nodeType":"ElementaryTypeName","src":"3034:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7565,"mutability":"mutable","name":"initialSupply","nameLocation":"3072:13:23","nodeType":"VariableDeclaration","scope":7621,"src":"3064:21:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7564,"name":"uint256","nodeType":"ElementaryTypeName","src":"3064:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7567,"mutability":"mutable","name":"initialOwner","nameLocation":"3103:12:23","nodeType":"VariableDeclaration","scope":7621,"src":"3095:20:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7566,"name":"address","nodeType":"ElementaryTypeName","src":"3095:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2996:125:23"},"returnParameters":{"id":7579,"nodeType":"ParameterList","parameters":[],"src":"3182:0:23"},"scope":8283,"src":"2985:851:23","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":7665,"nodeType":"Block","src":"4065:410:23","statements":[{"expression":{"id":7638,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":7634,"name":"fairLaunchConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7471,"src":"4075:16:23","typeDescriptions":{"typeIdentifier":"t_struct$_FairLaunchConfig_$7454_storage","typeString":"struct FairLaunchToken.FairLaunchConfig storage ref"}},"id":7636,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4092:15:23","memberName":"maxBuyPerWallet","nodeType":"MemberAccess","referencedDeclaration":7445,"src":"4075:32:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7637,"name":"_maxBuyPerWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7623,"src":"4110:16:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4075:51:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7639,"nodeType":"ExpressionStatement","src":"4075:51:23"},{"expression":{"id":7644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":7640,"name":"fairLaunchConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7471,"src":"4136:16:23","typeDescriptions":{"typeIdentifier":"t_struct$_FairLaunchConfig_$7454_storage","typeString":"struct FairLaunchToken.FairLaunchConfig storage ref"}},"id":7642,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4153:11:23","memberName":"maxBuyPerTx","nodeType":"MemberAccess","referencedDeclaration":7447,"src":"4136:28:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7643,"name":"_maxBuyPerTx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7625,"src":"4167:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4136:43:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7645,"nodeType":"ExpressionStatement","src":"4136:43:23"},{"expression":{"id":7650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":7646,"name":"fairLaunchConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7471,"src":"4189:16:23","typeDescriptions":{"typeIdentifier":"t_struct$_FairLaunchConfig_$7454_storage","typeString":"struct FairLaunchToken.FairLaunchConfig storage ref"}},"id":7648,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4206:14:23","memberName":"cooldownPeriod","nodeType":"MemberAccess","referencedDeclaration":7449,"src":"4189:31:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7649,"name":"_cooldownPeriod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7627,"src":"4223:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4189:49:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7651,"nodeType":"ExpressionStatement","src":"4189:49:23"},{"expression":{"id":7656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":7652,"name":"fairLaunchConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7471,"src":"4248:16:23","typeDescriptions":{"typeIdentifier":"t_struct$_FairLaunchConfig_$7454_storage","typeString":"struct FairLaunchToken.FairLaunchConfig storage ref"}},"id":7654,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4265:15:23","memberName":"antiSnipeBlocks","nodeType":"MemberAccess","referencedDeclaration":7451,"src":"4248:32:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7655,"name":"_antiSnipeBlocks","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7629,"src":"4283:16:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4248:51:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7657,"nodeType":"ExpressionStatement","src":"4248:51:23"},{"eventCall":{"arguments":[{"id":7659,"name":"_maxBuyPerWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7623,"src":"4357:16:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7660,"name":"_maxBuyPerTx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7625,"src":"4387:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7661,"name":"_cooldownPeriod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7627,"src":"4413:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7662,"name":"_antiSnipeBlocks","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7629,"src":"4442:16:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7658,"name":"FairLaunchConfigured","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7524,"src":"4323:20:23","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256,uint256,uint256)"}},"id":7663,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4323:145:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7664,"nodeType":"EmitStatement","src":"4318:150:23"}]},"functionSelector":"6d1d2159","id":7666,"implemented":true,"kind":"function","modifiers":[{"id":7632,"kind":"modifierInvocation","modifierName":{"id":7631,"name":"onlyOwner","nameLocations":["4055:9:23"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"4055:9:23"},"nodeType":"ModifierInvocation","src":"4055:9:23"}],"name":"configureFairLaunch","nameLocation":"3889:19:23","nodeType":"FunctionDefinition","parameters":{"id":7630,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7623,"mutability":"mutable","name":"_maxBuyPerWallet","nameLocation":"3926:16:23","nodeType":"VariableDeclaration","scope":7666,"src":"3918:24:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7622,"name":"uint256","nodeType":"ElementaryTypeName","src":"3918:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7625,"mutability":"mutable","name":"_maxBuyPerTx","nameLocation":"3960:12:23","nodeType":"VariableDeclaration","scope":7666,"src":"3952:20:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7624,"name":"uint256","nodeType":"ElementaryTypeName","src":"3952:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7627,"mutability":"mutable","name":"_cooldownPeriod","nameLocation":"3990:15:23","nodeType":"VariableDeclaration","scope":7666,"src":"3982:23:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7626,"name":"uint256","nodeType":"ElementaryTypeName","src":"3982:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7629,"mutability":"mutable","name":"_antiSnipeBlocks","nameLocation":"4023:16:23","nodeType":"VariableDeclaration","scope":7666,"src":"4015:24:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7628,"name":"uint256","nodeType":"ElementaryTypeName","src":"4015:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3908:137:23"},"returnParameters":{"id":7633,"nodeType":"ParameterList","parameters":[],"src":"4065:0:23"},"scope":8283,"src":"3880:595:23","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7690,"nodeType":"Block","src":"4529:177:23","statements":[{"expression":{"arguments":[{"id":7673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4547:15:23","subExpression":{"id":7672,"name":"tradingEnabled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7485,"src":"4548:14:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"54726164696e6720616c726561647920656e61626c6564","id":7674,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4564:25:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_a4d1beca50ea03ae2d0bef8bddea7067036a984881c1fb687d10a1e111335fc0","typeString":"literal_string \"Trading already enabled\""},"value":"Trading already enabled"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a4d1beca50ea03ae2d0bef8bddea7067036a984881c1fb687d10a1e111335fc0","typeString":"literal_string \"Trading already enabled\""}],"id":7671,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4539:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7675,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4539:51:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7676,"nodeType":"ExpressionStatement","src":"4539:51:23"},{"expression":{"id":7679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7677,"name":"tradingEnabled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7485,"src":"4600:14:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":7678,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4617:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"4600:21:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7680,"nodeType":"ExpressionStatement","src":"4600:21:23"},{"expression":{"id":7684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7681,"name":"launchBlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7479,"src":"4631:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":7682,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4645:5:23","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":7683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4651:6:23","memberName":"number","nodeType":"MemberAccess","src":"4645:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4631:26:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7685,"nodeType":"ExpressionStatement","src":"4631:26:23"},{"eventCall":{"arguments":[{"id":7687,"name":"launchBlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7479,"src":"4687:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7686,"name":"TradingEnabled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7528,"src":"4672:14:23","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":7688,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4672:27:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7689,"nodeType":"EmitStatement","src":"4667:32:23"}]},"functionSelector":"8a8c523c","id":7691,"implemented":true,"kind":"function","modifiers":[{"id":7669,"kind":"modifierInvocation","modifierName":{"id":7668,"name":"onlyOwner","nameLocations":["4519:9:23"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"4519:9:23"},"nodeType":"ModifierInvocation","src":"4519:9:23"}],"name":"enableTrading","nameLocation":"4494:13:23","nodeType":"FunctionDefinition","parameters":{"id":7667,"nodeType":"ParameterList","parameters":[],"src":"4507:2:23"},"returnParameters":{"id":7670,"nodeType":"ParameterList","parameters":[],"src":"4529:0:23"},"scope":8283,"src":"4485:221:23","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7702,"nodeType":"Block","src":"4764:49:23","statements":[{"expression":{"id":7700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":7696,"name":"fairLaunchConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7471,"src":"4774:16:23","typeDescriptions":{"typeIdentifier":"t_struct$_FairLaunchConfig_$7454_storage","typeString":"struct FairLaunchToken.FairLaunchConfig storage ref"}},"id":7698,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4791:7:23","memberName":"enabled","nodeType":"MemberAccess","referencedDeclaration":7453,"src":"4774:24:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":7699,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4801:5:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"4774:32:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7701,"nodeType":"ExpressionStatement","src":"4774:32:23"}]},"functionSelector":"a9277c0a","id":7703,"implemented":true,"kind":"function","modifiers":[{"id":7694,"kind":"modifierInvocation","modifierName":{"id":7693,"name":"onlyOwner","nameLocations":["4754:9:23"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"4754:9:23"},"nodeType":"ModifierInvocation","src":"4754:9:23"}],"name":"disableFairLaunch","nameLocation":"4725:17:23","nodeType":"FunctionDefinition","parameters":{"id":7692,"nodeType":"ParameterList","parameters":[],"src":"4742:2:23"},"returnParameters":{"id":7695,"nodeType":"ParameterList","parameters":[],"src":"4764:0:23"},"scope":8283,"src":"4716:97:23","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7745,"nodeType":"Block","src":"5025:327:23","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7715,"name":"_liquidityFeePercent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7705,"src":"5043:20:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"353030","id":7716,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5067:3:23","typeDescriptions":{"typeIdentifier":"t_rational_500_by_1","typeString":"int_const 500"},"value":"500"},"src":"5043:27:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"46656520746f6f2068696768","id":7718,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5072:14:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_48d9dea795d8d010580a5b191d0fe7c1ee70cd850707a0d7e7aba7c702de6be1","typeString":"literal_string \"Fee too high\""},"value":"Fee too high"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_48d9dea795d8d010580a5b191d0fe7c1ee70cd850707a0d7e7aba7c702de6be1","typeString":"literal_string \"Fee too high\""}],"id":7714,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5035:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7719,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5035:52:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7720,"nodeType":"ExpressionStatement","src":"5035:52:23"},{"expression":{"id":7725,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":7721,"name":"autoLiquidityConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7474,"src":"5107:19:23","typeDescriptions":{"typeIdentifier":"t_struct$_AutoLiquidityConfig_$7463_storage","typeString":"struct FairLaunchToken.AutoLiquidityConfig storage ref"}},"id":7723,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5127:19:23","memberName":"liquidityFeePercent","nodeType":"MemberAccess","referencedDeclaration":7456,"src":"5107:39:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7724,"name":"_liquidityFeePercent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7705,"src":"5149:20:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5107:62:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7726,"nodeType":"ExpressionStatement","src":"5107:62:23"},{"expression":{"id":7731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":7727,"name":"autoLiquidityConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7474,"src":"5179:19:23","typeDescriptions":{"typeIdentifier":"t_struct$_AutoLiquidityConfig_$7463_storage","typeString":"struct FairLaunchToken.AutoLiquidityConfig storage ref"}},"id":7729,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5199:19:23","memberName":"minTokensBeforeSwap","nodeType":"MemberAccess","referencedDeclaration":7458,"src":"5179:39:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7730,"name":"_minTokensBeforeSwap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7707,"src":"5221:20:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5179:62:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7732,"nodeType":"ExpressionStatement","src":"5179:62:23"},{"expression":{"id":7737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":7733,"name":"autoLiquidityConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7474,"src":"5251:19:23","typeDescriptions":{"typeIdentifier":"t_struct$_AutoLiquidityConfig_$7463_storage","typeString":"struct FairLaunchToken.AutoLiquidityConfig storage ref"}},"id":7735,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5271:13:23","memberName":"liquidityPair","nodeType":"MemberAccess","referencedDeclaration":7460,"src":"5251:33:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7736,"name":"_liquidityPair","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7709,"src":"5287:14:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5251:50:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7738,"nodeType":"ExpressionStatement","src":"5251:50:23"},{"expression":{"id":7743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":7739,"name":"autoLiquidityConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7474,"src":"5311:19:23","typeDescriptions":{"typeIdentifier":"t_struct$_AutoLiquidityConfig_$7463_storage","typeString":"struct FairLaunchToken.AutoLiquidityConfig storage ref"}},"id":7741,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5331:7:23","memberName":"enabled","nodeType":"MemberAccess","referencedDeclaration":7462,"src":"5311:27:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":7742,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5341:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"5311:34:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7744,"nodeType":"ExpressionStatement","src":"5311:34:23"}]},"functionSelector":"0eda5f32","id":7746,"implemented":true,"kind":"function","modifiers":[{"id":7712,"kind":"modifierInvocation","modifierName":{"id":7711,"name":"onlyOwner","nameLocations":["5015:9:23"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"5015:9:23"},"nodeType":"ModifierInvocation","src":"5015:9:23"}],"name":"configureAutoLiquidity","nameLocation":"4869:22:23","nodeType":"FunctionDefinition","parameters":{"id":7710,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7705,"mutability":"mutable","name":"_liquidityFeePercent","nameLocation":"4909:20:23","nodeType":"VariableDeclaration","scope":7746,"src":"4901:28:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7704,"name":"uint256","nodeType":"ElementaryTypeName","src":"4901:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7707,"mutability":"mutable","name":"_minTokensBeforeSwap","nameLocation":"4947:20:23","nodeType":"VariableDeclaration","scope":7746,"src":"4939:28:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7706,"name":"uint256","nodeType":"ElementaryTypeName","src":"4939:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7709,"mutability":"mutable","name":"_liquidityPair","nameLocation":"4985:14:23","nodeType":"VariableDeclaration","scope":7746,"src":"4977:22:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7708,"name":"address","nodeType":"ElementaryTypeName","src":"4977:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4891:114:23"},"returnParameters":{"id":7713,"nodeType":"ParameterList","parameters":[],"src":"5025:0:23"},"scope":8283,"src":"4860:492:23","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7772,"nodeType":"Block","src":"5472:192:23","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7754,"name":"_reflectionFeePercent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7748,"src":"5490:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"353030","id":7755,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5515:3:23","typeDescriptions":{"typeIdentifier":"t_rational_500_by_1","typeString":"int_const 500"},"value":"500"},"src":"5490:28:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"46656520746f6f2068696768","id":7757,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5520:14:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_48d9dea795d8d010580a5b191d0fe7c1ee70cd850707a0d7e7aba7c702de6be1","typeString":"literal_string \"Fee too high\""},"value":"Fee too high"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_48d9dea795d8d010580a5b191d0fe7c1ee70cd850707a0d7e7aba7c702de6be1","typeString":"literal_string \"Fee too high\""}],"id":7753,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5482:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7758,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5482:53:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7759,"nodeType":"ExpressionStatement","src":"5482:53:23"},{"expression":{"id":7764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":7760,"name":"reflectionConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7477,"src":"5555:16:23","typeDescriptions":{"typeIdentifier":"t_struct$_ReflectionConfig_$7468_storage","typeString":"struct FairLaunchToken.ReflectionConfig storage ref"}},"id":7762,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5572:20:23","memberName":"reflectionFeePercent","nodeType":"MemberAccess","referencedDeclaration":7465,"src":"5555:37:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7763,"name":"_reflectionFeePercent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7748,"src":"5595:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5555:61:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7765,"nodeType":"ExpressionStatement","src":"5555:61:23"},{"expression":{"id":7770,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":7766,"name":"reflectionConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7477,"src":"5626:16:23","typeDescriptions":{"typeIdentifier":"t_struct$_ReflectionConfig_$7468_storage","typeString":"struct FairLaunchToken.ReflectionConfig storage ref"}},"id":7768,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5643:7:23","memberName":"enabled","nodeType":"MemberAccess","referencedDeclaration":7467,"src":"5626:24:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":7769,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5653:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"5626:31:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7771,"nodeType":"ExpressionStatement","src":"5626:31:23"}]},"functionSelector":"6010ba34","id":7773,"implemented":true,"kind":"function","modifiers":[{"id":7751,"kind":"modifierInvocation","modifierName":{"id":7750,"name":"onlyOwner","nameLocations":["5462:9:23"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"5462:9:23"},"nodeType":"ModifierInvocation","src":"5462:9:23"}],"name":"enableReflections","nameLocation":"5404:17:23","nodeType":"FunctionDefinition","parameters":{"id":7749,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7748,"mutability":"mutable","name":"_reflectionFeePercent","nameLocation":"5430:21:23","nodeType":"VariableDeclaration","scope":7773,"src":"5422:29:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7747,"name":"uint256","nodeType":"ElementaryTypeName","src":"5422:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5421:31:23"},"returnParameters":{"id":7752,"nodeType":"ParameterList","parameters":[],"src":"5472:0:23"},"scope":8283,"src":"5395:269:23","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7800,"nodeType":"Block","src":"5742:167:23","statements":[{"expression":{"arguments":[{"id":7784,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5760:36:23","subExpression":{"baseExpression":{"id":7781,"name":"_isExcludedFromReflections","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7511,"src":"5761:26:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":7783,"indexExpression":{"id":7782,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7775,"src":"5788:7:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5761:35:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416c7265616479206578636c75646564","id":7785,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5798:18:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_66396a07fa8344d81b812cfe3bea3e63cf5a5f15b46663d05f60f8e8a2326e51","typeString":"literal_string \"Already excluded\""},"value":"Already excluded"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_66396a07fa8344d81b812cfe3bea3e63cf5a5f15b46663d05f60f8e8a2326e51","typeString":"literal_string \"Already excluded\""}],"id":7780,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5752:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7786,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5752:65:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7787,"nodeType":"ExpressionStatement","src":"5752:65:23"},{"expression":{"id":7792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7788,"name":"_isExcludedFromReflections","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7511,"src":"5827:26:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":7790,"indexExpression":{"id":7789,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7775,"src":"5854:7:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5827:35:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":7791,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5865:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"5827:42:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7793,"nodeType":"ExpressionStatement","src":"5827:42:23"},{"expression":{"arguments":[{"id":7797,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7775,"src":"5894:7:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":7794,"name":"_excluded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7514,"src":"5879:9:23","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":7796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5889:4:23","memberName":"push","nodeType":"MemberAccess","src":"5879:14:23","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$","typeString":"function (address[] storage pointer,address)"}},"id":7798,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5879:23:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7799,"nodeType":"ExpressionStatement","src":"5879:23:23"}]},"functionSelector":"25f25f4d","id":7801,"implemented":true,"kind":"function","modifiers":[{"id":7778,"kind":"modifierInvocation","modifierName":{"id":7777,"name":"onlyOwner","nameLocations":["5732:9:23"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"5732:9:23"},"nodeType":"ModifierInvocation","src":"5732:9:23"}],"name":"excludeFromReflections","nameLocation":"5683:22:23","nodeType":"FunctionDefinition","parameters":{"id":7776,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7775,"mutability":"mutable","name":"account","nameLocation":"5714:7:23","nodeType":"VariableDeclaration","scope":7801,"src":"5706:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7774,"name":"address","nodeType":"ElementaryTypeName","src":"5706:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5705:17:23"},"returnParameters":{"id":7779,"nodeType":"ParameterList","parameters":[],"src":"5742:0:23"},"scope":8283,"src":"5674:235:23","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7819,"nodeType":"Block","src":"6014:116:23","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7809,"name":"_burnFeePercent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7803,"src":"6032:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"353030","id":7810,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6051:3:23","typeDescriptions":{"typeIdentifier":"t_rational_500_by_1","typeString":"int_const 500"},"value":"500"},"src":"6032:22:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"46656520746f6f2068696768","id":7812,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6056:14:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_48d9dea795d8d010580a5b191d0fe7c1ee70cd850707a0d7e7aba7c702de6be1","typeString":"literal_string \"Fee too high\""},"value":"Fee too high"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_48d9dea795d8d010580a5b191d0fe7c1ee70cd850707a0d7e7aba7c702de6be1","typeString":"literal_string \"Fee too high\""}],"id":7808,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6024:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7813,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6024:47:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7814,"nodeType":"ExpressionStatement","src":"6024:47:23"},{"expression":{"id":7817,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7815,"name":"burnFeePercent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7482,"src":"6091:14:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7816,"name":"_burnFeePercent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7803,"src":"6108:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6091:32:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7818,"nodeType":"ExpressionStatement","src":"6091:32:23"}]},"functionSelector":"4bf2c7c9","id":7820,"implemented":true,"kind":"function","modifiers":[{"id":7806,"kind":"modifierInvocation","modifierName":{"id":7805,"name":"onlyOwner","nameLocations":["6004:9:23"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"6004:9:23"},"nodeType":"ModifierInvocation","src":"6004:9:23"}],"name":"setBurnFee","nameLocation":"5959:10:23","nodeType":"FunctionDefinition","parameters":{"id":7804,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7803,"mutability":"mutable","name":"_burnFeePercent","nameLocation":"5978:15:23","nodeType":"VariableDeclaration","scope":7820,"src":"5970:23:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7802,"name":"uint256","nodeType":"ElementaryTypeName","src":"5970:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5969:25:23"},"returnParameters":{"id":7807,"nodeType":"ParameterList","parameters":[],"src":"6014:0:23"},"scope":8283,"src":"5950:180:23","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7840,"nodeType":"Block","src":"6248:101:23","statements":[{"expression":{"id":7833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7829,"name":"isBlacklisted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7501,"src":"6258:13:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":7831,"indexExpression":{"id":7830,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7822,"src":"6272:7:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6258:22:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7832,"name":"blacklisted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7824,"src":"6283:11:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6258:36:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7834,"nodeType":"ExpressionStatement","src":"6258:36:23"},{"eventCall":{"arguments":[{"id":7836,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7822,"src":"6321:7:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7837,"name":"blacklisted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7824,"src":"6330:11:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":7835,"name":"Blacklisted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7544,"src":"6309:11:23","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$","typeString":"function (address,bool)"}},"id":7838,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6309:33:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7839,"nodeType":"EmitStatement","src":"6304:38:23"}]},"functionSelector":"153b0d1e","id":7841,"implemented":true,"kind":"function","modifiers":[{"id":7827,"kind":"modifierInvocation","modifierName":{"id":7826,"name":"onlyOwner","nameLocations":["6238:9:23"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"6238:9:23"},"nodeType":"ModifierInvocation","src":"6238:9:23"}],"name":"setBlacklist","nameLocation":"6181:12:23","nodeType":"FunctionDefinition","parameters":{"id":7825,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7822,"mutability":"mutable","name":"account","nameLocation":"6202:7:23","nodeType":"VariableDeclaration","scope":7841,"src":"6194:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7821,"name":"address","nodeType":"ElementaryTypeName","src":"6194:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7824,"mutability":"mutable","name":"blacklisted","nameLocation":"6216:11:23","nodeType":"VariableDeclaration","scope":7841,"src":"6211:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7823,"name":"bool","nodeType":"ElementaryTypeName","src":"6211:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6193:35:23"},"returnParameters":{"id":7828,"nodeType":"ParameterList","parameters":[],"src":"6248:0:23"},"scope":8283,"src":"6172:177:23","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7856,"nodeType":"Block","src":"6461:55:23","statements":[{"expression":{"id":7854,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7850,"name":"isExcludedFromFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7497,"src":"6471:18:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":7852,"indexExpression":{"id":7851,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7843,"src":"6490:7:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6471:27:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7853,"name":"excluded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7845,"src":"6501:8:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6471:38:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7855,"nodeType":"ExpressionStatement","src":"6471:38:23"}]},"functionSelector":"c0246668","id":7857,"implemented":true,"kind":"function","modifiers":[{"id":7848,"kind":"modifierInvocation","modifierName":{"id":7847,"name":"onlyOwner","nameLocations":["6451:9:23"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"6451:9:23"},"nodeType":"ModifierInvocation","src":"6451:9:23"}],"name":"excludeFromFees","nameLocation":"6394:15:23","nodeType":"FunctionDefinition","parameters":{"id":7846,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7843,"mutability":"mutable","name":"account","nameLocation":"6418:7:23","nodeType":"VariableDeclaration","scope":7857,"src":"6410:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7842,"name":"address","nodeType":"ElementaryTypeName","src":"6410:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7845,"mutability":"mutable","name":"excluded","nameLocation":"6432:8:23","nodeType":"VariableDeclaration","scope":7857,"src":"6427:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7844,"name":"bool","nodeType":"ElementaryTypeName","src":"6427:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6409:32:23"},"returnParameters":{"id":7849,"nodeType":"ParameterList","parameters":[],"src":"6461:0:23"},"scope":8283,"src":"6385:131:23","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[631],"body":{"id":8126,"nodeType":"Block","src":"6701:2874:23","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":7878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7873,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6719:20:23","subExpression":{"baseExpression":{"id":7870,"name":"isBlacklisted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7501,"src":"6720:13:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":7872,"indexExpression":{"id":7871,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7859,"src":"6734:4:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6720:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":7877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6743:18:23","subExpression":{"baseExpression":{"id":7874,"name":"isBlacklisted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7501,"src":"6744:13:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":7876,"indexExpression":{"id":7875,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7861,"src":"6758:2:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6744:17:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6719:42:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"426c61636b6c6973746564","id":7879,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6763:13:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_fef92ec79bbd568fc63edc095cddaebd47e166ea7932b60d9a91e79658733400","typeString":"literal_string \"Blacklisted\""},"value":"Blacklisted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fef92ec79bbd568fc63edc095cddaebd47e166ea7932b60d9a91e79658733400","typeString":"literal_string \"Blacklisted\""}],"id":7869,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6711:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7880,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6711:66:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7881,"nodeType":"ExpressionStatement","src":"6711:66:23"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":7893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":7888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7882,"name":"fairLaunchConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7471,"src":"6854:16:23","typeDescriptions":{"typeIdentifier":"t_struct$_FairLaunchConfig_$7454_storage","typeString":"struct FairLaunchToken.FairLaunchConfig storage ref"}},"id":7883,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6871:7:23","memberName":"enabled","nodeType":"MemberAccess","referencedDeclaration":7453,"src":"6854:24:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7884,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7859,"src":"6882:4:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":7885,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"6890:5:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":7886,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6890:7:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6882:15:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6854:43:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7889,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7861,"src":"6901:2:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":7890,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"6907:5:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":7891,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6907:7:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6901:13:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6854:60:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7980,"nodeType":"IfStatement","src":"6850:1193:23","trueBody":{"id":7979,"nodeType":"Block","src":"6916:1127:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":7904,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7894,"name":"launchBlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7479,"src":"6971:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":7895,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6985:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6971:15:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7897,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"6990:5:23","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":7898,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6996:6:23","memberName":"number","nodeType":"MemberAccess","src":"6990:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7899,"name":"launchBlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7479,"src":"7006:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"id":7900,"name":"fairLaunchConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7471,"src":"7020:16:23","typeDescriptions":{"typeIdentifier":"t_struct$_FairLaunchConfig_$7454_storage","typeString":"struct FairLaunchToken.FairLaunchConfig storage ref"}},"id":7901,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7037:15:23","memberName":"antiSnipeBlocks","nodeType":"MemberAccess","referencedDeclaration":7451,"src":"7020:32:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7006:46:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6990:62:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6971:81:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7919,"nodeType":"IfStatement","src":"6967:186:23","trueBody":{"id":7918,"nodeType":"Block","src":"7054:99:23","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":7914,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7906,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7861,"src":"7080:2:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":7907,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"7086:5:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":7908,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7086:7:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7080:13:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7910,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7859,"src":"7097:4:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":7911,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"7105:5:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":7912,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7105:7:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7097:15:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"7080:32:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416e74692d736e6970652070726f74656374696f6e","id":7915,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7114:23:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_a1e994c71b3513731e9effa0bd81687a4234b5038b9b1fc3f0ec6961d00b02a4","typeString":"literal_string \"Anti-snipe protection\""},"value":"Anti-snipe protection"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a1e994c71b3513731e9effa0bd81687a4234b5038b9b1fc3f0ec6961d00b02a4","typeString":"literal_string \"Anti-snipe protection\""}],"id":7905,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7072:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7916,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7072:66:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7917,"nodeType":"ExpressionStatement","src":"7072:66:23"}]}},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":7930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7920,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7859,"src":"7246:4:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":7921,"name":"autoLiquidityConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7474,"src":"7254:19:23","typeDescriptions":{"typeIdentifier":"t_struct$_AutoLiquidityConfig_$7463_storage","typeString":"struct FairLaunchToken.AutoLiquidityConfig storage ref"}},"id":7922,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7274:13:23","memberName":"liquidityPair","nodeType":"MemberAccess","referencedDeclaration":7460,"src":"7254:33:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7246:41:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7924,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7861,"src":"7291:2:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"id":7927,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"7305:4:23","typeDescriptions":{"typeIdentifier":"t_contract$_FairLaunchToken_$8283","typeString":"contract FairLaunchToken"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_FairLaunchToken_$8283","typeString":"contract FairLaunchToken"}],"id":7926,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7297:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7925,"name":"address","nodeType":"ElementaryTypeName","src":"7297:7:23","typeDescriptions":{}}},"id":7928,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7297:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7291:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"7246:64:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7978,"nodeType":"IfStatement","src":"7242:791:23","trueBody":{"id":7977,"nodeType":"Block","src":"7312:721:23","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7935,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7932,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7863,"src":"7381:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"id":7933,"name":"fairLaunchConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7471,"src":"7391:16:23","typeDescriptions":{"typeIdentifier":"t_struct$_FairLaunchConfig_$7454_storage","typeString":"struct FairLaunchToken.FairLaunchConfig storage ref"}},"id":7934,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7408:11:23","memberName":"maxBuyPerTx","nodeType":"MemberAccess","referencedDeclaration":7447,"src":"7391:28:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7381:38:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45786365656473206d61782062757920706572207478","id":7936,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7421:24:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_8a47083662e5118b10740f0e82a54826b69dcdcba204cbbbb9689112c03a2b53","typeString":"literal_string \"Exceeds max buy per tx\""},"value":"Exceeds max buy per tx"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8a47083662e5118b10740f0e82a54826b69dcdcba204cbbbb9689112c03a2b53","typeString":"literal_string \"Exceeds max buy per tx\""}],"id":7931,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7373:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7937,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7373:73:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7938,"nodeType":"ExpressionStatement","src":"7373:73:23"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":7940,"name":"totalBought","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7493,"src":"7548:11:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":7942,"indexExpression":{"id":7941,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7861,"src":"7560:2:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7548:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":7943,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7863,"src":"7566:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7548:24:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"id":7945,"name":"fairLaunchConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7471,"src":"7576:16:23","typeDescriptions":{"typeIdentifier":"t_struct$_FairLaunchConfig_$7454_storage","typeString":"struct FairLaunchToken.FairLaunchConfig storage ref"}},"id":7946,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7593:15:23","memberName":"maxBuyPerWallet","nodeType":"MemberAccess","referencedDeclaration":7445,"src":"7576:32:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7548:60:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45786365656473206d617820627579207065722077616c6c6574","id":7948,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7630:28:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_fe7271fdf16e686aac8ab7870b0a18a8d2226a1ec6ab1d7a847ec7059dd2e78d","typeString":"literal_string \"Exceeds max buy per wallet\""},"value":"Exceeds max buy per wallet"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fe7271fdf16e686aac8ab7870b0a18a8d2226a1ec6ab1d7a847ec7059dd2e78d","typeString":"literal_string \"Exceeds max buy per wallet\""}],"id":7939,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7519:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7949,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7519:157:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7950,"nodeType":"ExpressionStatement","src":"7519:157:23"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7960,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7952,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"7775:5:23","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":7953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7781:9:23","memberName":"timestamp","nodeType":"MemberAccess","src":"7775:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7959,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":7954,"name":"lastBuyTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7489,"src":"7794:11:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":7956,"indexExpression":{"id":7955,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7861,"src":"7806:2:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7794:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"id":7957,"name":"fairLaunchConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7471,"src":"7812:16:23","typeDescriptions":{"typeIdentifier":"t_struct$_FairLaunchConfig_$7454_storage","typeString":"struct FairLaunchToken.FairLaunchConfig storage ref"}},"id":7958,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7829:14:23","memberName":"cooldownPeriod","nodeType":"MemberAccess","referencedDeclaration":7449,"src":"7812:31:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7794:49:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7775:68:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"436f6f6c646f776e20706572696f6420616374697665","id":7961,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7865:24:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_60e50fe4b5f9ae998b7c4af6246a3be868b5d99ebc1f2f26c5c277ea2f50399f","typeString":"literal_string \"Cooldown period active\""},"value":"Cooldown period active"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_60e50fe4b5f9ae998b7c4af6246a3be868b5d99ebc1f2f26c5c277ea2f50399f","typeString":"literal_string \"Cooldown period active\""}],"id":7951,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7746:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7962,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7746:161:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7963,"nodeType":"ExpressionStatement","src":"7746:161:23"},{"expression":{"id":7968,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7964,"name":"totalBought","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7493,"src":"7942:11:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":7966,"indexExpression":{"id":7965,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7861,"src":"7954:2:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7942:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":7967,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7863,"src":"7961:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7942:25:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7969,"nodeType":"ExpressionStatement","src":"7942:25:23"},{"expression":{"id":7975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7970,"name":"lastBuyTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7489,"src":"7985:11:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":7972,"indexExpression":{"id":7971,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7861,"src":"7997:2:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7985:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":7973,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"8003:5:23","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":7974,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8009:9:23","memberName":"timestamp","nodeType":"MemberAccess","src":"8003:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7985:33:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7976,"nodeType":"ExpressionStatement","src":"7985:33:23"}]}}]}},{"assignments":[7982],"declarations":[{"constant":false,"id":7982,"mutability":"mutable","name":"burnAmount","nameLocation":"8095:10:23","nodeType":"VariableDeclaration","scope":8126,"src":"8087:18:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7981,"name":"uint256","nodeType":"ElementaryTypeName","src":"8087:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7984,"initialValue":{"hexValue":"30","id":7983,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8108:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8087:22:23"},{"assignments":[7986],"declarations":[{"constant":false,"id":7986,"mutability":"mutable","name":"liquidityAmount","nameLocation":"8127:15:23","nodeType":"VariableDeclaration","scope":8126,"src":"8119:23:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7985,"name":"uint256","nodeType":"ElementaryTypeName","src":"8119:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7988,"initialValue":{"hexValue":"30","id":7987,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8145:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8119:27:23"},{"assignments":[7990],"declarations":[{"constant":false,"id":7990,"mutability":"mutable","name":"reflectionAmount","nameLocation":"8164:16:23","nodeType":"VariableDeclaration","scope":8126,"src":"8156:24:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7989,"name":"uint256","nodeType":"ElementaryTypeName","src":"8156:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7992,"initialValue":{"hexValue":"30","id":7991,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8183:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8156:28:23"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":8001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"8207:25:23","subExpression":{"baseExpression":{"id":7993,"name":"isExcludedFromFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7497,"src":"8208:18:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":7995,"indexExpression":{"id":7994,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7859,"src":"8227:4:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8208:24:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":8000,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"8236:23:23","subExpression":{"baseExpression":{"id":7997,"name":"isExcludedFromFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7497,"src":"8237:18:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":7999,"indexExpression":{"id":7998,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7861,"src":"8256:2:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8237:22:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8207:52:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8055,"nodeType":"IfStatement","src":"8203:609:23","trueBody":{"id":8054,"nodeType":"Block","src":"8261:551:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8004,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8002,"name":"burnFeePercent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7482,"src":"8279:14:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":8003,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8296:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8279:18:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8015,"nodeType":"IfStatement","src":"8275:103:23","trueBody":{"id":8014,"nodeType":"Block","src":"8299:79:23","statements":[{"expression":{"id":8012,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8005,"name":"burnAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7982,"src":"8317:10:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8008,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8006,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7863,"src":"8331:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":8007,"name":"burnFeePercent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7482,"src":"8340:14:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8331:23:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":8009,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8330:25:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"3130303030","id":8010,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8358:5:23","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"src":"8330:33:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8317:46:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8013,"nodeType":"ExpressionStatement","src":"8317:46:23"}]}},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":8022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8016,"name":"autoLiquidityConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7474,"src":"8408:19:23","typeDescriptions":{"typeIdentifier":"t_struct$_AutoLiquidityConfig_$7463_storage","typeString":"struct FairLaunchToken.AutoLiquidityConfig storage ref"}},"id":8017,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8428:7:23","memberName":"enabled","nodeType":"MemberAccess","referencedDeclaration":7462,"src":"8408:27:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8018,"name":"autoLiquidityConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7474,"src":"8439:19:23","typeDescriptions":{"typeIdentifier":"t_struct$_AutoLiquidityConfig_$7463_storage","typeString":"struct FairLaunchToken.AutoLiquidityConfig storage ref"}},"id":8019,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8459:19:23","memberName":"liquidityFeePercent","nodeType":"MemberAccess","referencedDeclaration":7456,"src":"8439:39:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":8020,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8481:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8439:43:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8408:74:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8034,"nodeType":"IfStatement","src":"8404:189:23","trueBody":{"id":8033,"nodeType":"Block","src":"8484:109:23","statements":[{"expression":{"id":8031,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8023,"name":"liquidityAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7986,"src":"8502:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8030,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8024,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7863,"src":"8521:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":8025,"name":"autoLiquidityConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7474,"src":"8530:19:23","typeDescriptions":{"typeIdentifier":"t_struct$_AutoLiquidityConfig_$7463_storage","typeString":"struct FairLaunchToken.AutoLiquidityConfig storage ref"}},"id":8026,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8550:19:23","memberName":"liquidityFeePercent","nodeType":"MemberAccess","referencedDeclaration":7456,"src":"8530:39:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8521:48:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":8028,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8520:50:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"3130303030","id":8029,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8573:5:23","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"src":"8520:58:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8502:76:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8032,"nodeType":"ExpressionStatement","src":"8502:76:23"}]}},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":8041,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8035,"name":"reflectionConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7477,"src":"8623:16:23","typeDescriptions":{"typeIdentifier":"t_struct$_ReflectionConfig_$7468_storage","typeString":"struct FairLaunchToken.ReflectionConfig storage ref"}},"id":8036,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8640:7:23","memberName":"enabled","nodeType":"MemberAccess","referencedDeclaration":7467,"src":"8623:24:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8037,"name":"reflectionConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7477,"src":"8651:16:23","typeDescriptions":{"typeIdentifier":"t_struct$_ReflectionConfig_$7468_storage","typeString":"struct FairLaunchToken.ReflectionConfig storage ref"}},"id":8038,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8668:20:23","memberName":"reflectionFeePercent","nodeType":"MemberAccess","referencedDeclaration":7465,"src":"8651:37:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":8039,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8691:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8651:41:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8623:69:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8053,"nodeType":"IfStatement","src":"8619:183:23","trueBody":{"id":8052,"nodeType":"Block","src":"8694:108:23","statements":[{"expression":{"id":8050,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8042,"name":"reflectionAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7990,"src":"8712:16:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8049,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8043,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7863,"src":"8732:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":8044,"name":"reflectionConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7477,"src":"8741:16:23","typeDescriptions":{"typeIdentifier":"t_struct$_ReflectionConfig_$7468_storage","typeString":"struct FairLaunchToken.ReflectionConfig storage ref"}},"id":8045,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8758:20:23","memberName":"reflectionFeePercent","nodeType":"MemberAccess","referencedDeclaration":7465,"src":"8741:37:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8732:46:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":8047,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8731:48:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"3130303030","id":8048,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8782:5:23","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"src":"8731:56:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8712:75:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8051,"nodeType":"ExpressionStatement","src":"8712:75:23"}]}}]}},{"assignments":[8057],"declarations":[{"constant":false,"id":8057,"mutability":"mutable","name":"transferAmount","nameLocation":"8838:14:23","nodeType":"VariableDeclaration","scope":8126,"src":"8830:22:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8056,"name":"uint256","nodeType":"ElementaryTypeName","src":"8830:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8065,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8062,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8060,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8058,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7863,"src":"8855:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":8059,"name":"burnAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7982,"src":"8864:10:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8855:19:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":8061,"name":"liquidityAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7986,"src":"8877:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8855:37:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":8063,"name":"reflectionAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7990,"src":"8895:16:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8855:56:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8830:81:23"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8066,"name":"burnAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7982,"src":"8958:10:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":8067,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8971:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8958:14:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8081,"nodeType":"IfStatement","src":"8954:88:23","trueBody":{"id":8080,"nodeType":"Block","src":"8974:68:23","statements":[{"expression":{"arguments":[{"id":8072,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7859,"src":"9002:4:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":8075,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9016:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":8074,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9008:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8073,"name":"address","nodeType":"ElementaryTypeName","src":"9008:7:23","typeDescriptions":{}}},"id":8076,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9008:10:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8077,"name":"burnAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7982,"src":"9020:10:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":8069,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"8988:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_FairLaunchToken_$8283_$","typeString":"type(contract super FairLaunchToken)"}},"id":8071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8994:7:23","memberName":"_update","nodeType":"MemberAccess","referencedDeclaration":631,"src":"8988:13:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":8078,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8988:43:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8079,"nodeType":"ExpressionStatement","src":"8988:43:23"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8082,"name":"liquidityAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7986,"src":"9097:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":8083,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9115:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9097:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8097,"nodeType":"IfStatement","src":"9093:176:23","trueBody":{"id":8096,"nodeType":"Block","src":"9118:151:23","statements":[{"expression":{"arguments":[{"id":8088,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7859,"src":"9146:4:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":8091,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"9160:4:23","typeDescriptions":{"typeIdentifier":"t_contract$_FairLaunchToken_$8283","typeString":"contract FairLaunchToken"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_FairLaunchToken_$8283","typeString":"contract FairLaunchToken"}],"id":8090,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9152:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8089,"name":"address","nodeType":"ElementaryTypeName","src":"9152:7:23","typeDescriptions":{}}},"id":8092,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9152:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8093,"name":"liquidityAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7986,"src":"9167:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":8085,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"9132:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_FairLaunchToken_$8283_$","typeString":"type(contract super FairLaunchToken)"}},"id":8087,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9138:7:23","memberName":"_update","nodeType":"MemberAccess","referencedDeclaration":631,"src":"9132:13:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":8094,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9132:51:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8095,"nodeType":"ExpressionStatement","src":"9132:51:23"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8098,"name":"reflectionAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7990,"src":"9321:16:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":8099,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9340:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9321:20:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8117,"nodeType":"IfStatement","src":"9317:157:23","trueBody":{"id":8116,"nodeType":"Block","src":"9343:131:23","statements":[{"expression":{"arguments":[{"id":8102,"name":"reflectionAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7990,"src":"9380:16:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8101,"name":"_distributeReflections","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8141,"src":"9357:22:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":8103,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9357:40:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8104,"nodeType":"ExpressionStatement","src":"9357:40:23"},{"expression":{"arguments":[{"id":8108,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7859,"src":"9425:4:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":8111,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"9439:4:23","typeDescriptions":{"typeIdentifier":"t_contract$_FairLaunchToken_$8283","typeString":"contract FairLaunchToken"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_FairLaunchToken_$8283","typeString":"contract FairLaunchToken"}],"id":8110,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9431:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8109,"name":"address","nodeType":"ElementaryTypeName","src":"9431:7:23","typeDescriptions":{}}},"id":8112,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9431:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8113,"name":"reflectionAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7990,"src":"9446:16:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":8105,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"9411:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_FairLaunchToken_$8283_$","typeString":"type(contract super FairLaunchToken)"}},"id":8107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9417:7:23","memberName":"_update","nodeType":"MemberAccess","referencedDeclaration":631,"src":"9411:13:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":8114,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9411:52:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8115,"nodeType":"ExpressionStatement","src":"9411:52:23"}]}},{"expression":{"arguments":[{"id":8121,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7859,"src":"9543:4:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8122,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7861,"src":"9549:2:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8123,"name":"transferAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8057,"src":"9553:14:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":8118,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"9529:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_FairLaunchToken_$8283_$","typeString":"type(contract super FairLaunchToken)"}},"id":8120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9535:7:23","memberName":"_update","nodeType":"MemberAccess","referencedDeclaration":631,"src":"9529:13:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":8124,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9529:39:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8125,"nodeType":"ExpressionStatement","src":"9529:39:23"}]},"id":8127,"implemented":true,"kind":"function","modifiers":[{"id":7867,"kind":"modifierInvocation","modifierName":{"id":7866,"name":"onlyWhenTrading","nameLocations":["6685:15:23"],"nodeType":"IdentifierPath","referencedDeclaration":7559,"src":"6685:15:23"},"nodeType":"ModifierInvocation","src":"6685:15:23"}],"name":"_update","nameLocation":"6587:7:23","nodeType":"FunctionDefinition","overrides":{"id":7865,"nodeType":"OverrideSpecifier","overrides":[],"src":"6676:8:23"},"parameters":{"id":7864,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7859,"mutability":"mutable","name":"from","nameLocation":"6612:4:23","nodeType":"VariableDeclaration","scope":8127,"src":"6604:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7858,"name":"address","nodeType":"ElementaryTypeName","src":"6604:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7861,"mutability":"mutable","name":"to","nameLocation":"6634:2:23","nodeType":"VariableDeclaration","scope":8127,"src":"6626:10:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7860,"name":"address","nodeType":"ElementaryTypeName","src":"6626:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7863,"mutability":"mutable","name":"amount","nameLocation":"6654:6:23","nodeType":"VariableDeclaration","scope":8127,"src":"6646:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7862,"name":"uint256","nodeType":"ElementaryTypeName","src":"6646:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6594:72:23"},"returnParameters":{"id":7868,"nodeType":"ParameterList","parameters":[],"src":"6701:0:23"},"scope":8283,"src":"6578:2997:23","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":8140,"nodeType":"Block","src":"9641:89:23","statements":[{"expression":{"id":8134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8132,"name":"_totalReflections","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7503,"src":"9651:17:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":8133,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8129,"src":"9672:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9651:27:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8135,"nodeType":"ExpressionStatement","src":"9651:27:23"},{"eventCall":{"arguments":[{"id":8137,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8129,"src":"9716:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8136,"name":"ReflectionsDistributed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7538,"src":"9693:22:23","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":8138,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9693:30:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8139,"nodeType":"EmitStatement","src":"9688:35:23"}]},"id":8141,"implemented":true,"kind":"function","modifiers":[],"name":"_distributeReflections","nameLocation":"9594:22:23","nodeType":"FunctionDefinition","parameters":{"id":8130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8129,"mutability":"mutable","name":"amount","nameLocation":"9625:6:23","nodeType":"VariableDeclaration","scope":8141,"src":"9617:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8128,"name":"uint256","nodeType":"ElementaryTypeName","src":"9617:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9616:16:23"},"returnParameters":{"id":8131,"nodeType":"ParameterList","parameters":[],"src":"9641:0:23"},"scope":8283,"src":"9585:145:23","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"constant":false,"functionSelector":"c07473f6","id":8145,"mutability":"mutable","name":"votingPower","nameLocation":"9848:11:23","nodeType":"VariableDeclaration","scope":8283,"src":"9813:46:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":8144,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":8142,"name":"address","nodeType":"ElementaryTypeName","src":"9821:7:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"9813:27:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":8143,"name":"uint256","nodeType":"ElementaryTypeName","src":"9832:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"functionSelector":"43859632","id":8151,"mutability":"mutable","name":"hasVoted","nameLocation":"9917:8:23","nodeType":"VariableDeclaration","scope":8283,"src":"9865:60:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(uint256 => mapping(address => bool))"},"typeName":{"id":8150,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":8146,"name":"uint256","nodeType":"ElementaryTypeName","src":"9873:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"9865:44:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(uint256 => mapping(address => bool))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":8149,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":8147,"name":"address","nodeType":"ElementaryTypeName","src":"9892:7:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"9884:24:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":8148,"name":"bool","nodeType":"ElementaryTypeName","src":"9903:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}}},"visibility":"public"},{"body":{"id":8165,"nodeType":"Block","src":"9982:64:23","statements":[{"expression":{"id":8163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":8156,"name":"votingPower","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8145,"src":"9992:11:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":8158,"indexExpression":{"id":8157,"name":"delegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8153,"src":"10004:9:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9992:22:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"arguments":[{"expression":{"id":8160,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"10028:3:23","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8161,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10032:6:23","memberName":"sender","nodeType":"MemberAccess","src":"10028:10:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":8159,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":410,"src":"10018:9:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":8162,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10018:21:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9992:47:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8164,"nodeType":"ExpressionStatement","src":"9992:47:23"}]},"functionSelector":"5c19a95c","id":8166,"implemented":true,"kind":"function","modifiers":[],"name":"delegate","nameLocation":"9945:8:23","nodeType":"FunctionDefinition","parameters":{"id":8154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8153,"mutability":"mutable","name":"delegatee","nameLocation":"9962:9:23","nodeType":"VariableDeclaration","scope":8166,"src":"9954:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8152,"name":"address","nodeType":"ElementaryTypeName","src":"9954:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9953:19:23"},"returnParameters":{"id":8155,"nodeType":"ParameterList","parameters":[],"src":"9982:0:23"},"scope":8283,"src":"9936:110:23","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":8195,"nodeType":"Block","src":"10136:152:23","statements":[{"assignments":[8172],"declarations":[{"constant":false,"id":8172,"mutability":"mutable","name":"balance","nameLocation":"10154:7:23","nodeType":"VariableDeclaration","scope":8195,"src":"10146:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8171,"name":"uint256","nodeType":"ElementaryTypeName","src":"10146:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8178,"initialValue":{"expression":{"arguments":[{"id":8175,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"10172:4:23","typeDescriptions":{"typeIdentifier":"t_contract$_FairLaunchToken_$8283","typeString":"contract FairLaunchToken"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_FairLaunchToken_$8283","typeString":"contract FairLaunchToken"}],"id":8174,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10164:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8173,"name":"address","nodeType":"ElementaryTypeName","src":"10164:7:23","typeDescriptions":{}}},"id":8176,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10164:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":8177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10178:7:23","memberName":"balance","nodeType":"MemberAccess","src":"10164:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10146:39:23"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8180,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8172,"src":"10203:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":8181,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10213:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10203:11:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f2045544820746f207769746864726177","id":8183,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10216:20:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_9df16c5c3e9f487854502591282f9dbd29044f6d3f3bf4c9daa5d3460486dd95","typeString":"literal_string \"No ETH to withdraw\""},"value":"No ETH to withdraw"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9df16c5c3e9f487854502591282f9dbd29044f6d3f3bf4c9daa5d3460486dd95","typeString":"literal_string \"No ETH to withdraw\""}],"id":8179,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10195:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8184,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10195:42:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8185,"nodeType":"ExpressionStatement","src":"10195:42:23"},{"expression":{"arguments":[{"id":8192,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8172,"src":"10273:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":8188,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"10255:5:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":8189,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10255:7:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":8187,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10247:8:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":8186,"name":"address","nodeType":"ElementaryTypeName","src":"10247:8:23","stateMutability":"payable","typeDescriptions":{}}},"id":8190,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10247:16:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":8191,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10264:8:23","memberName":"transfer","nodeType":"MemberAccess","src":"10247:25:23","typeDescriptions":{"typeIdentifier":"t_function_transfer_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":8193,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10247:34:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8194,"nodeType":"ExpressionStatement","src":"10247:34:23"}]},"functionSelector":"db2e21bc","id":8196,"implemented":true,"kind":"function","modifiers":[{"id":8169,"kind":"modifierInvocation","modifierName":{"id":8168,"name":"onlyOwner","nameLocations":["10126:9:23"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"10126:9:23"},"nodeType":"ModifierInvocation","src":"10126:9:23"}],"name":"emergencyWithdraw","nameLocation":"10097:17:23","nodeType":"FunctionDefinition","parameters":{"id":8167,"nodeType":"ParameterList","parameters":[],"src":"10114:2:23"},"returnParameters":{"id":8170,"nodeType":"ParameterList","parameters":[],"src":"10136:0:23"},"scope":8283,"src":"10088:200:23","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":8241,"nodeType":"Block","src":"10365:249:23","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":8209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8204,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8198,"src":"10383:5:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"id":8207,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"10400:4:23","typeDescriptions":{"typeIdentifier":"t_contract$_FairLaunchToken_$8283","typeString":"contract FairLaunchToken"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_FairLaunchToken_$8283","typeString":"contract FairLaunchToken"}],"id":8206,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10392:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8205,"name":"address","nodeType":"ElementaryTypeName","src":"10392:7:23","typeDescriptions":{}}},"id":8208,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10392:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10383:22:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"43616e6e6f74207769746864726177206f776e20746f6b656e73","id":8210,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10407:28:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_2a4b2ba36f9e275da9750f638b0402650ffc49f42156267cd88bbccc14d1c188","typeString":"literal_string \"Cannot withdraw own tokens\""},"value":"Cannot withdraw own tokens"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2a4b2ba36f9e275da9750f638b0402650ffc49f42156267cd88bbccc14d1c188","typeString":"literal_string \"Cannot withdraw own tokens\""}],"id":8203,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10375:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8211,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10375:61:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8212,"nodeType":"ExpressionStatement","src":"10375:61:23"},{"assignments":[8214],"declarations":[{"constant":false,"id":8214,"mutability":"mutable","name":"balance","nameLocation":"10454:7:23","nodeType":"VariableDeclaration","scope":8241,"src":"10446:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8213,"name":"uint256","nodeType":"ElementaryTypeName","src":"10446:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8224,"initialValue":{"arguments":[{"arguments":[{"id":8221,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"10496:4:23","typeDescriptions":{"typeIdentifier":"t_contract$_FairLaunchToken_$8283","typeString":"contract FairLaunchToken"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_FairLaunchToken_$8283","typeString":"contract FairLaunchToken"}],"id":8220,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10488:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8219,"name":"address","nodeType":"ElementaryTypeName","src":"10488:7:23","typeDescriptions":{}}},"id":8222,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10488:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":8216,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8198,"src":"10471:5:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":8215,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":902,"src":"10464:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$902_$","typeString":"type(contract IERC20)"}},"id":8217,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10464:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$902","typeString":"contract IERC20"}},"id":8218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10478:9:23","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":859,"src":"10464:23:23","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":8223,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10464:38:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10446:56:23"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8226,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8214,"src":"10520:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":8227,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10530:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10520:11:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f20746f6b656e7320746f207769746864726177","id":8229,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10533:23:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_7cc6b3e105e5333edddf04583e651cc3d3f46302c4d3edb1ca282ad53029b8db","typeString":"literal_string \"No tokens to withdraw\""},"value":"No tokens to withdraw"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7cc6b3e105e5333edddf04583e651cc3d3f46302c4d3edb1ca282ad53029b8db","typeString":"literal_string \"No tokens to withdraw\""}],"id":8225,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10512:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8230,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10512:45:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8231,"nodeType":"ExpressionStatement","src":"10512:45:23"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":8236,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"10590:5:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":8237,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10590:7:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8238,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8214,"src":"10599:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":8233,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8198,"src":"10574:5:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":8232,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":902,"src":"10567:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$902_$","typeString":"type(contract IERC20)"}},"id":8234,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10567:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$902","typeString":"contract IERC20"}},"id":8235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10581:8:23","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":869,"src":"10567:22:23","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":8239,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10567:40:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8240,"nodeType":"ExpressionStatement","src":"10567:40:23"}]},"functionSelector":"b2af127c","id":8242,"implemented":true,"kind":"function","modifiers":[{"id":8201,"kind":"modifierInvocation","modifierName":{"id":8200,"name":"onlyOwner","nameLocations":["10355:9:23"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"10355:9:23"},"nodeType":"ModifierInvocation","src":"10355:9:23"}],"name":"emergencyWithdrawTokens","nameLocation":"10307:23:23","nodeType":"FunctionDefinition","parameters":{"id":8199,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8198,"mutability":"mutable","name":"token","nameLocation":"10339:5:23","nodeType":"VariableDeclaration","scope":8242,"src":"10331:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8197,"name":"address","nodeType":"ElementaryTypeName","src":"10331:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"10330:15:23"},"returnParameters":{"id":8202,"nodeType":"ParameterList","parameters":[],"src":"10365:0:23"},"scope":8283,"src":"10298:316:23","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":8261,"nodeType":"Block","src":"10730:128:23","statements":[{"condition":{"baseExpression":{"id":8249,"name":"_isExcludedFromReflections","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7511,"src":"10744:26:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":8251,"indexExpression":{"id":8250,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8244,"src":"10771:7:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10744:35:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8256,"nodeType":"IfStatement","src":"10740:66:23","trueBody":{"expression":{"arguments":[{"id":8253,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8244,"src":"10798:7:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":8252,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":410,"src":"10788:9:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":8254,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10788:18:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8248,"id":8255,"nodeType":"Return","src":"10781:25:23"}},{"expression":{"baseExpression":{"id":8257,"name":"_reflectionBalances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7507,"src":"10823:19:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":8259,"indexExpression":{"id":8258,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8244,"src":"10843:7:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10823:28:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8248,"id":8260,"nodeType":"Return","src":"10816:35:23"}]},"functionSelector":"1682aa49","id":8262,"implemented":true,"kind":"function","modifiers":[],"name":"getReflectionBalance","nameLocation":"10660:20:23","nodeType":"FunctionDefinition","parameters":{"id":8245,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8244,"mutability":"mutable","name":"account","nameLocation":"10689:7:23","nodeType":"VariableDeclaration","scope":8262,"src":"10681:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8243,"name":"address","nodeType":"ElementaryTypeName","src":"10681:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"10680:17:23"},"returnParameters":{"id":8248,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8247,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8262,"src":"10721:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8246,"name":"uint256","nodeType":"ElementaryTypeName","src":"10721:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10720:9:23"},"scope":8283,"src":"10651:207:23","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":8269,"nodeType":"Block","src":"10931:41:23","statements":[{"expression":{"id":8267,"name":"_totalReflections","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7503,"src":"10948:17:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8266,"id":8268,"nodeType":"Return","src":"10941:24:23"}]},"functionSelector":"ae267735","id":8270,"implemented":true,"kind":"function","modifiers":[],"name":"getTotalReflections","nameLocation":"10877:19:23","nodeType":"FunctionDefinition","parameters":{"id":8263,"nodeType":"ParameterList","parameters":[],"src":"10896:2:23"},"returnParameters":{"id":8266,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8265,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8270,"src":"10922:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8264,"name":"uint256","nodeType":"ElementaryTypeName","src":"10922:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10921:9:23"},"scope":8283,"src":"10868:104:23","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":8281,"nodeType":"Block","src":"11063:59:23","statements":[{"expression":{"baseExpression":{"id":8277,"name":"_isExcludedFromReflections","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7511,"src":"11080:26:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":8279,"indexExpression":{"id":8278,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8272,"src":"11107:7:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11080:35:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":8276,"id":8280,"nodeType":"Return","src":"11073:42:23"}]},"functionSelector":"e6375d3e","id":8282,"implemented":true,"kind":"function","modifiers":[],"name":"isExcludedFromReflections","nameLocation":"10991:25:23","nodeType":"FunctionDefinition","parameters":{"id":8273,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8272,"mutability":"mutable","name":"account","nameLocation":"11025:7:23","nodeType":"VariableDeclaration","scope":8282,"src":"11017:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8271,"name":"address","nodeType":"ElementaryTypeName","src":"11017:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"11016:17:23"},"returnParameters":{"id":8276,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8275,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8282,"src":"11057:4:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8274,"name":"bool","nodeType":"ElementaryTypeName","src":"11057:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11056:6:23"},"scope":8283,"src":"10982:140:23","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":8284,"src":"503:10621:23","usedErrors":[13,18,184,189,194,203,208,213,979,986,1204,1436,1505,1507,3245,3250,3255],"usedEvents":[24,152,836,845,7524,7528,7534,7538,7544]}],"src":"32:11092:23"},"id":23},"contracts/MemeCoinWithFees.sol":{"ast":{"absolutePath":"contracts/MemeCoinWithFees.sol","exportedSymbols":{"Context":[1194],"ERC20":[824],"ERC20Burnable":[948],"IERC20":[902],"IERC20Errors":[214],"IERC20Metadata":[1128],"MemeCoinWithFees":[8963],"Ownable":[147],"Pausable":[1422],"ReentrancyGuard":[1491]},"id":8964,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":8285,"literals":["solidity","^","0.8",".19"],"nodeType":"PragmaDirective","src":"32:24:24"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"@openzeppelin/contracts/token/ERC20/ERC20.sol","id":8286,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8964,"sourceUnit":825,"src":"58:55:24","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol","file":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol","id":8287,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8964,"sourceUnit":949,"src":"114:74:24","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":8288,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8964,"sourceUnit":148,"src":"189:52:24","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Pausable.sol","file":"@openzeppelin/contracts/utils/Pausable.sol","id":8289,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8964,"sourceUnit":1423,"src":"242:52:24","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","file":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","id":8290,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8964,"sourceUnit":1492,"src":"295:59:24","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":8292,"name":"ERC20","nameLocations":["487:5:24"],"nodeType":"IdentifierPath","referencedDeclaration":824,"src":"487:5:24"},"id":8293,"nodeType":"InheritanceSpecifier","src":"487:5:24"},{"baseName":{"id":8294,"name":"ERC20Burnable","nameLocations":["494:13:24"],"nodeType":"IdentifierPath","referencedDeclaration":948,"src":"494:13:24"},"id":8295,"nodeType":"InheritanceSpecifier","src":"494:13:24"},{"baseName":{"id":8296,"name":"Ownable","nameLocations":["509:7:24"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"509:7:24"},"id":8297,"nodeType":"InheritanceSpecifier","src":"509:7:24"},{"baseName":{"id":8298,"name":"Pausable","nameLocations":["518:8:24"],"nodeType":"IdentifierPath","referencedDeclaration":1422,"src":"518:8:24"},"id":8299,"nodeType":"InheritanceSpecifier","src":"518:8:24"},{"baseName":{"id":8300,"name":"ReentrancyGuard","nameLocations":["528:15:24"],"nodeType":"IdentifierPath","referencedDeclaration":1491,"src":"528:15:24"},"id":8301,"nodeType":"InheritanceSpecifier","src":"528:15:24"}],"canonicalName":"MemeCoinWithFees","contractDependencies":[],"contractKind":"contract","documentation":{"id":8291,"nodeType":"StructuredDocumentation","src":"356:101:24","text":" @title MemeCoinWithFees\n @dev ERC20 token with creator fee mechanism for revenue sharing"},"fullyImplemented":true,"id":8963,"linearizedBaseContracts":[8963,1491,1422,147,948,824,214,1128,902,1194],"name":"MemeCoinWithFees","nameLocation":"467:16:24","nodeType":"ContractDefinition","nodes":[{"constant":true,"functionSelector":"cc3cbd2a","id":8304,"mutability":"constant","name":"CREATOR_FEE_BPS","nameLocation":"599:15:24","nodeType":"VariableDeclaration","scope":8963,"src":"575:45:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8302,"name":"uint256","nodeType":"ElementaryTypeName","src":"575:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"313030","id":8303,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"617:3:24","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"visibility":"public"},{"constant":true,"functionSelector":"539aa77f","id":8307,"mutability":"constant","name":"PLATFORM_FEE_BPS","nameLocation":"672:16:24","nodeType":"VariableDeclaration","scope":8963,"src":"648:46:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8305,"name":"uint256","nodeType":"ElementaryTypeName","src":"648:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"313030","id":8306,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"691:3:24","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"visibility":"public"},{"constant":true,"functionSelector":"6f28507c","id":8312,"mutability":"constant","name":"TOTAL_FEE_BPS","nameLocation":"746:13:24","nodeType":"VariableDeclaration","scope":8963,"src":"722:74:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8308,"name":"uint256","nodeType":"ElementaryTypeName","src":"722:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8311,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"id":8309,"name":"CREATOR_FEE_BPS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8304,"src":"762:15:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":8310,"name":"PLATFORM_FEE_BPS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8307,"src":"780:16:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"762:34:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":true,"functionSelector":"191fe1ed","id":8315,"mutability":"constant","name":"BPS_DIVISOR","nameLocation":"838:11:24","nodeType":"VariableDeclaration","scope":8963,"src":"814:43:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8313,"name":"uint256","nodeType":"ElementaryTypeName","src":"814:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3130303030","id":8314,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"852:5:24","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"visibility":"public"},{"constant":false,"functionSelector":"02d05d3f","id":8317,"mutability":"immutable","name":"creator","nameLocation":"935:7:24","nodeType":"VariableDeclaration","scope":8963,"src":"910:32:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8316,"name":"address","nodeType":"ElementaryTypeName","src":"910:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"eb13554f","id":8319,"mutability":"mutable","name":"platformFeeRecipient","nameLocation":"963:20:24","nodeType":"VariableDeclaration","scope":8963,"src":"948:35:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8318,"name":"address","nodeType":"ElementaryTypeName","src":"948:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"3b4b9399","id":8321,"mutability":"mutable","name":"totalCreatorFeesCollected","nameLocation":"1029:25:24","nodeType":"VariableDeclaration","scope":8963,"src":"1014:40:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8320,"name":"uint256","nodeType":"ElementaryTypeName","src":"1014:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"82c3188c","id":8323,"mutability":"mutable","name":"totalPlatformFeesCollected","nameLocation":"1075:26:24","nodeType":"VariableDeclaration","scope":8963,"src":"1060:41:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8322,"name":"uint256","nodeType":"ElementaryTypeName","src":"1060:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"c598b2f9","id":8327,"mutability":"mutable","name":"pendingCreatorFees","nameLocation":"1142:18:24","nodeType":"VariableDeclaration","scope":8963,"src":"1107:53:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":8326,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":8324,"name":"address","nodeType":"ElementaryTypeName","src":"1115:7:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1107:27:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":8325,"name":"uint256","nodeType":"ElementaryTypeName","src":"1126:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"functionSelector":"5146fcd5","id":8331,"mutability":"mutable","name":"pendingPlatformFees","nameLocation":"1201:19:24","nodeType":"VariableDeclaration","scope":8963,"src":"1166:54:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":8330,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":8328,"name":"address","nodeType":"ElementaryTypeName","src":"1174:7:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1166:27:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":8329,"name":"uint256","nodeType":"ElementaryTypeName","src":"1185:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"functionSelector":"398daa85","id":8335,"mutability":"mutable","name":"feeExempt","nameLocation":"1285:9:24","nodeType":"VariableDeclaration","scope":8963,"src":"1253:41:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":8334,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":8332,"name":"address","nodeType":"ElementaryTypeName","src":"1261:7:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1253:24:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":8333,"name":"bool","nodeType":"ElementaryTypeName","src":"1272:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"public"},{"constant":false,"functionSelector":"beb9716d","id":8337,"mutability":"mutable","name":"canMint","nameLocation":"1338:7:24","nodeType":"VariableDeclaration","scope":8963,"src":"1326:19:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8336,"name":"bool","nodeType":"ElementaryTypeName","src":"1326:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"public"},{"constant":false,"functionSelector":"c1eb1840","id":8339,"mutability":"immutable","name":"canBurn","nameLocation":"1373:7:24","nodeType":"VariableDeclaration","scope":8963,"src":"1351:29:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8338,"name":"bool","nodeType":"ElementaryTypeName","src":"1351:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"public"},{"constant":false,"functionSelector":"a64e4f8a","id":8341,"mutability":"mutable","name":"feesEnabled","nameLocation":"1398:11:24","nodeType":"VariableDeclaration","scope":8963,"src":"1386:23:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8340,"name":"bool","nodeType":"ElementaryTypeName","src":"1386:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"public"},{"anonymous":false,"eventSelector":"de5d657c00d557886c53e267ff792a157187bc1c5947bd02cb62159550edb08e","id":8353,"name":"FeesCollected","nameLocation":"1440:13:24","nodeType":"EventDefinition","parameters":{"id":8352,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8343,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"1479:4:24","nodeType":"VariableDeclaration","scope":8353,"src":"1463:20:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8342,"name":"address","nodeType":"ElementaryTypeName","src":"1463:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8345,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"1509:2:24","nodeType":"VariableDeclaration","scope":8353,"src":"1493:18:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8344,"name":"address","nodeType":"ElementaryTypeName","src":"1493:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8347,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1529:6:24","nodeType":"VariableDeclaration","scope":8353,"src":"1521:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8346,"name":"uint256","nodeType":"ElementaryTypeName","src":"1521:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8349,"indexed":false,"mutability":"mutable","name":"creatorFee","nameLocation":"1553:10:24","nodeType":"VariableDeclaration","scope":8353,"src":"1545:18:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8348,"name":"uint256","nodeType":"ElementaryTypeName","src":"1545:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8351,"indexed":false,"mutability":"mutable","name":"platformFee","nameLocation":"1581:11:24","nodeType":"VariableDeclaration","scope":8353,"src":"1573:19:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8350,"name":"uint256","nodeType":"ElementaryTypeName","src":"1573:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1453:145:24"},"src":"1434:165:24"},{"anonymous":false,"eventSelector":"7f0b212761a7abe7ec4d2adea5a7fa1fea58234aabf0c01c0e63403fe62013ff","id":8359,"name":"CreatorFeesWithdrawn","nameLocation":"1615:20:24","nodeType":"EventDefinition","parameters":{"id":8358,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8355,"indexed":true,"mutability":"mutable","name":"creator","nameLocation":"1652:7:24","nodeType":"VariableDeclaration","scope":8359,"src":"1636:23:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8354,"name":"address","nodeType":"ElementaryTypeName","src":"1636:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8357,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1669:6:24","nodeType":"VariableDeclaration","scope":8359,"src":"1661:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8356,"name":"uint256","nodeType":"ElementaryTypeName","src":"1661:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1635:41:24"},"src":"1609:68:24"},{"anonymous":false,"eventSelector":"fc7ad544ff6a06d6499925723d25b6fe70457a42939995b1d3d6f560fe336333","id":8365,"name":"PlatformFeesWithdrawn","nameLocation":"1688:21:24","nodeType":"EventDefinition","parameters":{"id":8364,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8361,"indexed":true,"mutability":"mutable","name":"recipient","nameLocation":"1726:9:24","nodeType":"VariableDeclaration","scope":8365,"src":"1710:25:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8360,"name":"address","nodeType":"ElementaryTypeName","src":"1710:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8363,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1745:6:24","nodeType":"VariableDeclaration","scope":8365,"src":"1737:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8362,"name":"uint256","nodeType":"ElementaryTypeName","src":"1737:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1709:43:24"},"src":"1682:71:24"},{"anonymous":false,"eventSelector":"69e34a174b4a0cce59950c4c852317e9797bdcae125fbf8b5dd8b4311384412f","id":8371,"name":"FeeExemptionUpdated","nameLocation":"1764:19:24","nodeType":"EventDefinition","parameters":{"id":8370,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8367,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1800:7:24","nodeType":"VariableDeclaration","scope":8371,"src":"1784:23:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8366,"name":"address","nodeType":"ElementaryTypeName","src":"1784:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8369,"indexed":false,"mutability":"mutable","name":"exempt","nameLocation":"1814:6:24","nodeType":"VariableDeclaration","scope":8371,"src":"1809:11:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8368,"name":"bool","nodeType":"ElementaryTypeName","src":"1809:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1783:38:24"},"src":"1758:64:24"},{"anonymous":false,"eventSelector":"c97260ffb3df6b903cdfd59e3b5b21a896404903a8e8a83bf60ba3fca365fbe5","id":8375,"name":"FeesToggled","nameLocation":"1833:11:24","nodeType":"EventDefinition","parameters":{"id":8374,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8373,"indexed":false,"mutability":"mutable","name":"enabled","nameLocation":"1850:7:24","nodeType":"VariableDeclaration","scope":8375,"src":"1845:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8372,"name":"bool","nodeType":"ElementaryTypeName","src":"1845:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1844:14:24"},"src":"1827:32:24"},{"anonymous":false,"eventSelector":"ba887708e7d4436dd36b62187bdced03e0b9abe66caf392a66dd84386641b209","id":8379,"name":"PlatformFeeRecipientUpdated","nameLocation":"1870:27:24","nodeType":"EventDefinition","parameters":{"id":8378,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8377,"indexed":true,"mutability":"mutable","name":"newRecipient","nameLocation":"1914:12:24","nodeType":"VariableDeclaration","scope":8379,"src":"1898:28:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8376,"name":"address","nodeType":"ElementaryTypeName","src":"1898:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1897:30:24"},"src":"1864:64:24"},{"body":{"id":8390,"nodeType":"Block","src":"1957:74:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":8385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8382,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1975:3:24","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1979:6:24","memberName":"sender","nodeType":"MemberAccess","src":"1975:10:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":8384,"name":"creator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8317,"src":"1989:7:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1975:21:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f6e6c792063726561746f72","id":8386,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1998:14:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_5ef47a64a76e9df06e9af857032fb649b745ad528d183c35aeb77ffd676f0cfe","typeString":"literal_string \"Only creator\""},"value":"Only creator"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5ef47a64a76e9df06e9af857032fb649b745ad528d183c35aeb77ffd676f0cfe","typeString":"literal_string \"Only creator\""}],"id":8381,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1967:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8387,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1967:46:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8388,"nodeType":"ExpressionStatement","src":"1967:46:24"},{"id":8389,"nodeType":"PlaceholderStatement","src":"2023:1:24"}]},"id":8391,"name":"onlyCreator","nameLocation":"1943:11:24","nodeType":"ModifierDefinition","parameters":{"id":8380,"nodeType":"ParameterList","parameters":[],"src":"1954:2:24"},"src":"1934:97:24","virtual":false,"visibility":"internal"},{"body":{"id":8494,"nodeType":"Block","src":"2351:636:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":8425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8420,"name":"_creator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8401,"src":"2369:8:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":8423,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2389:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":8422,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2381:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8421,"name":"address","nodeType":"ElementaryTypeName","src":"2381:7:24","typeDescriptions":{}}},"id":8424,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2381:10:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2369:22:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c69642063726561746f72","id":8426,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2393:17:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_0475c82d7c8af068c16284035332fff33ad7e4dce9cd4ac22f3356fa881f91bb","typeString":"literal_string \"Invalid creator\""},"value":"Invalid creator"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0475c82d7c8af068c16284035332fff33ad7e4dce9cd4ac22f3356fa881f91bb","typeString":"literal_string \"Invalid creator\""}],"id":8419,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2361:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8427,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2361:50:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8428,"nodeType":"ExpressionStatement","src":"2361:50:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":8435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8430,"name":"_platformFeeRecipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8403,"src":"2429:21:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":8433,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2462:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":8432,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2454:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8431,"name":"address","nodeType":"ElementaryTypeName","src":"2454:7:24","typeDescriptions":{}}},"id":8434,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2454:10:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2429:35:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420706c6174666f726d20726563697069656e74","id":8436,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2466:28:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_d1c844379d3aa4fac459f0977b634b3ecd698d53154f9a4916336dfc9823566c","typeString":"literal_string \"Invalid platform recipient\""},"value":"Invalid platform recipient"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d1c844379d3aa4fac459f0977b634b3ecd698d53154f9a4916336dfc9823566c","typeString":"literal_string \"Invalid platform recipient\""}],"id":8429,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2421:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8437,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2421:74:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8438,"nodeType":"ExpressionStatement","src":"2421:74:24"},{"expression":{"id":8441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8439,"name":"creator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8317,"src":"2514:7:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8440,"name":"_creator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8401,"src":"2524:8:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2514:18:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":8442,"nodeType":"ExpressionStatement","src":"2514:18:24"},{"expression":{"id":8445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8443,"name":"platformFeeRecipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8319,"src":"2542:20:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8444,"name":"_platformFeeRecipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8403,"src":"2565:21:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2542:44:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":8446,"nodeType":"ExpressionStatement","src":"2542:44:24"},{"expression":{"id":8449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8447,"name":"canMint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8337,"src":"2596:7:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8448,"name":"_canMint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8405,"src":"2606:8:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2596:18:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8450,"nodeType":"ExpressionStatement","src":"2596:18:24"},{"expression":{"id":8453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8451,"name":"canBurn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8339,"src":"2624:7:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8452,"name":"_canBurn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8407,"src":"2634:8:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2624:18:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8454,"nodeType":"ExpressionStatement","src":"2624:18:24"},{"expression":{"id":8457,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8455,"name":"feesEnabled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8341,"src":"2652:11:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8456,"name":"_startWithFeesEnabled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8409,"src":"2666:21:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2652:35:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8458,"nodeType":"ExpressionStatement","src":"2652:35:24"},{"expression":{"arguments":[{"id":8460,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8399,"src":"2752:6:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8461,"name":"initialSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8397,"src":"2760:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8459,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":664,"src":"2746:5:24","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":8462,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2746:28:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8463,"nodeType":"ExpressionStatement","src":"2746:28:24"},{"expression":{"id":8468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":8464,"name":"feeExempt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8335,"src":"2841:9:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":8466,"indexExpression":{"id":8465,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8399,"src":"2851:6:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2841:17:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":8467,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2861:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"2841:24:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8469,"nodeType":"ExpressionStatement","src":"2841:24:24"},{"expression":{"id":8474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":8470,"name":"feeExempt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8335,"src":"2875:9:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":8472,"indexExpression":{"id":8471,"name":"_creator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8401,"src":"2885:8:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2875:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":8473,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2897:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"2875:26:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8475,"nodeType":"ExpressionStatement","src":"2875:26:24"},{"expression":{"id":8483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":8476,"name":"feeExempt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8335,"src":"2911:9:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":8481,"indexExpression":{"arguments":[{"id":8479,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2929:4:24","typeDescriptions":{"typeIdentifier":"t_contract$_MemeCoinWithFees_$8963","typeString":"contract MemeCoinWithFees"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_MemeCoinWithFees_$8963","typeString":"contract MemeCoinWithFees"}],"id":8478,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2921:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8477,"name":"address","nodeType":"ElementaryTypeName","src":"2921:7:24","typeDescriptions":{}}},"id":8480,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2921:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2911:24:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":8482,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2938:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"2911:31:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8484,"nodeType":"ExpressionStatement","src":"2911:31:24"},{"expression":{"id":8492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":8485,"name":"feeExempt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8335,"src":"2952:9:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":8490,"indexExpression":{"arguments":[{"hexValue":"30","id":8488,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2970:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":8487,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2962:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8486,"name":"address","nodeType":"ElementaryTypeName","src":"2962:7:24","typeDescriptions":{}}},"id":8489,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2962:10:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2952:21:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":8491,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2976:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"2952:28:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8493,"nodeType":"ExpressionStatement","src":"2952:28:24"}]},"id":8495,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":8412,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8393,"src":"2321:4:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":8413,"name":"symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8395,"src":"2327:6:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"id":8414,"kind":"baseConstructorSpecifier","modifierName":{"id":8411,"name":"ERC20","nameLocations":["2315:5:24"],"nodeType":"IdentifierPath","referencedDeclaration":824,"src":"2315:5:24"},"nodeType":"ModifierInvocation","src":"2315:19:24"},{"arguments":[{"id":8416,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8399,"src":"2343:6:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":8417,"kind":"baseConstructorSpecifier","modifierName":{"id":8415,"name":"Ownable","nameLocations":["2335:7:24"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"2335:7:24"},"nodeType":"ModifierInvocation","src":"2335:15:24"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":8410,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8393,"mutability":"mutable","name":"name","nameLocation":"2072:4:24","nodeType":"VariableDeclaration","scope":8495,"src":"2058:18:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8392,"name":"string","nodeType":"ElementaryTypeName","src":"2058:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8395,"mutability":"mutable","name":"symbol","nameLocation":"2100:6:24","nodeType":"VariableDeclaration","scope":8495,"src":"2086:20:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8394,"name":"string","nodeType":"ElementaryTypeName","src":"2086:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8397,"mutability":"mutable","name":"initialSupply","nameLocation":"2124:13:24","nodeType":"VariableDeclaration","scope":8495,"src":"2116:21:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8396,"name":"uint256","nodeType":"ElementaryTypeName","src":"2116:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8399,"mutability":"mutable","name":"_owner","nameLocation":"2155:6:24","nodeType":"VariableDeclaration","scope":8495,"src":"2147:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8398,"name":"address","nodeType":"ElementaryTypeName","src":"2147:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8401,"mutability":"mutable","name":"_creator","nameLocation":"2179:8:24","nodeType":"VariableDeclaration","scope":8495,"src":"2171:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8400,"name":"address","nodeType":"ElementaryTypeName","src":"2171:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8403,"mutability":"mutable","name":"_platformFeeRecipient","nameLocation":"2205:21:24","nodeType":"VariableDeclaration","scope":8495,"src":"2197:29:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8402,"name":"address","nodeType":"ElementaryTypeName","src":"2197:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8405,"mutability":"mutable","name":"_canMint","nameLocation":"2241:8:24","nodeType":"VariableDeclaration","scope":8495,"src":"2236:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8404,"name":"bool","nodeType":"ElementaryTypeName","src":"2236:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":8407,"mutability":"mutable","name":"_canBurn","nameLocation":"2264:8:24","nodeType":"VariableDeclaration","scope":8495,"src":"2259:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8406,"name":"bool","nodeType":"ElementaryTypeName","src":"2259:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":8409,"mutability":"mutable","name":"_startWithFeesEnabled","nameLocation":"2287:21:24","nodeType":"VariableDeclaration","scope":8495,"src":"2282:26:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8408,"name":"bool","nodeType":"ElementaryTypeName","src":"2282:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2048:266:24"},"returnParameters":{"id":8418,"nodeType":"ParameterList","parameters":[],"src":"2351:0:24"},"scope":8963,"src":"2037:950:24","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":8523,"nodeType":"Block","src":"3159:135:24","statements":[{"expression":{"id":8512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8505,"name":"creatorFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8501,"src":"3169:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8506,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8498,"src":"3183:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":8507,"name":"CREATOR_FEE_BPS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8304,"src":"3192:15:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3183:24:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":8509,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3182:26:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":8510,"name":"BPS_DIVISOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8315,"src":"3211:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3182:40:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3169:53:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8513,"nodeType":"ExpressionStatement","src":"3169:53:24"},{"expression":{"id":8521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8514,"name":"platformFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8503,"src":"3232:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8520,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8515,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8498,"src":"3247:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":8516,"name":"PLATFORM_FEE_BPS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8307,"src":"3256:16:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3247:25:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":8518,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3246:27:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":8519,"name":"BPS_DIVISOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8315,"src":"3276:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3246:41:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3232:55:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8522,"nodeType":"ExpressionStatement","src":"3232:55:24"}]},"documentation":{"id":8496,"nodeType":"StructuredDocumentation","src":"2993:60:24","text":" @dev Calculate fee amounts for a transfer"},"functionSelector":"52238fdd","id":8524,"implemented":true,"kind":"function","modifiers":[],"name":"calculateFees","nameLocation":"3067:13:24","nodeType":"FunctionDefinition","parameters":{"id":8499,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8498,"mutability":"mutable","name":"amount","nameLocation":"3089:6:24","nodeType":"VariableDeclaration","scope":8524,"src":"3081:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8497,"name":"uint256","nodeType":"ElementaryTypeName","src":"3081:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3080:16:24"},"returnParameters":{"id":8504,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8501,"mutability":"mutable","name":"creatorFee","nameLocation":"3126:10:24","nodeType":"VariableDeclaration","scope":8524,"src":"3118:18:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8500,"name":"uint256","nodeType":"ElementaryTypeName","src":"3118:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8503,"mutability":"mutable","name":"platformFee","nameLocation":"3146:11:24","nodeType":"VariableDeclaration","scope":8524,"src":"3138:19:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8502,"name":"uint256","nodeType":"ElementaryTypeName","src":"3138:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3117:41:24"},"scope":8963,"src":"3058:236:24","stateMutability":"pure","virtual":false,"visibility":"public"},{"body":{"id":8567,"nodeType":"Block","src":"3454:213:24","statements":[{"condition":{"id":8535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3468:12:24","subExpression":{"id":8534,"name":"feesEnabled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8341,"src":"3469:11:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8538,"nodeType":"IfStatement","src":"3464:30:24","trueBody":{"expression":{"hexValue":"66616c7365","id":8536,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3489:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":8533,"id":8537,"nodeType":"Return","src":"3482:12:24"}},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":8545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":8539,"name":"feeExempt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8335,"src":"3508:9:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":8541,"indexExpression":{"id":8540,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8527,"src":"3518:4:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3508:15:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"baseExpression":{"id":8542,"name":"feeExempt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8335,"src":"3527:9:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":8544,"indexExpression":{"id":8543,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8529,"src":"3537:2:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3527:13:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3508:32:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8548,"nodeType":"IfStatement","src":"3504:50:24","trueBody":{"expression":{"hexValue":"66616c7365","id":8546,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3549:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":8533,"id":8547,"nodeType":"Return","src":"3542:12:24"}},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":8561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":8554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8549,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8527,"src":"3568:4:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":8552,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3584:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":8551,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3576:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8550,"name":"address","nodeType":"ElementaryTypeName","src":"3576:7:24","typeDescriptions":{}}},"id":8553,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3576:10:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3568:18:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":8560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8555,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8529,"src":"3590:2:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":8558,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3604:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":8557,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3596:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8556,"name":"address","nodeType":"ElementaryTypeName","src":"3596:7:24","typeDescriptions":{}}},"id":8559,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3596:10:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3590:16:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3568:38:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8564,"nodeType":"IfStatement","src":"3564:56:24","trueBody":{"expression":{"hexValue":"66616c7365","id":8562,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3615:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":8533,"id":8563,"nodeType":"Return","src":"3608:12:24"}},{"expression":{"hexValue":"74727565","id":8565,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3656:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":8533,"id":8566,"nodeType":"Return","src":"3649:11:24"}]},"documentation":{"id":8525,"nodeType":"StructuredDocumentation","src":"3300:72:24","text":" @dev Check if fees should be applied to this transfer"},"functionSelector":"338dd3b1","id":8568,"implemented":true,"kind":"function","modifiers":[],"name":"shouldTakeFees","nameLocation":"3386:14:24","nodeType":"FunctionDefinition","parameters":{"id":8530,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8527,"mutability":"mutable","name":"from","nameLocation":"3409:4:24","nodeType":"VariableDeclaration","scope":8568,"src":"3401:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8526,"name":"address","nodeType":"ElementaryTypeName","src":"3401:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8529,"mutability":"mutable","name":"to","nameLocation":"3423:2:24","nodeType":"VariableDeclaration","scope":8568,"src":"3415:10:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8528,"name":"address","nodeType":"ElementaryTypeName","src":"3415:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3400:26:24"},"returnParameters":{"id":8533,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8532,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8568,"src":"3448:4:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8531,"name":"bool","nodeType":"ElementaryTypeName","src":"3448:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3447:6:24"},"scope":8963,"src":"3377:290:24","stateMutability":"view","virtual":false,"visibility":"public"},{"baseFunctions":[631],"body":{"id":8668,"nodeType":"Block","src":"3873:1044:24","statements":[{"condition":{"arguments":[{"id":8582,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8571,"src":"3902:4:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8583,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8573,"src":"3908:2:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":8581,"name":"shouldTakeFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8568,"src":"3887:14:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":8584,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3887:24:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":8666,"nodeType":"Block","src":"4813:98:24","statements":[{"expression":{"arguments":[{"id":8661,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8571,"src":"4883:4:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8662,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8573,"src":"4889:2:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8663,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8575,"src":"4893:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":8658,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"4869:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_MemeCoinWithFees_$8963_$","typeString":"type(contract super MemeCoinWithFees)"}},"id":8660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4875:7:24","memberName":"_update","nodeType":"MemberAccess","referencedDeclaration":631,"src":"4869:13:24","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":8664,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4869:31:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8665,"nodeType":"ExpressionStatement","src":"4869:31:24"}]},"id":8667,"nodeType":"IfStatement","src":"3883:1028:24","trueBody":{"id":8657,"nodeType":"Block","src":"3913:894:24","statements":[{"assignments":[8586,8588],"declarations":[{"constant":false,"id":8586,"mutability":"mutable","name":"creatorFee","nameLocation":"3936:10:24","nodeType":"VariableDeclaration","scope":8657,"src":"3928:18:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8585,"name":"uint256","nodeType":"ElementaryTypeName","src":"3928:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8588,"mutability":"mutable","name":"platformFee","nameLocation":"3956:11:24","nodeType":"VariableDeclaration","scope":8657,"src":"3948:19:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8587,"name":"uint256","nodeType":"ElementaryTypeName","src":"3948:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8592,"initialValue":{"arguments":[{"id":8590,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8575,"src":"3985:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8589,"name":"calculateFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8524,"src":"3971:13:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256) pure returns (uint256,uint256)"}},"id":8591,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3971:21:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"3927:65:24"},{"assignments":[8594],"declarations":[{"constant":false,"id":8594,"mutability":"mutable","name":"totalFees","nameLocation":"4014:9:24","nodeType":"VariableDeclaration","scope":8657,"src":"4006:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8593,"name":"uint256","nodeType":"ElementaryTypeName","src":"4006:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8598,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8597,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8595,"name":"creatorFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8586,"src":"4026:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":8596,"name":"platformFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8588,"src":"4039:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4026:24:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4006:44:24"},{"assignments":[8600],"declarations":[{"constant":false,"id":8600,"mutability":"mutable","name":"transferAmount","nameLocation":"4072:14:24","nodeType":"VariableDeclaration","scope":8657,"src":"4064:22:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8599,"name":"uint256","nodeType":"ElementaryTypeName","src":"4064:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8604,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8601,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8575,"src":"4089:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":8602,"name":"totalFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8594,"src":"4098:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4089:18:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4064:43:24"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8605,"name":"totalFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8594,"src":"4184:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":8606,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4196:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4184:13:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8648,"nodeType":"IfStatement","src":"4180:497:24","trueBody":{"id":8647,"nodeType":"Block","src":"4199:478:24","statements":[{"expression":{"arguments":[{"id":8611,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8571,"src":"4231:4:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":8614,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4245:4:24","typeDescriptions":{"typeIdentifier":"t_contract$_MemeCoinWithFees_$8963","typeString":"contract MemeCoinWithFees"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_MemeCoinWithFees_$8963","typeString":"contract MemeCoinWithFees"}],"id":8613,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4237:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8612,"name":"address","nodeType":"ElementaryTypeName","src":"4237:7:24","typeDescriptions":{}}},"id":8615,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4237:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8616,"name":"totalFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8594,"src":"4252:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":8608,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"4217:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_MemeCoinWithFees_$8963_$","typeString":"type(contract super MemeCoinWithFees)"}},"id":8610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4223:7:24","memberName":"_update","nodeType":"MemberAccess","referencedDeclaration":631,"src":"4217:13:24","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":8617,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4217:45:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8618,"nodeType":"ExpressionStatement","src":"4217:45:24"},{"expression":{"id":8623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":8619,"name":"pendingCreatorFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8327,"src":"4335:18:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":8621,"indexExpression":{"id":8620,"name":"creator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8317,"src":"4354:7:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4335:27:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":8622,"name":"creatorFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8586,"src":"4366:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4335:41:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8624,"nodeType":"ExpressionStatement","src":"4335:41:24"},{"expression":{"id":8629,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":8625,"name":"pendingPlatformFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8331,"src":"4394:19:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":8627,"indexExpression":{"id":8626,"name":"platformFeeRecipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8319,"src":"4414:20:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4394:41:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":8628,"name":"platformFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8588,"src":"4439:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4394:56:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8630,"nodeType":"ExpressionStatement","src":"4394:56:24"},{"expression":{"id":8633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8631,"name":"totalCreatorFeesCollected","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8321,"src":"4468:25:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":8632,"name":"creatorFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8586,"src":"4497:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4468:39:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8634,"nodeType":"ExpressionStatement","src":"4468:39:24"},{"expression":{"id":8637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8635,"name":"totalPlatformFeesCollected","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8323,"src":"4525:26:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":8636,"name":"platformFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8588,"src":"4555:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4525:41:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8638,"nodeType":"ExpressionStatement","src":"4525:41:24"},{"eventCall":{"arguments":[{"id":8640,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8571,"src":"4620:4:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8641,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8573,"src":"4626:2:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8642,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8575,"src":"4630:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8643,"name":"creatorFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8586,"src":"4638:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8644,"name":"platformFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8588,"src":"4650:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8639,"name":"FeesCollected","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8353,"src":"4606:13:24","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256,uint256)"}},"id":8645,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4606:56:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8646,"nodeType":"EmitStatement","src":"4601:61:24"}]}},{"expression":{"arguments":[{"id":8652,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8571,"src":"4771:4:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8653,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8573,"src":"4777:2:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8654,"name":"transferAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8600,"src":"4781:14:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":8649,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"4757:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_MemeCoinWithFees_$8963_$","typeString":"type(contract super MemeCoinWithFees)"}},"id":8651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4763:7:24","memberName":"_update","nodeType":"MemberAccess","referencedDeclaration":631,"src":"4757:13:24","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":8655,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4757:39:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8656,"nodeType":"ExpressionStatement","src":"4757:39:24"}]}}]},"documentation":{"id":8569,"nodeType":"StructuredDocumentation","src":"3673:66:24","text":" @dev Override transfer to include fee mechanism"},"id":8669,"implemented":true,"kind":"function","modifiers":[{"id":8579,"kind":"modifierInvocation","modifierName":{"id":8578,"name":"whenNotPaused","nameLocations":["3859:13:24"],"nodeType":"IdentifierPath","referencedDeclaration":1347,"src":"3859:13:24"},"nodeType":"ModifierInvocation","src":"3859:13:24"}],"name":"_update","nameLocation":"3753:7:24","nodeType":"FunctionDefinition","overrides":{"id":8577,"nodeType":"OverrideSpecifier","overrides":[],"src":"3850:8:24"},"parameters":{"id":8576,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8571,"mutability":"mutable","name":"from","nameLocation":"3778:4:24","nodeType":"VariableDeclaration","scope":8669,"src":"3770:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8570,"name":"address","nodeType":"ElementaryTypeName","src":"3770:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8573,"mutability":"mutable","name":"to","nameLocation":"3800:2:24","nodeType":"VariableDeclaration","scope":8669,"src":"3792:10:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8572,"name":"address","nodeType":"ElementaryTypeName","src":"3792:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8575,"mutability":"mutable","name":"amount","nameLocation":"3820:6:24","nodeType":"VariableDeclaration","scope":8669,"src":"3812:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8574,"name":"uint256","nodeType":"ElementaryTypeName","src":"3812:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3760:72:24"},"returnParameters":{"id":8580,"nodeType":"ParameterList","parameters":[],"src":"3873:0:24"},"scope":8963,"src":"3744:1173:24","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":8710,"nodeType":"Block","src":"5050:275:24","statements":[{"assignments":[8678],"declarations":[{"constant":false,"id":8678,"mutability":"mutable","name":"amount","nameLocation":"5068:6:24","nodeType":"VariableDeclaration","scope":8710,"src":"5060:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8677,"name":"uint256","nodeType":"ElementaryTypeName","src":"5060:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8682,"initialValue":{"baseExpression":{"id":8679,"name":"pendingCreatorFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8327,"src":"5077:18:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":8681,"indexExpression":{"id":8680,"name":"creator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8317,"src":"5096:7:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5077:27:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5060:44:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8684,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8678,"src":"5122:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":8685,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5131:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5122:10:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f206665657320746f207769746864726177","id":8687,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5134:21:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_524becf2bd3d6f3c74c4c55f46993b5de22a6261a1a6108cc85fed135e73299c","typeString":"literal_string \"No fees to withdraw\""},"value":"No fees to withdraw"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_524becf2bd3d6f3c74c4c55f46993b5de22a6261a1a6108cc85fed135e73299c","typeString":"literal_string \"No fees to withdraw\""}],"id":8683,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5114:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8688,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5114:42:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8689,"nodeType":"ExpressionStatement","src":"5114:42:24"},{"expression":{"id":8694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":8690,"name":"pendingCreatorFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8327,"src":"5175:18:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":8692,"indexExpression":{"id":8691,"name":"creator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8317,"src":"5194:7:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5175:27:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":8693,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5205:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5175:31:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8695,"nodeType":"ExpressionStatement","src":"5175:31:24"},{"expression":{"arguments":[{"arguments":[{"id":8699,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5234:4:24","typeDescriptions":{"typeIdentifier":"t_contract$_MemeCoinWithFees_$8963","typeString":"contract MemeCoinWithFees"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_MemeCoinWithFees_$8963","typeString":"contract MemeCoinWithFees"}],"id":8698,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5226:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8697,"name":"address","nodeType":"ElementaryTypeName","src":"5226:7:24","typeDescriptions":{}}},"id":8700,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5226:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8701,"name":"creator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8317,"src":"5241:7:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8702,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8678,"src":"5250:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8696,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":554,"src":"5216:9:24","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":8703,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5216:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8704,"nodeType":"ExpressionStatement","src":"5216:41:24"},{"eventCall":{"arguments":[{"id":8706,"name":"creator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8317,"src":"5302:7:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8707,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8678,"src":"5311:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8705,"name":"CreatorFeesWithdrawn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8359,"src":"5281:20:24","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":8708,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5281:37:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8709,"nodeType":"EmitStatement","src":"5276:42:24"}]},"documentation":{"id":8670,"nodeType":"StructuredDocumentation","src":"4923:57:24","text":" @dev Withdraw accumulated creator fees"},"functionSelector":"e1cd04b4","id":8711,"implemented":true,"kind":"function","modifiers":[{"id":8673,"kind":"modifierInvocation","modifierName":{"id":8672,"name":"nonReentrant","nameLocations":["5025:12:24"],"nodeType":"IdentifierPath","referencedDeclaration":1455,"src":"5025:12:24"},"nodeType":"ModifierInvocation","src":"5025:12:24"},{"id":8675,"kind":"modifierInvocation","modifierName":{"id":8674,"name":"onlyCreator","nameLocations":["5038:11:24"],"nodeType":"IdentifierPath","referencedDeclaration":8391,"src":"5038:11:24"},"nodeType":"ModifierInvocation","src":"5038:11:24"}],"name":"withdrawCreatorFees","nameLocation":"4994:19:24","nodeType":"FunctionDefinition","parameters":{"id":8671,"nodeType":"ParameterList","parameters":[],"src":"5013:2:24"},"returnParameters":{"id":8676,"nodeType":"ParameterList","parameters":[],"src":"5050:0:24"},"scope":8963,"src":"4985:340:24","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":8758,"nodeType":"Block","src":"5448:419:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":8721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8718,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5466:3:24","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5470:6:24","memberName":"sender","nodeType":"MemberAccess","src":"5466:10:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":8720,"name":"platformFeeRecipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8319,"src":"5480:20:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5466:34:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f6e6c7920706c6174666f726d20726563697069656e74","id":8722,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5502:25:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_514a4e26a6b9dc2b3904a938d1fd7cd126580f477e8deed57e1726e6534c3fba","typeString":"literal_string \"Only platform recipient\""},"value":"Only platform recipient"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_514a4e26a6b9dc2b3904a938d1fd7cd126580f477e8deed57e1726e6534c3fba","typeString":"literal_string \"Only platform recipient\""}],"id":8717,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5458:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8723,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5458:70:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8724,"nodeType":"ExpressionStatement","src":"5458:70:24"},{"assignments":[8726],"declarations":[{"constant":false,"id":8726,"mutability":"mutable","name":"amount","nameLocation":"5555:6:24","nodeType":"VariableDeclaration","scope":8758,"src":"5547:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8725,"name":"uint256","nodeType":"ElementaryTypeName","src":"5547:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8730,"initialValue":{"baseExpression":{"id":8727,"name":"pendingPlatformFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8331,"src":"5564:19:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":8729,"indexExpression":{"id":8728,"name":"platformFeeRecipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8319,"src":"5584:20:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5564:41:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5547:58:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8732,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8726,"src":"5623:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":8733,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5632:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5623:10:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f206665657320746f207769746864726177","id":8735,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5635:21:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_524becf2bd3d6f3c74c4c55f46993b5de22a6261a1a6108cc85fed135e73299c","typeString":"literal_string \"No fees to withdraw\""},"value":"No fees to withdraw"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_524becf2bd3d6f3c74c4c55f46993b5de22a6261a1a6108cc85fed135e73299c","typeString":"literal_string \"No fees to withdraw\""}],"id":8731,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5615:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8736,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5615:42:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8737,"nodeType":"ExpressionStatement","src":"5615:42:24"},{"expression":{"id":8742,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":8738,"name":"pendingPlatformFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8331,"src":"5676:19:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":8740,"indexExpression":{"id":8739,"name":"platformFeeRecipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8319,"src":"5696:20:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5676:41:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":8741,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5720:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5676:45:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8743,"nodeType":"ExpressionStatement","src":"5676:45:24"},{"expression":{"arguments":[{"arguments":[{"id":8747,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5749:4:24","typeDescriptions":{"typeIdentifier":"t_contract$_MemeCoinWithFees_$8963","typeString":"contract MemeCoinWithFees"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_MemeCoinWithFees_$8963","typeString":"contract MemeCoinWithFees"}],"id":8746,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5741:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8745,"name":"address","nodeType":"ElementaryTypeName","src":"5741:7:24","typeDescriptions":{}}},"id":8748,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5741:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8749,"name":"platformFeeRecipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8319,"src":"5756:20:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8750,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8726,"src":"5778:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8744,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":554,"src":"5731:9:24","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":8751,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5731:54:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8752,"nodeType":"ExpressionStatement","src":"5731:54:24"},{"eventCall":{"arguments":[{"id":8754,"name":"platformFeeRecipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8319,"src":"5831:20:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8755,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8726,"src":"5853:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8753,"name":"PlatformFeesWithdrawn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8365,"src":"5809:21:24","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":8756,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5809:51:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8757,"nodeType":"EmitStatement","src":"5804:56:24"}]},"documentation":{"id":8712,"nodeType":"StructuredDocumentation","src":"5331:58:24","text":" @dev Withdraw accumulated platform fees"},"functionSelector":"d0b7830b","id":8759,"implemented":true,"kind":"function","modifiers":[{"id":8715,"kind":"modifierInvocation","modifierName":{"id":8714,"name":"nonReentrant","nameLocations":["5435:12:24"],"nodeType":"IdentifierPath","referencedDeclaration":1455,"src":"5435:12:24"},"nodeType":"ModifierInvocation","src":"5435:12:24"}],"name":"withdrawPlatformFees","nameLocation":"5403:20:24","nodeType":"FunctionDefinition","parameters":{"id":8713,"nodeType":"ParameterList","parameters":[],"src":"5423:2:24"},"returnParameters":{"id":8716,"nodeType":"ParameterList","parameters":[],"src":"5448:0:24"},"scope":8963,"src":"5394:473:24","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":8791,"nodeType":"Block","src":"6098:232:24","statements":[{"expression":{"id":8775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8771,"name":"creatorPending","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8763,"src":"6108:14:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":8772,"name":"pendingCreatorFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8327,"src":"6125:18:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":8774,"indexExpression":{"id":8773,"name":"creator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8317,"src":"6144:7:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6125:27:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6108:44:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8776,"nodeType":"ExpressionStatement","src":"6108:44:24"},{"expression":{"id":8781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8777,"name":"platformPending","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8765,"src":"6162:15:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":8778,"name":"pendingPlatformFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8331,"src":"6180:19:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":8780,"indexExpression":{"id":8779,"name":"platformFeeRecipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8319,"src":"6200:20:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6180:41:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6162:59:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8782,"nodeType":"ExpressionStatement","src":"6162:59:24"},{"expression":{"id":8785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8783,"name":"creatorTotal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8767,"src":"6231:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8784,"name":"totalCreatorFeesCollected","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8321,"src":"6246:25:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6231:40:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8786,"nodeType":"ExpressionStatement","src":"6231:40:24"},{"expression":{"id":8789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8787,"name":"platformTotal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8769,"src":"6281:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8788,"name":"totalPlatformFeesCollected","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8323,"src":"6297:26:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6281:42:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8790,"nodeType":"ExpressionStatement","src":"6281:42:24"}]},"documentation":{"id":8760,"nodeType":"StructuredDocumentation","src":"5873:42:24","text":" @dev Get fee statistics"},"functionSelector":"f28ab2be","id":8792,"implemented":true,"kind":"function","modifiers":[],"name":"getFeeStats","nameLocation":"5929:11:24","nodeType":"FunctionDefinition","parameters":{"id":8761,"nodeType":"ParameterList","parameters":[],"src":"5940:2:24"},"returnParameters":{"id":8770,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8763,"mutability":"mutable","name":"creatorPending","nameLocation":"5983:14:24","nodeType":"VariableDeclaration","scope":8792,"src":"5975:22:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8762,"name":"uint256","nodeType":"ElementaryTypeName","src":"5975:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8765,"mutability":"mutable","name":"platformPending","nameLocation":"6015:15:24","nodeType":"VariableDeclaration","scope":8792,"src":"6007:23:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8764,"name":"uint256","nodeType":"ElementaryTypeName","src":"6007:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8767,"mutability":"mutable","name":"creatorTotal","nameLocation":"6048:12:24","nodeType":"VariableDeclaration","scope":8792,"src":"6040:20:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8766,"name":"uint256","nodeType":"ElementaryTypeName","src":"6040:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8769,"mutability":"mutable","name":"platformTotal","nameLocation":"6078:13:24","nodeType":"VariableDeclaration","scope":8792,"src":"6070:21:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8768,"name":"uint256","nodeType":"ElementaryTypeName","src":"6070:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5965:132:24"},"scope":8963,"src":"5920:410:24","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":8813,"nodeType":"Block","src":"6463:95:24","statements":[{"expression":{"id":8806,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":8802,"name":"feeExempt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8335,"src":"6473:9:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":8804,"indexExpression":{"id":8803,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8795,"src":"6483:7:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6473:18:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8805,"name":"exempt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8797,"src":"6494:6:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6473:27:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8807,"nodeType":"ExpressionStatement","src":"6473:27:24"},{"eventCall":{"arguments":[{"id":8809,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8795,"src":"6535:7:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8810,"name":"exempt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8797,"src":"6544:6:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":8808,"name":"FeeExemptionUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8371,"src":"6515:19:24","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$","typeString":"function (address,bool)"}},"id":8811,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6515:36:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8812,"nodeType":"EmitStatement","src":"6510:41:24"}]},"documentation":{"id":8793,"nodeType":"StructuredDocumentation","src":"6336:51:24","text":" @dev Update fee exemption status"},"functionSelector":"8ebfc796","id":8814,"implemented":true,"kind":"function","modifiers":[{"id":8800,"kind":"modifierInvocation","modifierName":{"id":8799,"name":"onlyOwner","nameLocations":["6453:9:24"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"6453:9:24"},"nodeType":"ModifierInvocation","src":"6453:9:24"}],"name":"setFeeExempt","nameLocation":"6401:12:24","nodeType":"FunctionDefinition","parameters":{"id":8798,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8795,"mutability":"mutable","name":"account","nameLocation":"6422:7:24","nodeType":"VariableDeclaration","scope":8814,"src":"6414:15:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8794,"name":"address","nodeType":"ElementaryTypeName","src":"6414:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8797,"mutability":"mutable","name":"exempt","nameLocation":"6436:6:24","nodeType":"VariableDeclaration","scope":8814,"src":"6431:11:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8796,"name":"bool","nodeType":"ElementaryTypeName","src":"6431:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6413:30:24"},"returnParameters":{"id":8801,"nodeType":"ParameterList","parameters":[],"src":"6463:0:24"},"scope":8963,"src":"6392:166:24","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":8829,"nodeType":"Block","src":"6652:82:24","statements":[{"expression":{"id":8823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8820,"name":"feesEnabled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8341,"src":"6662:11:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6676:12:24","subExpression":{"id":8821,"name":"feesEnabled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8341,"src":"6677:11:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6662:26:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8824,"nodeType":"ExpressionStatement","src":"6662:26:24"},{"eventCall":{"arguments":[{"id":8826,"name":"feesEnabled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8341,"src":"6715:11:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":8825,"name":"FeesToggled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8375,"src":"6703:11:24","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bool_$returns$__$","typeString":"function (bool)"}},"id":8827,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6703:24:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8828,"nodeType":"EmitStatement","src":"6698:29:24"}]},"documentation":{"id":8815,"nodeType":"StructuredDocumentation","src":"6564:42:24","text":" @dev Toggle fees on/off"},"functionSelector":"ddf54512","id":8830,"implemented":true,"kind":"function","modifiers":[{"id":8818,"kind":"modifierInvocation","modifierName":{"id":8817,"name":"onlyOwner","nameLocations":["6642:9:24"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"6642:9:24"},"nodeType":"ModifierInvocation","src":"6642:9:24"}],"name":"toggleFees","nameLocation":"6620:10:24","nodeType":"FunctionDefinition","parameters":{"id":8816,"nodeType":"ParameterList","parameters":[],"src":"6630:2:24"},"returnParameters":{"id":8819,"nodeType":"ParameterList","parameters":[],"src":"6652:0:24"},"scope":8963,"src":"6611:123:24","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":8879,"nodeType":"Block","src":"6875:496:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":8844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8839,"name":"newRecipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8833,"src":"6893:12:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":8842,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6917:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":8841,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6909:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8840,"name":"address","nodeType":"ElementaryTypeName","src":"6909:7:24","typeDescriptions":{}}},"id":8843,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6909:10:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6893:26:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420726563697069656e74","id":8845,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6921:19:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_a6664b97aef19c137d44ec81dfc0c0cc28a2c3470357b125208345a2c048425d","typeString":"literal_string \"Invalid recipient\""},"value":"Invalid recipient"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a6664b97aef19c137d44ec81dfc0c0cc28a2c3470357b125208345a2c048425d","typeString":"literal_string \"Invalid recipient\""}],"id":8838,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6885:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8846,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6885:56:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8847,"nodeType":"ExpressionStatement","src":"6885:56:24"},{"assignments":[8849],"declarations":[{"constant":false,"id":8849,"mutability":"mutable","name":"pendingAmount","nameLocation":"7032:13:24","nodeType":"VariableDeclaration","scope":8879,"src":"7024:21:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8848,"name":"uint256","nodeType":"ElementaryTypeName","src":"7024:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8853,"initialValue":{"baseExpression":{"id":8850,"name":"pendingPlatformFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8331,"src":"7048:19:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":8852,"indexExpression":{"id":8851,"name":"platformFeeRecipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8319,"src":"7068:20:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7048:41:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7024:65:24"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8856,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8854,"name":"pendingAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8849,"src":"7103:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":8855,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7119:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7103:17:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8870,"nodeType":"IfStatement","src":"7099:156:24","trueBody":{"id":8869,"nodeType":"Block","src":"7122:133:24","statements":[{"expression":{"id":8861,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":8857,"name":"pendingPlatformFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8331,"src":"7136:19:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":8859,"indexExpression":{"id":8858,"name":"platformFeeRecipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8319,"src":"7156:20:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7136:41:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":8860,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7180:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7136:45:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8862,"nodeType":"ExpressionStatement","src":"7136:45:24"},{"expression":{"id":8867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":8863,"name":"pendingPlatformFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8331,"src":"7195:19:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":8865,"indexExpression":{"id":8864,"name":"newRecipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8833,"src":"7215:12:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7195:33:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8866,"name":"pendingAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8849,"src":"7231:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7195:49:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8868,"nodeType":"ExpressionStatement","src":"7195:49:24"}]}},{"expression":{"id":8873,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8871,"name":"platformFeeRecipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8319,"src":"7273:20:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8872,"name":"newRecipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8833,"src":"7296:12:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7273:35:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":8874,"nodeType":"ExpressionStatement","src":"7273:35:24"},{"eventCall":{"arguments":[{"id":8876,"name":"newRecipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8833,"src":"7351:12:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":8875,"name":"PlatformFeeRecipientUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8379,"src":"7323:27:24","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":8877,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7323:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8878,"nodeType":"EmitStatement","src":"7318:46:24"}]},"documentation":{"id":8831,"nodeType":"StructuredDocumentation","src":"6740:53:24","text":" @dev Update platform fee recipient"},"functionSelector":"f5fe7f71","id":8880,"implemented":true,"kind":"function","modifiers":[{"id":8836,"kind":"modifierInvocation","modifierName":{"id":8835,"name":"onlyOwner","nameLocations":["6865:9:24"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"6865:9:24"},"nodeType":"ModifierInvocation","src":"6865:9:24"}],"name":"updatePlatformFeeRecipient","nameLocation":"6807:26:24","nodeType":"FunctionDefinition","parameters":{"id":8834,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8833,"mutability":"mutable","name":"newRecipient","nameLocation":"6842:12:24","nodeType":"VariableDeclaration","scope":8880,"src":"6834:20:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8832,"name":"address","nodeType":"ElementaryTypeName","src":"6834:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6833:22:24"},"returnParameters":{"id":8837,"nodeType":"ParameterList","parameters":[],"src":"6875:0:24"},"scope":8963,"src":"6798:573:24","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":8900,"nodeType":"Block","src":"7495:80:24","statements":[{"expression":{"arguments":[{"id":8891,"name":"canMint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8337,"src":"7513:7:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d696e74696e672064697361626c6564","id":8892,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7522:18:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_9dc314731a2c8965068716b51a74d383c5485fe34630c16f5621cb0575192124","typeString":"literal_string \"Minting disabled\""},"value":"Minting disabled"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9dc314731a2c8965068716b51a74d383c5485fe34630c16f5621cb0575192124","typeString":"literal_string \"Minting disabled\""}],"id":8890,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7505:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8893,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7505:36:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8894,"nodeType":"ExpressionStatement","src":"7505:36:24"},{"expression":{"arguments":[{"id":8896,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8883,"src":"7557:2:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8897,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8885,"src":"7561:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8895,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":664,"src":"7551:5:24","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":8898,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7551:17:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8899,"nodeType":"ExpressionStatement","src":"7551:17:24"}]},"documentation":{"id":8881,"nodeType":"StructuredDocumentation","src":"7377:52:24","text":" @dev Mint new tokens (if enabled)"},"functionSelector":"40c10f19","id":8901,"implemented":true,"kind":"function","modifiers":[{"id":8888,"kind":"modifierInvocation","modifierName":{"id":8887,"name":"onlyOwner","nameLocations":["7485:9:24"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"7485:9:24"},"nodeType":"ModifierInvocation","src":"7485:9:24"}],"name":"mint","nameLocation":"7443:4:24","nodeType":"FunctionDefinition","parameters":{"id":8886,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8883,"mutability":"mutable","name":"to","nameLocation":"7456:2:24","nodeType":"VariableDeclaration","scope":8901,"src":"7448:10:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8882,"name":"address","nodeType":"ElementaryTypeName","src":"7448:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8885,"mutability":"mutable","name":"amount","nameLocation":"7468:6:24","nodeType":"VariableDeclaration","scope":8901,"src":"7460:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8884,"name":"uint256","nodeType":"ElementaryTypeName","src":"7460:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7447:28:24"},"returnParameters":{"id":8889,"nodeType":"ParameterList","parameters":[],"src":"7495:0:24"},"scope":8963,"src":"7434:141:24","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":8910,"nodeType":"Block","src":"7667:25:24","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":8907,"name":"_pause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1405,"src":"7677:6:24","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":8908,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7677:8:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8909,"nodeType":"ExpressionStatement","src":"7677:8:24"}]},"documentation":{"id":8902,"nodeType":"StructuredDocumentation","src":"7581:45:24","text":" @dev Pause token transfers"},"functionSelector":"8456cb59","id":8911,"implemented":true,"kind":"function","modifiers":[{"id":8905,"kind":"modifierInvocation","modifierName":{"id":8904,"name":"onlyOwner","nameLocations":["7657:9:24"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"7657:9:24"},"nodeType":"ModifierInvocation","src":"7657:9:24"}],"name":"pause","nameLocation":"7640:5:24","nodeType":"FunctionDefinition","parameters":{"id":8903,"nodeType":"ParameterList","parameters":[],"src":"7645:2:24"},"returnParameters":{"id":8906,"nodeType":"ParameterList","parameters":[],"src":"7667:0:24"},"scope":8963,"src":"7631:61:24","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":8920,"nodeType":"Block","src":"7788:27:24","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":8917,"name":"_unpause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1421,"src":"7798:8:24","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":8918,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7798:10:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8919,"nodeType":"ExpressionStatement","src":"7798:10:24"}]},"documentation":{"id":8912,"nodeType":"StructuredDocumentation","src":"7698:47:24","text":" @dev Unpause token transfers"},"functionSelector":"3f4ba83a","id":8921,"implemented":true,"kind":"function","modifiers":[{"id":8915,"kind":"modifierInvocation","modifierName":{"id":8914,"name":"onlyOwner","nameLocations":["7778:9:24"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"7778:9:24"},"nodeType":"ModifierInvocation","src":"7778:9:24"}],"name":"unpause","nameLocation":"7759:7:24","nodeType":"FunctionDefinition","parameters":{"id":8913,"nodeType":"ParameterList","parameters":[],"src":"7766:2:24"},"returnParameters":{"id":8916,"nodeType":"ParameterList","parameters":[],"src":"7788:0:24"},"scope":8963,"src":"7750:65:24","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":8931,"nodeType":"Block","src":"7922:32:24","statements":[{"expression":{"id":8929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8927,"name":"canMint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8337,"src":"7932:7:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":8928,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7942:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"7932:15:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8930,"nodeType":"ExpressionStatement","src":"7932:15:24"}]},"documentation":{"id":8922,"nodeType":"StructuredDocumentation","src":"7821:51:24","text":" @dev Disable minting permanently"},"functionSelector":"7e5cd5c1","id":8932,"implemented":true,"kind":"function","modifiers":[{"id":8925,"kind":"modifierInvocation","modifierName":{"id":8924,"name":"onlyOwner","nameLocations":["7912:9:24"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"7912:9:24"},"nodeType":"ModifierInvocation","src":"7912:9:24"}],"name":"disableMinting","nameLocation":"7886:14:24","nodeType":"FunctionDefinition","parameters":{"id":8923,"nodeType":"ParameterList","parameters":[],"src":"7900:2:24"},"returnParameters":{"id":8926,"nodeType":"ParameterList","parameters":[],"src":"7922:0:24"},"scope":8963,"src":"7877:77:24","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":8961,"nodeType":"Block","src":"8133:142:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":8948,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8943,"name":"tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8935,"src":"8151:12:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"id":8946,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"8175:4:24","typeDescriptions":{"typeIdentifier":"t_contract$_MemeCoinWithFees_$8963","typeString":"contract MemeCoinWithFees"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_MemeCoinWithFees_$8963","typeString":"contract MemeCoinWithFees"}],"id":8945,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8167:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8944,"name":"address","nodeType":"ElementaryTypeName","src":"8167:7:24","typeDescriptions":{}}},"id":8947,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8167:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8151:29:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"43616e6e6f74207265636f766572206e617469766520746f6b656e","id":8949,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8182:29:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_1496af23f8dd45e8abdb8830c807d6f3b297eae4c90319afa913a92c3e5df070","typeString":"literal_string \"Cannot recover native token\""},"value":"Cannot recover native token"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1496af23f8dd45e8abdb8830c807d6f3b297eae4c90319afa913a92c3e5df070","typeString":"literal_string \"Cannot recover native token\""}],"id":8942,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8143:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8950,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8143:69:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8951,"nodeType":"ExpressionStatement","src":"8143:69:24"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":8956,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"8252:5:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":8957,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8252:7:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8958,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8937,"src":"8261:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":8953,"name":"tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8935,"src":"8229:12:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":8952,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":902,"src":"8222:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$902_$","typeString":"type(contract IERC20)"}},"id":8954,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8222:20:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$902","typeString":"contract IERC20"}},"id":8955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8243:8:24","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":869,"src":"8222:29:24","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":8959,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8222:46:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8960,"nodeType":"ExpressionStatement","src":"8222:46:24"}]},"documentation":{"id":8933,"nodeType":"StructuredDocumentation","src":"7960:89:24","text":" @dev Emergency function to recover stuck tokens (not the token itself)"},"functionSelector":"b29a8140","id":8962,"implemented":true,"kind":"function","modifiers":[{"id":8940,"kind":"modifierInvocation","modifierName":{"id":8939,"name":"onlyOwner","nameLocations":["8123:9:24"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"8123:9:24"},"nodeType":"ModifierInvocation","src":"8123:9:24"}],"name":"recoverToken","nameLocation":"8063:12:24","nodeType":"FunctionDefinition","parameters":{"id":8938,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8935,"mutability":"mutable","name":"tokenAddress","nameLocation":"8084:12:24","nodeType":"VariableDeclaration","scope":8962,"src":"8076:20:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8934,"name":"address","nodeType":"ElementaryTypeName","src":"8076:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8937,"mutability":"mutable","name":"amount","nameLocation":"8106:6:24","nodeType":"VariableDeclaration","scope":8962,"src":"8098:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8936,"name":"uint256","nodeType":"ElementaryTypeName","src":"8098:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8075:38:24"},"returnParameters":{"id":8941,"nodeType":"ParameterList","parameters":[],"src":"8133:0:24"},"scope":8963,"src":"8054:221:24","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":8964,"src":"458:7819:24","usedErrors":[13,18,184,189,194,203,208,213,1336,1339,1436],"usedEvents":[24,836,845,1328,1333,8353,8359,8365,8371,8375,8379]}],"src":"32:8245:24"},"id":24}},"contracts":{"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"IERC5267":{"abi":[{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"eip712Domain()":"84b0196e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"eip712Domain()\":{\"details\":\"returns the fields and values that describe the domain separator used by this contract for EIP-712 signature.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":\"IERC5267\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"IERC1155Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}"},"IERC20Errors":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}"},"IERC721Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ERC20":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol":{"ERC20Burnable":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"burnFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","burn(uint256)":"42966c68","burnFrom(address,uint256)":"79cc6790","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":\"ERC20Burnable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x2659248df25e34000ed214b3dc8da2160bc39874c992b477d9e2b1b3283dc073\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c345af1b0e7ea28d1216d6a04ab28f5534a5229b9edf9ca3cd0e84950ae58d26\",\"dweb:/ipfs/QmY63jtSrYpLRe8Gj1ep2vMDCKxGNNG3hnNVKBVnrs2nmA\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol":{"ERC20Permit":{"abi":[{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"inputs":[{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"ERC2612ExpiredSignature","type":"error"},{"inputs":[{"internalType":"address","name":"signer","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC2612InvalidSigner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"currentNonce","type":"uint256"}],"name":"InvalidAccountNonce","type":"error"},{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","eip712Domain()":"84b0196e","name()":"06fdde03","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"ERC2612ExpiredSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC2612InvalidSigner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the ERC-20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[ERC-2612]. Adds the {permit} method, which can be used to change an account's ERC-20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC2612ExpiredSignature(uint256)\":[{\"details\":\"Permit deadline has expired.\"}],\"ERC2612InvalidSigner(address,address)\":[{\"details\":\"Mismatched signature.\"}],\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\\\"1\\\"`. It's a good idea to use the same `name` that is defined as the ERC-20 token name.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"eip712Domain()\":{\"details\":\"returns the fields and values that describe the domain separator used by this contract for EIP-712 signature.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":\"ERC20Permit\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":{\"keccak256\":\"0xaa7f0646f49ebe2606eeca169f85c56451bbaeeeb06265fa076a03369a25d1d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ee931d4e832385765967efe6366dcc6d00d6a2d794f9c66ee38283c03882de9c\",\"dweb:/ipfs/QmR6SkuJGYxpQeLz38rBdghqaWqEPfzUsL9kBoXgEXKtbD\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x27dbc90e5136ffe46c04f7596fc2dbcc3acebd8d504da3d93fdb8496e6de04f6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea8b92e4245d75a5579c10f22f118f7b4ba07c57341f181f0b2a85ff8663de3\",\"dweb:/ipfs/Qme3Ss5ByjmkxxkMdLpyu7fQ1PCtjNFH1wEFszt2BZePiG\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Nonces.sol\":{\"keccak256\":\"0x0082767004fca261c332e9ad100868327a863a88ef724e844857128845ab350f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://132dce9686a54e025eb5ba5d2e48208f847a1ec3e60a3e527766d7bf53fb7f9e\",\"dweb:/ipfs/QmXn1a2nUZMpu2z6S88UoTfMVtY2YNh86iGrzJDYmMkKeZ\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x1fcf8cceb1a67e6c8512267e780933c4a3f63ef44756e6c818fda79be51c8402\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://617d7d57f6f9cd449068b4d23daf485676d083aae648e038d05eb3a13291de35\",\"dweb:/ipfs/QmPADWPiGaSzZDFNpFEUx4ZPqhzPkYncBpHyTfAGcfsqzy\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x81c274a60a7ae232ae3dc9ff3a4011b4849a853c13b0832cd3351bb1bb2f0dae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9da0c20dc74358a2a76330818f3bac9d1e2ce3371aec847b9cbf5d147fbae4f6\",\"dweb:/ipfs/QmeczhmnFv1hbXKGLwbYXY6Rrytc9a5A2YaRi5QMMgjPnb\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x0c60057e7351874f086db8dc9291b7ada9ad62cb7725befd2991430d04a74572\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33cdfd1fc36410d45046f88ff9864350146b194736c32834baa38d99b843ffbe\",\"dweb:/ipfs/QmdVmqgFKjgEBURy4KUwWDA6J1LEg1BKcHcXsx4nkeHAD2\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x26670fef37d4adf55570ba78815eec5f31cb017e708f61886add4fc4da665631\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b16d45febff462bafd8a5669f904796a835baf607df58a8461916d3bf4f08c59\",\"dweb:/ipfs/QmU2eJFpjmT4vxeJWJyLeQb8Xht1kdB8Y6MKLDPFA9WPux\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"IERC20Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"IERC20Permit":{"abi":[{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[ERC-2612]. Adds the {permit} method, which can be used to change an account's ERC-20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x27dbc90e5136ffe46c04f7596fc2dbcc3acebd8d504da3d93fdb8496e6de04f6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea8b92e4245d75a5579c10f22f118f7b4ba07c57341f181f0b2a85ff8663de3\",\"dweb:/ipfs/Qme3Ss5ByjmkxxkMdLpyu7fQ1PCtjNFH1wEFszt2BZePiG\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Nonces.sol":{"Nonces":{"abi":[{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"currentNonce","type":"uint256"}],"name":"InvalidAccountNonce","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"nonces(address)":"7ecebe00"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Provides tracking nonces for addresses. Nonces will only increment.\",\"errors\":{\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}]},\"kind\":\"dev\",\"methods\":{\"nonces(address)\":{\"details\":\"Returns the next unused nonce for an address.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Nonces.sol\":\"Nonces\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Nonces.sol\":{\"keccak256\":\"0x0082767004fca261c332e9ad100868327a863a88ef724e844857128845ab350f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://132dce9686a54e025eb5ba5d2e48208f847a1ec3e60a3e527766d7bf53fb7f9e\",\"dweb:/ipfs/QmXn1a2nUZMpu2z6S88UoTfMVtY2YNh86iGrzJDYmMkKeZ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Panic.sol":{"Panic":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201ae1761b6a3c5d2458c4708d3276257bae9b475b3c412a0ebb4584fd955181ef64736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BYTE 0xE1 PUSH23 0x1B6A3C5D2458C4708D3276257BAE9B475B3C412A0EBB45 DUP5 REVERT SWAP6 MLOAD DUP2 0xEF PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"657:1315:11:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;657:1315:11;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201ae1761b6a3c5d2458c4708d3276257bae9b475b3c412a0ebb4584fd955181ef64736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BYTE 0xE1 PUSH23 0x1B6A3C5D2458C4708D3276257BAE9B475B3C412A0EBB45 DUP5 REVERT SWAP6 MLOAD DUP2 0xEF PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"657:1315:11:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Helper library for emitting standardized panic codes. ```solidity contract Example {      using Panic for uint256;      // Use any of the declared internal constants      function foo() { Panic.GENERIC.panic(); }      // Alternatively      function foo() { Panic.panic(Panic.GENERIC); } } ``` Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ARRAY_OUT_OF_BOUNDS\":{\"details\":\"array out of bounds access\"},\"ASSERT\":{\"details\":\"used by the assert() builtin\"},\"DIVISION_BY_ZERO\":{\"details\":\"division or modulo by zero\"},\"EMPTY_ARRAY_POP\":{\"details\":\"empty array pop\"},\"ENUM_CONVERSION_ERROR\":{\"details\":\"enum conversion error\"},\"GENERIC\":{\"details\":\"generic / unspecified error\"},\"INVALID_INTERNAL_FUNCTION\":{\"details\":\"calling invalid internal function\"},\"RESOURCE_ERROR\":{\"details\":\"resource error (too large allocation or too large array)\"},\"STORAGE_ENCODING_ERROR\":{\"details\":\"invalid encoding in storage\"},\"UNDER_OVERFLOW\":{\"details\":\"arithmetic underflow or overflow\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Panic.sol\":\"Panic\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Pausable.sol":{"Pausable":{"abi":[{"inputs":[],"name":"EnforcedPause","type":"error"},{"inputs":[],"name":"ExpectedPause","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"paused()":"5c975abb"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"errors\":{\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}]},\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xdb484371dfbb848cb6f5d70464e9ac9b2900e4164ead76bbce4fef0b44bcc68f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f9d6f6f6600a2bec622f699081b58350873b5e63ce05464d17d674a290bb8a7c\",\"dweb:/ipfs/QmQKVzSQY1PM3Bid4QhgVVZyx6B4Jx7XgaQzLKHj38vJz8\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"ReentrancyGuard":{"abi":[{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at, consider using {ReentrancyGuardTransient} instead. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"errors\":{\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/ShortStrings.sol":{"ShortStrings":{"abi":[{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122007dc85d1aec00f43265f5f1c5a1b853c352d20b7969297378a1b8e5cf03563e164736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SMOD 0xDC DUP6 0xD1 0xAE 0xC0 0xF NUMBER 0x26 PUSH0 PUSH0 SHR GAS SHL DUP6 EXTCODECOPY CALLDATALOAD 0x2D KECCAK256 0xB7 SWAP7 SWAP3 SWAP8 CALLDATACOPY DUP11 SHL DUP15 0x5C CREATE CALLDATALOAD PUSH4 0xE164736F PUSH13 0x63430008140033000000000000 ","sourceMap":"1255:3046:14:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1255:3046:14;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122007dc85d1aec00f43265f5f1c5a1b853c352d20b7969297378a1b8e5cf03563e164736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SMOD 0xDC DUP6 0xD1 0xAE 0xC0 0xF NUMBER 0x26 PUSH0 PUSH0 SHR GAS SHL DUP6 EXTCODECOPY CALLDATALOAD 0x2D KECCAK256 0xB7 SWAP7 SWAP3 SWAP8 CALLDATACOPY DUP11 SHL DUP15 0x5C CREATE CALLDATALOAD PUSH4 0xE164736F PUSH13 0x63430008140033000000000000 ","sourceMap":"1255:3046:14:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"This library provides functions to convert short memory strings into a `ShortString` type that can be used as an immutable variable. Strings of arbitrary length can be optimized using this library if they are short enough (up to 31 bytes) by packing them with their length (1 byte) in a single EVM word (32 bytes). Additionally, a fallback mechanism can be used for every other case. Usage example: ```solidity contract Named {     using ShortStrings for *;     ShortString private immutable _name;     string private _nameFallback;     constructor(string memory contractName) {         _name = contractName.toShortStringWithFallback(_nameFallback);     }     function name() external view returns (string memory) {         return _name.toStringWithFallback(_nameFallback);     } } ```\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ShortStrings.sol\":\"ShortStrings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x1fcf8cceb1a67e6c8512267e780933c4a3f63ef44756e6c818fda79be51c8402\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://617d7d57f6f9cd449068b4d23daf485676d083aae648e038d05eb3a13291de35\",\"dweb:/ipfs/QmPADWPiGaSzZDFNpFEUx4ZPqhzPkYncBpHyTfAGcfsqzy\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/StorageSlot.sol":{"StorageSlot":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122080637b4cf8f58442afd5b19cbd15928226ab732381b221bc298e4f170f1c143264736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP1 PUSH4 0x7B4CF8F5 DUP5 TIMESTAMP 0xAF 0xD5 0xB1 SWAP13 0xBD ISZERO SWAP3 DUP3 0x26 0xAB PUSH20 0x2381B221BC298E4F170F1C143264736F6C634300 ADDMOD EQ STOP CALLER ","sourceMap":"1407:2774:15:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1407:2774:15;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122080637b4cf8f58442afd5b19cbd15928226ab732381b221bc298e4f170f1c143264736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP1 PUSH4 0x7B4CF8F5 DUP5 TIMESTAMP 0xAF 0xD5 0xB1 SWAP13 0xBD ISZERO SWAP3 DUP3 0x26 0xAB PUSH20 0x2381B221BC298E4F170F1C143264736F6C634300 ADDMOD EQ STOP CALLER ","sourceMap":"1407:2774:15:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC-1967 implementation slot: ```solidity contract ERC1967 {     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` TIP: Consider using this library along with {SlotDerivation}.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"length","type":"uint256"}],"name":"StringsInsufficientHexLength","type":"error"},{"inputs":[],"name":"StringsInvalidAddressFormat","type":"error"},{"inputs":[],"name":"StringsInvalidChar","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205cb8026103b37e335d367be611893cc85b642daf48902948c5c235464991ce0064736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5C 0xB8 MUL PUSH2 0x3B3 PUSH31 0x335D367BE611893CC85B642DAF48902948C5C235464991CE0064736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"297:18980:16:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;297:18980:16;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205cb8026103b37e335d367be611893cc85b642daf48902948c5c235464991ce0064736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5C 0xB8 MUL PUSH2 0x3B3 PUSH31 0x335D367BE611893CC85B642DAF48902948C5C235464991CE0064736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"297:18980:16:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StringsInvalidAddressFormat\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StringsInvalidChar\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}],\"StringsInvalidAddressFormat()\":[{\"details\":\"The string being parsed is not a properly formatted address.\"}],\"StringsInvalidChar()\":[{\"details\":\"The string being parsed contains characters that are not in scope of the given base.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x81c274a60a7ae232ae3dc9ff3a4011b4849a853c13b0832cd3351bb1bb2f0dae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9da0c20dc74358a2a76330818f3bac9d1e2ce3371aec847b9cbf5d147fbae4f6\",\"dweb:/ipfs/QmeczhmnFv1hbXKGLwbYXY6Rrytc9a5A2YaRi5QMMgjPnb\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ECDSA":{"abi":[{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122048a43252f2e3f7e56df7ad0e9342522ab81bd116770e6f383d4910f0bef2746d64736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BASEFEE LOG4 ORIGIN MSTORE CALLCODE 0xE3 0xF7 0xE5 PUSH14 0xF7AD0E9342522AB81BD116770E6F CODESIZE RETURNDATASIZE 0x49 LT CREATE 0xBE CALLCODE PUSH21 0x6D64736F6C63430008140033000000000000000000 ","sourceMap":"344:7470:17:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;344:7470:17;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122048a43252f2e3f7e56df7ad0e9342522ab81bd116770e6f383d4910f0bef2746d64736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BASEFEE LOG4 ORIGIN MSTORE CALLCODE 0xE3 0xF7 0xE5 PUSH14 0xF7AD0E9342522AB81BD116770E6F CODESIZE RETURNDATASIZE 0x49 LT CREATE 0xBE CALLCODE PUSH21 0x6D64736F6C63430008140033000000000000000000 ","sourceMap":"344:7470:17:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":\"ECDSA\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"EIP712":{"abi":[{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"eip712Domain()":"84b0196e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable\",\"details\":\"https://eips.ethereum.org/EIPS/eip-712[EIP-712] is a standard for hashing and signing of typed structured data. The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to produce the hash of their typed data using a combination of `abi.encode` and `keccak256`. This contract implements the EIP-712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA ({_hashTypedDataV4}). The implementation of the domain separator was designed to be as efficient as possible while still properly updating the chain id to protect against replay attacks on an eventual fork of the chain. NOTE: This contract implements the version of the encoding known as \\\"v4\\\", as implemented by the JSON RPC method https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask]. NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\",\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the domain separator and parameter caches. The meaning of `name` and `version` is specified in https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP-712]: - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol. - `version`: the current major version of the signing domain. NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart contract upgrade].\"},\"eip712Domain()\":{\"details\":\"returns the fields and values that describe the domain separator used by this contract for EIP-712 signature.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":\"EIP712\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x1fcf8cceb1a67e6c8512267e780933c4a3f63ef44756e6c818fda79be51c8402\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://617d7d57f6f9cd449068b4d23daf485676d083aae648e038d05eb3a13291de35\",\"dweb:/ipfs/QmPADWPiGaSzZDFNpFEUx4ZPqhzPkYncBpHyTfAGcfsqzy\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x81c274a60a7ae232ae3dc9ff3a4011b4849a853c13b0832cd3351bb1bb2f0dae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9da0c20dc74358a2a76330818f3bac9d1e2ce3371aec847b9cbf5d147fbae4f6\",\"dweb:/ipfs/QmeczhmnFv1hbXKGLwbYXY6Rrytc9a5A2YaRi5QMMgjPnb\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x0c60057e7351874f086db8dc9291b7ada9ad62cb7725befd2991430d04a74572\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33cdfd1fc36410d45046f88ff9864350146b194736c32834baa38d99b843ffbe\",\"dweb:/ipfs/QmdVmqgFKjgEBURy4KUwWDA6J1LEg1BKcHcXsx4nkeHAD2\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x26670fef37d4adf55570ba78815eec5f31cb017e708f61886add4fc4da665631\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b16d45febff462bafd8a5669f904796a835baf607df58a8461916d3bf4f08c59\",\"dweb:/ipfs/QmU2eJFpjmT4vxeJWJyLeQb8Xht1kdB8Y6MKLDPFA9WPux\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"MessageHashUtils":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122088b908b477a588bbc4eef25b45c5de74c136da97db084cfc572945c426e72c9e64736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP9 0xB9 ADDMOD 0xB4 PUSH24 0xA588BBC4EEF25B45C5DE74C136DA97DB084CFC572945C426 0xE7 0x2C SWAP15 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"521:3729:19:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;521:3729:19;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122088b908b477a588bbc4eef25b45c5de74c136da97db084cfc572945c426e72c9e64736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP9 0xB9 ADDMOD 0xB4 PUSH24 0xA588BBC4EEF25B45C5DE74C136DA97DB084CFC572945C426 0xE7 0x2C SWAP15 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"521:3729:19:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing. The library provides methods for generating a hash of a message that conforms to the https://eips.ethereum.org/EIPS/eip-191[ERC-191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712] specifications.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":\"MessageHashUtils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x81c274a60a7ae232ae3dc9ff3a4011b4849a853c13b0832cd3351bb1bb2f0dae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9da0c20dc74358a2a76330818f3bac9d1e2ce3371aec847b9cbf5d147fbae4f6\",\"dweb:/ipfs/QmeczhmnFv1hbXKGLwbYXY6Rrytc9a5A2YaRi5QMMgjPnb\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x26670fef37d4adf55570ba78815eec5f31cb017e708f61886add4fc4da665631\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b16d45febff462bafd8a5669f904796a835baf607df58a8461916d3bf4f08c59\",\"dweb:/ipfs/QmU2eJFpjmT4vxeJWJyLeQb8Xht1kdB8Y6MKLDPFA9WPux\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208fcce410fc5cfa45c0c6616aebc7576f43e383fe066bccc2ae83043f7884d82164736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP16 0xCC 0xE4 LT 0xFC 0x5C STATICCALL GASLIMIT 0xC0 0xC6 PUSH2 0x6AEB 0xC7 JUMPI PUSH16 0x43E383FE066BCCC2AE83043F7884D821 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"281:31863:20:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;281:31863:20;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208fcce410fc5cfa45c0c6616aebc7576f43e383fe066bccc2ae83043f7884d82164736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP16 0xCC 0xE4 LT 0xFC 0x5C STATICCALL GASLIMIT 0xC0 0xC6 PUSH2 0x6AEB 0xC7 JUMPI PUSH16 0x43E383FE066BCCC2AE83043F7884D821 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"281:31863:20:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"SafeCast":{"abi":[{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntDowncast","type":"error"},{"inputs":[{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntToUint","type":"error"},{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintDowncast","type":"error"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintToInt","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e57f6f97354ac8290db535b2e3f293653f51ec40206fa8b2bf9396c18f98af2564736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE5 PUSH32 0x6F97354AC8290DB535B2E3F293653F51EC40206FA8B2BF9396C18F98AF256473 PUSH16 0x6C634300081400330000000000000000 ","sourceMap":"769:34173:21:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;769:34173:21;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e57f6f97354ac8290db535b2e3f293653f51ec40206fa8b2bf9396c18f98af2564736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE5 PUSH32 0x6F97354AC8290DB535B2E3F293653F51EC40206FA8B2BF9396C18F98AF256473 PUSH16 0x6C634300081400330000000000000000 ","sourceMap":"769:34173:21:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntToUint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintToInt\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"errors\":{\"SafeCastOverflowedIntDowncast(uint8,int256)\":[{\"details\":\"Value doesn't fit in an int of `bits` size.\"}],\"SafeCastOverflowedIntToUint(int256)\":[{\"details\":\"An int value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintToInt(uint256)\":[{\"details\":\"An uint value doesn't fit in an int of `bits` size.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":\"SafeCast\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"SignedMath":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209e65a3f6bb9e28d8169ea079d4b688370f4365b9ed0ac7dd77283f5739bebf8d64736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP15 PUSH6 0xA3F6BB9E28D8 AND SWAP15 LOG0 PUSH26 0xD4B688370F4365B9ED0AC7DD77283F5739BEBF8D64736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"258:2354:22:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;258:2354:22;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209e65a3f6bb9e28d8169ea079d4b688370f4365b9ed0ac7dd77283f5739bebf8d64736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP15 PUSH6 0xA3F6BB9E28D8 AND SWAP15 LOG0 PUSH26 0xD4B688370F4365B9ED0AC7DD77283F5739BEBF8D64736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"258:2354:22:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"contracts/FairLaunchToken.sol":{"FairLaunchToken":{"abi":[{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"symbol","type":"string"},{"internalType":"uint256","name":"initialSupply","type":"uint256"},{"internalType":"address","name":"initialOwner","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"inputs":[{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"ERC2612ExpiredSignature","type":"error"},{"inputs":[{"internalType":"address","name":"signer","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC2612InvalidSigner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"currentNonce","type":"uint256"}],"name":"InvalidAccountNonce","type":"error"},{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"tokensSwapped","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"ethReceived","type":"uint256"}],"name":"AutoLiquidityAdded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"bool","name":"isBlacklisted","type":"bool"}],"name":"Blacklisted","type":"event"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"maxBuyPerWallet","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"maxBuyPerTx","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"cooldownPeriod","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"antiSnipeBlocks","type":"uint256"}],"name":"FairLaunchConfigured","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"ReflectionsDistributed","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"blockNumber","type":"uint256"}],"name":"TradingEnabled","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"autoLiquidityConfig","outputs":[{"internalType":"uint256","name":"liquidityFeePercent","type":"uint256"},{"internalType":"uint256","name":"minTokensBeforeSwap","type":"uint256"},{"internalType":"address","name":"liquidityPair","type":"address"},{"internalType":"bool","name":"enabled","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"burnFeePercent","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"burnFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_liquidityFeePercent","type":"uint256"},{"internalType":"uint256","name":"_minTokensBeforeSwap","type":"uint256"},{"internalType":"address","name":"_liquidityPair","type":"address"}],"name":"configureAutoLiquidity","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_maxBuyPerWallet","type":"uint256"},{"internalType":"uint256","name":"_maxBuyPerTx","type":"uint256"},{"internalType":"uint256","name":"_cooldownPeriod","type":"uint256"},{"internalType":"uint256","name":"_antiSnipeBlocks","type":"uint256"}],"name":"configureFairLaunch","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"}],"name":"delegate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"disableFairLaunch","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"emergencyWithdraw","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"emergencyWithdrawTokens","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_reflectionFeePercent","type":"uint256"}],"name":"enableReflections","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"enableTrading","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bool","name":"excluded","type":"bool"}],"name":"excludeFromFees","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"excludeFromReflections","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"fairLaunchConfig","outputs":[{"internalType":"uint256","name":"maxBuyPerWallet","type":"uint256"},{"internalType":"uint256","name":"maxBuyPerTx","type":"uint256"},{"internalType":"uint256","name":"cooldownPeriod","type":"uint256"},{"internalType":"uint256","name":"antiSnipeBlocks","type":"uint256"},{"internalType":"bool","name":"enabled","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getReflectionBalance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getTotalReflections","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"address","name":"","type":"address"}],"name":"hasVoted","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"isBlacklisted","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"isExcludedFromFees","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"isExcludedFromReflections","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"lastBuyTime","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"launchBlock","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"reflectionConfig","outputs":[{"internalType":"uint256","name":"reflectionFeePercent","type":"uint256"},{"internalType":"bool","name":"enabled","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bool","name":"blacklisted","type":"bool"}],"name":"setBlacklist","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_burnFeePercent","type":"uint256"}],"name":"setBurnFee","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"totalBought","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"tradingEnabled","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"votingPower","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_1444":{"entryPoint":null,"id":1444,"parameterSlots":0,"returnSlots":0},"@_361":{"entryPoint":null,"id":361,"parameterSlots":2,"returnSlots":0},"@_3679":{"entryPoint":null,"id":3679,"parameterSlots":2,"returnSlots":0},"@_50":{"entryPoint":null,"id":50,"parameterSlots":1,"returnSlots":0},"@_7621":{"entryPoint":null,"id":7621,"parameterSlots":4,"returnSlots":0},"@_997":{"entryPoint":null,"id":997,"parameterSlots":1,"returnSlots":0},"@_buildDomainSeparator_3726":{"entryPoint":null,"id":3726,"parameterSlots":0,"returnSlots":1},"@_distributeReflections_8141":{"entryPoint":2476,"id":8141,"parameterSlots":1,"returnSlots":0},"@_mint_664":{"entryPoint":750,"id":664,"parameterSlots":2,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":668,"id":146,"parameterSlots":1,"returnSlots":0},"@_update_631":{"entryPoint":2169,"id":631,"parameterSlots":3,"returnSlots":0},"@_update_8127":{"entryPoint":879,"id":8127,"parameterSlots":3,"returnSlots":0},"@getStringSlot_1809":{"entryPoint":null,"id":1809,"parameterSlots":1,"returnSlots":1},"@owner_67":{"entryPoint":null,"id":67,"parameterSlots":0,"returnSlots":1},"@toShortStringWithFallback_1649":{"entryPoint":611,"id":1649,"parameterSlots":2,"returnSlots":1},"@toShortString_1551":{"entryPoint":812,"id":1551,"parameterSlots":1,"returnSlots":1},"abi_decode_string_fromMemory":{"entryPoint":2615,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256t_address_fromMemory":{"entryPoint":2760,"id":null,"parameterSlots":2,"returnSlots":4},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3339,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_60e50fe4b5f9ae998b7c4af6246a3be868b5d99ebc1f2f26c5c277ea2f50399f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_8a47083662e5118b10740f0e82a54826b69dcdcba204cbbbb9689112c03a2b53__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_a1e994c71b3513731e9effa0bd81687a4234b5038b9b1fc3f0ec6961d00b02a4__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_aba53b7bc56fd10d1bb2cac393e26b489ca53cf0c676cd3f5a7c5c185bf6cd4c__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_fe7271fdf16e686aac8ab7870b0a18a8d2226a1ec6ab1d7a847ec7059dd2e78d__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_fef92ec79bbd568fc63edc095cddaebd47e166ea7932b60d9a91e79658733400__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"array_dataslot_string_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":3429,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":3304,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":3278,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":3451,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_string_storage":{"entryPoint":2969,"id":null,"parameterSlots":3,"returnSlots":0},"convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32":{"entryPoint":3392,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":3052,"id":null,"parameterSlots":2,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":2577,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":2909,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":3256,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":2555,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:9309:25","statements":[{"nodeType":"YulBlock","src":"6:3:25","statements":[]},{"body":{"nodeType":"YulBlock","src":"46:95:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"63:1:25","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"70:3:25","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"75:10:25","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"66:3:25"},"nodeType":"YulFunctionCall","src":"66:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"56:6:25"},"nodeType":"YulFunctionCall","src":"56:31:25"},"nodeType":"YulExpressionStatement","src":"56:31:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"103:1:25","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"106:4:25","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"96:6:25"},"nodeType":"YulFunctionCall","src":"96:15:25"},"nodeType":"YulExpressionStatement","src":"96:15:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"127:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"130:4:25","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"120:6:25"},"nodeType":"YulFunctionCall","src":"120:15:25"},"nodeType":"YulExpressionStatement","src":"120:15:25"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"14:127:25"},{"body":{"nodeType":"YulBlock","src":"212:184:25","statements":[{"nodeType":"YulVariableDeclaration","src":"222:10:25","value":{"kind":"number","nodeType":"YulLiteral","src":"231:1:25","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"226:1:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"291:63:25","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"316:3:25"},{"name":"i","nodeType":"YulIdentifier","src":"321:1:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"312:3:25"},"nodeType":"YulFunctionCall","src":"312:11:25"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"335:3:25"},{"name":"i","nodeType":"YulIdentifier","src":"340:1:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"331:3:25"},"nodeType":"YulFunctionCall","src":"331:11:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"325:5:25"},"nodeType":"YulFunctionCall","src":"325:18:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"305:6:25"},"nodeType":"YulFunctionCall","src":"305:39:25"},"nodeType":"YulExpressionStatement","src":"305:39:25"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"252:1:25"},{"name":"length","nodeType":"YulIdentifier","src":"255:6:25"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"249:2:25"},"nodeType":"YulFunctionCall","src":"249:13:25"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"263:19:25","statements":[{"nodeType":"YulAssignment","src":"265:15:25","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"274:1:25"},{"kind":"number","nodeType":"YulLiteral","src":"277:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"270:3:25"},"nodeType":"YulFunctionCall","src":"270:10:25"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"265:1:25"}]}]},"pre":{"nodeType":"YulBlock","src":"245:3:25","statements":[]},"src":"241:113:25"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"374:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"379:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"370:3:25"},"nodeType":"YulFunctionCall","src":"370:16:25"},{"kind":"number","nodeType":"YulLiteral","src":"388:1:25","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"363:6:25"},"nodeType":"YulFunctionCall","src":"363:27:25"},"nodeType":"YulExpressionStatement","src":"363:27:25"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"190:3:25","type":""},{"name":"dst","nodeType":"YulTypedName","src":"195:3:25","type":""},{"name":"length","nodeType":"YulTypedName","src":"200:6:25","type":""}],"src":"146:250:25"},{"body":{"nodeType":"YulBlock","src":"465:635:25","statements":[{"body":{"nodeType":"YulBlock","src":"514:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"523:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"526:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"516:6:25"},"nodeType":"YulFunctionCall","src":"516:12:25"},"nodeType":"YulExpressionStatement","src":"516:12:25"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"493:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"501:4:25","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"489:3:25"},"nodeType":"YulFunctionCall","src":"489:17:25"},{"name":"end","nodeType":"YulIdentifier","src":"508:3:25"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"485:3:25"},"nodeType":"YulFunctionCall","src":"485:27:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"478:6:25"},"nodeType":"YulFunctionCall","src":"478:35:25"},"nodeType":"YulIf","src":"475:55:25"},{"nodeType":"YulVariableDeclaration","src":"539:23:25","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"555:6:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"549:5:25"},"nodeType":"YulFunctionCall","src":"549:13:25"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"543:2:25","type":""}]},{"nodeType":"YulVariableDeclaration","src":"571:28:25","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"589:2:25","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"593:1:25","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"585:3:25"},"nodeType":"YulFunctionCall","src":"585:10:25"},{"kind":"number","nodeType":"YulLiteral","src":"597:1:25","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"581:3:25"},"nodeType":"YulFunctionCall","src":"581:18:25"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"575:2:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"622:22:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"624:16:25"},"nodeType":"YulFunctionCall","src":"624:18:25"},"nodeType":"YulExpressionStatement","src":"624:18:25"}]},"condition":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"614:2:25"},{"name":"_2","nodeType":"YulIdentifier","src":"618:2:25"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"611:2:25"},"nodeType":"YulFunctionCall","src":"611:10:25"},"nodeType":"YulIf","src":"608:36:25"},{"nodeType":"YulVariableDeclaration","src":"653:17:25","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"667:2:25","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"663:3:25"},"nodeType":"YulFunctionCall","src":"663:7:25"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"657:2:25","type":""}]},{"nodeType":"YulVariableDeclaration","src":"679:23:25","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"699:2:25","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"693:5:25"},"nodeType":"YulFunctionCall","src":"693:9:25"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"683:6:25","type":""}]},{"nodeType":"YulVariableDeclaration","src":"711:71:25","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"733:6:25"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"757:2:25"},{"kind":"number","nodeType":"YulLiteral","src":"761:4:25","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"753:3:25"},"nodeType":"YulFunctionCall","src":"753:13:25"},{"name":"_3","nodeType":"YulIdentifier","src":"768:2:25"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"749:3:25"},"nodeType":"YulFunctionCall","src":"749:22:25"},{"kind":"number","nodeType":"YulLiteral","src":"773:2:25","type":"","value":"63"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"745:3:25"},"nodeType":"YulFunctionCall","src":"745:31:25"},{"name":"_3","nodeType":"YulIdentifier","src":"778:2:25"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"741:3:25"},"nodeType":"YulFunctionCall","src":"741:40:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"729:3:25"},"nodeType":"YulFunctionCall","src":"729:53:25"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"715:10:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"841:22:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"843:16:25"},"nodeType":"YulFunctionCall","src":"843:18:25"},"nodeType":"YulExpressionStatement","src":"843:18:25"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"800:10:25"},{"name":"_2","nodeType":"YulIdentifier","src":"812:2:25"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"797:2:25"},"nodeType":"YulFunctionCall","src":"797:18:25"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"820:10:25"},{"name":"memPtr","nodeType":"YulIdentifier","src":"832:6:25"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"817:2:25"},"nodeType":"YulFunctionCall","src":"817:22:25"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"794:2:25"},"nodeType":"YulFunctionCall","src":"794:46:25"},"nodeType":"YulIf","src":"791:72:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"879:2:25","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"883:10:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"872:6:25"},"nodeType":"YulFunctionCall","src":"872:22:25"},"nodeType":"YulExpressionStatement","src":"872:22:25"},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"910:6:25"},{"name":"_1","nodeType":"YulIdentifier","src":"918:2:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"903:6:25"},"nodeType":"YulFunctionCall","src":"903:18:25"},"nodeType":"YulExpressionStatement","src":"903:18:25"},{"body":{"nodeType":"YulBlock","src":"969:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"978:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"981:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"971:6:25"},"nodeType":"YulFunctionCall","src":"971:12:25"},"nodeType":"YulExpressionStatement","src":"971:12:25"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"944:6:25"},{"name":"_1","nodeType":"YulIdentifier","src":"952:2:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"940:3:25"},"nodeType":"YulFunctionCall","src":"940:15:25"},{"kind":"number","nodeType":"YulLiteral","src":"957:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"936:3:25"},"nodeType":"YulFunctionCall","src":"936:26:25"},{"name":"end","nodeType":"YulIdentifier","src":"964:3:25"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"933:2:25"},"nodeType":"YulFunctionCall","src":"933:35:25"},"nodeType":"YulIf","src":"930:55:25"},{"expression":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1033:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"1041:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1029:3:25"},"nodeType":"YulFunctionCall","src":"1029:17:25"},{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1052:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"1060:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1048:3:25"},"nodeType":"YulFunctionCall","src":"1048:17:25"},{"name":"_1","nodeType":"YulIdentifier","src":"1067:2:25"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"994:34:25"},"nodeType":"YulFunctionCall","src":"994:76:25"},"nodeType":"YulExpressionStatement","src":"994:76:25"},{"nodeType":"YulAssignment","src":"1079:15:25","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"1088:6:25"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"1079:5:25"}]}]},"name":"abi_decode_string_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"439:6:25","type":""},{"name":"end","nodeType":"YulTypedName","src":"447:3:25","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"455:5:25","type":""}],"src":"401:699:25"},{"body":{"nodeType":"YulBlock","src":"1257:639:25","statements":[{"body":{"nodeType":"YulBlock","src":"1304:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1313:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1316:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1306:6:25"},"nodeType":"YulFunctionCall","src":"1306:12:25"},"nodeType":"YulExpressionStatement","src":"1306:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1278:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"1287:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1274:3:25"},"nodeType":"YulFunctionCall","src":"1274:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"1299:3:25","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1270:3:25"},"nodeType":"YulFunctionCall","src":"1270:33:25"},"nodeType":"YulIf","src":"1267:53:25"},{"nodeType":"YulVariableDeclaration","src":"1329:30:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1349:9:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1343:5:25"},"nodeType":"YulFunctionCall","src":"1343:16:25"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1333:6:25","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1368:28:25","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1386:2:25","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"1390:1:25","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1382:3:25"},"nodeType":"YulFunctionCall","src":"1382:10:25"},{"kind":"number","nodeType":"YulLiteral","src":"1394:1:25","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1378:3:25"},"nodeType":"YulFunctionCall","src":"1378:18:25"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"1372:2:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"1423:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1432:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1435:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1425:6:25"},"nodeType":"YulFunctionCall","src":"1425:12:25"},"nodeType":"YulExpressionStatement","src":"1425:12:25"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1411:6:25"},{"name":"_1","nodeType":"YulIdentifier","src":"1419:2:25"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1408:2:25"},"nodeType":"YulFunctionCall","src":"1408:14:25"},"nodeType":"YulIf","src":"1405:34:25"},{"nodeType":"YulAssignment","src":"1448:71:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1491:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"1502:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1487:3:25"},"nodeType":"YulFunctionCall","src":"1487:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1511:7:25"}],"functionName":{"name":"abi_decode_string_fromMemory","nodeType":"YulIdentifier","src":"1458:28:25"},"nodeType":"YulFunctionCall","src":"1458:61:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1448:6:25"}]},{"nodeType":"YulVariableDeclaration","src":"1528:41:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1554:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"1565:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1550:3:25"},"nodeType":"YulFunctionCall","src":"1550:18:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1544:5:25"},"nodeType":"YulFunctionCall","src":"1544:25:25"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"1532:8:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"1598:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1607:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1610:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1600:6:25"},"nodeType":"YulFunctionCall","src":"1600:12:25"},"nodeType":"YulExpressionStatement","src":"1600:12:25"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"1584:8:25"},{"name":"_1","nodeType":"YulIdentifier","src":"1594:2:25"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1581:2:25"},"nodeType":"YulFunctionCall","src":"1581:16:25"},"nodeType":"YulIf","src":"1578:36:25"},{"nodeType":"YulAssignment","src":"1623:73:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1666:9:25"},{"name":"offset_1","nodeType":"YulIdentifier","src":"1677:8:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1662:3:25"},"nodeType":"YulFunctionCall","src":"1662:24:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1688:7:25"}],"functionName":{"name":"abi_decode_string_fromMemory","nodeType":"YulIdentifier","src":"1633:28:25"},"nodeType":"YulFunctionCall","src":"1633:63:25"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1623:6:25"}]},{"nodeType":"YulAssignment","src":"1705:35:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1725:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"1736:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1721:3:25"},"nodeType":"YulFunctionCall","src":"1721:18:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1715:5:25"},"nodeType":"YulFunctionCall","src":"1715:25:25"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1705:6:25"}]},{"nodeType":"YulVariableDeclaration","src":"1749:38:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1772:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"1783:2:25","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1768:3:25"},"nodeType":"YulFunctionCall","src":"1768:18:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1762:5:25"},"nodeType":"YulFunctionCall","src":"1762:25:25"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"1753:5:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"1850:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1859:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1862:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1852:6:25"},"nodeType":"YulFunctionCall","src":"1852:12:25"},"nodeType":"YulExpressionStatement","src":"1852:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1809:5:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1820:5:25"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1835:3:25","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"1840:1:25","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1831:3:25"},"nodeType":"YulFunctionCall","src":"1831:11:25"},{"kind":"number","nodeType":"YulLiteral","src":"1844:1:25","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1827:3:25"},"nodeType":"YulFunctionCall","src":"1827:19:25"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1816:3:25"},"nodeType":"YulFunctionCall","src":"1816:31:25"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1806:2:25"},"nodeType":"YulFunctionCall","src":"1806:42:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1799:6:25"},"nodeType":"YulFunctionCall","src":"1799:50:25"},"nodeType":"YulIf","src":"1796:70:25"},{"nodeType":"YulAssignment","src":"1875:15:25","value":{"name":"value","nodeType":"YulIdentifier","src":"1885:5:25"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"1875:6:25"}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1199:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1210:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1222:6:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1230:6:25","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1238:6:25","type":""},{"name":"value3","nodeType":"YulTypedName","src":"1246:6:25","type":""}],"src":"1105:791:25"},{"body":{"nodeType":"YulBlock","src":"1956:325:25","statements":[{"nodeType":"YulAssignment","src":"1966:22:25","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1980:1:25","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"1983:4:25"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"1976:3:25"},"nodeType":"YulFunctionCall","src":"1976:12:25"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1966:6:25"}]},{"nodeType":"YulVariableDeclaration","src":"1997:38:25","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2027:4:25"},{"kind":"number","nodeType":"YulLiteral","src":"2033:1:25","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2023:3:25"},"nodeType":"YulFunctionCall","src":"2023:12:25"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"2001:18:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"2074:31:25","statements":[{"nodeType":"YulAssignment","src":"2076:27:25","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2090:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"2098:4:25","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2086:3:25"},"nodeType":"YulFunctionCall","src":"2086:17:25"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2076:6:25"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"2054:18:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2047:6:25"},"nodeType":"YulFunctionCall","src":"2047:26:25"},"nodeType":"YulIf","src":"2044:61:25"},{"body":{"nodeType":"YulBlock","src":"2164:111:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2185:1:25","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2192:3:25","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"2197:10:25","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2188:3:25"},"nodeType":"YulFunctionCall","src":"2188:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2178:6:25"},"nodeType":"YulFunctionCall","src":"2178:31:25"},"nodeType":"YulExpressionStatement","src":"2178:31:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2229:1:25","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"2232:4:25","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2222:6:25"},"nodeType":"YulFunctionCall","src":"2222:15:25"},"nodeType":"YulExpressionStatement","src":"2222:15:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2257:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2260:4:25","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2250:6:25"},"nodeType":"YulFunctionCall","src":"2250:15:25"},"nodeType":"YulExpressionStatement","src":"2250:15:25"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"2120:18:25"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2143:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"2151:2:25","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2140:2:25"},"nodeType":"YulFunctionCall","src":"2140:14:25"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2117:2:25"},"nodeType":"YulFunctionCall","src":"2117:38:25"},"nodeType":"YulIf","src":"2114:161:25"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"1936:4:25","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"1945:6:25","type":""}],"src":"1901:380:25"},{"body":{"nodeType":"YulBlock","src":"2342:65:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2359:1:25","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"2362:3:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2352:6:25"},"nodeType":"YulFunctionCall","src":"2352:14:25"},"nodeType":"YulExpressionStatement","src":"2352:14:25"},{"nodeType":"YulAssignment","src":"2375:26:25","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2393:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2396:4:25","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"2383:9:25"},"nodeType":"YulFunctionCall","src":"2383:18:25"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"2375:4:25"}]}]},"name":"array_dataslot_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"2325:3:25","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"2333:4:25","type":""}],"src":"2286:121:25"},{"body":{"nodeType":"YulBlock","src":"2493:464:25","statements":[{"body":{"nodeType":"YulBlock","src":"2526:425:25","statements":[{"nodeType":"YulVariableDeclaration","src":"2540:11:25","value":{"kind":"number","nodeType":"YulLiteral","src":"2550:1:25","type":"","value":"0"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"2544:2:25","type":""}]},{"expression":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"2571:2:25"},{"name":"array","nodeType":"YulIdentifier","src":"2575:5:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2564:6:25"},"nodeType":"YulFunctionCall","src":"2564:17:25"},"nodeType":"YulExpressionStatement","src":"2564:17:25"},{"nodeType":"YulVariableDeclaration","src":"2594:31:25","value":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"2616:2:25"},{"kind":"number","nodeType":"YulLiteral","src":"2620:4:25","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"2606:9:25"},"nodeType":"YulFunctionCall","src":"2606:19:25"},"variables":[{"name":"data","nodeType":"YulTypedName","src":"2598:4:25","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2638:57:25","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2661:4:25"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2671:1:25","type":"","value":"5"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"2678:10:25"},{"kind":"number","nodeType":"YulLiteral","src":"2690:2:25","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2674:3:25"},"nodeType":"YulFunctionCall","src":"2674:19:25"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2667:3:25"},"nodeType":"YulFunctionCall","src":"2667:27:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2657:3:25"},"nodeType":"YulFunctionCall","src":"2657:38:25"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"2642:11:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"2732:23:25","statements":[{"nodeType":"YulAssignment","src":"2734:19:25","value":{"name":"data","nodeType":"YulIdentifier","src":"2749:4:25"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"2734:11:25"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"2714:10:25"},{"kind":"number","nodeType":"YulLiteral","src":"2726:4:25","type":"","value":"0x20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2711:2:25"},"nodeType":"YulFunctionCall","src":"2711:20:25"},"nodeType":"YulIf","src":"2708:47:25"},{"nodeType":"YulVariableDeclaration","src":"2768:41:25","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2782:4:25"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2792:1:25","type":"","value":"5"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"2799:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"2804:2:25","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2795:3:25"},"nodeType":"YulFunctionCall","src":"2795:12:25"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2788:3:25"},"nodeType":"YulFunctionCall","src":"2788:20:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2778:3:25"},"nodeType":"YulFunctionCall","src":"2778:31:25"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"2772:2:25","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2822:24:25","value":{"name":"deleteStart","nodeType":"YulIdentifier","src":"2835:11:25"},"variables":[{"name":"start","nodeType":"YulTypedName","src":"2826:5:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"2920:21:25","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2929:5:25"},{"name":"_1","nodeType":"YulIdentifier","src":"2936:2:25"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"2922:6:25"},"nodeType":"YulFunctionCall","src":"2922:17:25"},"nodeType":"YulExpressionStatement","src":"2922:17:25"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2870:5:25"},{"name":"_2","nodeType":"YulIdentifier","src":"2877:2:25"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2867:2:25"},"nodeType":"YulFunctionCall","src":"2867:13:25"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"2881:26:25","statements":[{"nodeType":"YulAssignment","src":"2883:22:25","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2896:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"2903:1:25","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2892:3:25"},"nodeType":"YulFunctionCall","src":"2892:13:25"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"2883:5:25"}]}]},"pre":{"nodeType":"YulBlock","src":"2863:3:25","statements":[]},"src":"2859:82:25"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"2509:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"2514:2:25","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2506:2:25"},"nodeType":"YulFunctionCall","src":"2506:11:25"},"nodeType":"YulIf","src":"2503:448:25"}]},"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"2465:5:25","type":""},{"name":"len","nodeType":"YulTypedName","src":"2472:3:25","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"2477:10:25","type":""}],"src":"2412:545:25"},{"body":{"nodeType":"YulBlock","src":"3047:81:25","statements":[{"nodeType":"YulAssignment","src":"3057:65:25","value":{"arguments":[{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3072:4:25"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3090:1:25","type":"","value":"3"},{"name":"len","nodeType":"YulIdentifier","src":"3093:3:25"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3086:3:25"},"nodeType":"YulFunctionCall","src":"3086:11:25"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3103:1:25","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3099:3:25"},"nodeType":"YulFunctionCall","src":"3099:6:25"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"3082:3:25"},"nodeType":"YulFunctionCall","src":"3082:24:25"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3078:3:25"},"nodeType":"YulFunctionCall","src":"3078:29:25"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3068:3:25"},"nodeType":"YulFunctionCall","src":"3068:40:25"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3114:1:25","type":"","value":"1"},{"name":"len","nodeType":"YulIdentifier","src":"3117:3:25"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3110:3:25"},"nodeType":"YulFunctionCall","src":"3110:11:25"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"3065:2:25"},"nodeType":"YulFunctionCall","src":"3065:57:25"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"3057:4:25"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"3024:4:25","type":""},{"name":"len","nodeType":"YulTypedName","src":"3030:3:25","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"3038:4:25","type":""}],"src":"2962:166:25"},{"body":{"nodeType":"YulBlock","src":"3229:1256:25","statements":[{"nodeType":"YulVariableDeclaration","src":"3239:24:25","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3259:3:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3253:5:25"},"nodeType":"YulFunctionCall","src":"3253:10:25"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"3243:6:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"3306:22:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"3308:16:25"},"nodeType":"YulFunctionCall","src":"3308:18:25"},"nodeType":"YulExpressionStatement","src":"3308:18:25"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"3278:6:25"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3294:2:25","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"3298:1:25","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3290:3:25"},"nodeType":"YulFunctionCall","src":"3290:10:25"},{"kind":"number","nodeType":"YulLiteral","src":"3302:1:25","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3286:3:25"},"nodeType":"YulFunctionCall","src":"3286:18:25"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3275:2:25"},"nodeType":"YulFunctionCall","src":"3275:30:25"},"nodeType":"YulIf","src":"3272:56:25"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3381:4:25"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3419:4:25"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"3413:5:25"},"nodeType":"YulFunctionCall","src":"3413:11:25"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"3387:25:25"},"nodeType":"YulFunctionCall","src":"3387:38:25"},{"name":"newLen","nodeType":"YulIdentifier","src":"3427:6:25"}],"functionName":{"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulIdentifier","src":"3337:43:25"},"nodeType":"YulFunctionCall","src":"3337:97:25"},"nodeType":"YulExpressionStatement","src":"3337:97:25"},{"nodeType":"YulVariableDeclaration","src":"3443:18:25","value":{"kind":"number","nodeType":"YulLiteral","src":"3460:1:25","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"3447:9:25","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3470:23:25","value":{"kind":"number","nodeType":"YulLiteral","src":"3489:4:25","type":"","value":"0x20"},"variables":[{"name":"srcOffset_1","nodeType":"YulTypedName","src":"3474:11:25","type":""}]},{"nodeType":"YulAssignment","src":"3502:24:25","value":{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"3515:11:25"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"3502:9:25"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"3572:656:25","statements":[{"nodeType":"YulVariableDeclaration","src":"3586:35:25","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"3605:6:25"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3617:2:25","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3613:3:25"},"nodeType":"YulFunctionCall","src":"3613:7:25"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3601:3:25"},"nodeType":"YulFunctionCall","src":"3601:20:25"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"3590:7:25","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3634:49:25","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3678:4:25"}],"functionName":{"name":"array_dataslot_string_storage","nodeType":"YulIdentifier","src":"3648:29:25"},"nodeType":"YulFunctionCall","src":"3648:35:25"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"3638:6:25","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3696:10:25","value":{"kind":"number","nodeType":"YulLiteral","src":"3705:1:25","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"3700:1:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"3783:172:25","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"3808:6:25"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3826:3:25"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"3831:9:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3822:3:25"},"nodeType":"YulFunctionCall","src":"3822:19:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3816:5:25"},"nodeType":"YulFunctionCall","src":"3816:26:25"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"3801:6:25"},"nodeType":"YulFunctionCall","src":"3801:42:25"},"nodeType":"YulExpressionStatement","src":"3801:42:25"},{"nodeType":"YulAssignment","src":"3860:24:25","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"3874:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"3882:1:25","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3870:3:25"},"nodeType":"YulFunctionCall","src":"3870:14:25"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"3860:6:25"}]},{"nodeType":"YulAssignment","src":"3901:40:25","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"3918:9:25"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"3929:11:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3914:3:25"},"nodeType":"YulFunctionCall","src":"3914:27:25"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"3901:9:25"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3730:1:25"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"3733:7:25"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3727:2:25"},"nodeType":"YulFunctionCall","src":"3727:14:25"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"3742:28:25","statements":[{"nodeType":"YulAssignment","src":"3744:24:25","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3753:1:25"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"3756:11:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3749:3:25"},"nodeType":"YulFunctionCall","src":"3749:19:25"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"3744:1:25"}]}]},"pre":{"nodeType":"YulBlock","src":"3723:3:25","statements":[]},"src":"3719:236:25"},{"body":{"nodeType":"YulBlock","src":"4003:166:25","statements":[{"nodeType":"YulVariableDeclaration","src":"4021:43:25","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4048:3:25"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"4053:9:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4044:3:25"},"nodeType":"YulFunctionCall","src":"4044:19:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4038:5:25"},"nodeType":"YulFunctionCall","src":"4038:26:25"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"4025:9:25","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"4088:6:25"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"4100:9:25"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4127:1:25","type":"","value":"3"},{"name":"newLen","nodeType":"YulIdentifier","src":"4130:6:25"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4123:3:25"},"nodeType":"YulFunctionCall","src":"4123:14:25"},{"kind":"number","nodeType":"YulLiteral","src":"4139:3:25","type":"","value":"248"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4119:3:25"},"nodeType":"YulFunctionCall","src":"4119:24:25"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4149:1:25","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4145:3:25"},"nodeType":"YulFunctionCall","src":"4145:6:25"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"4115:3:25"},"nodeType":"YulFunctionCall","src":"4115:37:25"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4111:3:25"},"nodeType":"YulFunctionCall","src":"4111:42:25"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4096:3:25"},"nodeType":"YulFunctionCall","src":"4096:58:25"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"4081:6:25"},"nodeType":"YulFunctionCall","src":"4081:74:25"},"nodeType":"YulExpressionStatement","src":"4081:74:25"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"3974:7:25"},{"name":"newLen","nodeType":"YulIdentifier","src":"3983:6:25"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3971:2:25"},"nodeType":"YulFunctionCall","src":"3971:19:25"},"nodeType":"YulIf","src":"3968:201:25"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"4189:4:25"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4203:1:25","type":"","value":"1"},{"name":"newLen","nodeType":"YulIdentifier","src":"4206:6:25"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4199:3:25"},"nodeType":"YulFunctionCall","src":"4199:14:25"},{"kind":"number","nodeType":"YulLiteral","src":"4215:1:25","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4195:3:25"},"nodeType":"YulFunctionCall","src":"4195:22:25"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"4182:6:25"},"nodeType":"YulFunctionCall","src":"4182:36:25"},"nodeType":"YulExpressionStatement","src":"4182:36:25"}]},"nodeType":"YulCase","src":"3565:663:25","value":{"kind":"number","nodeType":"YulLiteral","src":"3570:1:25","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"4245:234:25","statements":[{"nodeType":"YulVariableDeclaration","src":"4259:14:25","value":{"kind":"number","nodeType":"YulLiteral","src":"4272:1:25","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"4263:5:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"4308:67:25","statements":[{"nodeType":"YulAssignment","src":"4326:35:25","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4345:3:25"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"4350:9:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4341:3:25"},"nodeType":"YulFunctionCall","src":"4341:19:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4335:5:25"},"nodeType":"YulFunctionCall","src":"4335:26:25"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"4326:5:25"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"4289:6:25"},"nodeType":"YulIf","src":"4286:89:25"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"4395:4:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4454:5:25"},{"name":"newLen","nodeType":"YulIdentifier","src":"4461:6:25"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"4401:52:25"},"nodeType":"YulFunctionCall","src":"4401:67:25"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"4388:6:25"},"nodeType":"YulFunctionCall","src":"4388:81:25"},"nodeType":"YulExpressionStatement","src":"4388:81:25"}]},"nodeType":"YulCase","src":"4237:242:25","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"3545:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"3553:2:25","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3542:2:25"},"nodeType":"YulFunctionCall","src":"3542:14:25"},"nodeType":"YulSwitch","src":"3535:944:25"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"3214:4:25","type":""},{"name":"src","nodeType":"YulTypedName","src":"3220:3:25","type":""}],"src":"3133:1352:25"},{"body":{"nodeType":"YulBlock","src":"4591:102:25","statements":[{"nodeType":"YulAssignment","src":"4601:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4613:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"4624:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4609:3:25"},"nodeType":"YulFunctionCall","src":"4609:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4601:4:25"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4643:9:25"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4658:6:25"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4674:3:25","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"4679:1:25","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4670:3:25"},"nodeType":"YulFunctionCall","src":"4670:11:25"},{"kind":"number","nodeType":"YulLiteral","src":"4683:1:25","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4666:3:25"},"nodeType":"YulFunctionCall","src":"4666:19:25"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4654:3:25"},"nodeType":"YulFunctionCall","src":"4654:32:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4636:6:25"},"nodeType":"YulFunctionCall","src":"4636:51:25"},"nodeType":"YulExpressionStatement","src":"4636:51:25"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4560:9:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4571:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4582:4:25","type":""}],"src":"4490:203:25"},{"body":{"nodeType":"YulBlock","src":"4730:95:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4747:1:25","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4754:3:25","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"4759:10:25","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4750:3:25"},"nodeType":"YulFunctionCall","src":"4750:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4740:6:25"},"nodeType":"YulFunctionCall","src":"4740:31:25"},"nodeType":"YulExpressionStatement","src":"4740:31:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4787:1:25","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"4790:4:25","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4780:6:25"},"nodeType":"YulFunctionCall","src":"4780:15:25"},"nodeType":"YulExpressionStatement","src":"4780:15:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4811:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4814:4:25","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4804:6:25"},"nodeType":"YulFunctionCall","src":"4804:15:25"},"nodeType":"YulExpressionStatement","src":"4804:15:25"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"4698:127:25"},{"body":{"nodeType":"YulBlock","src":"4882:116:25","statements":[{"nodeType":"YulAssignment","src":"4892:20:25","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"4907:1:25"},{"name":"y","nodeType":"YulIdentifier","src":"4910:1:25"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"4903:3:25"},"nodeType":"YulFunctionCall","src":"4903:9:25"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"4892:7:25"}]},{"body":{"nodeType":"YulBlock","src":"4970:22:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"4972:16:25"},"nodeType":"YulFunctionCall","src":"4972:18:25"},"nodeType":"YulExpressionStatement","src":"4972:18:25"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"4941:1:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4934:6:25"},"nodeType":"YulFunctionCall","src":"4934:9:25"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"4948:1:25"},{"arguments":[{"name":"product","nodeType":"YulIdentifier","src":"4955:7:25"},{"name":"x","nodeType":"YulIdentifier","src":"4964:1:25"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4951:3:25"},"nodeType":"YulFunctionCall","src":"4951:15:25"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4945:2:25"},"nodeType":"YulFunctionCall","src":"4945:22:25"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"4931:2:25"},"nodeType":"YulFunctionCall","src":"4931:37:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4924:6:25"},"nodeType":"YulFunctionCall","src":"4924:45:25"},"nodeType":"YulIf","src":"4921:71:25"}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"4861:1:25","type":""},{"name":"y","nodeType":"YulTypedName","src":"4864:1:25","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"4870:7:25","type":""}],"src":"4830:168:25"},{"body":{"nodeType":"YulBlock","src":"5049:171:25","statements":[{"body":{"nodeType":"YulBlock","src":"5080:111:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5101:1:25","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5108:3:25","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"5113:10:25","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5104:3:25"},"nodeType":"YulFunctionCall","src":"5104:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5094:6:25"},"nodeType":"YulFunctionCall","src":"5094:31:25"},"nodeType":"YulExpressionStatement","src":"5094:31:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5145:1:25","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"5148:4:25","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5138:6:25"},"nodeType":"YulFunctionCall","src":"5138:15:25"},"nodeType":"YulExpressionStatement","src":"5138:15:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5173:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5176:4:25","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5166:6:25"},"nodeType":"YulFunctionCall","src":"5166:15:25"},"nodeType":"YulExpressionStatement","src":"5166:15:25"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"5069:1:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5062:6:25"},"nodeType":"YulFunctionCall","src":"5062:9:25"},"nodeType":"YulIf","src":"5059:132:25"},{"nodeType":"YulAssignment","src":"5200:14:25","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"5209:1:25"},{"name":"y","nodeType":"YulIdentifier","src":"5212:1:25"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"5205:3:25"},"nodeType":"YulFunctionCall","src":"5205:9:25"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"5200:1:25"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"5034:1:25","type":""},{"name":"y","nodeType":"YulTypedName","src":"5037:1:25","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"5043:1:25","type":""}],"src":"5003:217:25"},{"body":{"nodeType":"YulBlock","src":"5438:276:25","statements":[{"nodeType":"YulAssignment","src":"5448:27:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5460:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"5471:3:25","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5456:3:25"},"nodeType":"YulFunctionCall","src":"5456:19:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5448:4:25"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5491:9:25"},{"name":"value0","nodeType":"YulIdentifier","src":"5502:6:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5484:6:25"},"nodeType":"YulFunctionCall","src":"5484:25:25"},"nodeType":"YulExpressionStatement","src":"5484:25:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5529:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"5540:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5525:3:25"},"nodeType":"YulFunctionCall","src":"5525:18:25"},{"name":"value1","nodeType":"YulIdentifier","src":"5545:6:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5518:6:25"},"nodeType":"YulFunctionCall","src":"5518:34:25"},"nodeType":"YulExpressionStatement","src":"5518:34:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5572:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"5583:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5568:3:25"},"nodeType":"YulFunctionCall","src":"5568:18:25"},{"name":"value2","nodeType":"YulIdentifier","src":"5588:6:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5561:6:25"},"nodeType":"YulFunctionCall","src":"5561:34:25"},"nodeType":"YulExpressionStatement","src":"5561:34:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5615:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"5626:2:25","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5611:3:25"},"nodeType":"YulFunctionCall","src":"5611:18:25"},{"name":"value3","nodeType":"YulIdentifier","src":"5631:6:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5604:6:25"},"nodeType":"YulFunctionCall","src":"5604:34:25"},"nodeType":"YulExpressionStatement","src":"5604:34:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5658:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"5669:3:25","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5654:3:25"},"nodeType":"YulFunctionCall","src":"5654:19:25"},{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"5679:6:25"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5695:3:25","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"5700:1:25","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5691:3:25"},"nodeType":"YulFunctionCall","src":"5691:11:25"},{"kind":"number","nodeType":"YulLiteral","src":"5704:1:25","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5687:3:25"},"nodeType":"YulFunctionCall","src":"5687:19:25"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5675:3:25"},"nodeType":"YulFunctionCall","src":"5675:32:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5647:6:25"},"nodeType":"YulFunctionCall","src":"5647:61:25"},"nodeType":"YulExpressionStatement","src":"5647:61:25"}]},"name":"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5375:9:25","type":""},{"name":"value4","nodeType":"YulTypedName","src":"5386:6:25","type":""},{"name":"value3","nodeType":"YulTypedName","src":"5394:6:25","type":""},{"name":"value2","nodeType":"YulTypedName","src":"5402:6:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5410:6:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5418:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5429:4:25","type":""}],"src":"5225:489:25"},{"body":{"nodeType":"YulBlock","src":"5840:275:25","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5857:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"5868:2:25","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5850:6:25"},"nodeType":"YulFunctionCall","src":"5850:21:25"},"nodeType":"YulExpressionStatement","src":"5850:21:25"},{"nodeType":"YulVariableDeclaration","src":"5880:27:25","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5900:6:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5894:5:25"},"nodeType":"YulFunctionCall","src":"5894:13:25"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"5884:6:25","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5927:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"5938:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5923:3:25"},"nodeType":"YulFunctionCall","src":"5923:18:25"},{"name":"length","nodeType":"YulIdentifier","src":"5943:6:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5916:6:25"},"nodeType":"YulFunctionCall","src":"5916:34:25"},"nodeType":"YulExpressionStatement","src":"5916:34:25"},{"expression":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5998:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"6006:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5994:3:25"},"nodeType":"YulFunctionCall","src":"5994:15:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6015:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"6026:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6011:3:25"},"nodeType":"YulFunctionCall","src":"6011:18:25"},{"name":"length","nodeType":"YulIdentifier","src":"6031:6:25"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"5959:34:25"},"nodeType":"YulFunctionCall","src":"5959:79:25"},"nodeType":"YulExpressionStatement","src":"5959:79:25"},{"nodeType":"YulAssignment","src":"6047:62:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6063:9:25"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6082:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"6090:2:25","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6078:3:25"},"nodeType":"YulFunctionCall","src":"6078:15:25"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6099:2:25","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"6095:3:25"},"nodeType":"YulFunctionCall","src":"6095:7:25"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6074:3:25"},"nodeType":"YulFunctionCall","src":"6074:29:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6059:3:25"},"nodeType":"YulFunctionCall","src":"6059:45:25"},{"kind":"number","nodeType":"YulLiteral","src":"6106:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6055:3:25"},"nodeType":"YulFunctionCall","src":"6055:54:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6047:4:25"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5809:9:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5820:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5831:4:25","type":""}],"src":"5719:396:25"},{"body":{"nodeType":"YulBlock","src":"6214:203:25","statements":[{"nodeType":"YulVariableDeclaration","src":"6224:26:25","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"6244:5:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6238:5:25"},"nodeType":"YulFunctionCall","src":"6238:12:25"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"6228:6:25","type":""}]},{"nodeType":"YulAssignment","src":"6259:32:25","value":{"arguments":[{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"6278:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"6285:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6274:3:25"},"nodeType":"YulFunctionCall","src":"6274:16:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6268:5:25"},"nodeType":"YulFunctionCall","src":"6268:23:25"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"6259:5:25"}]},{"body":{"nodeType":"YulBlock","src":"6328:83:25","statements":[{"nodeType":"YulAssignment","src":"6342:59:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6355:5:25"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6370:1:25","type":"","value":"3"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6377:4:25","type":"","value":"0x20"},{"name":"length","nodeType":"YulIdentifier","src":"6383:6:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6373:3:25"},"nodeType":"YulFunctionCall","src":"6373:17:25"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"6366:3:25"},"nodeType":"YulFunctionCall","src":"6366:25:25"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6397:1:25","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"6393:3:25"},"nodeType":"YulFunctionCall","src":"6393:6:25"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"6362:3:25"},"nodeType":"YulFunctionCall","src":"6362:38:25"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6351:3:25"},"nodeType":"YulFunctionCall","src":"6351:50:25"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"6342:5:25"}]}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6306:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"6314:4:25","type":"","value":"0x20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6303:2:25"},"nodeType":"YulFunctionCall","src":"6303:16:25"},"nodeType":"YulIf","src":"6300:111:25"}]},"name":"convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"6194:5:25","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"6204:5:25","type":""}],"src":"6120:297:25"},{"body":{"nodeType":"YulBlock","src":"6596:169:25","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6613:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"6624:2:25","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6606:6:25"},"nodeType":"YulFunctionCall","src":"6606:21:25"},"nodeType":"YulExpressionStatement","src":"6606:21:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6647:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"6658:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6643:3:25"},"nodeType":"YulFunctionCall","src":"6643:18:25"},{"kind":"number","nodeType":"YulLiteral","src":"6663:2:25","type":"","value":"19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6636:6:25"},"nodeType":"YulFunctionCall","src":"6636:30:25"},"nodeType":"YulExpressionStatement","src":"6636:30:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6686:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"6697:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6682:3:25"},"nodeType":"YulFunctionCall","src":"6682:18:25"},{"hexValue":"54726164696e67206e6f7420656e61626c6564","kind":"string","nodeType":"YulLiteral","src":"6702:21:25","type":"","value":"Trading not enabled"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6675:6:25"},"nodeType":"YulFunctionCall","src":"6675:49:25"},"nodeType":"YulExpressionStatement","src":"6675:49:25"},{"nodeType":"YulAssignment","src":"6733:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6745:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"6756:2:25","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6741:3:25"},"nodeType":"YulFunctionCall","src":"6741:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6733:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_aba53b7bc56fd10d1bb2cac393e26b489ca53cf0c676cd3f5a7c5c185bf6cd4c__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6573:9:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6587:4:25","type":""}],"src":"6422:343:25"},{"body":{"nodeType":"YulBlock","src":"6944:161:25","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6961:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"6972:2:25","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6954:6:25"},"nodeType":"YulFunctionCall","src":"6954:21:25"},"nodeType":"YulExpressionStatement","src":"6954:21:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6995:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"7006:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6991:3:25"},"nodeType":"YulFunctionCall","src":"6991:18:25"},{"kind":"number","nodeType":"YulLiteral","src":"7011:2:25","type":"","value":"11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6984:6:25"},"nodeType":"YulFunctionCall","src":"6984:30:25"},"nodeType":"YulExpressionStatement","src":"6984:30:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7034:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"7045:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7030:3:25"},"nodeType":"YulFunctionCall","src":"7030:18:25"},{"hexValue":"426c61636b6c6973746564","kind":"string","nodeType":"YulLiteral","src":"7050:13:25","type":"","value":"Blacklisted"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7023:6:25"},"nodeType":"YulFunctionCall","src":"7023:41:25"},"nodeType":"YulExpressionStatement","src":"7023:41:25"},{"nodeType":"YulAssignment","src":"7073:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7085:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"7096:2:25","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7081:3:25"},"nodeType":"YulFunctionCall","src":"7081:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7073:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_fef92ec79bbd568fc63edc095cddaebd47e166ea7932b60d9a91e79658733400__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6921:9:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6935:4:25","type":""}],"src":"6770:335:25"},{"body":{"nodeType":"YulBlock","src":"7158:77:25","statements":[{"nodeType":"YulAssignment","src":"7168:16:25","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"7179:1:25"},{"name":"y","nodeType":"YulIdentifier","src":"7182:1:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7175:3:25"},"nodeType":"YulFunctionCall","src":"7175:9:25"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"7168:3:25"}]},{"body":{"nodeType":"YulBlock","src":"7207:22:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"7209:16:25"},"nodeType":"YulFunctionCall","src":"7209:18:25"},"nodeType":"YulExpressionStatement","src":"7209:18:25"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"7199:1:25"},{"name":"sum","nodeType":"YulIdentifier","src":"7202:3:25"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7196:2:25"},"nodeType":"YulFunctionCall","src":"7196:10:25"},"nodeType":"YulIf","src":"7193:36:25"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"7141:1:25","type":""},{"name":"y","nodeType":"YulTypedName","src":"7144:1:25","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"7150:3:25","type":""}],"src":"7110:125:25"},{"body":{"nodeType":"YulBlock","src":"7414:171:25","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7431:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"7442:2:25","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7424:6:25"},"nodeType":"YulFunctionCall","src":"7424:21:25"},"nodeType":"YulExpressionStatement","src":"7424:21:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7465:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"7476:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7461:3:25"},"nodeType":"YulFunctionCall","src":"7461:18:25"},{"kind":"number","nodeType":"YulLiteral","src":"7481:2:25","type":"","value":"21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7454:6:25"},"nodeType":"YulFunctionCall","src":"7454:30:25"},"nodeType":"YulExpressionStatement","src":"7454:30:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7504:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"7515:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7500:3:25"},"nodeType":"YulFunctionCall","src":"7500:18:25"},{"hexValue":"416e74692d736e6970652070726f74656374696f6e","kind":"string","nodeType":"YulLiteral","src":"7520:23:25","type":"","value":"Anti-snipe protection"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7493:6:25"},"nodeType":"YulFunctionCall","src":"7493:51:25"},"nodeType":"YulExpressionStatement","src":"7493:51:25"},{"nodeType":"YulAssignment","src":"7553:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7565:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"7576:2:25","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7561:3:25"},"nodeType":"YulFunctionCall","src":"7561:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7553:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_a1e994c71b3513731e9effa0bd81687a4234b5038b9b1fc3f0ec6961d00b02a4__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7391:9:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7405:4:25","type":""}],"src":"7240:345:25"},{"body":{"nodeType":"YulBlock","src":"7764:172:25","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7781:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"7792:2:25","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7774:6:25"},"nodeType":"YulFunctionCall","src":"7774:21:25"},"nodeType":"YulExpressionStatement","src":"7774:21:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7815:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"7826:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7811:3:25"},"nodeType":"YulFunctionCall","src":"7811:18:25"},{"kind":"number","nodeType":"YulLiteral","src":"7831:2:25","type":"","value":"22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7804:6:25"},"nodeType":"YulFunctionCall","src":"7804:30:25"},"nodeType":"YulExpressionStatement","src":"7804:30:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7854:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"7865:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7850:3:25"},"nodeType":"YulFunctionCall","src":"7850:18:25"},{"hexValue":"45786365656473206d61782062757920706572207478","kind":"string","nodeType":"YulLiteral","src":"7870:24:25","type":"","value":"Exceeds max buy per tx"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7843:6:25"},"nodeType":"YulFunctionCall","src":"7843:52:25"},"nodeType":"YulExpressionStatement","src":"7843:52:25"},{"nodeType":"YulAssignment","src":"7904:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7916:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"7927:2:25","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7912:3:25"},"nodeType":"YulFunctionCall","src":"7912:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7904:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_8a47083662e5118b10740f0e82a54826b69dcdcba204cbbbb9689112c03a2b53__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7741:9:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7755:4:25","type":""}],"src":"7590:346:25"},{"body":{"nodeType":"YulBlock","src":"8115:176:25","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8132:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"8143:2:25","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8125:6:25"},"nodeType":"YulFunctionCall","src":"8125:21:25"},"nodeType":"YulExpressionStatement","src":"8125:21:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8166:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"8177:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8162:3:25"},"nodeType":"YulFunctionCall","src":"8162:18:25"},{"kind":"number","nodeType":"YulLiteral","src":"8182:2:25","type":"","value":"26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8155:6:25"},"nodeType":"YulFunctionCall","src":"8155:30:25"},"nodeType":"YulExpressionStatement","src":"8155:30:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8205:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"8216:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8201:3:25"},"nodeType":"YulFunctionCall","src":"8201:18:25"},{"hexValue":"45786365656473206d617820627579207065722077616c6c6574","kind":"string","nodeType":"YulLiteral","src":"8221:28:25","type":"","value":"Exceeds max buy per wallet"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8194:6:25"},"nodeType":"YulFunctionCall","src":"8194:56:25"},"nodeType":"YulExpressionStatement","src":"8194:56:25"},{"nodeType":"YulAssignment","src":"8259:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8271:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"8282:2:25","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8267:3:25"},"nodeType":"YulFunctionCall","src":"8267:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8259:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_fe7271fdf16e686aac8ab7870b0a18a8d2226a1ec6ab1d7a847ec7059dd2e78d__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8092:9:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8106:4:25","type":""}],"src":"7941:350:25"},{"body":{"nodeType":"YulBlock","src":"8470:172:25","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8487:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"8498:2:25","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8480:6:25"},"nodeType":"YulFunctionCall","src":"8480:21:25"},"nodeType":"YulExpressionStatement","src":"8480:21:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8521:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"8532:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8517:3:25"},"nodeType":"YulFunctionCall","src":"8517:18:25"},{"kind":"number","nodeType":"YulLiteral","src":"8537:2:25","type":"","value":"22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8510:6:25"},"nodeType":"YulFunctionCall","src":"8510:30:25"},"nodeType":"YulExpressionStatement","src":"8510:30:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8560:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"8571:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8556:3:25"},"nodeType":"YulFunctionCall","src":"8556:18:25"},{"hexValue":"436f6f6c646f776e20706572696f6420616374697665","kind":"string","nodeType":"YulLiteral","src":"8576:24:25","type":"","value":"Cooldown period active"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8549:6:25"},"nodeType":"YulFunctionCall","src":"8549:52:25"},"nodeType":"YulExpressionStatement","src":"8549:52:25"},{"nodeType":"YulAssignment","src":"8610:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8622:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"8633:2:25","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8618:3:25"},"nodeType":"YulFunctionCall","src":"8618:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8610:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_60e50fe4b5f9ae998b7c4af6246a3be868b5d99ebc1f2f26c5c277ea2f50399f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8447:9:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8461:4:25","type":""}],"src":"8296:346:25"},{"body":{"nodeType":"YulBlock","src":"8696:79:25","statements":[{"nodeType":"YulAssignment","src":"8706:17:25","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"8718:1:25"},{"name":"y","nodeType":"YulIdentifier","src":"8721:1:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8714:3:25"},"nodeType":"YulFunctionCall","src":"8714:9:25"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"8706:4:25"}]},{"body":{"nodeType":"YulBlock","src":"8747:22:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"8749:16:25"},"nodeType":"YulFunctionCall","src":"8749:18:25"},"nodeType":"YulExpressionStatement","src":"8749:18:25"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"8738:4:25"},{"name":"x","nodeType":"YulIdentifier","src":"8744:1:25"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8735:2:25"},"nodeType":"YulFunctionCall","src":"8735:11:25"},"nodeType":"YulIf","src":"8732:37:25"}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"8678:1:25","type":""},{"name":"y","nodeType":"YulTypedName","src":"8681:1:25","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"8687:4:25","type":""}],"src":"8647:128:25"},{"body":{"nodeType":"YulBlock","src":"8937:188:25","statements":[{"nodeType":"YulAssignment","src":"8947:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8959:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"8970:2:25","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8955:3:25"},"nodeType":"YulFunctionCall","src":"8955:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8947:4:25"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8989:9:25"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9004:6:25"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9020:3:25","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"9025:1:25","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"9016:3:25"},"nodeType":"YulFunctionCall","src":"9016:11:25"},{"kind":"number","nodeType":"YulLiteral","src":"9029:1:25","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9012:3:25"},"nodeType":"YulFunctionCall","src":"9012:19:25"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"9000:3:25"},"nodeType":"YulFunctionCall","src":"9000:32:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8982:6:25"},"nodeType":"YulFunctionCall","src":"8982:51:25"},"nodeType":"YulExpressionStatement","src":"8982:51:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9053:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"9064:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9049:3:25"},"nodeType":"YulFunctionCall","src":"9049:18:25"},{"name":"value1","nodeType":"YulIdentifier","src":"9069:6:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9042:6:25"},"nodeType":"YulFunctionCall","src":"9042:34:25"},"nodeType":"YulExpressionStatement","src":"9042:34:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9096:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"9107:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9092:3:25"},"nodeType":"YulFunctionCall","src":"9092:18:25"},{"name":"value2","nodeType":"YulIdentifier","src":"9112:6:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9085:6:25"},"nodeType":"YulFunctionCall","src":"9085:34:25"},"nodeType":"YulExpressionStatement","src":"9085:34:25"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8890:9:25","type":""},{"name":"value2","nodeType":"YulTypedName","src":"8901:6:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"8909:6:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8917:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8928:4:25","type":""}],"src":"8780:345:25"},{"body":{"nodeType":"YulBlock","src":"9231:76:25","statements":[{"nodeType":"YulAssignment","src":"9241:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9253:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"9264:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9249:3:25"},"nodeType":"YulFunctionCall","src":"9249:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9241:4:25"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9283:9:25"},{"name":"value0","nodeType":"YulIdentifier","src":"9294:6:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9276:6:25"},"nodeType":"YulFunctionCall","src":"9276:25:25"},"nodeType":"YulExpressionStatement","src":"9276:25:25"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9200:9:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9211:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9222:4:25","type":""}],"src":"9130:177:25"}]},"contents":"{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        copy_memory_to_memory_with_cleanup(add(offset, 0x20), add(memPtr, 0x20), _1)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256t_address_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n        value2 := mload(add(headStart, 64))\n        let value := mload(add(headStart, 96))\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value3 := value\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), and(value4, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory_with_cleanup(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32(array) -> value\n    {\n        let length := mload(array)\n        value := mload(add(array, 0x20))\n        if lt(length, 0x20)\n        {\n            value := and(value, shl(shl(3, sub(0x20, length)), not(0)))\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_aba53b7bc56fd10d1bb2cac393e26b489ca53cf0c676cd3f5a7c5c185bf6cd4c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"Trading not enabled\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_fef92ec79bbd568fc63edc095cddaebd47e166ea7932b60d9a91e79658733400__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 11)\n        mstore(add(headStart, 64), \"Blacklisted\")\n        tail := add(headStart, 96)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_a1e994c71b3513731e9effa0bd81687a4234b5038b9b1fc3f0ec6961d00b02a4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Anti-snipe protection\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_8a47083662e5118b10740f0e82a54826b69dcdcba204cbbbb9689112c03a2b53__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Exceeds max buy per tx\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_fe7271fdf16e686aac8ab7870b0a18a8d2226a1ec6ab1d7a847ec7059dd2e78d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"Exceeds max buy per wallet\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_60e50fe4b5f9ae998b7c4af6246a3be868b5d99ebc1f2f26c5c277ea2f50399f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Cooldown period active\")\n        tail := add(headStart, 96)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n}","id":25,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"61016060405260646015556016805460ff191690553480156200002157600080fd5b5060405162002f8638038062002f86833981016040819052620000449162000ac8565b808480604051806040016040528060018152602001603160f81b8152508787816003908162000074919062000bec565b50600462000083828262000bec565b50620000959150839050600562000263565b61012052620000a681600662000263565b61014052815160208084019190912060e052815190820120610100524660a0526200013460e05161010051604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201529081019290925260608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b60805250503060c052506001600160a01b0381166200016e57604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b62000179816200029c565b5060016009556200018b8183620002ee565b6001600160a01b0381166000908152601960205260408082208054600160ff19918216811790925530845292829020805490931617909155805160a0810190915280612710620001dd85606462000cce565b620001e9919062000ce8565b8152602001612710620001fe85603262000cce565b6200020a919062000ce8565b815261012c602080830191909152600360408084019190915260016060938401528351600a5590830151600b55820151600c55810151600d5560800151600e805460ff19169115159190911790555062000d9192505050565b600060208351101562000283576200027b836200032c565b905062000296565b8162000290848262000bec565b5060ff90505b92915050565b600880546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b0382166200031a5760405163ec442f0560e01b81526000600482015260240162000165565b62000328600083836200036f565b5050565b600080829050601f815111156200035a578260405163305a27a960e01b815260040162000165919062000d0b565b8051620003678262000d40565b179392505050565b60165460ff16806200038b57506008546001600160a01b031633145b620003d95760405162461bcd60e51b815260206004820152601360248201527f54726164696e67206e6f7420656e61626c656400000000000000000000000000604482015260640162000165565b6001600160a01b0383166000908152601a602052604090205460ff161580156200041c57506001600160a01b0382166000908152601a602052604090205460ff16155b620004585760405162461bcd60e51b815260206004820152600b60248201526a109b1858dadb1a5cdd195960aa1b604482015260640162000165565b600e5460ff1680156200047957506008546001600160a01b03848116911614155b80156200049457506008546001600160a01b03838116911614155b15620006fa576000601454118015620004be5750600d54601454620004ba919062000d65565b4311155b156200053c576008546001600160a01b0383811691161480620004ee57506008546001600160a01b038481169116145b6200053c5760405162461bcd60e51b815260206004820152601560248201527f416e74692d736e6970652070726f74656374696f6e0000000000000000000000604482015260640162000165565b6011546001600160a01b0384811691161480156200056357506001600160a01b0382163014155b15620006fa57600b54811115620005bd5760405162461bcd60e51b815260206004820152601660248201527f45786365656473206d6178206275792070657220747800000000000000000000604482015260640162000165565b600a546001600160a01b038316600090815260186020526040902054620005e690839062000d65565b1115620006365760405162461bcd60e51b815260206004820152601a60248201527f45786365656473206d617820627579207065722077616c6c6574000000000000604482015260640162000165565b600c546001600160a01b0383166000908152601760205260409020546200065e919062000d65565b421015620006af5760405162461bcd60e51b815260206004820152601660248201527f436f6f6c646f776e20706572696f642061637469766500000000000000000000604482015260640162000165565b6001600160a01b03821660009081526018602052604081208054839290620006d990849062000d65565b90915550506001600160a01b03821660009081526017602052604090204290555b6001600160a01b0383166000908152601960205260408120548190819060ff161580156200074157506001600160a01b03851660009081526019602052604090205460ff16155b15620007f1576015541562000772576127106015548562000763919062000cce565b6200076f919062000ce8565b92505b601154600160a01b900460ff1680156200078d5750600f5415155b15620007b557600f5461271090620007a6908662000cce565b620007b2919062000ce8565b91505b60135460ff168015620007c9575060125415155b15620007f15760125461271090620007e2908662000cce565b620007ee919062000ce8565b90505b6000818362000801868862000d7b565b6200080d919062000d7b565b62000819919062000d7b565b905083156200083057620008308760008662000879565b821562000844576200084487308562000879565b811562000863576200085682620009ac565b6200086387308462000879565b6200087087878362000879565b50505050505050565b6001600160a01b038316620008a85780600260008282546200089c919062000d65565b909155506200091c9050565b6001600160a01b03831660009081526020819052604090205481811015620008fd5760405163391434e360e21b81526001600160a01b0385166004820152602481018290526044810183905260640162000165565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b0382166200093a5760028054829003905562000959565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516200099f91815260200190565b60405180910390a3505050565b80601b6000828254620009c0919062000d65565b90915550506040518181527f3eeb9763473a030c467b8f096a99e1825a88c6a821c131e1fbb007246a80359c9060200160405180910390a150565b634e487b7160e01b600052604160045260246000fd5b60005b8381101562000a2e57818101518382015260200162000a14565b50506000910152565b600082601f83011262000a4957600080fd5b81516001600160401b038082111562000a665762000a66620009fb565b604051601f8301601f19908116603f0116810190828211818310171562000a915762000a91620009fb565b8160405283815286602085880101111562000aab57600080fd5b62000abe84602083016020890162000a11565b9695505050505050565b6000806000806080858703121562000adf57600080fd5b84516001600160401b038082111562000af757600080fd5b62000b058883890162000a37565b9550602087015191508082111562000b1c57600080fd5b5062000b2b8782880162000a37565b60408701516060880151919550935090506001600160a01b038116811462000b5257600080fd5b939692955090935050565b600181811c9082168062000b7257607f821691505b60208210810362000b9357634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111562000be757600081815260208120601f850160051c8101602086101562000bc25750805b601f850160051c820191505b8181101562000be35782815560010162000bce565b5050505b505050565b81516001600160401b0381111562000c085762000c08620009fb565b62000c208162000c19845462000b5d565b8462000b99565b602080601f83116001811462000c58576000841562000c3f5750858301515b600019600386901b1c1916600185901b17855562000be3565b600085815260208120601f198616915b8281101562000c895788860151825594840194600190910190840162000c68565b508582101562000ca85787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052601160045260246000fd5b808202811582820484141762000296576200029662000cb8565b60008262000d0657634e487b7160e01b600052601260045260246000fd5b500490565b602081526000825180602084015262000d2c81604085016020870162000a11565b601f01601f19169190910160400192915050565b8051602080830151919081101562000b935760001960209190910360031b1b16919050565b8082018082111562000296576200029662000cb8565b8181038181111562000296576200029662000cb8565b60805160a05160c05160e05161010051610120516101405161219a62000dec6000396000611315015260006112e801526000611208015260006111e00152600061113b015260006111650152600061118f015261219a6000f3fe608060405234801561001057600080fd5b506004361061027f5760003560e01c80636d1d21591161015c578063a9277c0a116100ce578063d505accf11610087578063d505accf1461062b578063db2e21bc1461063e578063dd62ed3e14610646578063e6375d3e1461067f578063f2fde38b146106ab578063fe575a87146106be57600080fd5b8063a9277c0a146105cc578063ae267735146105d4578063b2af127c146105dc578063c0246668146105ef578063c07473f614610602578063d00efb2f1461062257600080fd5b806384b0196e1161012057806384b0196e1461051b5780638a8c523c146105365780638da5cb5b1461053e57806395d89b41146105595780639e7e42cd14610561578063a9059cbb146105b957600080fd5b80636d1d2159146104b157806370a08231146104c4578063715018a6146104ed57806379cc6790146104f55780637ecebe001461050857600080fd5b80633fecc2e2116101f55780634ada218b116101b95780634ada218b1461043f5780634bf2c7c91461044c5780634e0856a71461045f5780634fbee193146104685780635c19a95c1461048b5780636010ba341461049e57600080fd5b80633fecc2e21461037957806342966c681461039957806343859632146103ac5780634663b1b2146103d857806349a64d93146103f857600080fd5b8063180aa7c711610247578063180aa7c71461030e57806318160ddd1461033457806323b872dd1461033c57806325f25f4d1461034f578063313ce567146103625780633644e5151461037157600080fd5b806306fdde0314610284578063095ea7b3146102a25780630eda5f32146102c5578063153b0d1e146102da5780631682aa49146102ed575b600080fd5b61028c6106e1565b6040516102999190611d68565b60405180910390f35b6102b56102b0366004611d9e565b610773565b6040519015158152602001610299565b6102d86102d3366004611dc8565b61078d565b005b6102d86102e8366004611e0b565b6107f0565b6103006102fb366004611e42565b610857565b604051908152602001610299565b60125460135461031f919060ff1682565b60408051928352901515602083015201610299565b600254610300565b6102b561034a366004611e5d565b6108b2565b6102d861035d366004611e42565b6108d6565b60405160128152602001610299565b6103006109a0565b610300610387366004611e42565b60176020526000908152604090205481565b6102d86103a7366004611e99565b6109af565b6102b56103ba366004611eb2565b60208080526000928352604080842090915290825290205460ff1681565b6103006103e6366004611e42565b60186020526000908152604090205481565b600a54600b54600c54600d54600e54610415949392919060ff1685565b6040805195865260208601949094529284019190915260608301521515608082015260a001610299565b6016546102b59060ff1681565b6102d861045a366004611e99565b6109bc565b61030060155481565b6102b5610476366004611e42565b60196020526000908152604090205460ff1681565b6102d8610499366004611e42565b6109eb565b6102d86104ac366004611e99565b610a2b565b6102d86104bf366004611ede565b610a67565b6103006104d2366004611e42565b6001600160a01b031660009081526020819052604090205490565b6102d8610ad1565b6102d8610503366004611d9e565b610ae5565b610300610516366004611e42565b610afe565b610523610b1c565b6040516102999796959493929190611f10565b6102d8610b62565b6008546040516001600160a01b039091168152602001610299565b61028c610c0c565b600f546010546011546105889291906001600160a01b03811690600160a01b900460ff1684565b604051610299949392919093845260208401929092526001600160a01b031660408301521515606082015260800190565b6102b56105c7366004611d9e565b610c1b565b6102d8610c29565b601b54610300565b6102d86105ea366004611e42565b610c3d565b6102d86105fd366004611e0b565b610de9565b610300610610366004611e42565b601f6020526000908152604090205481565b61030060145481565b6102d8610639366004611fa6565b610e1c565b6102d8610f56565b610300610654366004612019565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6102b561068d366004611e42565b6001600160a01b03166000908152601d602052604090205460ff1690565b6102d86106b9366004611e42565b610fdb565b6102b56106cc366004611e42565b601a6020526000908152604090205460ff1681565b6060600380546106f090612043565b80601f016020809104026020016040519081016040528092919081815260200182805461071c90612043565b80156107695780601f1061073e57610100808354040283529160200191610769565b820191906000526020600020905b81548152906001019060200180831161074c57829003601f168201915b5050505050905090565b600033610781818585611016565b60019150505b92915050565b610795611023565b6101f48311156107c05760405162461bcd60e51b81526004016107b79061207d565b60405180910390fd5b600f92909255601055601180546001600160a81b0319166001600160a01b0390921691909117600160a01b179055565b6107f8611023565b6001600160a01b0382166000818152601a6020908152604091829020805460ff191685151590811790915591519182527fcf3473b85df1594d47b6958f29a32bea0abff9dd68296f7bf33443646793cfd8910160405180910390a25050565b6001600160a01b0381166000908152601d602052604081205460ff1615610896576001600160a01b038216600090815260208190526040902054610787565b506001600160a01b03166000908152601c602052604090205490565b6000336108c0858285611050565b6108cb8585856110cf565b506001949350505050565b6108de611023565b6001600160a01b0381166000908152601d602052604090205460ff161561093a5760405162461bcd60e51b815260206004820152601060248201526f105b1c9958591e48195e18db1d59195960821b60448201526064016107b7565b6001600160a01b03166000818152601d60205260408120805460ff19166001908117909155601e805491820181559091527f50bb669a95c7b50b7e8a6f09454034b2b14cf2b85c730dca9a539ca82cb6e3500180546001600160a01b0319169091179055565b60006109aa61112e565b905090565b6109b93382611259565b50565b6109c4611023565b6101f48111156109e65760405162461bcd60e51b81526004016107b79061207d565b601555565b336000908152602081905260409020546001600160a01b0382166000908152601f602052604081208054909190610a239084906120b9565b909155505050565b610a33611023565b6101f4811115610a555760405162461bcd60e51b81526004016107b79061207d565b6012556013805460ff19166001179055565b610a6f611023565b600a849055600b839055600c829055600d8190556040805185815260208101859052908101839052606081018290527f028a38ff37ea5c05388a99b81090ae2d9a9230d695258ae73bf5765411cb80b89060800160405180910390a150505050565b610ad9611023565b610ae3600061128f565b565b610af0823383611050565b610afa8282611259565b5050565b6001600160a01b038116600090815260076020526040812054610787565b600060608060008060006060610b306112e1565b610b3861130e565b60408051600080825260208201909252600f60f81b9b939a50919850469750309650945092509050565b610b6a611023565b60165460ff1615610bbd5760405162461bcd60e51b815260206004820152601760248201527f54726164696e6720616c726561647920656e61626c656400000000000000000060448201526064016107b7565b6016805460ff191660011790554360148190556040517fb3da2db3dfc3778f99852546c6e9ab39ec253f9de7b0847afec61bd27878e92391610c029190815260200190565b60405180910390a1565b6060600480546106f090612043565b6000336107818185856110cf565b610c31611023565b600e805460ff19169055565b610c45611023565b306001600160a01b03821603610c9d5760405162461bcd60e51b815260206004820152601a60248201527f43616e6e6f74207769746864726177206f776e20746f6b656e7300000000000060448201526064016107b7565b6040516370a0823160e01b81523060048201526000906001600160a01b038316906370a0823190602401602060405180830381865afa158015610ce4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d0891906120cc565b905060008111610d525760405162461bcd60e51b81526020600482015260156024820152744e6f20746f6b656e7320746f20776974686472617760581b60448201526064016107b7565b816001600160a01b031663a9059cbb610d736008546001600160a01b031690565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602481018490526044016020604051808303816000875af1158015610dc0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610de491906120e5565b505050565b610df1611023565b6001600160a01b03919091166000908152601960205260409020805460ff1916911515919091179055565b83421115610e405760405163313c898160e11b8152600481018590526024016107b7565b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9888888610e8d8c6001600160a01b0316600090815260076020526040902080546001810190915590565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e0016040516020818303038152906040528051906020012090506000610ee88261133b565b90506000610ef882878787611368565b9050896001600160a01b0316816001600160a01b031614610f3f576040516325c0072360e11b81526001600160a01b0380831660048301528b1660248201526044016107b7565b610f4a8a8a8a611016565b50505050505050505050565b610f5e611023565b4780610fa15760405162461bcd60e51b81526020600482015260126024820152714e6f2045544820746f20776974686472617760701b60448201526064016107b7565b6008546040516001600160a01b039091169082156108fc029083906000818181858888f19350505050158015610afa573d6000803e3d6000fd5b610fe3611023565b6001600160a01b03811661100d57604051631e4fbdf760e01b8152600060048201526024016107b7565b6109b98161128f565b610de48383836001611396565b6008546001600160a01b03163314610ae35760405163118cdaa760e01b81523360048201526024016107b7565b6001600160a01b038381166000908152600160209081526040808320938616835292905220546000198110156110c957818110156110ba57604051637dc7a0d960e11b81526001600160a01b038416600482015260248101829052604481018390526064016107b7565b6110c984848484036000611396565b50505050565b6001600160a01b0383166110f957604051634b637e8f60e11b8152600060048201526024016107b7565b6001600160a01b0382166111235760405163ec442f0560e01b8152600060048201526024016107b7565b610de483838361146b565b6000306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614801561118757507f000000000000000000000000000000000000000000000000000000000000000046145b156111b157507f000000000000000000000000000000000000000000000000000000000000000090565b6109aa604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201527f0000000000000000000000000000000000000000000000000000000000000000918101919091527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b6001600160a01b03821661128357604051634b637e8f60e11b8152600060048201526024016107b7565b610afa8260008361146b565b600880546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60606109aa7f00000000000000000000000000000000000000000000000000000000000000006005611911565b60606109aa7f00000000000000000000000000000000000000000000000000000000000000006006611911565b600061078761134861112e565b8360405161190160f01b8152600281019290925260228201526042902090565b60008060008061137a888888886119bc565b92509250925061138a8282611a8b565b50909695505050505050565b6001600160a01b0384166113c05760405163e602df0560e01b8152600060048201526024016107b7565b6001600160a01b0383166113ea57604051634a1406b160e11b8152600060048201526024016107b7565b6001600160a01b03808516600090815260016020908152604080832093871683529290522082905580156110c957826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161145d91815260200190565b60405180910390a350505050565b60165460ff168061148657506008546001600160a01b031633145b6114c85760405162461bcd60e51b8152602060048201526013602482015272151c98591a5b99c81b9bdd08195b98589b1959606a1b60448201526064016107b7565b6001600160a01b0383166000908152601a602052604090205460ff1615801561150a57506001600160a01b0382166000908152601a602052604090205460ff16155b6115445760405162461bcd60e51b815260206004820152600b60248201526a109b1858dadb1a5cdd195960aa1b60448201526064016107b7565b600e5460ff16801561156457506008546001600160a01b03848116911614155b801561157e57506008546001600160a01b03838116911614155b156117b85760006014541180156115a45750600d546014546115a091906120b9565b4311155b15611616576008546001600160a01b03838116911614806115d257506008546001600160a01b038481169116145b6116165760405162461bcd60e51b815260206004820152601560248201527420b73a3496b9b734b83290383937ba32b1ba34b7b760591b60448201526064016107b7565b6011546001600160a01b03848116911614801561163c57506001600160a01b0382163014155b156117b857600b5481111561168c5760405162461bcd60e51b815260206004820152601660248201527508af0c6cacac8e640dac2f040c4eaf240e0cae440e8f60531b60448201526064016107b7565b600a546001600160a01b0383166000908152601860205260409020546116b39083906120b9565b11156117015760405162461bcd60e51b815260206004820152601a60248201527f45786365656473206d617820627579207065722077616c6c657400000000000060448201526064016107b7565b600c546001600160a01b03831660009081526017602052604090205461172791906120b9565b42101561176f5760405162461bcd60e51b8152602060048201526016602482015275436f6f6c646f776e20706572696f642061637469766560501b60448201526064016107b7565b6001600160a01b038216600090815260186020526040812080548392906117979084906120b9565b90915550506001600160a01b03821660009081526017602052604090204290555b6001600160a01b0383166000908152601960205260408120548190819060ff161580156117fe57506001600160a01b03851660009081526019602052604090205460ff16155b1561189c5760155415611829576127106015548561181c9190612102565b6118269190612119565b92505b601154600160a01b900460ff1680156118435750600f5415155b1561186657600f54612710906118599086612102565b6118639190612119565b91505b60135460ff168015611879575060125415155b1561189c576012546127109061188f9086612102565b6118999190612119565b90505b600081836118aa868861213b565b6118b4919061213b565b6118be919061213b565b905083156118d2576118d287600086611b44565b82156118e3576118e3873085611b44565b81156118fd576118f282611c6e565b6118fd873084611b44565b611908878783611b44565b50505050505050565b606060ff831461192b5761192483611cbb565b9050610787565b81805461193790612043565b80601f016020809104026020016040519081016040528092919081815260200182805461196390612043565b80156119b05780601f10611985576101008083540402835291602001916119b0565b820191906000526020600020905b81548152906001019060200180831161199357829003601f168201915b50505050509050610787565b600080807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08411156119f75750600091506003905082611a81565b604080516000808252602082018084528a905260ff891692820192909252606081018790526080810186905260019060a0016020604051602081039080840390855afa158015611a4b573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116611a7757506000925060019150829050611a81565b9250600091508190505b9450945094915050565b6000826003811115611a9f57611a9f61214e565b03611aa8575050565b6001826003811115611abc57611abc61214e565b03611ada5760405163f645eedf60e01b815260040160405180910390fd5b6002826003811115611aee57611aee61214e565b03611b0f5760405163fce698f760e01b8152600481018290526024016107b7565b6003826003811115611b2357611b2361214e565b03610afa576040516335e2f38360e21b8152600481018290526024016107b7565b6001600160a01b038316611b6f578060026000828254611b6491906120b9565b90915550611be19050565b6001600160a01b03831660009081526020819052604090205481811015611bc25760405163391434e360e21b81526001600160a01b038516600482015260248101829052604481018390526064016107b7565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b038216611bfd57600280548290039055611c1c565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051611c6191815260200190565b60405180910390a3505050565b80601b6000828254611c8091906120b9565b90915550506040518181527f3eeb9763473a030c467b8f096a99e1825a88c6a821c131e1fbb007246a80359c9060200160405180910390a150565b60606000611cc883611cfa565b604080516020808252818301909252919250600091906020820181803683375050509182525060208101929092525090565b600060ff8216601f81111561078757604051632cd44ac360e21b815260040160405180910390fd5b6000815180845260005b81811015611d4857602081850181015186830182015201611d2c565b506000602082860101526020601f19601f83011685010191505092915050565b602081526000611d7b6020830184611d22565b9392505050565b80356001600160a01b0381168114611d9957600080fd5b919050565b60008060408385031215611db157600080fd5b611dba83611d82565b946020939093013593505050565b600080600060608486031215611ddd57600080fd5b8335925060208401359150611df460408501611d82565b90509250925092565b80151581146109b957600080fd5b60008060408385031215611e1e57600080fd5b611e2783611d82565b91506020830135611e3781611dfd565b809150509250929050565b600060208284031215611e5457600080fd5b611d7b82611d82565b600080600060608486031215611e7257600080fd5b611e7b84611d82565b9250611e8960208501611d82565b9150604084013590509250925092565b600060208284031215611eab57600080fd5b5035919050565b60008060408385031215611ec557600080fd5b82359150611ed560208401611d82565b90509250929050565b60008060008060808587031215611ef457600080fd5b5050823594602084013594506040840135936060013592509050565b60ff60f81b881681526000602060e081840152611f3060e084018a611d22565b8381036040850152611f42818a611d22565b606085018990526001600160a01b038816608086015260a0850187905284810360c0860152855180825283870192509083019060005b81811015611f9457835183529284019291840191600101611f78565b50909c9b505050505050505050505050565b600080600080600080600060e0888a031215611fc157600080fd5b611fca88611d82565b9650611fd860208901611d82565b95506040880135945060608801359350608088013560ff81168114611ffc57600080fd5b9699959850939692959460a0840135945060c09093013592915050565b6000806040838503121561202c57600080fd5b61203583611d82565b9150611ed560208401611d82565b600181811c9082168061205757607f821691505b60208210810361207757634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252600c908201526b08ccaca40e8dede40d0d2ced60a31b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b80820180821115610787576107876120a3565b6000602082840312156120de57600080fd5b5051919050565b6000602082840312156120f757600080fd5b8151611d7b81611dfd565b8082028115828204841417610787576107876120a3565b60008261213657634e487b7160e01b600052601260045260246000fd5b500490565b81810381811115610787576107876120a3565b634e487b7160e01b600052602160045260246000fdfea2646970667358221220d342b553810e3093bbd250946e6d015330e6400f4be3ca3443af6ace45fb563e64736f6c63430008140033","opcodes":"PUSH2 0x160 PUSH1 0x40 MSTORE PUSH1 0x64 PUSH1 0x15 SSTORE PUSH1 0x16 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x21 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x2F86 CODESIZE SUB DUP1 PUSH3 0x2F86 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x44 SWAP2 PUSH3 0xAC8 JUMP JUMPDEST DUP1 DUP5 DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x31 PUSH1 0xF8 SHL DUP2 MSTORE POP DUP8 DUP8 DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH3 0x74 SWAP2 SWAP1 PUSH3 0xBEC JUMP JUMPDEST POP PUSH1 0x4 PUSH3 0x83 DUP3 DUP3 PUSH3 0xBEC JUMP JUMPDEST POP PUSH3 0x95 SWAP2 POP DUP4 SWAP1 POP PUSH1 0x5 PUSH3 0x263 JUMP JUMPDEST PUSH2 0x120 MSTORE PUSH3 0xA6 DUP2 PUSH1 0x6 PUSH3 0x263 JUMP JUMPDEST PUSH2 0x140 MSTORE DUP2 MLOAD PUSH1 0x20 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 KECCAK256 PUSH1 0xE0 MSTORE DUP2 MLOAD SWAP1 DUP3 ADD KECCAK256 PUSH2 0x100 MSTORE CHAINID PUSH1 0xA0 MSTORE PUSH3 0x134 PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH1 0x20 DUP3 ADD MSTORE SWAP1 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP3 ADD MSTORE CHAINID PUSH1 0x80 DUP3 ADD MSTORE ADDRESS PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0xC0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x80 MSTORE POP POP ADDRESS PUSH1 0xC0 MSTORE POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH3 0x16E JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x179 DUP2 PUSH3 0x29C JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x9 SSTORE PUSH3 0x18B DUP2 DUP4 PUSH3 0x2EE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x19 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0xFF NOT SWAP2 DUP3 AND DUP2 OR SWAP1 SWAP3 SSTORE ADDRESS DUP5 MSTORE SWAP3 DUP3 SWAP1 KECCAK256 DUP1 SLOAD SWAP1 SWAP4 AND OR SWAP1 SWAP2 SSTORE DUP1 MLOAD PUSH1 0xA0 DUP2 ADD SWAP1 SWAP2 MSTORE DUP1 PUSH2 0x2710 PUSH3 0x1DD DUP6 PUSH1 0x64 PUSH3 0xCCE JUMP JUMPDEST PUSH3 0x1E9 SWAP2 SWAP1 PUSH3 0xCE8 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2710 PUSH3 0x1FE DUP6 PUSH1 0x32 PUSH3 0xCCE JUMP JUMPDEST PUSH3 0x20A SWAP2 SWAP1 PUSH3 0xCE8 JUMP JUMPDEST DUP2 MSTORE PUSH2 0x12C PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x3 PUSH1 0x40 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x60 SWAP4 DUP5 ADD MSTORE DUP4 MLOAD PUSH1 0xA SSTORE SWAP1 DUP4 ADD MLOAD PUSH1 0xB SSTORE DUP3 ADD MLOAD PUSH1 0xC SSTORE DUP2 ADD MLOAD PUSH1 0xD SSTORE PUSH1 0x80 ADD MLOAD PUSH1 0xE DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE POP PUSH3 0xD91 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP4 MLOAD LT ISZERO PUSH3 0x283 JUMPI PUSH3 0x27B DUP4 PUSH3 0x32C JUMP JUMPDEST SWAP1 POP PUSH3 0x296 JUMP JUMPDEST DUP2 PUSH3 0x290 DUP5 DUP3 PUSH3 0xBEC JUMP JUMPDEST POP PUSH1 0xFF SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH3 0x31A JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH3 0x165 JUMP JUMPDEST PUSH3 0x328 PUSH1 0x0 DUP4 DUP4 PUSH3 0x36F JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP1 POP PUSH1 0x1F DUP2 MLOAD GT ISZERO PUSH3 0x35A JUMPI DUP3 PUSH1 0x40 MLOAD PUSH4 0x305A27A9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x165 SWAP2 SWAP1 PUSH3 0xD0B JUMP JUMPDEST DUP1 MLOAD PUSH3 0x367 DUP3 PUSH3 0xD40 JUMP JUMPDEST OR SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x16 SLOAD PUSH1 0xFF AND DUP1 PUSH3 0x38B JUMPI POP PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST PUSH3 0x3D9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54726164696E67206E6F7420656E61626C656400000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH3 0x165 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1A PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH3 0x41C JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1A PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH3 0x458 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x109B1858DADB1A5CDD1959 PUSH1 0xAA SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH3 0x165 JUMP JUMPDEST PUSH1 0xE SLOAD PUSH1 0xFF AND DUP1 ISZERO PUSH3 0x479 JUMPI POP PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH3 0x494 JUMPI POP PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 AND EQ ISZERO JUMPDEST ISZERO PUSH3 0x6FA JUMPI PUSH1 0x0 PUSH1 0x14 SLOAD GT DUP1 ISZERO PUSH3 0x4BE JUMPI POP PUSH1 0xD SLOAD PUSH1 0x14 SLOAD PUSH3 0x4BA SWAP2 SWAP1 PUSH3 0xD65 JUMP JUMPDEST NUMBER GT ISZERO JUMPDEST ISZERO PUSH3 0x53C JUMPI PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 AND EQ DUP1 PUSH3 0x4EE JUMPI POP PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND EQ JUMPDEST PUSH3 0x53C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416E74692D736E6970652070726F74656374696F6E0000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH3 0x165 JUMP JUMPDEST PUSH1 0x11 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND EQ DUP1 ISZERO PUSH3 0x563 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ADDRESS EQ ISZERO JUMPDEST ISZERO PUSH3 0x6FA JUMPI PUSH1 0xB SLOAD DUP2 GT ISZERO PUSH3 0x5BD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45786365656473206D6178206275792070657220747800000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH3 0x165 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x18 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH3 0x5E6 SWAP1 DUP4 SWAP1 PUSH3 0xD65 JUMP JUMPDEST GT ISZERO PUSH3 0x636 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45786365656473206D617820627579207065722077616C6C6574000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH3 0x165 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x17 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH3 0x65E SWAP2 SWAP1 PUSH3 0xD65 JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH3 0x6AF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6F6C646F776E20706572696F642061637469766500000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH3 0x165 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x18 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH3 0x6D9 SWAP1 DUP5 SWAP1 PUSH3 0xD65 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x17 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 TIMESTAMP SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x19 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP2 SWAP1 DUP2 SWAP1 PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH3 0x741 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x19 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH3 0x7F1 JUMPI PUSH1 0x15 SLOAD ISZERO PUSH3 0x772 JUMPI PUSH2 0x2710 PUSH1 0x15 SLOAD DUP6 PUSH3 0x763 SWAP2 SWAP1 PUSH3 0xCCE JUMP JUMPDEST PUSH3 0x76F SWAP2 SWAP1 PUSH3 0xCE8 JUMP JUMPDEST SWAP3 POP JUMPDEST PUSH1 0x11 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP1 ISZERO PUSH3 0x78D JUMPI POP PUSH1 0xF SLOAD ISZERO ISZERO JUMPDEST ISZERO PUSH3 0x7B5 JUMPI PUSH1 0xF SLOAD PUSH2 0x2710 SWAP1 PUSH3 0x7A6 SWAP1 DUP7 PUSH3 0xCCE JUMP JUMPDEST PUSH3 0x7B2 SWAP2 SWAP1 PUSH3 0xCE8 JUMP JUMPDEST SWAP2 POP JUMPDEST PUSH1 0x13 SLOAD PUSH1 0xFF AND DUP1 ISZERO PUSH3 0x7C9 JUMPI POP PUSH1 0x12 SLOAD ISZERO ISZERO JUMPDEST ISZERO PUSH3 0x7F1 JUMPI PUSH1 0x12 SLOAD PUSH2 0x2710 SWAP1 PUSH3 0x7E2 SWAP1 DUP7 PUSH3 0xCCE JUMP JUMPDEST PUSH3 0x7EE SWAP2 SWAP1 PUSH3 0xCE8 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH3 0x801 DUP7 DUP9 PUSH3 0xD7B JUMP JUMPDEST PUSH3 0x80D SWAP2 SWAP1 PUSH3 0xD7B JUMP JUMPDEST PUSH3 0x819 SWAP2 SWAP1 PUSH3 0xD7B JUMP JUMPDEST SWAP1 POP DUP4 ISZERO PUSH3 0x830 JUMPI PUSH3 0x830 DUP8 PUSH1 0x0 DUP7 PUSH3 0x879 JUMP JUMPDEST DUP3 ISZERO PUSH3 0x844 JUMPI PUSH3 0x844 DUP8 ADDRESS DUP6 PUSH3 0x879 JUMP JUMPDEST DUP2 ISZERO PUSH3 0x863 JUMPI PUSH3 0x856 DUP3 PUSH3 0x9AC JUMP JUMPDEST PUSH3 0x863 DUP8 ADDRESS DUP5 PUSH3 0x879 JUMP JUMPDEST PUSH3 0x870 DUP8 DUP8 DUP4 PUSH3 0x879 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH3 0x8A8 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH3 0x89C SWAP2 SWAP1 PUSH3 0xD65 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH3 0x91C SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH3 0x8FD JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH3 0x165 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH3 0x93A JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH3 0x959 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH3 0x99F SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x1B PUSH1 0x0 DUP3 DUP3 SLOAD PUSH3 0x9C0 SWAP2 SWAP1 PUSH3 0xD65 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0x3EEB9763473A030C467B8F096A99E1825A88C6A821C131E1FBB007246A80359C SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0xA2E JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH3 0xA14 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0xA49 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0xA66 JUMPI PUSH3 0xA66 PUSH3 0x9FB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0xA91 JUMPI PUSH3 0xA91 PUSH3 0x9FB JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH3 0xAAB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0xABE DUP5 PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP10 ADD PUSH3 0xA11 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH3 0xADF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0xAF7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0xB05 DUP9 DUP4 DUP10 ADD PUSH3 0xA37 JUMP JUMPDEST SWAP6 POP PUSH1 0x20 DUP8 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0xB1C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0xB2B DUP8 DUP3 DUP9 ADD PUSH3 0xA37 JUMP JUMPDEST PUSH1 0x40 DUP8 ADD MLOAD PUSH1 0x60 DUP9 ADD MLOAD SWAP2 SWAP6 POP SWAP4 POP SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0xB52 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP1 SWAP4 POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0xB72 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0xB93 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0xBE7 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0xBC2 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0xBE3 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0xBCE JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0xC08 JUMPI PUSH3 0xC08 PUSH3 0x9FB JUMP JUMPDEST PUSH3 0xC20 DUP2 PUSH3 0xC19 DUP5 SLOAD PUSH3 0xB5D JUMP JUMPDEST DUP5 PUSH3 0xB99 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0xC58 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0xC3F JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0xBE3 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0xC89 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0xC68 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0xCA8 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH3 0x296 JUMPI PUSH3 0x296 PUSH3 0xCB8 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH3 0xD06 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH3 0xD2C DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH3 0xA11 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP1 DUP4 ADD MLOAD SWAP2 SWAP1 DUP2 LT ISZERO PUSH3 0xB93 JUMPI PUSH1 0x0 NOT PUSH1 0x20 SWAP2 SWAP1 SWAP2 SUB PUSH1 0x3 SHL SHL AND SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH3 0x296 JUMPI PUSH3 0x296 PUSH3 0xCB8 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH3 0x296 JUMPI PUSH3 0x296 PUSH3 0xCB8 JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD PUSH2 0x120 MLOAD PUSH2 0x140 MLOAD PUSH2 0x219A PUSH3 0xDEC PUSH1 0x0 CODECOPY PUSH1 0x0 PUSH2 0x1315 ADD MSTORE PUSH1 0x0 PUSH2 0x12E8 ADD MSTORE PUSH1 0x0 PUSH2 0x1208 ADD MSTORE PUSH1 0x0 PUSH2 0x11E0 ADD MSTORE PUSH1 0x0 PUSH2 0x113B ADD MSTORE PUSH1 0x0 PUSH2 0x1165 ADD MSTORE PUSH1 0x0 PUSH2 0x118F ADD MSTORE PUSH2 0x219A PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x27F JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6D1D2159 GT PUSH2 0x15C JUMPI DUP1 PUSH4 0xA9277C0A GT PUSH2 0xCE JUMPI DUP1 PUSH4 0xD505ACCF GT PUSH2 0x87 JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x62B JUMPI DUP1 PUSH4 0xDB2E21BC EQ PUSH2 0x63E JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x646 JUMPI DUP1 PUSH4 0xE6375D3E EQ PUSH2 0x67F JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x6AB JUMPI DUP1 PUSH4 0xFE575A87 EQ PUSH2 0x6BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA9277C0A EQ PUSH2 0x5CC JUMPI DUP1 PUSH4 0xAE267735 EQ PUSH2 0x5D4 JUMPI DUP1 PUSH4 0xB2AF127C EQ PUSH2 0x5DC JUMPI DUP1 PUSH4 0xC0246668 EQ PUSH2 0x5EF JUMPI DUP1 PUSH4 0xC07473F6 EQ PUSH2 0x602 JUMPI DUP1 PUSH4 0xD00EFB2F EQ PUSH2 0x622 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x84B0196E GT PUSH2 0x120 JUMPI DUP1 PUSH4 0x84B0196E EQ PUSH2 0x51B JUMPI DUP1 PUSH4 0x8A8C523C EQ PUSH2 0x536 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x53E JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x559 JUMPI DUP1 PUSH4 0x9E7E42CD EQ PUSH2 0x561 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x5B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6D1D2159 EQ PUSH2 0x4B1 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x4C4 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x4ED JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x4F5 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x508 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3FECC2E2 GT PUSH2 0x1F5 JUMPI DUP1 PUSH4 0x4ADA218B GT PUSH2 0x1B9 JUMPI DUP1 PUSH4 0x4ADA218B EQ PUSH2 0x43F JUMPI DUP1 PUSH4 0x4BF2C7C9 EQ PUSH2 0x44C JUMPI DUP1 PUSH4 0x4E0856A7 EQ PUSH2 0x45F JUMPI DUP1 PUSH4 0x4FBEE193 EQ PUSH2 0x468 JUMPI DUP1 PUSH4 0x5C19A95C EQ PUSH2 0x48B JUMPI DUP1 PUSH4 0x6010BA34 EQ PUSH2 0x49E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3FECC2E2 EQ PUSH2 0x379 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x399 JUMPI DUP1 PUSH4 0x43859632 EQ PUSH2 0x3AC JUMPI DUP1 PUSH4 0x4663B1B2 EQ PUSH2 0x3D8 JUMPI DUP1 PUSH4 0x49A64D93 EQ PUSH2 0x3F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x180AA7C7 GT PUSH2 0x247 JUMPI DUP1 PUSH4 0x180AA7C7 EQ PUSH2 0x30E JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x334 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x33C JUMPI DUP1 PUSH4 0x25F25F4D EQ PUSH2 0x34F JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x362 JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x371 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x284 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x2A2 JUMPI DUP1 PUSH4 0xEDA5F32 EQ PUSH2 0x2C5 JUMPI DUP1 PUSH4 0x153B0D1E EQ PUSH2 0x2DA JUMPI DUP1 PUSH4 0x1682AA49 EQ PUSH2 0x2ED JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x28C PUSH2 0x6E1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x299 SWAP2 SWAP1 PUSH2 0x1D68 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B5 PUSH2 0x2B0 CALLDATASIZE PUSH1 0x4 PUSH2 0x1D9E JUMP JUMPDEST PUSH2 0x773 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x299 JUMP JUMPDEST PUSH2 0x2D8 PUSH2 0x2D3 CALLDATASIZE PUSH1 0x4 PUSH2 0x1DC8 JUMP JUMPDEST PUSH2 0x78D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2D8 PUSH2 0x2E8 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E0B JUMP JUMPDEST PUSH2 0x7F0 JUMP JUMPDEST PUSH2 0x300 PUSH2 0x2FB CALLDATASIZE PUSH1 0x4 PUSH2 0x1E42 JUMP JUMPDEST PUSH2 0x857 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x299 JUMP JUMPDEST PUSH1 0x12 SLOAD PUSH1 0x13 SLOAD PUSH2 0x31F SWAP2 SWAP1 PUSH1 0xFF AND DUP3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE SWAP1 ISZERO ISZERO PUSH1 0x20 DUP4 ADD MSTORE ADD PUSH2 0x299 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x300 JUMP JUMPDEST PUSH2 0x2B5 PUSH2 0x34A CALLDATASIZE PUSH1 0x4 PUSH2 0x1E5D JUMP JUMPDEST PUSH2 0x8B2 JUMP JUMPDEST PUSH2 0x2D8 PUSH2 0x35D CALLDATASIZE PUSH1 0x4 PUSH2 0x1E42 JUMP JUMPDEST PUSH2 0x8D6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x299 JUMP JUMPDEST PUSH2 0x300 PUSH2 0x9A0 JUMP JUMPDEST PUSH2 0x300 PUSH2 0x387 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E42 JUMP JUMPDEST PUSH1 0x17 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2D8 PUSH2 0x3A7 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E99 JUMP JUMPDEST PUSH2 0x9AF JUMP JUMPDEST PUSH2 0x2B5 PUSH2 0x3BA CALLDATASIZE PUSH1 0x4 PUSH2 0x1EB2 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP1 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x300 PUSH2 0x3E6 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E42 JUMP JUMPDEST PUSH1 0x18 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0xB SLOAD PUSH1 0xC SLOAD PUSH1 0xD SLOAD PUSH1 0xE SLOAD PUSH2 0x415 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH1 0xFF AND DUP6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP6 DUP7 MSTORE PUSH1 0x20 DUP7 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP3 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD PUSH2 0x299 JUMP JUMPDEST PUSH1 0x16 SLOAD PUSH2 0x2B5 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x2D8 PUSH2 0x45A CALLDATASIZE PUSH1 0x4 PUSH2 0x1E99 JUMP JUMPDEST PUSH2 0x9BC JUMP JUMPDEST PUSH2 0x300 PUSH1 0x15 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2B5 PUSH2 0x476 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E42 JUMP JUMPDEST PUSH1 0x19 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x2D8 PUSH2 0x499 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E42 JUMP JUMPDEST PUSH2 0x9EB JUMP JUMPDEST PUSH2 0x2D8 PUSH2 0x4AC CALLDATASIZE PUSH1 0x4 PUSH2 0x1E99 JUMP JUMPDEST PUSH2 0xA2B JUMP JUMPDEST PUSH2 0x2D8 PUSH2 0x4BF CALLDATASIZE PUSH1 0x4 PUSH2 0x1EDE JUMP JUMPDEST PUSH2 0xA67 JUMP JUMPDEST PUSH2 0x300 PUSH2 0x4D2 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E42 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x2D8 PUSH2 0xAD1 JUMP JUMPDEST PUSH2 0x2D8 PUSH2 0x503 CALLDATASIZE PUSH1 0x4 PUSH2 0x1D9E JUMP JUMPDEST PUSH2 0xAE5 JUMP JUMPDEST PUSH2 0x300 PUSH2 0x516 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E42 JUMP JUMPDEST PUSH2 0xAFE JUMP JUMPDEST PUSH2 0x523 PUSH2 0xB1C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x299 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1F10 JUMP JUMPDEST PUSH2 0x2D8 PUSH2 0xB62 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x299 JUMP JUMPDEST PUSH2 0x28C PUSH2 0xC0C JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0x10 SLOAD PUSH1 0x11 SLOAD PUSH2 0x588 SWAP3 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x299 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x40 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH2 0x2B5 PUSH2 0x5C7 CALLDATASIZE PUSH1 0x4 PUSH2 0x1D9E JUMP JUMPDEST PUSH2 0xC1B JUMP JUMPDEST PUSH2 0x2D8 PUSH2 0xC29 JUMP JUMPDEST PUSH1 0x1B SLOAD PUSH2 0x300 JUMP JUMPDEST PUSH2 0x2D8 PUSH2 0x5EA CALLDATASIZE PUSH1 0x4 PUSH2 0x1E42 JUMP JUMPDEST PUSH2 0xC3D JUMP JUMPDEST PUSH2 0x2D8 PUSH2 0x5FD CALLDATASIZE PUSH1 0x4 PUSH2 0x1E0B JUMP JUMPDEST PUSH2 0xDE9 JUMP JUMPDEST PUSH2 0x300 PUSH2 0x610 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E42 JUMP JUMPDEST PUSH1 0x1F PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x300 PUSH1 0x14 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2D8 PUSH2 0x639 CALLDATASIZE PUSH1 0x4 PUSH2 0x1FA6 JUMP JUMPDEST PUSH2 0xE1C JUMP JUMPDEST PUSH2 0x2D8 PUSH2 0xF56 JUMP JUMPDEST PUSH2 0x300 PUSH2 0x654 CALLDATASIZE PUSH1 0x4 PUSH2 0x2019 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x2B5 PUSH2 0x68D CALLDATASIZE PUSH1 0x4 PUSH2 0x1E42 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1D PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x2D8 PUSH2 0x6B9 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E42 JUMP JUMPDEST PUSH2 0xFDB JUMP JUMPDEST PUSH2 0x2B5 PUSH2 0x6CC CALLDATASIZE PUSH1 0x4 PUSH2 0x1E42 JUMP JUMPDEST PUSH1 0x1A PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x6F0 SWAP1 PUSH2 0x2043 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x71C SWAP1 PUSH2 0x2043 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x769 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x73E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x769 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x74C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x781 DUP2 DUP6 DUP6 PUSH2 0x1016 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x795 PUSH2 0x1023 JUMP JUMPDEST PUSH2 0x1F4 DUP4 GT ISZERO PUSH2 0x7C0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7B7 SWAP1 PUSH2 0x207D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xF SWAP3 SWAP1 SWAP3 SSTORE PUSH1 0x10 SSTORE PUSH1 0x11 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR PUSH1 0x1 PUSH1 0xA0 SHL OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x7F8 PUSH2 0x1023 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1A PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP6 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0xCF3473B85DF1594D47B6958F29A32BEA0ABFF9DD68296F7BF33443646793CFD8 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1D PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x896 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x787 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1C PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x8C0 DUP6 DUP3 DUP6 PUSH2 0x1050 JUMP JUMPDEST PUSH2 0x8CB DUP6 DUP6 DUP6 PUSH2 0x10CF JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x8DE PUSH2 0x1023 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1D PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x93A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x105B1C9958591E48195E18DB1D591959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7B7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1D PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x1E DUP1 SLOAD SWAP2 DUP3 ADD DUP2 SSTORE SWAP1 SWAP2 MSTORE PUSH32 0x50BB669A95C7B50B7E8A6F09454034B2B14CF2B85C730DCA9A539CA82CB6E350 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9AA PUSH2 0x112E JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x9B9 CALLER DUP3 PUSH2 0x1259 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x9C4 PUSH2 0x1023 JUMP JUMPDEST PUSH2 0x1F4 DUP2 GT ISZERO PUSH2 0x9E6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7B7 SWAP1 PUSH2 0x207D JUMP JUMPDEST PUSH1 0x15 SSTORE JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1F PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0xA23 SWAP1 DUP5 SWAP1 PUSH2 0x20B9 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP JUMP JUMPDEST PUSH2 0xA33 PUSH2 0x1023 JUMP JUMPDEST PUSH2 0x1F4 DUP2 GT ISZERO PUSH2 0xA55 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7B7 SWAP1 PUSH2 0x207D JUMP JUMPDEST PUSH1 0x12 SSTORE PUSH1 0x13 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0xA6F PUSH2 0x1023 JUMP JUMPDEST PUSH1 0xA DUP5 SWAP1 SSTORE PUSH1 0xB DUP4 SWAP1 SSTORE PUSH1 0xC DUP3 SWAP1 SSTORE PUSH1 0xD DUP2 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP6 SWAP1 MSTORE SWAP1 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP3 SWAP1 MSTORE PUSH32 0x28A38FF37EA5C05388A99B81090AE2D9A9230D695258AE73BF5765411CB80B8 SWAP1 PUSH1 0x80 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH2 0xAD9 PUSH2 0x1023 JUMP JUMPDEST PUSH2 0xAE3 PUSH1 0x0 PUSH2 0x128F JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xAF0 DUP3 CALLER DUP4 PUSH2 0x1050 JUMP JUMPDEST PUSH2 0xAFA DUP3 DUP3 PUSH2 0x1259 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x787 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 PUSH2 0xB30 PUSH2 0x12E1 JUMP JUMPDEST PUSH2 0xB38 PUSH2 0x130E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH1 0xF PUSH1 0xF8 SHL SWAP12 SWAP4 SWAP11 POP SWAP2 SWAP9 POP CHAINID SWAP8 POP ADDRESS SWAP7 POP SWAP5 POP SWAP3 POP SWAP1 POP JUMP JUMPDEST PUSH2 0xB6A PUSH2 0x1023 JUMP JUMPDEST PUSH1 0x16 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xBBD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54726164696E6720616C726561647920656E61626C6564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7B7 JUMP JUMPDEST PUSH1 0x16 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE NUMBER PUSH1 0x14 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0xB3DA2DB3DFC3778F99852546C6E9AB39EC253F9DE7B0847AFEC61BD27878E923 SWAP2 PUSH2 0xC02 SWAP2 SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x6F0 SWAP1 PUSH2 0x2043 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x781 DUP2 DUP6 DUP6 PUSH2 0x10CF JUMP JUMPDEST PUSH2 0xC31 PUSH2 0x1023 JUMP JUMPDEST PUSH1 0xE DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH2 0xC45 PUSH2 0x1023 JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SUB PUSH2 0xC9D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F74207769746864726177206F776E20746F6B656E73000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7B7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xCE4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD08 SWAP2 SWAP1 PUSH2 0x20CC JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0xD52 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x4E6F20746F6B656E7320746F207769746864726177 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7B7 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB PUSH2 0xD73 PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP5 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xDC0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDE4 SWAP2 SWAP1 PUSH2 0x20E5 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xDF1 PUSH2 0x1023 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x19 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0xE40 JUMPI PUSH1 0x40 MLOAD PUSH4 0x313C8981 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x7B7 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP9 DUP9 DUP9 PUSH2 0xE8D DUP13 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 ADD SWAP1 SWAP2 SSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP7 SWAP1 SWAP7 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND SWAP1 DUP7 ADD MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0xE0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0xEE8 DUP3 PUSH2 0x133B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xEF8 DUP3 DUP8 DUP8 DUP8 PUSH2 0x1368 JUMP JUMPDEST SWAP1 POP DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xF3F JUMPI PUSH1 0x40 MLOAD PUSH4 0x25C00723 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x4 DUP4 ADD MSTORE DUP12 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x7B7 JUMP JUMPDEST PUSH2 0xF4A DUP11 DUP11 DUP11 PUSH2 0x1016 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xF5E PUSH2 0x1023 JUMP JUMPDEST SELFBALANCE DUP1 PUSH2 0xFA1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x4E6F2045544820746F207769746864726177 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7B7 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP3 ISZERO PUSH2 0x8FC MUL SWAP1 DUP4 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xAFA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH2 0xFE3 PUSH2 0x1023 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x100D JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7B7 JUMP JUMPDEST PUSH2 0x9B9 DUP2 PUSH2 0x128F JUMP JUMPDEST PUSH2 0xDE4 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1396 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xAE3 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7B7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0x0 NOT DUP2 LT ISZERO PUSH2 0x10C9 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x10BA JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x7B7 JUMP JUMPDEST PUSH2 0x10C9 DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x1396 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x10F9 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7B7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1123 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7B7 JUMP JUMPDEST PUSH2 0xDE4 DUP4 DUP4 DUP4 PUSH2 0x146B JUMP JUMPDEST PUSH1 0x0 ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ DUP1 ISZERO PUSH2 0x1187 JUMPI POP PUSH32 0x0 CHAINID EQ JUMPDEST ISZERO PUSH2 0x11B1 JUMPI POP PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x9AA PUSH1 0x40 DUP1 MLOAD PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x0 SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x0 PUSH1 0x60 DUP3 ADD MSTORE CHAINID PUSH1 0x80 DUP3 ADD MSTORE ADDRESS PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0xC0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1283 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7B7 JUMP JUMPDEST PUSH2 0xAFA DUP3 PUSH1 0x0 DUP4 PUSH2 0x146B JUMP JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x9AA PUSH32 0x0 PUSH1 0x5 PUSH2 0x1911 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x9AA PUSH32 0x0 PUSH1 0x6 PUSH2 0x1911 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x787 PUSH2 0x1348 PUSH2 0x112E JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD PUSH2 0x1901 PUSH1 0xF0 SHL DUP2 MSTORE PUSH1 0x2 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x42 SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x137A DUP9 DUP9 DUP9 DUP9 PUSH2 0x19BC JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x138A DUP3 DUP3 PUSH2 0x1A8B JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x13C0 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7B7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x13EA JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7B7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x10C9 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x145D SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x16 SLOAD PUSH1 0xFF AND DUP1 PUSH2 0x1486 JUMPI POP PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST PUSH2 0x14C8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x151C98591A5B99C81B9BDD08195B98589B1959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7B7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1A PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x150A JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1A PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x1544 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x109B1858DADB1A5CDD1959 PUSH1 0xAA SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7B7 JUMP JUMPDEST PUSH1 0xE SLOAD PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x1564 JUMPI POP PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x157E JUMPI POP PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x17B8 JUMPI PUSH1 0x0 PUSH1 0x14 SLOAD GT DUP1 ISZERO PUSH2 0x15A4 JUMPI POP PUSH1 0xD SLOAD PUSH1 0x14 SLOAD PUSH2 0x15A0 SWAP2 SWAP1 PUSH2 0x20B9 JUMP JUMPDEST NUMBER GT ISZERO JUMPDEST ISZERO PUSH2 0x1616 JUMPI PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 AND EQ DUP1 PUSH2 0x15D2 JUMPI POP PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND EQ JUMPDEST PUSH2 0x1616 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x20B73A3496B9B734B83290383937BA32B1BA34B7B7 PUSH1 0x59 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7B7 JUMP JUMPDEST PUSH1 0x11 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND EQ DUP1 ISZERO PUSH2 0x163C JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ADDRESS EQ ISZERO JUMPDEST ISZERO PUSH2 0x17B8 JUMPI PUSH1 0xB SLOAD DUP2 GT ISZERO PUSH2 0x168C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x8AF0C6CACAC8E640DAC2F040C4EAF240E0CAE440E8F PUSH1 0x53 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7B7 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x18 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x16B3 SWAP1 DUP4 SWAP1 PUSH2 0x20B9 JUMP JUMPDEST GT ISZERO PUSH2 0x1701 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45786365656473206D617820627579207065722077616C6C6574000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7B7 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x17 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1727 SWAP2 SWAP1 PUSH2 0x20B9 JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x176F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x436F6F6C646F776E20706572696F6420616374697665 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7B7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x18 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x1797 SWAP1 DUP5 SWAP1 PUSH2 0x20B9 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x17 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 TIMESTAMP SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x19 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP2 SWAP1 DUP2 SWAP1 PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x17FE JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x19 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0x189C JUMPI PUSH1 0x15 SLOAD ISZERO PUSH2 0x1829 JUMPI PUSH2 0x2710 PUSH1 0x15 SLOAD DUP6 PUSH2 0x181C SWAP2 SWAP1 PUSH2 0x2102 JUMP JUMPDEST PUSH2 0x1826 SWAP2 SWAP1 PUSH2 0x2119 JUMP JUMPDEST SWAP3 POP JUMPDEST PUSH1 0x11 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x1843 JUMPI POP PUSH1 0xF SLOAD ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x1866 JUMPI PUSH1 0xF SLOAD PUSH2 0x2710 SWAP1 PUSH2 0x1859 SWAP1 DUP7 PUSH2 0x2102 JUMP JUMPDEST PUSH2 0x1863 SWAP2 SWAP1 PUSH2 0x2119 JUMP JUMPDEST SWAP2 POP JUMPDEST PUSH1 0x13 SLOAD PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x1879 JUMPI POP PUSH1 0x12 SLOAD ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x189C JUMPI PUSH1 0x12 SLOAD PUSH2 0x2710 SWAP1 PUSH2 0x188F SWAP1 DUP7 PUSH2 0x2102 JUMP JUMPDEST PUSH2 0x1899 SWAP2 SWAP1 PUSH2 0x2119 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x18AA DUP7 DUP9 PUSH2 0x213B JUMP JUMPDEST PUSH2 0x18B4 SWAP2 SWAP1 PUSH2 0x213B JUMP JUMPDEST PUSH2 0x18BE SWAP2 SWAP1 PUSH2 0x213B JUMP JUMPDEST SWAP1 POP DUP4 ISZERO PUSH2 0x18D2 JUMPI PUSH2 0x18D2 DUP8 PUSH1 0x0 DUP7 PUSH2 0x1B44 JUMP JUMPDEST DUP3 ISZERO PUSH2 0x18E3 JUMPI PUSH2 0x18E3 DUP8 ADDRESS DUP6 PUSH2 0x1B44 JUMP JUMPDEST DUP2 ISZERO PUSH2 0x18FD JUMPI PUSH2 0x18F2 DUP3 PUSH2 0x1C6E JUMP JUMPDEST PUSH2 0x18FD DUP8 ADDRESS DUP5 PUSH2 0x1B44 JUMP JUMPDEST PUSH2 0x1908 DUP8 DUP8 DUP4 PUSH2 0x1B44 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xFF DUP4 EQ PUSH2 0x192B JUMPI PUSH2 0x1924 DUP4 PUSH2 0x1CBB JUMP JUMPDEST SWAP1 POP PUSH2 0x787 JUMP JUMPDEST DUP2 DUP1 SLOAD PUSH2 0x1937 SWAP1 PUSH2 0x2043 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1963 SWAP1 PUSH2 0x2043 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x19B0 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1985 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x19B0 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1993 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH2 0x787 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 GT ISZERO PUSH2 0x19F7 JUMPI POP PUSH1 0x0 SWAP2 POP PUSH1 0x3 SWAP1 POP DUP3 PUSH2 0x1A81 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP1 DUP5 MSTORE DUP11 SWAP1 MSTORE PUSH1 0xFF DUP10 AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1A4B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1A77 JUMPI POP PUSH1 0x0 SWAP3 POP PUSH1 0x1 SWAP2 POP DUP3 SWAP1 POP PUSH2 0x1A81 JUMP JUMPDEST SWAP3 POP PUSH1 0x0 SWAP2 POP DUP2 SWAP1 POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1A9F JUMPI PUSH2 0x1A9F PUSH2 0x214E JUMP JUMPDEST SUB PUSH2 0x1AA8 JUMPI POP POP JUMP JUMPDEST PUSH1 0x1 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1ABC JUMPI PUSH2 0x1ABC PUSH2 0x214E JUMP JUMPDEST SUB PUSH2 0x1ADA JUMPI PUSH1 0x40 MLOAD PUSH4 0xF645EEDF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1AEE JUMPI PUSH2 0x1AEE PUSH2 0x214E JUMP JUMPDEST SUB PUSH2 0x1B0F JUMPI PUSH1 0x40 MLOAD PUSH4 0xFCE698F7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x7B7 JUMP JUMPDEST PUSH1 0x3 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1B23 JUMPI PUSH2 0x1B23 PUSH2 0x214E JUMP JUMPDEST SUB PUSH2 0xAFA JUMPI PUSH1 0x40 MLOAD PUSH4 0x35E2F383 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x7B7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1B6F JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1B64 SWAP2 SWAP1 PUSH2 0x20B9 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x1BE1 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x1BC2 JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x7B7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1BFD JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x1C1C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1C61 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x1B PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1C80 SWAP2 SWAP1 PUSH2 0x20B9 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0x3EEB9763473A030C467B8F096A99E1825A88C6A821C131E1FBB007246A80359C SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x1CC8 DUP4 PUSH2 0x1CFA JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY POP POP POP SWAP2 DUP3 MSTORE POP PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND PUSH1 0x1F DUP2 GT ISZERO PUSH2 0x787 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2CD44AC3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1D48 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x1D2C JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1D7B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1D22 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1D99 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1DB1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1DBA DUP4 PUSH2 0x1D82 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1DDD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH2 0x1DF4 PUSH1 0x40 DUP6 ADD PUSH2 0x1D82 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x9B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1E1E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1E27 DUP4 PUSH2 0x1D82 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x1E37 DUP2 PUSH2 0x1DFD JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1E54 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1D7B DUP3 PUSH2 0x1D82 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1E72 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1E7B DUP5 PUSH2 0x1D82 JUMP JUMPDEST SWAP3 POP PUSH2 0x1E89 PUSH1 0x20 DUP6 ADD PUSH2 0x1D82 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1EAB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1EC5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x1ED5 PUSH1 0x20 DUP5 ADD PUSH2 0x1D82 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1EF4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP3 CALLDATALOAD SWAP5 PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP5 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP4 PUSH1 0x60 ADD CALLDATALOAD SWAP3 POP SWAP1 POP JUMP JUMPDEST PUSH1 0xFF PUSH1 0xF8 SHL DUP9 AND DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 PUSH1 0xE0 DUP2 DUP5 ADD MSTORE PUSH2 0x1F30 PUSH1 0xE0 DUP5 ADD DUP11 PUSH2 0x1D22 JUMP JUMPDEST DUP4 DUP2 SUB PUSH1 0x40 DUP6 ADD MSTORE PUSH2 0x1F42 DUP2 DUP11 PUSH2 0x1D22 JUMP JUMPDEST PUSH1 0x60 DUP6 ADD DUP10 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x80 DUP7 ADD MSTORE PUSH1 0xA0 DUP6 ADD DUP8 SWAP1 MSTORE DUP5 DUP2 SUB PUSH1 0xC0 DUP7 ADD MSTORE DUP6 MLOAD DUP1 DUP3 MSTORE DUP4 DUP8 ADD SWAP3 POP SWAP1 DUP4 ADD SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1F94 JUMPI DUP4 MLOAD DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x1F78 JUMP JUMPDEST POP SWAP1 SWAP13 SWAP12 POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x1FC1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1FCA DUP9 PUSH2 0x1D82 JUMP JUMPDEST SWAP7 POP PUSH2 0x1FD8 PUSH1 0x20 DUP10 ADD PUSH2 0x1D82 JUMP JUMPDEST SWAP6 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x1FFC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 SWAP3 SWAP6 SWAP5 PUSH1 0xA0 DUP5 ADD CALLDATALOAD SWAP5 POP PUSH1 0xC0 SWAP1 SWAP4 ADD CALLDATALOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x202C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2035 DUP4 PUSH2 0x1D82 JUMP JUMPDEST SWAP2 POP PUSH2 0x1ED5 PUSH1 0x20 DUP5 ADD PUSH2 0x1D82 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x2057 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2077 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xC SWAP1 DUP3 ADD MSTORE PUSH12 0x8CCACA40E8DEDE40D0D2CED PUSH1 0xA3 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x787 JUMPI PUSH2 0x787 PUSH2 0x20A3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x20DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x20F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1D7B DUP2 PUSH2 0x1DFD JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x787 JUMPI PUSH2 0x787 PUSH2 0x20A3 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x2136 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x787 JUMPI PUSH2 0x787 PUSH2 0x20A3 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD3 TIMESTAMP 0xB5 MSTORE8 DUP2 0xE ADDRESS SWAP4 0xBB 0xD2 POP SWAP5 PUSH15 0x6D015330E6400F4BE3CA3443AF6ACE GASLIMIT 0xFB JUMP RETURNDATACOPY PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"503:10621:23:-:0;;;1879:3;1847:35;;1918:34;;;-1:-1:-1;;1918:34:23;;;2985:851;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3168:12;3154:4;1616::6;3428:431:18;;;;;;;;;;;;;-1:-1:-1;;;3428:431:18;;;3128:4:23;3134:6;1656:5:3;1648;:13;;;;;;:::i;:::-;-1:-1:-1;1671:7:3;:17;1681:7;1671;:17;:::i;:::-;-1:-1:-1;3501:45:18;;-1:-1:-1;3501:4:18;;-1:-1:-1;3532:13:18;3501:30;:45::i;:::-;3493:53;;3567:51;:7;3601:16;3567:33;:51::i;:::-;3556:62;;3642:22;;;;;;;;;;3628:36;;3691:25;;;;;;3674:42;;3744:13;3727:30;;3792:23;4326:11;;4339:14;;4304:80;;;2079:95;4304:80;;;5484:25:25;5525:18;;;5518:34;;;;5568:18;;;5561:34;4355:13:18;5611:18:25;;;5604:34;4378:4:18;5654:19:25;;;5647:61;4268:7:18;;5456:19:25;;4304:80:18;;;;;;;;;;;;4294:91;;;;;;4287:98;;4213:179;;3792:23;3767:48;;-1:-1:-1;;3847:4:18;3825:27;;-1:-1:-1;;;;;;1273:26:0;;1269:95;;1322:31;;-1:-1:-1;;;1322:31:0;;1350:1;1322:31;;;4636:51:25;4609:18;;1322:31:0;;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;-1:-1:-1;1857:1:13;2061:7;:21;3192:34:23::3;3198:12:::0;3212:13;3192:5:::3;:34::i;:::-;-1:-1:-1::0;;;;;3293:32:23;::::3;;::::0;;;:18:::3;:32;::::0;;;;;:39;;3328:4:::3;-1:-1:-1::0;;3293:39:23;;::::3;::::0;::::3;::::0;;;3369:4:::3;3342:33:::0;;;;;;:40;;;;::::3;;::::0;;;3474:355;;::::3;::::0;::::3;::::0;;;;3546:5:::3;3523:19;:13:::0;3539:3:::3;3523:19;:::i;:::-;3522:29;;;;:::i;:::-;3474:355:::0;;::::3;;3617:5;3595:18;:13:::0;3611:2:::3;3595:18;:::i;:::-;3594:28;;;;:::i;:::-;3474:355:::0;;3675:3:::3;3474:355;::::0;;::::3;::::0;;;;3749:1:::3;3474:355:::0;;;;;;;;3814:4:::3;3474:355:::0;;;;;3455:374;;:16:::3;:374:::0;;;::::3;::::0;;;;::::3;::::0;;;;::::3;::::0;;;::::3;;::::0;;;;-1:-1:-1;;3455:374:23::3;::::0;::::3;;::::0;;;::::3;::::0;;-1:-1:-1;503:10621:23;;-1:-1:-1;;;503:10621:23;2887:340:14;2983:11;3032:2;3016:5;3010:19;:24;3006:215;;;3057:20;3071:5;3057:13;:20::i;:::-;3050:27;;;;3006:215;3134:5;3108:46;3149:5;3134;3108:46;:::i;:::-;-1:-1:-1;1390:66:14;;-1:-1:-1;3006:215:14;2887:340;;;;:::o;2912:187:0:-;3004:6;;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;;3052:40;;3004:6;;;3020:17;3004:6;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;7439:208:3:-;-1:-1:-1;;;;;7509:21:3;;7505:91;;7553:32;;-1:-1:-1;;;7553:32:3;;7582:1;7553:32;;;4636:51:25;4609:18;;7553:32:3;4490:203:25;7505:91:3;7605:35;7621:1;7625:7;7634:5;7605:7;:35::i;:::-;7439:208;;:::o;1708:286:14:-;1773:11;1796:17;1822:3;1796:30;;1854:2;1840:4;:11;:16;1836:72;;;1893:3;1879:18;;-1:-1:-1;;;1879:18:14;;;;;;;;:::i;1836:72::-;1974:11;;1957:13;1974:4;1957:13;:::i;:::-;1949:36;;1708:286;-1:-1:-1;;;1708:286:14:o;6578:2997:23:-;2894:14;;;;;:39;;-1:-1:-1;1710:6:0;;-1:-1:-1;;;;;1710:6:0;2912:10:23;:21;2894:39;2886:71;;;;-1:-1:-1;;;2886:71:23;;6624:2:25;2886:71:23;;;6606:21:25;6663:2;6643:18;;;6636:30;6702:21;6682:18;;;6675:49;6741:18;;2886:71:23;6422:343:25;2886:71:23;-1:-1:-1;;;;;6720:19:23;::::1;;::::0;;;:13:::1;:19;::::0;;;;;::::1;;6719:20;:42:::0;::::1;;;-1:-1:-1::0;;;;;;6744:17:23;::::1;;::::0;;;:13:::1;:17;::::0;;;;;::::1;;6743:18;6719:42;6711:66;;;::::0;-1:-1:-1;;;6711:66:23;;6972:2:25;6711:66:23::1;::::0;::::1;6954:21:25::0;7011:2;6991:18;;;6984:30;-1:-1:-1;;;7030:18:25;;;7023:41;7081:18;;6711:66:23::1;6770:335:25::0;6711:66:23::1;6854:24:::0;;::::1;;:43:::0;::::1;;;-1:-1:-1::0;1710:6:0;;-1:-1:-1;;;;;6882:15:23;;::::1;1710:6:0::0;;6882:15:23::1;;6854:43;:60;;;;-1:-1:-1::0;1710:6:0;;-1:-1:-1;;;;;6901:13:23;;::::1;1710:6:0::0;;6901:13:23::1;;6854:60;6850:1193;;;6985:1;6971:11;;:15;:81;;;;-1:-1:-1::0;7020:32:23;;7006:11:::1;::::0;:46:::1;::::0;7020:32;7006:46:::1;:::i;:::-;6990:12;:62;;6971:81;6967:186;;;1710:6:0::0;;-1:-1:-1;;;;;7080:13:23;;::::1;1710:6:0::0;;7080:13:23::1;::::0;:32:::1;;-1:-1:-1::0;1710:6:0;;-1:-1:-1;;;;;7097:15:23;;::::1;1710:6:0::0;;7097:15:23::1;7080:32;7072:66;;;::::0;-1:-1:-1;;;7072:66:23;;7442:2:25;7072:66:23::1;::::0;::::1;7424:21:25::0;7481:2;7461:18;;;7454:30;7520:23;7500:18;;;7493:51;7561:18;;7072:66:23::1;7240:345:25::0;7072:66:23::1;7254:33:::0;;-1:-1:-1;;;;;7246:41:23;;::::1;7254:33:::0;::::1;7246:41;:64:::0;::::1;;;-1:-1:-1::0;;;;;;7291:19:23;::::1;7305:4;7291:19;;7246:64;7242:791;;;7391:28:::0;;7381:38;::::1;;7373:73;;;::::0;-1:-1:-1;;;7373:73:23;;7792:2:25;7373:73:23::1;::::0;::::1;7774:21:25::0;7831:2;7811:18;;;7804:30;7870:24;7850:18;;;7843:52;7912:18;;7373:73:23::1;7590:346:25::0;7373:73:23::1;7576:16;:32:::0;-1:-1:-1;;;;;7548:15:23;::::1;7576:32;7548:15:::0;;;:11:::1;:15;::::0;;;;;:24:::1;::::0;7566:6;;7548:24:::1;:::i;:::-;:60;;7519:157;;;::::0;-1:-1:-1;;;7519:157:23;;8143:2:25;7519:157:23::1;::::0;::::1;8125:21:25::0;8182:2;8162:18;;;8155:30;8221:28;8201:18;;;8194:56;8267:18;;7519:157:23::1;7941:350:25::0;7519:157:23::1;7812:31:::0;;-1:-1:-1;;;;;7794:15:23;::::1;;::::0;;;:11:::1;:15;::::0;;;;;:49:::1;::::0;7812:31;7794:49:::1;:::i;:::-;7775:15;:68;;7746:161;;;::::0;-1:-1:-1;;;7746:161:23;;8498:2:25;7746:161:23::1;::::0;::::1;8480:21:25::0;8537:2;8517:18;;;8510:30;8576:24;8556:18;;;8549:52;8618:18;;7746:161:23::1;8296:346:25::0;7746:161:23::1;-1:-1:-1::0;;;;;7942:15:23;::::1;;::::0;;;:11:::1;:15;::::0;;;;:25;;7961:6;;7942:15;:25:::1;::::0;7961:6;;7942:25:::1;:::i;:::-;::::0;;;-1:-1:-1;;;;;;;7985:15:23;::::1;;::::0;;;:11:::1;:15;::::0;;;;8003::::1;7985:33:::0;;7242:791:::1;-1:-1:-1::0;;;;;8208:24:23;::::1;8087:18;8208:24:::0;;;:18:::1;:24;::::0;;;;;8087:18;;;;8208:24:::1;;8207:25;:52:::0;::::1;;;-1:-1:-1::0;;;;;;8237:22:23;::::1;;::::0;;;:18:::1;:22;::::0;;;;;::::1;;8236:23;8207:52;8203:609;;;8279:14;::::0;:18;8275:103:::1;;8358:5;8340:14;;8331:6;:23;;;;:::i;:::-;8330:33;;;;:::i;:::-;8317:46;;8275:103;8408:27:::0;;-1:-1:-1;;;8408:27:23;::::1;;;:74:::0;::::1;;;-1:-1:-1::0;8439:19:23::1;:39:::0;:43;;8408:74:::1;8404:189;;;8530:19;:39:::0;8573:5:::1;::::0;8521:48:::1;::::0;:6;:48:::1;:::i;:::-;8520:58;;;;:::i;:::-;8502:76;;8404:189;8623:24:::0;;::::1;;:69:::0;::::1;;;-1:-1:-1::0;8651:16:23::1;:37:::0;:41;;8623:69:::1;8619:183;;;8741:16;:37:::0;8782:5:::1;::::0;8732:46:::1;::::0;:6;:46:::1;:::i;:::-;8731:56;;;;:::i;:::-;8712:75;;8619:183;8830:22;8895:16:::0;8877:15;8855:19:::1;8864:10:::0;8855:6;:19:::1;:::i;:::-;:37;;;;:::i;:::-;:56;;;;:::i;:::-;8830:81:::0;-1:-1:-1;8958:14:23;;8954:88:::1;;8988:43;9002:4:::0;9016:1:::1;9020:10:::0;8988:13:::1;:43::i;:::-;9097:19:::0;;9093:176:::1;;9132:51;9146:4:::0;9160::::1;9167:15:::0;9132:13:::1;:51::i;:::-;9321:20:::0;;9317:157:::1;;9357:40;9380:16:::0;9357:22:::1;:40::i;:::-;9411:52;9425:4:::0;9439::::1;9446:16:::0;9411:13:::1;:52::i;:::-;9529:39;9543:4:::0;9549:2;9553:14;9529:13:::1;:39::i;:::-;6701:2874;;;;6578:2997:::0;;;:::o;5989:1107:3:-;-1:-1:-1;;;;;6078:18:3;;6074:540;;6230:5;6214:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;6074:540:3;;-1:-1:-1;6074:540:3;;-1:-1:-1;;;;;6288:15:3;;6266:19;6288:15;;;;;;;;;;;6321:19;;;6317:115;;;6367:50;;-1:-1:-1;;;6367:50:3;;-1:-1:-1;;;;;9000:32:25;;6367:50:3;;;8982:51:25;9049:18;;;9042:34;;;9092:18;;;9085:34;;;8955:18;;6367:50:3;8780:345:25;6317:115:3;-1:-1:-1;;;;;6552:15:3;;:9;:15;;;;;;;;;;6570:19;;;;6552:37;;6074:540;-1:-1:-1;;;;;6628:16:3;;6624:425;;6791:12;:21;;;;;;;6624:425;;;-1:-1:-1;;;;;7002:13:3;;:9;:13;;;;;;;;;;:22;;;;;;6624:425;7079:2;-1:-1:-1;;;;;7064:25:3;7073:4;-1:-1:-1;;;;;7064:25:3;;7083:5;7064:25;;;;9276::25;;9264:2;9249:18;;9130:177;7064:25:3;;;;;;;;5989:1107;;;:::o;9585:145:23:-;9672:6;9651:17;;:27;;;;;;;:::i;:::-;;;;-1:-1:-1;;9693:30:23;;9276:25:25;;;9693:30:23;;9264:2:25;9249:18;9693:30:23;;;;;;;9585:145;:::o;14:127:25:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:250;231:1;241:113;255:6;252:1;249:13;241:113;;;331:11;;;325:18;312:11;;;305:39;277:2;270:10;241:113;;;-1:-1:-1;;388:1:25;370:16;;363:27;146:250::o;401:699::-;455:5;508:3;501:4;493:6;489:17;485:27;475:55;;526:1;523;516:12;475:55;549:13;;-1:-1:-1;;;;;611:10:25;;;608:36;;;624:18;;:::i;:::-;699:2;693:9;667:2;753:13;;-1:-1:-1;;749:22:25;;;773:2;745:31;741:40;729:53;;;797:18;;;817:22;;;794:46;791:72;;;843:18;;:::i;:::-;883:10;879:2;872:22;918:2;910:6;903:18;964:3;957:4;952:2;944:6;940:15;936:26;933:35;930:55;;;981:1;978;971:12;930:55;994:76;1067:2;1060:4;1052:6;1048:17;1041:4;1033:6;1029:17;994:76;:::i;:::-;1088:6;401:699;-1:-1:-1;;;;;;401:699:25:o;1105:791::-;1222:6;1230;1238;1246;1299:3;1287:9;1278:7;1274:23;1270:33;1267:53;;;1316:1;1313;1306:12;1267:53;1343:16;;-1:-1:-1;;;;;1408:14:25;;;1405:34;;;1435:1;1432;1425:12;1405:34;1458:61;1511:7;1502:6;1491:9;1487:22;1458:61;:::i;:::-;1448:71;;1565:2;1554:9;1550:18;1544:25;1528:41;;1594:2;1584:8;1581:16;1578:36;;;1610:1;1607;1600:12;1578:36;;1633:63;1688:7;1677:8;1666:9;1662:24;1633:63;:::i;:::-;1736:2;1721:18;;1715:25;1783:2;1768:18;;1762:25;1623:73;;-1:-1:-1;1715:25:25;-1:-1:-1;1762:25:25;-1:-1:-1;;;;;;1816:31:25;;1806:42;;1796:70;;1862:1;1859;1852:12;1796:70;1105:791;;;;-1:-1:-1;1105:791:25;;-1:-1:-1;;1105:791:25:o;1901:380::-;1980:1;1976:12;;;;2023;;;2044:61;;2098:4;2090:6;2086:17;2076:27;;2044:61;2151:2;2143:6;2140:14;2120:18;2117:38;2114:161;;2197:10;2192:3;2188:20;2185:1;2178:31;2232:4;2229:1;2222:15;2260:4;2257:1;2250:15;2114:161;;1901:380;;;:::o;2412:545::-;2514:2;2509:3;2506:11;2503:448;;;2550:1;2575:5;2571:2;2564:17;2620:4;2616:2;2606:19;2690:2;2678:10;2674:19;2671:1;2667:27;2661:4;2657:38;2726:4;2714:10;2711:20;2708:47;;;-1:-1:-1;2749:4:25;2708:47;2804:2;2799:3;2795:12;2792:1;2788:20;2782:4;2778:31;2768:41;;2859:82;2877:2;2870:5;2867:13;2859:82;;;2922:17;;;2903:1;2892:13;2859:82;;;2863:3;;;2503:448;2412:545;;;:::o;3133:1352::-;3253:10;;-1:-1:-1;;;;;3275:30:25;;3272:56;;;3308:18;;:::i;:::-;3337:97;3427:6;3387:38;3419:4;3413:11;3387:38;:::i;:::-;3381:4;3337:97;:::i;:::-;3489:4;;3553:2;3542:14;;3570:1;3565:663;;;;4272:1;4289:6;4286:89;;;-1:-1:-1;4341:19:25;;;4335:26;4286:89;-1:-1:-1;;3090:1:25;3086:11;;;3082:24;3078:29;3068:40;3114:1;3110:11;;;3065:57;4388:81;;3535:944;;3565:663;2359:1;2352:14;;;2396:4;2383:18;;-1:-1:-1;;3601:20:25;;;3719:236;3733:7;3730:1;3727:14;3719:236;;;3822:19;;;3816:26;3801:42;;3914:27;;;;3882:1;3870:14;;;;3749:19;;3719:236;;;3723:3;3983:6;3974:7;3971:19;3968:201;;;4044:19;;;4038:26;-1:-1:-1;;4127:1:25;4123:14;;;4139:3;4119:24;4115:37;4111:42;4096:58;4081:74;;3968:201;-1:-1:-1;;;;;4215:1:25;4199:14;;;4195:22;4182:36;;-1:-1:-1;3133:1352:25:o;4698:127::-;4759:10;4754:3;4750:20;4747:1;4740:31;4790:4;4787:1;4780:15;4814:4;4811:1;4804:15;4830:168;4903:9;;;4934;;4951:15;;;4945:22;;4931:37;4921:71;;4972:18;;:::i;5003:217::-;5043:1;5069;5059:132;;5113:10;5108:3;5104:20;5101:1;5094:31;5148:4;5145:1;5138:15;5176:4;5173:1;5166:15;5059:132;-1:-1:-1;5205:9:25;;5003:217::o;5719:396::-;5868:2;5857:9;5850:21;5831:4;5900:6;5894:13;5943:6;5938:2;5927:9;5923:18;5916:34;5959:79;6031:6;6026:2;6015:9;6011:18;6006:2;5998:6;5994:15;5959:79;:::i;:::-;6099:2;6078:15;-1:-1:-1;;6074:29:25;6059:45;;;;6106:2;6055:54;;5719:396;-1:-1:-1;;5719:396:25:o;6120:297::-;6238:12;;6285:4;6274:16;;;6268:23;;6238:12;6303:16;;6300:111;;;-1:-1:-1;;6377:4:25;6373:17;;;;6370:1;6366:25;6362:38;6351:50;;6120:297;-1:-1:-1;6120:297:25:o;7110:125::-;7175:9;;;7196:10;;;7193:36;;;7209:18;;:::i;8647:128::-;8714:9;;;8735:11;;;8732:37;;;8749:18;;:::i;9130:177::-;503:10621:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@DOMAIN_SEPARATOR_1101":{"entryPoint":2464,"id":1101,"parameterSlots":0,"returnSlots":1},"@_EIP712Name_3796":{"entryPoint":4833,"id":3796,"parameterSlots":0,"returnSlots":1},"@_EIP712Version_3808":{"entryPoint":4878,"id":3808,"parameterSlots":0,"returnSlots":1},"@_approve_715":{"entryPoint":4118,"id":715,"parameterSlots":3,"returnSlots":0},"@_approve_775":{"entryPoint":5014,"id":775,"parameterSlots":4,"returnSlots":0},"@_buildDomainSeparator_3726":{"entryPoint":null,"id":3726,"parameterSlots":0,"returnSlots":1},"@_burn_697":{"entryPoint":4697,"id":697,"parameterSlots":2,"returnSlots":0},"@_checkOwner_84":{"entryPoint":4131,"id":84,"parameterSlots":0,"returnSlots":0},"@_distributeReflections_8141":{"entryPoint":7278,"id":8141,"parameterSlots":1,"returnSlots":0},"@_domainSeparatorV4_3705":{"entryPoint":4398,"id":3705,"parameterSlots":0,"returnSlots":1},"@_hashTypedDataV4_3742":{"entryPoint":4923,"id":3742,"parameterSlots":1,"returnSlots":1},"@_msgSender_1176":{"entryPoint":null,"id":1176,"parameterSlots":0,"returnSlots":1},"@_spendAllowance_823":{"entryPoint":4176,"id":823,"parameterSlots":3,"returnSlots":0},"@_throwError_3581":{"entryPoint":6795,"id":3581,"parameterSlots":2,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":4751,"id":146,"parameterSlots":1,"returnSlots":0},"@_transfer_554":{"entryPoint":4303,"id":554,"parameterSlots":3,"returnSlots":0},"@_update_631":{"entryPoint":6980,"id":631,"parameterSlots":3,"returnSlots":0},"@_update_8127":{"entryPoint":5227,"id":8127,"parameterSlots":3,"returnSlots":0},"@_useNonce_1236":{"entryPoint":null,"id":1236,"parameterSlots":1,"returnSlots":1},"@allowance_451":{"entryPoint":null,"id":451,"parameterSlots":2,"returnSlots":1},"@approve_475":{"entryPoint":1907,"id":475,"parameterSlots":2,"returnSlots":1},"@autoLiquidityConfig_7474":{"entryPoint":null,"id":7474,"parameterSlots":0,"returnSlots":0},"@balanceOf_410":{"entryPoint":null,"id":410,"parameterSlots":1,"returnSlots":1},"@burnFeePercent_7482":{"entryPoint":null,"id":7482,"parameterSlots":0,"returnSlots":0},"@burnFrom_947":{"entryPoint":2789,"id":947,"parameterSlots":2,"returnSlots":0},"@burn_926":{"entryPoint":2479,"id":926,"parameterSlots":1,"returnSlots":0},"@byteLength_1609":{"entryPoint":7418,"id":1609,"parameterSlots":1,"returnSlots":1},"@configureAutoLiquidity_7746":{"entryPoint":1933,"id":7746,"parameterSlots":3,"returnSlots":0},"@configureFairLaunch_7666":{"entryPoint":2663,"id":7666,"parameterSlots":4,"returnSlots":0},"@decimals_388":{"entryPoint":null,"id":388,"parameterSlots":0,"returnSlots":1},"@delegate_8166":{"entryPoint":2539,"id":8166,"parameterSlots":1,"returnSlots":0},"@disableFairLaunch_7703":{"entryPoint":3113,"id":7703,"parameterSlots":0,"returnSlots":0},"@eip712Domain_3784":{"entryPoint":2844,"id":3784,"parameterSlots":0,"returnSlots":7},"@emergencyWithdrawTokens_8242":{"entryPoint":3133,"id":8242,"parameterSlots":1,"returnSlots":0},"@emergencyWithdraw_8196":{"entryPoint":3926,"id":8196,"parameterSlots":0,"returnSlots":0},"@enableReflections_7773":{"entryPoint":2603,"id":7773,"parameterSlots":1,"returnSlots":0},"@enableTrading_7691":{"entryPoint":2914,"id":7691,"parameterSlots":0,"returnSlots":0},"@excludeFromFees_7857":{"entryPoint":3561,"id":7857,"parameterSlots":2,"returnSlots":0},"@excludeFromReflections_7801":{"entryPoint":2262,"id":7801,"parameterSlots":1,"returnSlots":0},"@fairLaunchConfig_7471":{"entryPoint":null,"id":7471,"parameterSlots":0,"returnSlots":0},"@getReflectionBalance_8262":{"entryPoint":2135,"id":8262,"parameterSlots":1,"returnSlots":1},"@getTotalReflections_8270":{"entryPoint":null,"id":8270,"parameterSlots":0,"returnSlots":1},"@hasVoted_8151":{"entryPoint":null,"id":8151,"parameterSlots":0,"returnSlots":0},"@isBlacklisted_7501":{"entryPoint":null,"id":7501,"parameterSlots":0,"returnSlots":0},"@isExcludedFromFees_7497":{"entryPoint":null,"id":7497,"parameterSlots":0,"returnSlots":0},"@isExcludedFromReflections_8282":{"entryPoint":null,"id":8282,"parameterSlots":1,"returnSlots":1},"@lastBuyTime_7489":{"entryPoint":null,"id":7489,"parameterSlots":0,"returnSlots":0},"@launchBlock_7479":{"entryPoint":null,"id":7479,"parameterSlots":0,"returnSlots":0},"@name_370":{"entryPoint":1761,"id":370,"parameterSlots":0,"returnSlots":1},"@nonces_1091":{"entryPoint":2814,"id":1091,"parameterSlots":1,"returnSlots":1},"@nonces_1221":{"entryPoint":null,"id":1221,"parameterSlots":1,"returnSlots":1},"@owner_67":{"entryPoint":null,"id":67,"parameterSlots":0,"returnSlots":1},"@permit_1074":{"entryPoint":3612,"id":1074,"parameterSlots":7,"returnSlots":0},"@recover_3532":{"entryPoint":4968,"id":3532,"parameterSlots":4,"returnSlots":1},"@reflectionConfig_7477":{"entryPoint":null,"id":7477,"parameterSlots":0,"returnSlots":0},"@renounceOwnership_98":{"entryPoint":2769,"id":98,"parameterSlots":0,"returnSlots":0},"@setBlacklist_7841":{"entryPoint":2032,"id":7841,"parameterSlots":2,"returnSlots":0},"@setBurnFee_7820":{"entryPoint":2492,"id":7820,"parameterSlots":1,"returnSlots":0},"@symbol_379":{"entryPoint":3084,"id":379,"parameterSlots":0,"returnSlots":1},"@toStringWithFallback_1676":{"entryPoint":6417,"id":1676,"parameterSlots":2,"returnSlots":1},"@toString_1577":{"entryPoint":7355,"id":1577,"parameterSlots":1,"returnSlots":1},"@toTypedDataHash_3894":{"entryPoint":null,"id":3894,"parameterSlots":2,"returnSlots":1},"@totalBought_7493":{"entryPoint":null,"id":7493,"parameterSlots":0,"returnSlots":0},"@totalSupply_397":{"entryPoint":null,"id":397,"parameterSlots":0,"returnSlots":1},"@tradingEnabled_7485":{"entryPoint":null,"id":7485,"parameterSlots":0,"returnSlots":0},"@transferFrom_507":{"entryPoint":2226,"id":507,"parameterSlots":3,"returnSlots":1},"@transferOwnership_126":{"entryPoint":4059,"id":126,"parameterSlots":1,"returnSlots":0},"@transfer_434":{"entryPoint":3099,"id":434,"parameterSlots":2,"returnSlots":1},"@tryRecover_3496":{"entryPoint":6588,"id":3496,"parameterSlots":4,"returnSlots":3},"@votingPower_8145":{"entryPoint":null,"id":8145,"parameterSlots":0,"returnSlots":0},"abi_decode_address":{"entryPoint":7554,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":7746,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":8217,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":7773,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32":{"entryPoint":8102,"id":null,"parameterSlots":2,"returnSlots":7},"abi_decode_tuple_t_addresst_bool":{"entryPoint":7691,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":7582,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":8421,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":7833,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":8396,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_address":{"entryPoint":7858,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256t_uint256t_address":{"entryPoint":7624,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_uint256t_uint256t_uint256t_uint256":{"entryPoint":7902,"id":null,"parameterSlots":2,"returnSlots":4},"abi_encode_string":{"entryPoint":7458,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":7952,"id":null,"parameterSlots":8,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":7,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7528,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_2a4b2ba36f9e275da9750f638b0402650ffc49f42156267cd88bbccc14d1c188__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_48d9dea795d8d010580a5b191d0fe7c1ee70cd850707a0d7e7aba7c702de6be1__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":8317,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_60e50fe4b5f9ae998b7c4af6246a3be868b5d99ebc1f2f26c5c277ea2f50399f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_66396a07fa8344d81b812cfe3bea3e63cf5a5f15b46663d05f60f8e8a2326e51__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_7cc6b3e105e5333edddf04583e651cc3d3f46302c4d3edb1ca282ad53029b8db__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_8a47083662e5118b10740f0e82a54826b69dcdcba204cbbbb9689112c03a2b53__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9df16c5c3e9f487854502591282f9dbd29044f6d3f3bf4c9daa5d3460486dd95__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_a1e994c71b3513731e9effa0bd81687a4234b5038b9b1fc3f0ec6961d00b02a4__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_a4d1beca50ea03ae2d0bef8bddea7067036a984881c1fb687d10a1e111335fc0__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_aba53b7bc56fd10d1bb2cac393e26b489ca53cf0c676cd3f5a7c5c185bf6cd4c__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_fe7271fdf16e686aac8ab7870b0a18a8d2226a1ec6ab1d7a847ec7059dd2e78d__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_fef92ec79bbd568fc63edc095cddaebd47e166ea7932b60d9a91e79658733400__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_bool__to_t_uint256_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256_t_address_t_bool__to_t_uint256_t_uint256_t_address_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__to_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":8377,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":8473,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":8450,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":8507,"id":null,"parameterSlots":2,"returnSlots":1},"extract_byte_array_length":{"entryPoint":8259,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":8355,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x21":{"entryPoint":8526,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_bool":{"entryPoint":7677,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:16472:25","statements":[{"nodeType":"YulBlock","src":"6:3:25","statements":[]},{"body":{"nodeType":"YulBlock","src":"64:373:25","statements":[{"nodeType":"YulVariableDeclaration","src":"74:26:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"94:5:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"88:5:25"},"nodeType":"YulFunctionCall","src":"88:12:25"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"78:6:25","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"116:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"121:6:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"109:6:25"},"nodeType":"YulFunctionCall","src":"109:19:25"},"nodeType":"YulExpressionStatement","src":"109:19:25"},{"nodeType":"YulVariableDeclaration","src":"137:10:25","value":{"kind":"number","nodeType":"YulLiteral","src":"146:1:25","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"141:1:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"208:110:25","statements":[{"nodeType":"YulVariableDeclaration","src":"222:14:25","value":{"kind":"number","nodeType":"YulLiteral","src":"232:4:25","type":"","value":"0x20"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"226:2:25","type":""}]},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"264:3:25"},{"name":"i","nodeType":"YulIdentifier","src":"269:1:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"260:3:25"},"nodeType":"YulFunctionCall","src":"260:11:25"},{"name":"_1","nodeType":"YulIdentifier","src":"273:2:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"256:3:25"},"nodeType":"YulFunctionCall","src":"256:20:25"},{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"292:5:25"},{"name":"i","nodeType":"YulIdentifier","src":"299:1:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"288:3:25"},"nodeType":"YulFunctionCall","src":"288:13:25"},{"name":"_1","nodeType":"YulIdentifier","src":"303:2:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"284:3:25"},"nodeType":"YulFunctionCall","src":"284:22:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"278:5:25"},"nodeType":"YulFunctionCall","src":"278:29:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"249:6:25"},"nodeType":"YulFunctionCall","src":"249:59:25"},"nodeType":"YulExpressionStatement","src":"249:59:25"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"167:1:25"},{"name":"length","nodeType":"YulIdentifier","src":"170:6:25"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"164:2:25"},"nodeType":"YulFunctionCall","src":"164:13:25"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"178:21:25","statements":[{"nodeType":"YulAssignment","src":"180:17:25","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"189:1:25"},{"kind":"number","nodeType":"YulLiteral","src":"192:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"185:3:25"},"nodeType":"YulFunctionCall","src":"185:12:25"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"180:1:25"}]}]},"pre":{"nodeType":"YulBlock","src":"160:3:25","statements":[]},"src":"156:162:25"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"342:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"347:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"338:3:25"},"nodeType":"YulFunctionCall","src":"338:16:25"},{"kind":"number","nodeType":"YulLiteral","src":"356:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"334:3:25"},"nodeType":"YulFunctionCall","src":"334:27:25"},{"kind":"number","nodeType":"YulLiteral","src":"363:1:25","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"327:6:25"},"nodeType":"YulFunctionCall","src":"327:38:25"},"nodeType":"YulExpressionStatement","src":"327:38:25"},{"nodeType":"YulAssignment","src":"374:57:25","value":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"389:3:25"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"402:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"410:2:25","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"398:3:25"},"nodeType":"YulFunctionCall","src":"398:15:25"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"419:2:25","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"415:3:25"},"nodeType":"YulFunctionCall","src":"415:7:25"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"394:3:25"},"nodeType":"YulFunctionCall","src":"394:29:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"385:3:25"},"nodeType":"YulFunctionCall","src":"385:39:25"},{"kind":"number","nodeType":"YulLiteral","src":"426:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"381:3:25"},"nodeType":"YulFunctionCall","src":"381:50:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"374:3:25"}]}]},"name":"abi_encode_string","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"41:5:25","type":""},{"name":"pos","nodeType":"YulTypedName","src":"48:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"56:3:25","type":""}],"src":"14:423:25"},{"body":{"nodeType":"YulBlock","src":"563:99:25","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"580:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"591:2:25","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"573:6:25"},"nodeType":"YulFunctionCall","src":"573:21:25"},"nodeType":"YulExpressionStatement","src":"573:21:25"},{"nodeType":"YulAssignment","src":"603:53:25","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"629:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"641:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"652:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"637:3:25"},"nodeType":"YulFunctionCall","src":"637:18:25"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"611:17:25"},"nodeType":"YulFunctionCall","src":"611:45:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"603:4:25"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"532:9:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"543:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"554:4:25","type":""}],"src":"442:220:25"},{"body":{"nodeType":"YulBlock","src":"716:124:25","statements":[{"nodeType":"YulAssignment","src":"726:29:25","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"748:6:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"735:12:25"},"nodeType":"YulFunctionCall","src":"735:20:25"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"726:5:25"}]},{"body":{"nodeType":"YulBlock","src":"818:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"827:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"830:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"820:6:25"},"nodeType":"YulFunctionCall","src":"820:12:25"},"nodeType":"YulExpressionStatement","src":"820:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"777:5:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"788:5:25"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"803:3:25","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"808:1:25","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"799:3:25"},"nodeType":"YulFunctionCall","src":"799:11:25"},{"kind":"number","nodeType":"YulLiteral","src":"812:1:25","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"795:3:25"},"nodeType":"YulFunctionCall","src":"795:19:25"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"784:3:25"},"nodeType":"YulFunctionCall","src":"784:31:25"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"774:2:25"},"nodeType":"YulFunctionCall","src":"774:42:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"767:6:25"},"nodeType":"YulFunctionCall","src":"767:50:25"},"nodeType":"YulIf","src":"764:70:25"}]},"name":"abi_decode_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"695:6:25","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"706:5:25","type":""}],"src":"667:173:25"},{"body":{"nodeType":"YulBlock","src":"932:167:25","statements":[{"body":{"nodeType":"YulBlock","src":"978:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"987:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"990:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"980:6:25"},"nodeType":"YulFunctionCall","src":"980:12:25"},"nodeType":"YulExpressionStatement","src":"980:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"953:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"962:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"949:3:25"},"nodeType":"YulFunctionCall","src":"949:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"974:2:25","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"945:3:25"},"nodeType":"YulFunctionCall","src":"945:32:25"},"nodeType":"YulIf","src":"942:52:25"},{"nodeType":"YulAssignment","src":"1003:39:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1032:9:25"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"1013:18:25"},"nodeType":"YulFunctionCall","src":"1013:29:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1003:6:25"}]},{"nodeType":"YulAssignment","src":"1051:42:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1078:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"1089:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1074:3:25"},"nodeType":"YulFunctionCall","src":"1074:18:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1061:12:25"},"nodeType":"YulFunctionCall","src":"1061:32:25"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1051:6:25"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"890:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"901:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"913:6:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"921:6:25","type":""}],"src":"845:254:25"},{"body":{"nodeType":"YulBlock","src":"1199:92:25","statements":[{"nodeType":"YulAssignment","src":"1209:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1221:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"1232:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1217:3:25"},"nodeType":"YulFunctionCall","src":"1217:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1209:4:25"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1251:9:25"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1276:6:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1269:6:25"},"nodeType":"YulFunctionCall","src":"1269:14:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1262:6:25"},"nodeType":"YulFunctionCall","src":"1262:22:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1244:6:25"},"nodeType":"YulFunctionCall","src":"1244:41:25"},"nodeType":"YulExpressionStatement","src":"1244:41:25"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1168:9:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1179:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1190:4:25","type":""}],"src":"1104:187:25"},{"body":{"nodeType":"YulBlock","src":"1400:218:25","statements":[{"body":{"nodeType":"YulBlock","src":"1446:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1455:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1458:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1448:6:25"},"nodeType":"YulFunctionCall","src":"1448:12:25"},"nodeType":"YulExpressionStatement","src":"1448:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1421:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"1430:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1417:3:25"},"nodeType":"YulFunctionCall","src":"1417:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"1442:2:25","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1413:3:25"},"nodeType":"YulFunctionCall","src":"1413:32:25"},"nodeType":"YulIf","src":"1410:52:25"},{"nodeType":"YulAssignment","src":"1471:33:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1494:9:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1481:12:25"},"nodeType":"YulFunctionCall","src":"1481:23:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1471:6:25"}]},{"nodeType":"YulAssignment","src":"1513:42:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1540:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"1551:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1536:3:25"},"nodeType":"YulFunctionCall","src":"1536:18:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1523:12:25"},"nodeType":"YulFunctionCall","src":"1523:32:25"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1513:6:25"}]},{"nodeType":"YulAssignment","src":"1564:48:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1597:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"1608:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1593:3:25"},"nodeType":"YulFunctionCall","src":"1593:18:25"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"1574:18:25"},"nodeType":"YulFunctionCall","src":"1574:38:25"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1564:6:25"}]}]},"name":"abi_decode_tuple_t_uint256t_uint256t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1350:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1361:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1373:6:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1381:6:25","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1389:6:25","type":""}],"src":"1296:322:25"},{"body":{"nodeType":"YulBlock","src":"1665:76:25","statements":[{"body":{"nodeType":"YulBlock","src":"1719:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1728:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1731:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1721:6:25"},"nodeType":"YulFunctionCall","src":"1721:12:25"},"nodeType":"YulExpressionStatement","src":"1721:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1688:5:25"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1709:5:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1702:6:25"},"nodeType":"YulFunctionCall","src":"1702:13:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1695:6:25"},"nodeType":"YulFunctionCall","src":"1695:21:25"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1685:2:25"},"nodeType":"YulFunctionCall","src":"1685:32:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1678:6:25"},"nodeType":"YulFunctionCall","src":"1678:40:25"},"nodeType":"YulIf","src":"1675:60:25"}]},"name":"validator_revert_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1654:5:25","type":""}],"src":"1623:118:25"},{"body":{"nodeType":"YulBlock","src":"1830:231:25","statements":[{"body":{"nodeType":"YulBlock","src":"1876:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1885:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1888:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1878:6:25"},"nodeType":"YulFunctionCall","src":"1878:12:25"},"nodeType":"YulExpressionStatement","src":"1878:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1851:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"1860:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1847:3:25"},"nodeType":"YulFunctionCall","src":"1847:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"1872:2:25","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1843:3:25"},"nodeType":"YulFunctionCall","src":"1843:32:25"},"nodeType":"YulIf","src":"1840:52:25"},{"nodeType":"YulAssignment","src":"1901:39:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1930:9:25"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"1911:18:25"},"nodeType":"YulFunctionCall","src":"1911:29:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1901:6:25"}]},{"nodeType":"YulVariableDeclaration","src":"1949:45:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1979:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"1990:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1975:3:25"},"nodeType":"YulFunctionCall","src":"1975:18:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1962:12:25"},"nodeType":"YulFunctionCall","src":"1962:32:25"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"1953:5:25","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2025:5:25"}],"functionName":{"name":"validator_revert_bool","nodeType":"YulIdentifier","src":"2003:21:25"},"nodeType":"YulFunctionCall","src":"2003:28:25"},"nodeType":"YulExpressionStatement","src":"2003:28:25"},{"nodeType":"YulAssignment","src":"2040:15:25","value":{"name":"value","nodeType":"YulIdentifier","src":"2050:5:25"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2040:6:25"}]}]},"name":"abi_decode_tuple_t_addresst_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1788:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1799:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1811:6:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1819:6:25","type":""}],"src":"1746:315:25"},{"body":{"nodeType":"YulBlock","src":"2136:116:25","statements":[{"body":{"nodeType":"YulBlock","src":"2182:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2191:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2194:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2184:6:25"},"nodeType":"YulFunctionCall","src":"2184:12:25"},"nodeType":"YulExpressionStatement","src":"2184:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2157:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"2166:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2153:3:25"},"nodeType":"YulFunctionCall","src":"2153:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"2178:2:25","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2149:3:25"},"nodeType":"YulFunctionCall","src":"2149:32:25"},"nodeType":"YulIf","src":"2146:52:25"},{"nodeType":"YulAssignment","src":"2207:39:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2236:9:25"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2217:18:25"},"nodeType":"YulFunctionCall","src":"2217:29:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2207:6:25"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2102:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2113:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2125:6:25","type":""}],"src":"2066:186:25"},{"body":{"nodeType":"YulBlock","src":"2358:76:25","statements":[{"nodeType":"YulAssignment","src":"2368:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2380:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"2391:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2376:3:25"},"nodeType":"YulFunctionCall","src":"2376:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2368:4:25"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2410:9:25"},{"name":"value0","nodeType":"YulIdentifier","src":"2421:6:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2403:6:25"},"nodeType":"YulFunctionCall","src":"2403:25:25"},"nodeType":"YulExpressionStatement","src":"2403:25:25"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2327:9:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2338:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2349:4:25","type":""}],"src":"2257:177:25"},{"body":{"nodeType":"YulBlock","src":"2562:135:25","statements":[{"nodeType":"YulAssignment","src":"2572:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2584:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"2595:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2580:3:25"},"nodeType":"YulFunctionCall","src":"2580:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2572:4:25"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2614:9:25"},{"name":"value0","nodeType":"YulIdentifier","src":"2625:6:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2607:6:25"},"nodeType":"YulFunctionCall","src":"2607:25:25"},"nodeType":"YulExpressionStatement","src":"2607:25:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2652:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"2663:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2648:3:25"},"nodeType":"YulFunctionCall","src":"2648:18:25"},{"arguments":[{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"2682:6:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2675:6:25"},"nodeType":"YulFunctionCall","src":"2675:14:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2668:6:25"},"nodeType":"YulFunctionCall","src":"2668:22:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2641:6:25"},"nodeType":"YulFunctionCall","src":"2641:50:25"},"nodeType":"YulExpressionStatement","src":"2641:50:25"}]},"name":"abi_encode_tuple_t_uint256_t_bool__to_t_uint256_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2523:9:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2534:6:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2542:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2553:4:25","type":""}],"src":"2439:258:25"},{"body":{"nodeType":"YulBlock","src":"2806:224:25","statements":[{"body":{"nodeType":"YulBlock","src":"2852:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2861:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2864:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2854:6:25"},"nodeType":"YulFunctionCall","src":"2854:12:25"},"nodeType":"YulExpressionStatement","src":"2854:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2827:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"2836:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2823:3:25"},"nodeType":"YulFunctionCall","src":"2823:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"2848:2:25","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2819:3:25"},"nodeType":"YulFunctionCall","src":"2819:32:25"},"nodeType":"YulIf","src":"2816:52:25"},{"nodeType":"YulAssignment","src":"2877:39:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2906:9:25"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2887:18:25"},"nodeType":"YulFunctionCall","src":"2887:29:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2877:6:25"}]},{"nodeType":"YulAssignment","src":"2925:48:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2958:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"2969:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2954:3:25"},"nodeType":"YulFunctionCall","src":"2954:18:25"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2935:18:25"},"nodeType":"YulFunctionCall","src":"2935:38:25"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2925:6:25"}]},{"nodeType":"YulAssignment","src":"2982:42:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3009:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"3020:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3005:3:25"},"nodeType":"YulFunctionCall","src":"3005:18:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2992:12:25"},"nodeType":"YulFunctionCall","src":"2992:32:25"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"2982:6:25"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2756:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2767:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2779:6:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2787:6:25","type":""},{"name":"value2","nodeType":"YulTypedName","src":"2795:6:25","type":""}],"src":"2702:328:25"},{"body":{"nodeType":"YulBlock","src":"3132:87:25","statements":[{"nodeType":"YulAssignment","src":"3142:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3154:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"3165:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3150:3:25"},"nodeType":"YulFunctionCall","src":"3150:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3142:4:25"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3184:9:25"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3199:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"3207:4:25","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3195:3:25"},"nodeType":"YulFunctionCall","src":"3195:17:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3177:6:25"},"nodeType":"YulFunctionCall","src":"3177:36:25"},"nodeType":"YulExpressionStatement","src":"3177:36:25"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3101:9:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3112:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3123:4:25","type":""}],"src":"3035:184:25"},{"body":{"nodeType":"YulBlock","src":"3325:76:25","statements":[{"nodeType":"YulAssignment","src":"3335:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3347:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"3358:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3343:3:25"},"nodeType":"YulFunctionCall","src":"3343:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3335:4:25"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3377:9:25"},{"name":"value0","nodeType":"YulIdentifier","src":"3388:6:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3370:6:25"},"nodeType":"YulFunctionCall","src":"3370:25:25"},"nodeType":"YulExpressionStatement","src":"3370:25:25"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3294:9:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3305:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3316:4:25","type":""}],"src":"3224:177:25"},{"body":{"nodeType":"YulBlock","src":"3476:110:25","statements":[{"body":{"nodeType":"YulBlock","src":"3522:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3531:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3534:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3524:6:25"},"nodeType":"YulFunctionCall","src":"3524:12:25"},"nodeType":"YulExpressionStatement","src":"3524:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3497:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"3506:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3493:3:25"},"nodeType":"YulFunctionCall","src":"3493:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"3518:2:25","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3489:3:25"},"nodeType":"YulFunctionCall","src":"3489:32:25"},"nodeType":"YulIf","src":"3486:52:25"},{"nodeType":"YulAssignment","src":"3547:33:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3570:9:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3557:12:25"},"nodeType":"YulFunctionCall","src":"3557:23:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3547:6:25"}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3442:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3453:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3465:6:25","type":""}],"src":"3406:180:25"},{"body":{"nodeType":"YulBlock","src":"3678:167:25","statements":[{"body":{"nodeType":"YulBlock","src":"3724:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3733:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3736:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3726:6:25"},"nodeType":"YulFunctionCall","src":"3726:12:25"},"nodeType":"YulExpressionStatement","src":"3726:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3699:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"3708:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3695:3:25"},"nodeType":"YulFunctionCall","src":"3695:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"3720:2:25","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3691:3:25"},"nodeType":"YulFunctionCall","src":"3691:32:25"},"nodeType":"YulIf","src":"3688:52:25"},{"nodeType":"YulAssignment","src":"3749:33:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3772:9:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3759:12:25"},"nodeType":"YulFunctionCall","src":"3759:23:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3749:6:25"}]},{"nodeType":"YulAssignment","src":"3791:48:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3824:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"3835:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3820:3:25"},"nodeType":"YulFunctionCall","src":"3820:18:25"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"3801:18:25"},"nodeType":"YulFunctionCall","src":"3801:38:25"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3791:6:25"}]}]},"name":"abi_decode_tuple_t_uint256t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3636:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3647:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3659:6:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3667:6:25","type":""}],"src":"3591:254:25"},{"body":{"nodeType":"YulBlock","src":"4057:266:25","statements":[{"nodeType":"YulAssignment","src":"4067:27:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4079:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"4090:3:25","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4075:3:25"},"nodeType":"YulFunctionCall","src":"4075:19:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4067:4:25"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4110:9:25"},{"name":"value0","nodeType":"YulIdentifier","src":"4121:6:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4103:6:25"},"nodeType":"YulFunctionCall","src":"4103:25:25"},"nodeType":"YulExpressionStatement","src":"4103:25:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4148:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"4159:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4144:3:25"},"nodeType":"YulFunctionCall","src":"4144:18:25"},{"name":"value1","nodeType":"YulIdentifier","src":"4164:6:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4137:6:25"},"nodeType":"YulFunctionCall","src":"4137:34:25"},"nodeType":"YulExpressionStatement","src":"4137:34:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4191:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"4202:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4187:3:25"},"nodeType":"YulFunctionCall","src":"4187:18:25"},{"name":"value2","nodeType":"YulIdentifier","src":"4207:6:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4180:6:25"},"nodeType":"YulFunctionCall","src":"4180:34:25"},"nodeType":"YulExpressionStatement","src":"4180:34:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4234:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"4245:2:25","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4230:3:25"},"nodeType":"YulFunctionCall","src":"4230:18:25"},{"name":"value3","nodeType":"YulIdentifier","src":"4250:6:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4223:6:25"},"nodeType":"YulFunctionCall","src":"4223:34:25"},"nodeType":"YulExpressionStatement","src":"4223:34:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4277:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"4288:3:25","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4273:3:25"},"nodeType":"YulFunctionCall","src":"4273:19:25"},{"arguments":[{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"4308:6:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4301:6:25"},"nodeType":"YulFunctionCall","src":"4301:14:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4294:6:25"},"nodeType":"YulFunctionCall","src":"4294:22:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4266:6:25"},"nodeType":"YulFunctionCall","src":"4266:51:25"},"nodeType":"YulExpressionStatement","src":"4266:51:25"}]},"name":"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__to_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3994:9:25","type":""},{"name":"value4","nodeType":"YulTypedName","src":"4005:6:25","type":""},{"name":"value3","nodeType":"YulTypedName","src":"4013:6:25","type":""},{"name":"value2","nodeType":"YulTypedName","src":"4021:6:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4029:6:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4037:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4048:4:25","type":""}],"src":"3850:473:25"},{"body":{"nodeType":"YulBlock","src":"4449:264:25","statements":[{"body":{"nodeType":"YulBlock","src":"4496:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4505:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4508:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4498:6:25"},"nodeType":"YulFunctionCall","src":"4498:12:25"},"nodeType":"YulExpressionStatement","src":"4498:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4470:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"4479:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4466:3:25"},"nodeType":"YulFunctionCall","src":"4466:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"4491:3:25","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4462:3:25"},"nodeType":"YulFunctionCall","src":"4462:33:25"},"nodeType":"YulIf","src":"4459:53:25"},{"nodeType":"YulAssignment","src":"4521:33:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4544:9:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4531:12:25"},"nodeType":"YulFunctionCall","src":"4531:23:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4521:6:25"}]},{"nodeType":"YulAssignment","src":"4563:42:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4590:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"4601:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4586:3:25"},"nodeType":"YulFunctionCall","src":"4586:18:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4573:12:25"},"nodeType":"YulFunctionCall","src":"4573:32:25"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4563:6:25"}]},{"nodeType":"YulAssignment","src":"4614:42:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4641:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"4652:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4637:3:25"},"nodeType":"YulFunctionCall","src":"4637:18:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4624:12:25"},"nodeType":"YulFunctionCall","src":"4624:32:25"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"4614:6:25"}]},{"nodeType":"YulAssignment","src":"4665:42:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4692:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"4703:2:25","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4688:3:25"},"nodeType":"YulFunctionCall","src":"4688:18:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4675:12:25"},"nodeType":"YulFunctionCall","src":"4675:32:25"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"4665:6:25"}]}]},"name":"abi_decode_tuple_t_uint256t_uint256t_uint256t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4391:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4402:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4414:6:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4422:6:25","type":""},{"name":"value2","nodeType":"YulTypedName","src":"4430:6:25","type":""},{"name":"value3","nodeType":"YulTypedName","src":"4438:6:25","type":""}],"src":"4328:385:25"},{"body":{"nodeType":"YulBlock","src":"5075:902:25","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5092:9:25"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5107:6:25"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5119:3:25","type":"","value":"248"},{"kind":"number","nodeType":"YulLiteral","src":"5124:3:25","type":"","value":"255"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5115:3:25"},"nodeType":"YulFunctionCall","src":"5115:13:25"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5103:3:25"},"nodeType":"YulFunctionCall","src":"5103:26:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5085:6:25"},"nodeType":"YulFunctionCall","src":"5085:45:25"},"nodeType":"YulExpressionStatement","src":"5085:45:25"},{"nodeType":"YulVariableDeclaration","src":"5139:12:25","value":{"kind":"number","nodeType":"YulLiteral","src":"5149:2:25","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"5143:2:25","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5171:9:25"},{"name":"_1","nodeType":"YulIdentifier","src":"5182:2:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5167:3:25"},"nodeType":"YulFunctionCall","src":"5167:18:25"},{"kind":"number","nodeType":"YulLiteral","src":"5187:3:25","type":"","value":"224"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5160:6:25"},"nodeType":"YulFunctionCall","src":"5160:31:25"},"nodeType":"YulExpressionStatement","src":"5160:31:25"},{"nodeType":"YulVariableDeclaration","src":"5200:60:25","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"5232:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5244:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"5255:3:25","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5240:3:25"},"nodeType":"YulFunctionCall","src":"5240:19:25"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"5214:17:25"},"nodeType":"YulFunctionCall","src":"5214:46:25"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"5204:6:25","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5280:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"5291:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5276:3:25"},"nodeType":"YulFunctionCall","src":"5276:18:25"},{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"5300:6:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"5308:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5296:3:25"},"nodeType":"YulFunctionCall","src":"5296:22:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5269:6:25"},"nodeType":"YulFunctionCall","src":"5269:50:25"},"nodeType":"YulExpressionStatement","src":"5269:50:25"},{"nodeType":"YulVariableDeclaration","src":"5328:47:25","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"5360:6:25"},{"name":"tail_1","nodeType":"YulIdentifier","src":"5368:6:25"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"5342:17:25"},"nodeType":"YulFunctionCall","src":"5342:33:25"},"variables":[{"name":"tail_2","nodeType":"YulTypedName","src":"5332:6:25","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5395:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"5406:2:25","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5391:3:25"},"nodeType":"YulFunctionCall","src":"5391:18:25"},{"name":"value3","nodeType":"YulIdentifier","src":"5411:6:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5384:6:25"},"nodeType":"YulFunctionCall","src":"5384:34:25"},"nodeType":"YulExpressionStatement","src":"5384:34:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5438:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"5449:3:25","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5434:3:25"},"nodeType":"YulFunctionCall","src":"5434:19:25"},{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"5459:6:25"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5475:3:25","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"5480:1:25","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5471:3:25"},"nodeType":"YulFunctionCall","src":"5471:11:25"},{"kind":"number","nodeType":"YulLiteral","src":"5484:1:25","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5467:3:25"},"nodeType":"YulFunctionCall","src":"5467:19:25"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5455:3:25"},"nodeType":"YulFunctionCall","src":"5455:32:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5427:6:25"},"nodeType":"YulFunctionCall","src":"5427:61:25"},"nodeType":"YulExpressionStatement","src":"5427:61:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5508:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"5519:3:25","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5504:3:25"},"nodeType":"YulFunctionCall","src":"5504:19:25"},{"name":"value5","nodeType":"YulIdentifier","src":"5525:6:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5497:6:25"},"nodeType":"YulFunctionCall","src":"5497:35:25"},"nodeType":"YulExpressionStatement","src":"5497:35:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5552:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"5563:3:25","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5548:3:25"},"nodeType":"YulFunctionCall","src":"5548:19:25"},{"arguments":[{"name":"tail_2","nodeType":"YulIdentifier","src":"5573:6:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"5581:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5569:3:25"},"nodeType":"YulFunctionCall","src":"5569:22:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5541:6:25"},"nodeType":"YulFunctionCall","src":"5541:51:25"},"nodeType":"YulExpressionStatement","src":"5541:51:25"},{"nodeType":"YulVariableDeclaration","src":"5601:17:25","value":{"name":"tail_2","nodeType":"YulIdentifier","src":"5612:6:25"},"variables":[{"name":"pos","nodeType":"YulTypedName","src":"5605:3:25","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5627:27:25","value":{"arguments":[{"name":"value6","nodeType":"YulIdentifier","src":"5647:6:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5641:5:25"},"nodeType":"YulFunctionCall","src":"5641:13:25"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"5631:6:25","type":""}]},{"expression":{"arguments":[{"name":"tail_2","nodeType":"YulIdentifier","src":"5670:6:25"},{"name":"length","nodeType":"YulIdentifier","src":"5678:6:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5663:6:25"},"nodeType":"YulFunctionCall","src":"5663:22:25"},"nodeType":"YulExpressionStatement","src":"5663:22:25"},{"nodeType":"YulAssignment","src":"5694:22:25","value":{"arguments":[{"name":"tail_2","nodeType":"YulIdentifier","src":"5705:6:25"},{"name":"_1","nodeType":"YulIdentifier","src":"5713:2:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5701:3:25"},"nodeType":"YulFunctionCall","src":"5701:15:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"5694:3:25"}]},{"nodeType":"YulVariableDeclaration","src":"5725:29:25","value":{"arguments":[{"name":"value6","nodeType":"YulIdentifier","src":"5743:6:25"},{"name":"_1","nodeType":"YulIdentifier","src":"5751:2:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5739:3:25"},"nodeType":"YulFunctionCall","src":"5739:15:25"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"5729:6:25","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5763:10:25","value":{"kind":"number","nodeType":"YulLiteral","src":"5772:1:25","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"5767:1:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"5831:120:25","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5852:3:25"},{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"5863:6:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5857:5:25"},"nodeType":"YulFunctionCall","src":"5857:13:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5845:6:25"},"nodeType":"YulFunctionCall","src":"5845:26:25"},"nodeType":"YulExpressionStatement","src":"5845:26:25"},{"nodeType":"YulAssignment","src":"5884:19:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5895:3:25"},{"name":"_1","nodeType":"YulIdentifier","src":"5900:2:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5891:3:25"},"nodeType":"YulFunctionCall","src":"5891:12:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"5884:3:25"}]},{"nodeType":"YulAssignment","src":"5916:25:25","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"5930:6:25"},{"name":"_1","nodeType":"YulIdentifier","src":"5938:2:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5926:3:25"},"nodeType":"YulFunctionCall","src":"5926:15:25"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"5916:6:25"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"5793:1:25"},{"name":"length","nodeType":"YulIdentifier","src":"5796:6:25"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5790:2:25"},"nodeType":"YulFunctionCall","src":"5790:13:25"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"5804:18:25","statements":[{"nodeType":"YulAssignment","src":"5806:14:25","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"5815:1:25"},{"kind":"number","nodeType":"YulLiteral","src":"5818:1:25","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5811:3:25"},"nodeType":"YulFunctionCall","src":"5811:9:25"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"5806:1:25"}]}]},"pre":{"nodeType":"YulBlock","src":"5786:3:25","statements":[]},"src":"5782:169:25"},{"nodeType":"YulAssignment","src":"5960:11:25","value":{"name":"pos","nodeType":"YulIdentifier","src":"5968:3:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5960:4:25"}]}]},"name":"abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4996:9:25","type":""},{"name":"value6","nodeType":"YulTypedName","src":"5007:6:25","type":""},{"name":"value5","nodeType":"YulTypedName","src":"5015:6:25","type":""},{"name":"value4","nodeType":"YulTypedName","src":"5023:6:25","type":""},{"name":"value3","nodeType":"YulTypedName","src":"5031:6:25","type":""},{"name":"value2","nodeType":"YulTypedName","src":"5039:6:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5047:6:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5055:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5066:4:25","type":""}],"src":"4718:1259:25"},{"body":{"nodeType":"YulBlock","src":"6083:102:25","statements":[{"nodeType":"YulAssignment","src":"6093:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6105:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"6116:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6101:3:25"},"nodeType":"YulFunctionCall","src":"6101:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6093:4:25"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6135:9:25"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6150:6:25"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6166:3:25","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"6171:1:25","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"6162:3:25"},"nodeType":"YulFunctionCall","src":"6162:11:25"},{"kind":"number","nodeType":"YulLiteral","src":"6175:1:25","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6158:3:25"},"nodeType":"YulFunctionCall","src":"6158:19:25"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6146:3:25"},"nodeType":"YulFunctionCall","src":"6146:32:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6128:6:25"},"nodeType":"YulFunctionCall","src":"6128:51:25"},"nodeType":"YulExpressionStatement","src":"6128:51:25"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6052:9:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6063:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6074:4:25","type":""}],"src":"5982:203:25"},{"body":{"nodeType":"YulBlock","src":"6369:248:25","statements":[{"nodeType":"YulAssignment","src":"6379:27:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6391:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"6402:3:25","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6387:3:25"},"nodeType":"YulFunctionCall","src":"6387:19:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6379:4:25"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6422:9:25"},{"name":"value0","nodeType":"YulIdentifier","src":"6433:6:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6415:6:25"},"nodeType":"YulFunctionCall","src":"6415:25:25"},"nodeType":"YulExpressionStatement","src":"6415:25:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6460:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"6471:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6456:3:25"},"nodeType":"YulFunctionCall","src":"6456:18:25"},{"name":"value1","nodeType":"YulIdentifier","src":"6476:6:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6449:6:25"},"nodeType":"YulFunctionCall","src":"6449:34:25"},"nodeType":"YulExpressionStatement","src":"6449:34:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6503:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"6514:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6499:3:25"},"nodeType":"YulFunctionCall","src":"6499:18:25"},{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"6523:6:25"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6539:3:25","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"6544:1:25","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"6535:3:25"},"nodeType":"YulFunctionCall","src":"6535:11:25"},{"kind":"number","nodeType":"YulLiteral","src":"6548:1:25","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6531:3:25"},"nodeType":"YulFunctionCall","src":"6531:19:25"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6519:3:25"},"nodeType":"YulFunctionCall","src":"6519:32:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6492:6:25"},"nodeType":"YulFunctionCall","src":"6492:60:25"},"nodeType":"YulExpressionStatement","src":"6492:60:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6572:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"6583:2:25","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6568:3:25"},"nodeType":"YulFunctionCall","src":"6568:18:25"},{"arguments":[{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"6602:6:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6595:6:25"},"nodeType":"YulFunctionCall","src":"6595:14:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6588:6:25"},"nodeType":"YulFunctionCall","src":"6588:22:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6561:6:25"},"nodeType":"YulFunctionCall","src":"6561:50:25"},"nodeType":"YulExpressionStatement","src":"6561:50:25"}]},"name":"abi_encode_tuple_t_uint256_t_uint256_t_address_t_bool__to_t_uint256_t_uint256_t_address_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6314:9:25","type":""},{"name":"value3","nodeType":"YulTypedName","src":"6325:6:25","type":""},{"name":"value2","nodeType":"YulTypedName","src":"6333:6:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6341:6:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6349:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6360:4:25","type":""}],"src":"6190:427:25"},{"body":{"nodeType":"YulBlock","src":"6792:523:25","statements":[{"body":{"nodeType":"YulBlock","src":"6839:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6848:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6851:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6841:6:25"},"nodeType":"YulFunctionCall","src":"6841:12:25"},"nodeType":"YulExpressionStatement","src":"6841:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6813:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"6822:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6809:3:25"},"nodeType":"YulFunctionCall","src":"6809:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"6834:3:25","type":"","value":"224"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6805:3:25"},"nodeType":"YulFunctionCall","src":"6805:33:25"},"nodeType":"YulIf","src":"6802:53:25"},{"nodeType":"YulAssignment","src":"6864:39:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6893:9:25"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"6874:18:25"},"nodeType":"YulFunctionCall","src":"6874:29:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6864:6:25"}]},{"nodeType":"YulAssignment","src":"6912:48:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6945:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"6956:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6941:3:25"},"nodeType":"YulFunctionCall","src":"6941:18:25"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"6922:18:25"},"nodeType":"YulFunctionCall","src":"6922:38:25"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"6912:6:25"}]},{"nodeType":"YulAssignment","src":"6969:42:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6996:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"7007:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6992:3:25"},"nodeType":"YulFunctionCall","src":"6992:18:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6979:12:25"},"nodeType":"YulFunctionCall","src":"6979:32:25"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"6969:6:25"}]},{"nodeType":"YulAssignment","src":"7020:42:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7047:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"7058:2:25","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7043:3:25"},"nodeType":"YulFunctionCall","src":"7043:18:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7030:12:25"},"nodeType":"YulFunctionCall","src":"7030:32:25"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"7020:6:25"}]},{"nodeType":"YulVariableDeclaration","src":"7071:46:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7101:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"7112:3:25","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7097:3:25"},"nodeType":"YulFunctionCall","src":"7097:19:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7084:12:25"},"nodeType":"YulFunctionCall","src":"7084:33:25"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"7075:5:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"7165:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7174:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7177:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7167:6:25"},"nodeType":"YulFunctionCall","src":"7167:12:25"},"nodeType":"YulExpressionStatement","src":"7167:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7139:5:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7150:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"7157:4:25","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7146:3:25"},"nodeType":"YulFunctionCall","src":"7146:16:25"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"7136:2:25"},"nodeType":"YulFunctionCall","src":"7136:27:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7129:6:25"},"nodeType":"YulFunctionCall","src":"7129:35:25"},"nodeType":"YulIf","src":"7126:55:25"},{"nodeType":"YulAssignment","src":"7190:15:25","value":{"name":"value","nodeType":"YulIdentifier","src":"7200:5:25"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"7190:6:25"}]},{"nodeType":"YulAssignment","src":"7214:43:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7241:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"7252:3:25","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7237:3:25"},"nodeType":"YulFunctionCall","src":"7237:19:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7224:12:25"},"nodeType":"YulFunctionCall","src":"7224:33:25"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"7214:6:25"}]},{"nodeType":"YulAssignment","src":"7266:43:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7293:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"7304:3:25","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7289:3:25"},"nodeType":"YulFunctionCall","src":"7289:19:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7276:12:25"},"nodeType":"YulFunctionCall","src":"7276:33:25"},"variableNames":[{"name":"value6","nodeType":"YulIdentifier","src":"7266:6:25"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6710:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6721:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6733:6:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6741:6:25","type":""},{"name":"value2","nodeType":"YulTypedName","src":"6749:6:25","type":""},{"name":"value3","nodeType":"YulTypedName","src":"6757:6:25","type":""},{"name":"value4","nodeType":"YulTypedName","src":"6765:6:25","type":""},{"name":"value5","nodeType":"YulTypedName","src":"6773:6:25","type":""},{"name":"value6","nodeType":"YulTypedName","src":"6781:6:25","type":""}],"src":"6622:693:25"},{"body":{"nodeType":"YulBlock","src":"7407:173:25","statements":[{"body":{"nodeType":"YulBlock","src":"7453:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7462:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7465:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7455:6:25"},"nodeType":"YulFunctionCall","src":"7455:12:25"},"nodeType":"YulExpressionStatement","src":"7455:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7428:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"7437:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7424:3:25"},"nodeType":"YulFunctionCall","src":"7424:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"7449:2:25","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7420:3:25"},"nodeType":"YulFunctionCall","src":"7420:32:25"},"nodeType":"YulIf","src":"7417:52:25"},{"nodeType":"YulAssignment","src":"7478:39:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7507:9:25"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"7488:18:25"},"nodeType":"YulFunctionCall","src":"7488:29:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7478:6:25"}]},{"nodeType":"YulAssignment","src":"7526:48:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7559:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"7570:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7555:3:25"},"nodeType":"YulFunctionCall","src":"7555:18:25"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"7536:18:25"},"nodeType":"YulFunctionCall","src":"7536:38:25"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"7526:6:25"}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7365:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7376:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7388:6:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7396:6:25","type":""}],"src":"7320:260:25"},{"body":{"nodeType":"YulBlock","src":"7640:325:25","statements":[{"nodeType":"YulAssignment","src":"7650:22:25","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7664:1:25","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"7667:4:25"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"7660:3:25"},"nodeType":"YulFunctionCall","src":"7660:12:25"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"7650:6:25"}]},{"nodeType":"YulVariableDeclaration","src":"7681:38:25","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"7711:4:25"},{"kind":"number","nodeType":"YulLiteral","src":"7717:1:25","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7707:3:25"},"nodeType":"YulFunctionCall","src":"7707:12:25"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"7685:18:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"7758:31:25","statements":[{"nodeType":"YulAssignment","src":"7760:27:25","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7774:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"7782:4:25","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7770:3:25"},"nodeType":"YulFunctionCall","src":"7770:17:25"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"7760:6:25"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"7738:18:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7731:6:25"},"nodeType":"YulFunctionCall","src":"7731:26:25"},"nodeType":"YulIf","src":"7728:61:25"},{"body":{"nodeType":"YulBlock","src":"7848:111:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7869:1:25","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7876:3:25","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"7881:10:25","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"7872:3:25"},"nodeType":"YulFunctionCall","src":"7872:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7862:6:25"},"nodeType":"YulFunctionCall","src":"7862:31:25"},"nodeType":"YulExpressionStatement","src":"7862:31:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7913:1:25","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"7916:4:25","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7906:6:25"},"nodeType":"YulFunctionCall","src":"7906:15:25"},"nodeType":"YulExpressionStatement","src":"7906:15:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7941:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7944:4:25","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7934:6:25"},"nodeType":"YulFunctionCall","src":"7934:15:25"},"nodeType":"YulExpressionStatement","src":"7934:15:25"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"7804:18:25"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7827:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"7835:2:25","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7824:2:25"},"nodeType":"YulFunctionCall","src":"7824:14:25"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"7801:2:25"},"nodeType":"YulFunctionCall","src":"7801:38:25"},"nodeType":"YulIf","src":"7798:161:25"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"7620:4:25","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"7629:6:25","type":""}],"src":"7585:380:25"},{"body":{"nodeType":"YulBlock","src":"8144:162:25","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8161:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"8172:2:25","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8154:6:25"},"nodeType":"YulFunctionCall","src":"8154:21:25"},"nodeType":"YulExpressionStatement","src":"8154:21:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8195:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"8206:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8191:3:25"},"nodeType":"YulFunctionCall","src":"8191:18:25"},{"kind":"number","nodeType":"YulLiteral","src":"8211:2:25","type":"","value":"12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8184:6:25"},"nodeType":"YulFunctionCall","src":"8184:30:25"},"nodeType":"YulExpressionStatement","src":"8184:30:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8234:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"8245:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8230:3:25"},"nodeType":"YulFunctionCall","src":"8230:18:25"},{"hexValue":"46656520746f6f2068696768","kind":"string","nodeType":"YulLiteral","src":"8250:14:25","type":"","value":"Fee too high"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8223:6:25"},"nodeType":"YulFunctionCall","src":"8223:42:25"},"nodeType":"YulExpressionStatement","src":"8223:42:25"},{"nodeType":"YulAssignment","src":"8274:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8286:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"8297:2:25","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8282:3:25"},"nodeType":"YulFunctionCall","src":"8282:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8274:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_48d9dea795d8d010580a5b191d0fe7c1ee70cd850707a0d7e7aba7c702de6be1__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8121:9:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8135:4:25","type":""}],"src":"7970:336:25"},{"body":{"nodeType":"YulBlock","src":"8485:166:25","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8502:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"8513:2:25","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8495:6:25"},"nodeType":"YulFunctionCall","src":"8495:21:25"},"nodeType":"YulExpressionStatement","src":"8495:21:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8536:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"8547:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8532:3:25"},"nodeType":"YulFunctionCall","src":"8532:18:25"},{"kind":"number","nodeType":"YulLiteral","src":"8552:2:25","type":"","value":"16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8525:6:25"},"nodeType":"YulFunctionCall","src":"8525:30:25"},"nodeType":"YulExpressionStatement","src":"8525:30:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8575:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"8586:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8571:3:25"},"nodeType":"YulFunctionCall","src":"8571:18:25"},{"hexValue":"416c7265616479206578636c75646564","kind":"string","nodeType":"YulLiteral","src":"8591:18:25","type":"","value":"Already excluded"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8564:6:25"},"nodeType":"YulFunctionCall","src":"8564:46:25"},"nodeType":"YulExpressionStatement","src":"8564:46:25"},{"nodeType":"YulAssignment","src":"8619:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8631:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"8642:2:25","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8627:3:25"},"nodeType":"YulFunctionCall","src":"8627:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8619:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_66396a07fa8344d81b812cfe3bea3e63cf5a5f15b46663d05f60f8e8a2326e51__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8462:9:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8476:4:25","type":""}],"src":"8311:340:25"},{"body":{"nodeType":"YulBlock","src":"8688:95:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8705:1:25","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8712:3:25","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"8717:10:25","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"8708:3:25"},"nodeType":"YulFunctionCall","src":"8708:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8698:6:25"},"nodeType":"YulFunctionCall","src":"8698:31:25"},"nodeType":"YulExpressionStatement","src":"8698:31:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8745:1:25","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"8748:4:25","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8738:6:25"},"nodeType":"YulFunctionCall","src":"8738:15:25"},"nodeType":"YulExpressionStatement","src":"8738:15:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8769:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8772:4:25","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8762:6:25"},"nodeType":"YulFunctionCall","src":"8762:15:25"},"nodeType":"YulExpressionStatement","src":"8762:15:25"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"8656:127:25"},{"body":{"nodeType":"YulBlock","src":"8836:77:25","statements":[{"nodeType":"YulAssignment","src":"8846:16:25","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"8857:1:25"},{"name":"y","nodeType":"YulIdentifier","src":"8860:1:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8853:3:25"},"nodeType":"YulFunctionCall","src":"8853:9:25"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"8846:3:25"}]},{"body":{"nodeType":"YulBlock","src":"8885:22:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"8887:16:25"},"nodeType":"YulFunctionCall","src":"8887:18:25"},"nodeType":"YulExpressionStatement","src":"8887:18:25"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"8877:1:25"},{"name":"sum","nodeType":"YulIdentifier","src":"8880:3:25"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8874:2:25"},"nodeType":"YulFunctionCall","src":"8874:10:25"},"nodeType":"YulIf","src":"8871:36:25"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"8819:1:25","type":""},{"name":"y","nodeType":"YulTypedName","src":"8822:1:25","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"8828:3:25","type":""}],"src":"8788:125:25"},{"body":{"nodeType":"YulBlock","src":"9103:206:25","statements":[{"nodeType":"YulAssignment","src":"9113:27:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9125:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"9136:3:25","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9121:3:25"},"nodeType":"YulFunctionCall","src":"9121:19:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9113:4:25"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9156:9:25"},{"name":"value0","nodeType":"YulIdentifier","src":"9167:6:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9149:6:25"},"nodeType":"YulFunctionCall","src":"9149:25:25"},"nodeType":"YulExpressionStatement","src":"9149:25:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9194:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"9205:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9190:3:25"},"nodeType":"YulFunctionCall","src":"9190:18:25"},{"name":"value1","nodeType":"YulIdentifier","src":"9210:6:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9183:6:25"},"nodeType":"YulFunctionCall","src":"9183:34:25"},"nodeType":"YulExpressionStatement","src":"9183:34:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9237:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"9248:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9233:3:25"},"nodeType":"YulFunctionCall","src":"9233:18:25"},{"name":"value2","nodeType":"YulIdentifier","src":"9253:6:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9226:6:25"},"nodeType":"YulFunctionCall","src":"9226:34:25"},"nodeType":"YulExpressionStatement","src":"9226:34:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9280:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"9291:2:25","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9276:3:25"},"nodeType":"YulFunctionCall","src":"9276:18:25"},{"name":"value3","nodeType":"YulIdentifier","src":"9296:6:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9269:6:25"},"nodeType":"YulFunctionCall","src":"9269:34:25"},"nodeType":"YulExpressionStatement","src":"9269:34:25"}]},"name":"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9048:9:25","type":""},{"name":"value3","nodeType":"YulTypedName","src":"9059:6:25","type":""},{"name":"value2","nodeType":"YulTypedName","src":"9067:6:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9075:6:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9083:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9094:4:25","type":""}],"src":"8918:391:25"},{"body":{"nodeType":"YulBlock","src":"9346:95:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9363:1:25","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9370:3:25","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"9375:10:25","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"9366:3:25"},"nodeType":"YulFunctionCall","src":"9366:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9356:6:25"},"nodeType":"YulFunctionCall","src":"9356:31:25"},"nodeType":"YulExpressionStatement","src":"9356:31:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9403:1:25","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"9406:4:25","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9396:6:25"},"nodeType":"YulFunctionCall","src":"9396:15:25"},"nodeType":"YulExpressionStatement","src":"9396:15:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9427:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9430:4:25","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9420:6:25"},"nodeType":"YulFunctionCall","src":"9420:15:25"},"nodeType":"YulExpressionStatement","src":"9420:15:25"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"9314:127:25"},{"body":{"nodeType":"YulBlock","src":"9620:173:25","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9637:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"9648:2:25","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9630:6:25"},"nodeType":"YulFunctionCall","src":"9630:21:25"},"nodeType":"YulExpressionStatement","src":"9630:21:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9671:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"9682:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9667:3:25"},"nodeType":"YulFunctionCall","src":"9667:18:25"},{"kind":"number","nodeType":"YulLiteral","src":"9687:2:25","type":"","value":"23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9660:6:25"},"nodeType":"YulFunctionCall","src":"9660:30:25"},"nodeType":"YulExpressionStatement","src":"9660:30:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9710:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"9721:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9706:3:25"},"nodeType":"YulFunctionCall","src":"9706:18:25"},{"hexValue":"54726164696e6720616c726561647920656e61626c6564","kind":"string","nodeType":"YulLiteral","src":"9726:25:25","type":"","value":"Trading already enabled"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9699:6:25"},"nodeType":"YulFunctionCall","src":"9699:53:25"},"nodeType":"YulExpressionStatement","src":"9699:53:25"},{"nodeType":"YulAssignment","src":"9761:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9773:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"9784:2:25","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9769:3:25"},"nodeType":"YulFunctionCall","src":"9769:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9761:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_a4d1beca50ea03ae2d0bef8bddea7067036a984881c1fb687d10a1e111335fc0__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9597:9:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9611:4:25","type":""}],"src":"9446:347:25"},{"body":{"nodeType":"YulBlock","src":"9972:176:25","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9989:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"10000:2:25","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9982:6:25"},"nodeType":"YulFunctionCall","src":"9982:21:25"},"nodeType":"YulExpressionStatement","src":"9982:21:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10023:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"10034:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10019:3:25"},"nodeType":"YulFunctionCall","src":"10019:18:25"},{"kind":"number","nodeType":"YulLiteral","src":"10039:2:25","type":"","value":"26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10012:6:25"},"nodeType":"YulFunctionCall","src":"10012:30:25"},"nodeType":"YulExpressionStatement","src":"10012:30:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10062:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"10073:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10058:3:25"},"nodeType":"YulFunctionCall","src":"10058:18:25"},{"hexValue":"43616e6e6f74207769746864726177206f776e20746f6b656e73","kind":"string","nodeType":"YulLiteral","src":"10078:28:25","type":"","value":"Cannot withdraw own tokens"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10051:6:25"},"nodeType":"YulFunctionCall","src":"10051:56:25"},"nodeType":"YulExpressionStatement","src":"10051:56:25"},{"nodeType":"YulAssignment","src":"10116:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10128:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"10139:2:25","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10124:3:25"},"nodeType":"YulFunctionCall","src":"10124:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10116:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_2a4b2ba36f9e275da9750f638b0402650ffc49f42156267cd88bbccc14d1c188__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9949:9:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9963:4:25","type":""}],"src":"9798:350:25"},{"body":{"nodeType":"YulBlock","src":"10234:103:25","statements":[{"body":{"nodeType":"YulBlock","src":"10280:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10289:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10292:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10282:6:25"},"nodeType":"YulFunctionCall","src":"10282:12:25"},"nodeType":"YulExpressionStatement","src":"10282:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"10255:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"10264:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10251:3:25"},"nodeType":"YulFunctionCall","src":"10251:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"10276:2:25","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"10247:3:25"},"nodeType":"YulFunctionCall","src":"10247:32:25"},"nodeType":"YulIf","src":"10244:52:25"},{"nodeType":"YulAssignment","src":"10305:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10321:9:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10315:5:25"},"nodeType":"YulFunctionCall","src":"10315:16:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"10305:6:25"}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10200:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"10211:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"10223:6:25","type":""}],"src":"10153:184:25"},{"body":{"nodeType":"YulBlock","src":"10516:171:25","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10533:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"10544:2:25","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10526:6:25"},"nodeType":"YulFunctionCall","src":"10526:21:25"},"nodeType":"YulExpressionStatement","src":"10526:21:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10567:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"10578:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10563:3:25"},"nodeType":"YulFunctionCall","src":"10563:18:25"},{"kind":"number","nodeType":"YulLiteral","src":"10583:2:25","type":"","value":"21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10556:6:25"},"nodeType":"YulFunctionCall","src":"10556:30:25"},"nodeType":"YulExpressionStatement","src":"10556:30:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10606:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"10617:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10602:3:25"},"nodeType":"YulFunctionCall","src":"10602:18:25"},{"hexValue":"4e6f20746f6b656e7320746f207769746864726177","kind":"string","nodeType":"YulLiteral","src":"10622:23:25","type":"","value":"No tokens to withdraw"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10595:6:25"},"nodeType":"YulFunctionCall","src":"10595:51:25"},"nodeType":"YulExpressionStatement","src":"10595:51:25"},{"nodeType":"YulAssignment","src":"10655:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10667:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"10678:2:25","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10663:3:25"},"nodeType":"YulFunctionCall","src":"10663:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10655:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_7cc6b3e105e5333edddf04583e651cc3d3f46302c4d3edb1ca282ad53029b8db__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10493:9:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10507:4:25","type":""}],"src":"10342:345:25"},{"body":{"nodeType":"YulBlock","src":"10821:145:25","statements":[{"nodeType":"YulAssignment","src":"10831:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10843:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"10854:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10839:3:25"},"nodeType":"YulFunctionCall","src":"10839:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10831:4:25"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10873:9:25"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10888:6:25"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10904:3:25","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"10909:1:25","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"10900:3:25"},"nodeType":"YulFunctionCall","src":"10900:11:25"},{"kind":"number","nodeType":"YulLiteral","src":"10913:1:25","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10896:3:25"},"nodeType":"YulFunctionCall","src":"10896:19:25"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10884:3:25"},"nodeType":"YulFunctionCall","src":"10884:32:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10866:6:25"},"nodeType":"YulFunctionCall","src":"10866:51:25"},"nodeType":"YulExpressionStatement","src":"10866:51:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10937:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"10948:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10933:3:25"},"nodeType":"YulFunctionCall","src":"10933:18:25"},{"name":"value1","nodeType":"YulIdentifier","src":"10953:6:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10926:6:25"},"nodeType":"YulFunctionCall","src":"10926:34:25"},"nodeType":"YulExpressionStatement","src":"10926:34:25"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10782:9:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10793:6:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10801:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10812:4:25","type":""}],"src":"10692:274:25"},{"body":{"nodeType":"YulBlock","src":"11049:167:25","statements":[{"body":{"nodeType":"YulBlock","src":"11095:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11104:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11107:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11097:6:25"},"nodeType":"YulFunctionCall","src":"11097:12:25"},"nodeType":"YulExpressionStatement","src":"11097:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"11070:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"11079:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11066:3:25"},"nodeType":"YulFunctionCall","src":"11066:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"11091:2:25","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"11062:3:25"},"nodeType":"YulFunctionCall","src":"11062:32:25"},"nodeType":"YulIf","src":"11059:52:25"},{"nodeType":"YulVariableDeclaration","src":"11120:29:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11139:9:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11133:5:25"},"nodeType":"YulFunctionCall","src":"11133:16:25"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"11124:5:25","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11180:5:25"}],"functionName":{"name":"validator_revert_bool","nodeType":"YulIdentifier","src":"11158:21:25"},"nodeType":"YulFunctionCall","src":"11158:28:25"},"nodeType":"YulExpressionStatement","src":"11158:28:25"},{"nodeType":"YulAssignment","src":"11195:15:25","value":{"name":"value","nodeType":"YulIdentifier","src":"11205:5:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"11195:6:25"}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11015:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"11026:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"11038:6:25","type":""}],"src":"10971:245:25"},{"body":{"nodeType":"YulBlock","src":"11462:350:25","statements":[{"nodeType":"YulAssignment","src":"11472:27:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11484:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"11495:3:25","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11480:3:25"},"nodeType":"YulFunctionCall","src":"11480:19:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11472:4:25"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11515:9:25"},{"name":"value0","nodeType":"YulIdentifier","src":"11526:6:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11508:6:25"},"nodeType":"YulFunctionCall","src":"11508:25:25"},"nodeType":"YulExpressionStatement","src":"11508:25:25"},{"nodeType":"YulVariableDeclaration","src":"11542:29:25","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11560:3:25","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"11565:1:25","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"11556:3:25"},"nodeType":"YulFunctionCall","src":"11556:11:25"},{"kind":"number","nodeType":"YulLiteral","src":"11569:1:25","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11552:3:25"},"nodeType":"YulFunctionCall","src":"11552:19:25"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"11546:2:25","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11591:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"11602:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11587:3:25"},"nodeType":"YulFunctionCall","src":"11587:18:25"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"11611:6:25"},{"name":"_1","nodeType":"YulIdentifier","src":"11619:2:25"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11607:3:25"},"nodeType":"YulFunctionCall","src":"11607:15:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11580:6:25"},"nodeType":"YulFunctionCall","src":"11580:43:25"},"nodeType":"YulExpressionStatement","src":"11580:43:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11643:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"11654:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11639:3:25"},"nodeType":"YulFunctionCall","src":"11639:18:25"},{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"11663:6:25"},{"name":"_1","nodeType":"YulIdentifier","src":"11671:2:25"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11659:3:25"},"nodeType":"YulFunctionCall","src":"11659:15:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11632:6:25"},"nodeType":"YulFunctionCall","src":"11632:43:25"},"nodeType":"YulExpressionStatement","src":"11632:43:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11695:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"11706:2:25","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11691:3:25"},"nodeType":"YulFunctionCall","src":"11691:18:25"},{"name":"value3","nodeType":"YulIdentifier","src":"11711:6:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11684:6:25"},"nodeType":"YulFunctionCall","src":"11684:34:25"},"nodeType":"YulExpressionStatement","src":"11684:34:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11738:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"11749:3:25","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11734:3:25"},"nodeType":"YulFunctionCall","src":"11734:19:25"},{"name":"value4","nodeType":"YulIdentifier","src":"11755:6:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11727:6:25"},"nodeType":"YulFunctionCall","src":"11727:35:25"},"nodeType":"YulExpressionStatement","src":"11727:35:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11782:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"11793:3:25","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11778:3:25"},"nodeType":"YulFunctionCall","src":"11778:19:25"},{"name":"value5","nodeType":"YulIdentifier","src":"11799:6:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11771:6:25"},"nodeType":"YulFunctionCall","src":"11771:35:25"},"nodeType":"YulExpressionStatement","src":"11771:35:25"}]},"name":"abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11391:9:25","type":""},{"name":"value5","nodeType":"YulTypedName","src":"11402:6:25","type":""},{"name":"value4","nodeType":"YulTypedName","src":"11410:6:25","type":""},{"name":"value3","nodeType":"YulTypedName","src":"11418:6:25","type":""},{"name":"value2","nodeType":"YulTypedName","src":"11426:6:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11434:6:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11442:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11453:4:25","type":""}],"src":"11221:591:25"},{"body":{"nodeType":"YulBlock","src":"11946:175:25","statements":[{"nodeType":"YulAssignment","src":"11956:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11968:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"11979:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11964:3:25"},"nodeType":"YulFunctionCall","src":"11964:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11956:4:25"}]},{"nodeType":"YulVariableDeclaration","src":"11991:29:25","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12009:3:25","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"12014:1:25","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"12005:3:25"},"nodeType":"YulFunctionCall","src":"12005:11:25"},{"kind":"number","nodeType":"YulLiteral","src":"12018:1:25","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12001:3:25"},"nodeType":"YulFunctionCall","src":"12001:19:25"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"11995:2:25","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12036:9:25"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12051:6:25"},{"name":"_1","nodeType":"YulIdentifier","src":"12059:2:25"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"12047:3:25"},"nodeType":"YulFunctionCall","src":"12047:15:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12029:6:25"},"nodeType":"YulFunctionCall","src":"12029:34:25"},"nodeType":"YulExpressionStatement","src":"12029:34:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12083:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"12094:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12079:3:25"},"nodeType":"YulFunctionCall","src":"12079:18:25"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"12103:6:25"},{"name":"_1","nodeType":"YulIdentifier","src":"12111:2:25"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"12099:3:25"},"nodeType":"YulFunctionCall","src":"12099:15:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12072:6:25"},"nodeType":"YulFunctionCall","src":"12072:43:25"},"nodeType":"YulExpressionStatement","src":"12072:43:25"}]},"name":"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11907:9:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11918:6:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11926:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11937:4:25","type":""}],"src":"11817:304:25"},{"body":{"nodeType":"YulBlock","src":"12300:168:25","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12317:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"12328:2:25","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12310:6:25"},"nodeType":"YulFunctionCall","src":"12310:21:25"},"nodeType":"YulExpressionStatement","src":"12310:21:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12351:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"12362:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12347:3:25"},"nodeType":"YulFunctionCall","src":"12347:18:25"},{"kind":"number","nodeType":"YulLiteral","src":"12367:2:25","type":"","value":"18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12340:6:25"},"nodeType":"YulFunctionCall","src":"12340:30:25"},"nodeType":"YulExpressionStatement","src":"12340:30:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12390:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"12401:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12386:3:25"},"nodeType":"YulFunctionCall","src":"12386:18:25"},{"hexValue":"4e6f2045544820746f207769746864726177","kind":"string","nodeType":"YulLiteral","src":"12406:20:25","type":"","value":"No ETH to withdraw"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12379:6:25"},"nodeType":"YulFunctionCall","src":"12379:48:25"},"nodeType":"YulExpressionStatement","src":"12379:48:25"},{"nodeType":"YulAssignment","src":"12436:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12448:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"12459:2:25","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12444:3:25"},"nodeType":"YulFunctionCall","src":"12444:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12436:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_9df16c5c3e9f487854502591282f9dbd29044f6d3f3bf4c9daa5d3460486dd95__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12277:9:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12291:4:25","type":""}],"src":"12126:342:25"},{"body":{"nodeType":"YulBlock","src":"12630:188:25","statements":[{"nodeType":"YulAssignment","src":"12640:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12652:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"12663:2:25","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12648:3:25"},"nodeType":"YulFunctionCall","src":"12648:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12640:4:25"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12682:9:25"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12697:6:25"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12713:3:25","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"12718:1:25","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"12709:3:25"},"nodeType":"YulFunctionCall","src":"12709:11:25"},{"kind":"number","nodeType":"YulLiteral","src":"12722:1:25","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12705:3:25"},"nodeType":"YulFunctionCall","src":"12705:19:25"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"12693:3:25"},"nodeType":"YulFunctionCall","src":"12693:32:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12675:6:25"},"nodeType":"YulFunctionCall","src":"12675:51:25"},"nodeType":"YulExpressionStatement","src":"12675:51:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12746:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"12757:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12742:3:25"},"nodeType":"YulFunctionCall","src":"12742:18:25"},{"name":"value1","nodeType":"YulIdentifier","src":"12762:6:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12735:6:25"},"nodeType":"YulFunctionCall","src":"12735:34:25"},"nodeType":"YulExpressionStatement","src":"12735:34:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12789:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"12800:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12785:3:25"},"nodeType":"YulFunctionCall","src":"12785:18:25"},{"name":"value2","nodeType":"YulIdentifier","src":"12805:6:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12778:6:25"},"nodeType":"YulFunctionCall","src":"12778:34:25"},"nodeType":"YulExpressionStatement","src":"12778:34:25"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12583:9:25","type":""},{"name":"value2","nodeType":"YulTypedName","src":"12594:6:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"12602:6:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"12610:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12621:4:25","type":""}],"src":"12473:345:25"},{"body":{"nodeType":"YulBlock","src":"12997:169:25","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13014:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"13025:2:25","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13007:6:25"},"nodeType":"YulFunctionCall","src":"13007:21:25"},"nodeType":"YulExpressionStatement","src":"13007:21:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13048:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"13059:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13044:3:25"},"nodeType":"YulFunctionCall","src":"13044:18:25"},{"kind":"number","nodeType":"YulLiteral","src":"13064:2:25","type":"","value":"19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13037:6:25"},"nodeType":"YulFunctionCall","src":"13037:30:25"},"nodeType":"YulExpressionStatement","src":"13037:30:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13087:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"13098:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13083:3:25"},"nodeType":"YulFunctionCall","src":"13083:18:25"},{"hexValue":"54726164696e67206e6f7420656e61626c6564","kind":"string","nodeType":"YulLiteral","src":"13103:21:25","type":"","value":"Trading not enabled"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13076:6:25"},"nodeType":"YulFunctionCall","src":"13076:49:25"},"nodeType":"YulExpressionStatement","src":"13076:49:25"},{"nodeType":"YulAssignment","src":"13134:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13146:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"13157:2:25","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13142:3:25"},"nodeType":"YulFunctionCall","src":"13142:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13134:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_aba53b7bc56fd10d1bb2cac393e26b489ca53cf0c676cd3f5a7c5c185bf6cd4c__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12974:9:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12988:4:25","type":""}],"src":"12823:343:25"},{"body":{"nodeType":"YulBlock","src":"13345:161:25","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13362:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"13373:2:25","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13355:6:25"},"nodeType":"YulFunctionCall","src":"13355:21:25"},"nodeType":"YulExpressionStatement","src":"13355:21:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13396:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"13407:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13392:3:25"},"nodeType":"YulFunctionCall","src":"13392:18:25"},{"kind":"number","nodeType":"YulLiteral","src":"13412:2:25","type":"","value":"11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13385:6:25"},"nodeType":"YulFunctionCall","src":"13385:30:25"},"nodeType":"YulExpressionStatement","src":"13385:30:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13435:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"13446:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13431:3:25"},"nodeType":"YulFunctionCall","src":"13431:18:25"},{"hexValue":"426c61636b6c6973746564","kind":"string","nodeType":"YulLiteral","src":"13451:13:25","type":"","value":"Blacklisted"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13424:6:25"},"nodeType":"YulFunctionCall","src":"13424:41:25"},"nodeType":"YulExpressionStatement","src":"13424:41:25"},{"nodeType":"YulAssignment","src":"13474:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13486:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"13497:2:25","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13482:3:25"},"nodeType":"YulFunctionCall","src":"13482:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13474:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_fef92ec79bbd568fc63edc095cddaebd47e166ea7932b60d9a91e79658733400__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13322:9:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13336:4:25","type":""}],"src":"13171:335:25"},{"body":{"nodeType":"YulBlock","src":"13685:171:25","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13702:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"13713:2:25","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13695:6:25"},"nodeType":"YulFunctionCall","src":"13695:21:25"},"nodeType":"YulExpressionStatement","src":"13695:21:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13736:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"13747:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13732:3:25"},"nodeType":"YulFunctionCall","src":"13732:18:25"},{"kind":"number","nodeType":"YulLiteral","src":"13752:2:25","type":"","value":"21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13725:6:25"},"nodeType":"YulFunctionCall","src":"13725:30:25"},"nodeType":"YulExpressionStatement","src":"13725:30:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13775:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"13786:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13771:3:25"},"nodeType":"YulFunctionCall","src":"13771:18:25"},{"hexValue":"416e74692d736e6970652070726f74656374696f6e","kind":"string","nodeType":"YulLiteral","src":"13791:23:25","type":"","value":"Anti-snipe protection"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13764:6:25"},"nodeType":"YulFunctionCall","src":"13764:51:25"},"nodeType":"YulExpressionStatement","src":"13764:51:25"},{"nodeType":"YulAssignment","src":"13824:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13836:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"13847:2:25","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13832:3:25"},"nodeType":"YulFunctionCall","src":"13832:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13824:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_a1e994c71b3513731e9effa0bd81687a4234b5038b9b1fc3f0ec6961d00b02a4__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13662:9:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13676:4:25","type":""}],"src":"13511:345:25"},{"body":{"nodeType":"YulBlock","src":"14035:172:25","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14052:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"14063:2:25","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14045:6:25"},"nodeType":"YulFunctionCall","src":"14045:21:25"},"nodeType":"YulExpressionStatement","src":"14045:21:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14086:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"14097:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14082:3:25"},"nodeType":"YulFunctionCall","src":"14082:18:25"},{"kind":"number","nodeType":"YulLiteral","src":"14102:2:25","type":"","value":"22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14075:6:25"},"nodeType":"YulFunctionCall","src":"14075:30:25"},"nodeType":"YulExpressionStatement","src":"14075:30:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14125:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"14136:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14121:3:25"},"nodeType":"YulFunctionCall","src":"14121:18:25"},{"hexValue":"45786365656473206d61782062757920706572207478","kind":"string","nodeType":"YulLiteral","src":"14141:24:25","type":"","value":"Exceeds max buy per tx"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14114:6:25"},"nodeType":"YulFunctionCall","src":"14114:52:25"},"nodeType":"YulExpressionStatement","src":"14114:52:25"},{"nodeType":"YulAssignment","src":"14175:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14187:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"14198:2:25","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14183:3:25"},"nodeType":"YulFunctionCall","src":"14183:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14175:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_8a47083662e5118b10740f0e82a54826b69dcdcba204cbbbb9689112c03a2b53__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14012:9:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14026:4:25","type":""}],"src":"13861:346:25"},{"body":{"nodeType":"YulBlock","src":"14386:176:25","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14403:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"14414:2:25","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14396:6:25"},"nodeType":"YulFunctionCall","src":"14396:21:25"},"nodeType":"YulExpressionStatement","src":"14396:21:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14437:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"14448:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14433:3:25"},"nodeType":"YulFunctionCall","src":"14433:18:25"},{"kind":"number","nodeType":"YulLiteral","src":"14453:2:25","type":"","value":"26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14426:6:25"},"nodeType":"YulFunctionCall","src":"14426:30:25"},"nodeType":"YulExpressionStatement","src":"14426:30:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14476:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"14487:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14472:3:25"},"nodeType":"YulFunctionCall","src":"14472:18:25"},{"hexValue":"45786365656473206d617820627579207065722077616c6c6574","kind":"string","nodeType":"YulLiteral","src":"14492:28:25","type":"","value":"Exceeds max buy per wallet"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14465:6:25"},"nodeType":"YulFunctionCall","src":"14465:56:25"},"nodeType":"YulExpressionStatement","src":"14465:56:25"},{"nodeType":"YulAssignment","src":"14530:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14542:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"14553:2:25","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14538:3:25"},"nodeType":"YulFunctionCall","src":"14538:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14530:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_fe7271fdf16e686aac8ab7870b0a18a8d2226a1ec6ab1d7a847ec7059dd2e78d__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14363:9:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14377:4:25","type":""}],"src":"14212:350:25"},{"body":{"nodeType":"YulBlock","src":"14741:172:25","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14758:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"14769:2:25","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14751:6:25"},"nodeType":"YulFunctionCall","src":"14751:21:25"},"nodeType":"YulExpressionStatement","src":"14751:21:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14792:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"14803:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14788:3:25"},"nodeType":"YulFunctionCall","src":"14788:18:25"},{"kind":"number","nodeType":"YulLiteral","src":"14808:2:25","type":"","value":"22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14781:6:25"},"nodeType":"YulFunctionCall","src":"14781:30:25"},"nodeType":"YulExpressionStatement","src":"14781:30:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14831:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"14842:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14827:3:25"},"nodeType":"YulFunctionCall","src":"14827:18:25"},{"hexValue":"436f6f6c646f776e20706572696f6420616374697665","kind":"string","nodeType":"YulLiteral","src":"14847:24:25","type":"","value":"Cooldown period active"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14820:6:25"},"nodeType":"YulFunctionCall","src":"14820:52:25"},"nodeType":"YulExpressionStatement","src":"14820:52:25"},{"nodeType":"YulAssignment","src":"14881:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14893:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"14904:2:25","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14889:3:25"},"nodeType":"YulFunctionCall","src":"14889:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14881:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_60e50fe4b5f9ae998b7c4af6246a3be868b5d99ebc1f2f26c5c277ea2f50399f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14718:9:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14732:4:25","type":""}],"src":"14567:346:25"},{"body":{"nodeType":"YulBlock","src":"14970:116:25","statements":[{"nodeType":"YulAssignment","src":"14980:20:25","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"14995:1:25"},{"name":"y","nodeType":"YulIdentifier","src":"14998:1:25"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"14991:3:25"},"nodeType":"YulFunctionCall","src":"14991:9:25"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"14980:7:25"}]},{"body":{"nodeType":"YulBlock","src":"15058:22:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"15060:16:25"},"nodeType":"YulFunctionCall","src":"15060:18:25"},"nodeType":"YulExpressionStatement","src":"15060:18:25"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"15029:1:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"15022:6:25"},"nodeType":"YulFunctionCall","src":"15022:9:25"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"15036:1:25"},{"arguments":[{"name":"product","nodeType":"YulIdentifier","src":"15043:7:25"},{"name":"x","nodeType":"YulIdentifier","src":"15052:1:25"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"15039:3:25"},"nodeType":"YulFunctionCall","src":"15039:15:25"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"15033:2:25"},"nodeType":"YulFunctionCall","src":"15033:22:25"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"15019:2:25"},"nodeType":"YulFunctionCall","src":"15019:37:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"15012:6:25"},"nodeType":"YulFunctionCall","src":"15012:45:25"},"nodeType":"YulIf","src":"15009:71:25"}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"14949:1:25","type":""},{"name":"y","nodeType":"YulTypedName","src":"14952:1:25","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"14958:7:25","type":""}],"src":"14918:168:25"},{"body":{"nodeType":"YulBlock","src":"15137:171:25","statements":[{"body":{"nodeType":"YulBlock","src":"15168:111:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15189:1:25","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15196:3:25","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"15201:10:25","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"15192:3:25"},"nodeType":"YulFunctionCall","src":"15192:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15182:6:25"},"nodeType":"YulFunctionCall","src":"15182:31:25"},"nodeType":"YulExpressionStatement","src":"15182:31:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15233:1:25","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"15236:4:25","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15226:6:25"},"nodeType":"YulFunctionCall","src":"15226:15:25"},"nodeType":"YulExpressionStatement","src":"15226:15:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15261:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15264:4:25","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"15254:6:25"},"nodeType":"YulFunctionCall","src":"15254:15:25"},"nodeType":"YulExpressionStatement","src":"15254:15:25"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"15157:1:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"15150:6:25"},"nodeType":"YulFunctionCall","src":"15150:9:25"},"nodeType":"YulIf","src":"15147:132:25"},{"nodeType":"YulAssignment","src":"15288:14:25","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"15297:1:25"},{"name":"y","nodeType":"YulIdentifier","src":"15300:1:25"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"15293:3:25"},"nodeType":"YulFunctionCall","src":"15293:9:25"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"15288:1:25"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"15122:1:25","type":""},{"name":"y","nodeType":"YulTypedName","src":"15125:1:25","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"15131:1:25","type":""}],"src":"15091:217:25"},{"body":{"nodeType":"YulBlock","src":"15362:79:25","statements":[{"nodeType":"YulAssignment","src":"15372:17:25","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"15384:1:25"},{"name":"y","nodeType":"YulIdentifier","src":"15387:1:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15380:3:25"},"nodeType":"YulFunctionCall","src":"15380:9:25"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"15372:4:25"}]},{"body":{"nodeType":"YulBlock","src":"15413:22:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"15415:16:25"},"nodeType":"YulFunctionCall","src":"15415:18:25"},"nodeType":"YulExpressionStatement","src":"15415:18:25"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"15404:4:25"},{"name":"x","nodeType":"YulIdentifier","src":"15410:1:25"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"15401:2:25"},"nodeType":"YulFunctionCall","src":"15401:11:25"},"nodeType":"YulIf","src":"15398:37:25"}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"15344:1:25","type":""},{"name":"y","nodeType":"YulTypedName","src":"15347:1:25","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"15353:4:25","type":""}],"src":"15313:128:25"},{"body":{"nodeType":"YulBlock","src":"15659:276:25","statements":[{"nodeType":"YulAssignment","src":"15669:27:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15681:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"15692:3:25","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15677:3:25"},"nodeType":"YulFunctionCall","src":"15677:19:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15669:4:25"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15712:9:25"},{"name":"value0","nodeType":"YulIdentifier","src":"15723:6:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15705:6:25"},"nodeType":"YulFunctionCall","src":"15705:25:25"},"nodeType":"YulExpressionStatement","src":"15705:25:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15750:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"15761:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15746:3:25"},"nodeType":"YulFunctionCall","src":"15746:18:25"},{"name":"value1","nodeType":"YulIdentifier","src":"15766:6:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15739:6:25"},"nodeType":"YulFunctionCall","src":"15739:34:25"},"nodeType":"YulExpressionStatement","src":"15739:34:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15793:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"15804:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15789:3:25"},"nodeType":"YulFunctionCall","src":"15789:18:25"},{"name":"value2","nodeType":"YulIdentifier","src":"15809:6:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15782:6:25"},"nodeType":"YulFunctionCall","src":"15782:34:25"},"nodeType":"YulExpressionStatement","src":"15782:34:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15836:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"15847:2:25","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15832:3:25"},"nodeType":"YulFunctionCall","src":"15832:18:25"},{"name":"value3","nodeType":"YulIdentifier","src":"15852:6:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15825:6:25"},"nodeType":"YulFunctionCall","src":"15825:34:25"},"nodeType":"YulExpressionStatement","src":"15825:34:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15879:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"15890:3:25","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15875:3:25"},"nodeType":"YulFunctionCall","src":"15875:19:25"},{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"15900:6:25"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15916:3:25","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"15921:1:25","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"15912:3:25"},"nodeType":"YulFunctionCall","src":"15912:11:25"},{"kind":"number","nodeType":"YulLiteral","src":"15925:1:25","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15908:3:25"},"nodeType":"YulFunctionCall","src":"15908:19:25"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"15896:3:25"},"nodeType":"YulFunctionCall","src":"15896:32:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15868:6:25"},"nodeType":"YulFunctionCall","src":"15868:61:25"},"nodeType":"YulExpressionStatement","src":"15868:61:25"}]},"name":"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15596:9:25","type":""},{"name":"value4","nodeType":"YulTypedName","src":"15607:6:25","type":""},{"name":"value3","nodeType":"YulTypedName","src":"15615:6:25","type":""},{"name":"value2","nodeType":"YulTypedName","src":"15623:6:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"15631:6:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"15639:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15650:4:25","type":""}],"src":"15446:489:25"},{"body":{"nodeType":"YulBlock","src":"16121:217:25","statements":[{"nodeType":"YulAssignment","src":"16131:27:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16143:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"16154:3:25","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16139:3:25"},"nodeType":"YulFunctionCall","src":"16139:19:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16131:4:25"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16174:9:25"},{"name":"value0","nodeType":"YulIdentifier","src":"16185:6:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16167:6:25"},"nodeType":"YulFunctionCall","src":"16167:25:25"},"nodeType":"YulExpressionStatement","src":"16167:25:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16212:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"16223:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16208:3:25"},"nodeType":"YulFunctionCall","src":"16208:18:25"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"16232:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"16240:4:25","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"16228:3:25"},"nodeType":"YulFunctionCall","src":"16228:17:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16201:6:25"},"nodeType":"YulFunctionCall","src":"16201:45:25"},"nodeType":"YulExpressionStatement","src":"16201:45:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16266:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"16277:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16262:3:25"},"nodeType":"YulFunctionCall","src":"16262:18:25"},{"name":"value2","nodeType":"YulIdentifier","src":"16282:6:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16255:6:25"},"nodeType":"YulFunctionCall","src":"16255:34:25"},"nodeType":"YulExpressionStatement","src":"16255:34:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16309:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"16320:2:25","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16305:3:25"},"nodeType":"YulFunctionCall","src":"16305:18:25"},{"name":"value3","nodeType":"YulIdentifier","src":"16325:6:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16298:6:25"},"nodeType":"YulFunctionCall","src":"16298:34:25"},"nodeType":"YulExpressionStatement","src":"16298:34:25"}]},"name":"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16066:9:25","type":""},{"name":"value3","nodeType":"YulTypedName","src":"16077:6:25","type":""},{"name":"value2","nodeType":"YulTypedName","src":"16085:6:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"16093:6:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"16101:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16112:4:25","type":""}],"src":"15940:398:25"},{"body":{"nodeType":"YulBlock","src":"16375:95:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16392:1:25","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16399:3:25","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"16404:10:25","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"16395:3:25"},"nodeType":"YulFunctionCall","src":"16395:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16385:6:25"},"nodeType":"YulFunctionCall","src":"16385:31:25"},"nodeType":"YulExpressionStatement","src":"16385:31:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16432:1:25","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"16435:4:25","type":"","value":"0x21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16425:6:25"},"nodeType":"YulFunctionCall","src":"16425:15:25"},"nodeType":"YulExpressionStatement","src":"16425:15:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16456:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"16459:4:25","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"16449:6:25"},"nodeType":"YulFunctionCall","src":"16449:15:25"},"nodeType":"YulExpressionStatement","src":"16449:15:25"}]},"name":"panic_error_0x21","nodeType":"YulFunctionDefinition","src":"16343:127:25"}]},"contents":"{\n    { }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            let _1 := 0x20\n            mstore(add(add(pos, i), _1), mload(add(add(value, i), _1)))\n        }\n        mstore(add(add(pos, length), 0x20), 0)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_address(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := abi_decode_address(add(headStart, 64))\n    }\n    function validator_revert_bool(value)\n    {\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        validator_revert_bool(value)\n        value1 := value\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint256_t_bool__to_t_uint256_t_bool__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), iszero(iszero(value1)))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_uint256t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__to_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), iszero(iszero(value4)))\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n    }\n    function abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value6, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, and(value0, shl(248, 255)))\n        let _1 := 32\n        mstore(add(headStart, _1), 224)\n        let tail_1 := abi_encode_string(value1, add(headStart, 224))\n        mstore(add(headStart, 64), sub(tail_1, headStart))\n        let tail_2 := abi_encode_string(value2, tail_1)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), and(value4, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 160), value5)\n        mstore(add(headStart, 192), sub(tail_2, headStart))\n        let pos := tail_2\n        let length := mload(value6)\n        mstore(tail_2, length)\n        pos := add(tail_2, _1)\n        let srcPtr := add(value6, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_address_t_bool__to_t_uint256_t_uint256_t_address_t_bool__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), and(value2, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 96), iszero(iszero(value3)))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6\n    {\n        if slt(sub(dataEnd, headStart), 224) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        let value := calldataload(add(headStart, 128))\n        if iszero(eq(value, and(value, 0xff))) { revert(0, 0) }\n        value4 := value\n        value5 := calldataload(add(headStart, 160))\n        value6 := calldataload(add(headStart, 192))\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_48d9dea795d8d010580a5b191d0fe7c1ee70cd850707a0d7e7aba7c702de6be1__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 12)\n        mstore(add(headStart, 64), \"Fee too high\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_66396a07fa8344d81b812cfe3bea3e63cf5a5f15b46663d05f60f8e8a2326e51__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Already excluded\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_stringliteral_a4d1beca50ea03ae2d0bef8bddea7067036a984881c1fb687d10a1e111335fc0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"Trading already enabled\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_2a4b2ba36f9e275da9750f638b0402650ffc49f42156267cd88bbccc14d1c188__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"Cannot withdraw own tokens\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_7cc6b3e105e5333edddf04583e651cc3d3f46302c4d3edb1ca282ad53029b8db__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"No tokens to withdraw\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bool(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 192)\n        mstore(headStart, value0)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, _1))\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n        mstore(add(headStart, 160), value5)\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_encode_tuple_t_stringliteral_9df16c5c3e9f487854502591282f9dbd29044f6d3f3bf4c9daa5d3460486dd95__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"No ETH to withdraw\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_stringliteral_aba53b7bc56fd10d1bb2cac393e26b489ca53cf0c676cd3f5a7c5c185bf6cd4c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"Trading not enabled\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_fef92ec79bbd568fc63edc095cddaebd47e166ea7932b60d9a91e79658733400__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 11)\n        mstore(add(headStart, 64), \"Blacklisted\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_a1e994c71b3513731e9effa0bd81687a4234b5038b9b1fc3f0ec6961d00b02a4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Anti-snipe protection\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_8a47083662e5118b10740f0e82a54826b69dcdcba204cbbbb9689112c03a2b53__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Exceeds max buy per tx\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_fe7271fdf16e686aac8ab7870b0a18a8d2226a1ec6ab1d7a847ec7059dd2e78d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"Exceeds max buy per wallet\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_60e50fe4b5f9ae998b7c4af6246a3be868b5d99ebc1f2f26c5c277ea2f50399f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Cooldown period active\")\n        tail := add(headStart, 96)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), and(value4, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, 0xff))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n    function panic_error_0x21()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n}","id":25,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"3603":[{"length":32,"start":4495}],"3605":[{"length":32,"start":4453}],"3607":[{"length":32,"start":4411}],"3609":[{"length":32,"start":4576}],"3611":[{"length":32,"start":4616}],"3614":[{"length":32,"start":4840}],"3617":[{"length":32,"start":4885}]},"linkReferences":{},"object":"608060405234801561001057600080fd5b506004361061027f5760003560e01c80636d1d21591161015c578063a9277c0a116100ce578063d505accf11610087578063d505accf1461062b578063db2e21bc1461063e578063dd62ed3e14610646578063e6375d3e1461067f578063f2fde38b146106ab578063fe575a87146106be57600080fd5b8063a9277c0a146105cc578063ae267735146105d4578063b2af127c146105dc578063c0246668146105ef578063c07473f614610602578063d00efb2f1461062257600080fd5b806384b0196e1161012057806384b0196e1461051b5780638a8c523c146105365780638da5cb5b1461053e57806395d89b41146105595780639e7e42cd14610561578063a9059cbb146105b957600080fd5b80636d1d2159146104b157806370a08231146104c4578063715018a6146104ed57806379cc6790146104f55780637ecebe001461050857600080fd5b80633fecc2e2116101f55780634ada218b116101b95780634ada218b1461043f5780634bf2c7c91461044c5780634e0856a71461045f5780634fbee193146104685780635c19a95c1461048b5780636010ba341461049e57600080fd5b80633fecc2e21461037957806342966c681461039957806343859632146103ac5780634663b1b2146103d857806349a64d93146103f857600080fd5b8063180aa7c711610247578063180aa7c71461030e57806318160ddd1461033457806323b872dd1461033c57806325f25f4d1461034f578063313ce567146103625780633644e5151461037157600080fd5b806306fdde0314610284578063095ea7b3146102a25780630eda5f32146102c5578063153b0d1e146102da5780631682aa49146102ed575b600080fd5b61028c6106e1565b6040516102999190611d68565b60405180910390f35b6102b56102b0366004611d9e565b610773565b6040519015158152602001610299565b6102d86102d3366004611dc8565b61078d565b005b6102d86102e8366004611e0b565b6107f0565b6103006102fb366004611e42565b610857565b604051908152602001610299565b60125460135461031f919060ff1682565b60408051928352901515602083015201610299565b600254610300565b6102b561034a366004611e5d565b6108b2565b6102d861035d366004611e42565b6108d6565b60405160128152602001610299565b6103006109a0565b610300610387366004611e42565b60176020526000908152604090205481565b6102d86103a7366004611e99565b6109af565b6102b56103ba366004611eb2565b60208080526000928352604080842090915290825290205460ff1681565b6103006103e6366004611e42565b60186020526000908152604090205481565b600a54600b54600c54600d54600e54610415949392919060ff1685565b6040805195865260208601949094529284019190915260608301521515608082015260a001610299565b6016546102b59060ff1681565b6102d861045a366004611e99565b6109bc565b61030060155481565b6102b5610476366004611e42565b60196020526000908152604090205460ff1681565b6102d8610499366004611e42565b6109eb565b6102d86104ac366004611e99565b610a2b565b6102d86104bf366004611ede565b610a67565b6103006104d2366004611e42565b6001600160a01b031660009081526020819052604090205490565b6102d8610ad1565b6102d8610503366004611d9e565b610ae5565b610300610516366004611e42565b610afe565b610523610b1c565b6040516102999796959493929190611f10565b6102d8610b62565b6008546040516001600160a01b039091168152602001610299565b61028c610c0c565b600f546010546011546105889291906001600160a01b03811690600160a01b900460ff1684565b604051610299949392919093845260208401929092526001600160a01b031660408301521515606082015260800190565b6102b56105c7366004611d9e565b610c1b565b6102d8610c29565b601b54610300565b6102d86105ea366004611e42565b610c3d565b6102d86105fd366004611e0b565b610de9565b610300610610366004611e42565b601f6020526000908152604090205481565b61030060145481565b6102d8610639366004611fa6565b610e1c565b6102d8610f56565b610300610654366004612019565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6102b561068d366004611e42565b6001600160a01b03166000908152601d602052604090205460ff1690565b6102d86106b9366004611e42565b610fdb565b6102b56106cc366004611e42565b601a6020526000908152604090205460ff1681565b6060600380546106f090612043565b80601f016020809104026020016040519081016040528092919081815260200182805461071c90612043565b80156107695780601f1061073e57610100808354040283529160200191610769565b820191906000526020600020905b81548152906001019060200180831161074c57829003601f168201915b5050505050905090565b600033610781818585611016565b60019150505b92915050565b610795611023565b6101f48311156107c05760405162461bcd60e51b81526004016107b79061207d565b60405180910390fd5b600f92909255601055601180546001600160a81b0319166001600160a01b0390921691909117600160a01b179055565b6107f8611023565b6001600160a01b0382166000818152601a6020908152604091829020805460ff191685151590811790915591519182527fcf3473b85df1594d47b6958f29a32bea0abff9dd68296f7bf33443646793cfd8910160405180910390a25050565b6001600160a01b0381166000908152601d602052604081205460ff1615610896576001600160a01b038216600090815260208190526040902054610787565b506001600160a01b03166000908152601c602052604090205490565b6000336108c0858285611050565b6108cb8585856110cf565b506001949350505050565b6108de611023565b6001600160a01b0381166000908152601d602052604090205460ff161561093a5760405162461bcd60e51b815260206004820152601060248201526f105b1c9958591e48195e18db1d59195960821b60448201526064016107b7565b6001600160a01b03166000818152601d60205260408120805460ff19166001908117909155601e805491820181559091527f50bb669a95c7b50b7e8a6f09454034b2b14cf2b85c730dca9a539ca82cb6e3500180546001600160a01b0319169091179055565b60006109aa61112e565b905090565b6109b93382611259565b50565b6109c4611023565b6101f48111156109e65760405162461bcd60e51b81526004016107b79061207d565b601555565b336000908152602081905260409020546001600160a01b0382166000908152601f602052604081208054909190610a239084906120b9565b909155505050565b610a33611023565b6101f4811115610a555760405162461bcd60e51b81526004016107b79061207d565b6012556013805460ff19166001179055565b610a6f611023565b600a849055600b839055600c829055600d8190556040805185815260208101859052908101839052606081018290527f028a38ff37ea5c05388a99b81090ae2d9a9230d695258ae73bf5765411cb80b89060800160405180910390a150505050565b610ad9611023565b610ae3600061128f565b565b610af0823383611050565b610afa8282611259565b5050565b6001600160a01b038116600090815260076020526040812054610787565b600060608060008060006060610b306112e1565b610b3861130e565b60408051600080825260208201909252600f60f81b9b939a50919850469750309650945092509050565b610b6a611023565b60165460ff1615610bbd5760405162461bcd60e51b815260206004820152601760248201527f54726164696e6720616c726561647920656e61626c656400000000000000000060448201526064016107b7565b6016805460ff191660011790554360148190556040517fb3da2db3dfc3778f99852546c6e9ab39ec253f9de7b0847afec61bd27878e92391610c029190815260200190565b60405180910390a1565b6060600480546106f090612043565b6000336107818185856110cf565b610c31611023565b600e805460ff19169055565b610c45611023565b306001600160a01b03821603610c9d5760405162461bcd60e51b815260206004820152601a60248201527f43616e6e6f74207769746864726177206f776e20746f6b656e7300000000000060448201526064016107b7565b6040516370a0823160e01b81523060048201526000906001600160a01b038316906370a0823190602401602060405180830381865afa158015610ce4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d0891906120cc565b905060008111610d525760405162461bcd60e51b81526020600482015260156024820152744e6f20746f6b656e7320746f20776974686472617760581b60448201526064016107b7565b816001600160a01b031663a9059cbb610d736008546001600160a01b031690565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602481018490526044016020604051808303816000875af1158015610dc0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610de491906120e5565b505050565b610df1611023565b6001600160a01b03919091166000908152601960205260409020805460ff1916911515919091179055565b83421115610e405760405163313c898160e11b8152600481018590526024016107b7565b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9888888610e8d8c6001600160a01b0316600090815260076020526040902080546001810190915590565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e0016040516020818303038152906040528051906020012090506000610ee88261133b565b90506000610ef882878787611368565b9050896001600160a01b0316816001600160a01b031614610f3f576040516325c0072360e11b81526001600160a01b0380831660048301528b1660248201526044016107b7565b610f4a8a8a8a611016565b50505050505050505050565b610f5e611023565b4780610fa15760405162461bcd60e51b81526020600482015260126024820152714e6f2045544820746f20776974686472617760701b60448201526064016107b7565b6008546040516001600160a01b039091169082156108fc029083906000818181858888f19350505050158015610afa573d6000803e3d6000fd5b610fe3611023565b6001600160a01b03811661100d57604051631e4fbdf760e01b8152600060048201526024016107b7565b6109b98161128f565b610de48383836001611396565b6008546001600160a01b03163314610ae35760405163118cdaa760e01b81523360048201526024016107b7565b6001600160a01b038381166000908152600160209081526040808320938616835292905220546000198110156110c957818110156110ba57604051637dc7a0d960e11b81526001600160a01b038416600482015260248101829052604481018390526064016107b7565b6110c984848484036000611396565b50505050565b6001600160a01b0383166110f957604051634b637e8f60e11b8152600060048201526024016107b7565b6001600160a01b0382166111235760405163ec442f0560e01b8152600060048201526024016107b7565b610de483838361146b565b6000306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614801561118757507f000000000000000000000000000000000000000000000000000000000000000046145b156111b157507f000000000000000000000000000000000000000000000000000000000000000090565b6109aa604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201527f0000000000000000000000000000000000000000000000000000000000000000918101919091527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b6001600160a01b03821661128357604051634b637e8f60e11b8152600060048201526024016107b7565b610afa8260008361146b565b600880546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60606109aa7f00000000000000000000000000000000000000000000000000000000000000006005611911565b60606109aa7f00000000000000000000000000000000000000000000000000000000000000006006611911565b600061078761134861112e565b8360405161190160f01b8152600281019290925260228201526042902090565b60008060008061137a888888886119bc565b92509250925061138a8282611a8b565b50909695505050505050565b6001600160a01b0384166113c05760405163e602df0560e01b8152600060048201526024016107b7565b6001600160a01b0383166113ea57604051634a1406b160e11b8152600060048201526024016107b7565b6001600160a01b03808516600090815260016020908152604080832093871683529290522082905580156110c957826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161145d91815260200190565b60405180910390a350505050565b60165460ff168061148657506008546001600160a01b031633145b6114c85760405162461bcd60e51b8152602060048201526013602482015272151c98591a5b99c81b9bdd08195b98589b1959606a1b60448201526064016107b7565b6001600160a01b0383166000908152601a602052604090205460ff1615801561150a57506001600160a01b0382166000908152601a602052604090205460ff16155b6115445760405162461bcd60e51b815260206004820152600b60248201526a109b1858dadb1a5cdd195960aa1b60448201526064016107b7565b600e5460ff16801561156457506008546001600160a01b03848116911614155b801561157e57506008546001600160a01b03838116911614155b156117b85760006014541180156115a45750600d546014546115a091906120b9565b4311155b15611616576008546001600160a01b03838116911614806115d257506008546001600160a01b038481169116145b6116165760405162461bcd60e51b815260206004820152601560248201527420b73a3496b9b734b83290383937ba32b1ba34b7b760591b60448201526064016107b7565b6011546001600160a01b03848116911614801561163c57506001600160a01b0382163014155b156117b857600b5481111561168c5760405162461bcd60e51b815260206004820152601660248201527508af0c6cacac8e640dac2f040c4eaf240e0cae440e8f60531b60448201526064016107b7565b600a546001600160a01b0383166000908152601860205260409020546116b39083906120b9565b11156117015760405162461bcd60e51b815260206004820152601a60248201527f45786365656473206d617820627579207065722077616c6c657400000000000060448201526064016107b7565b600c546001600160a01b03831660009081526017602052604090205461172791906120b9565b42101561176f5760405162461bcd60e51b8152602060048201526016602482015275436f6f6c646f776e20706572696f642061637469766560501b60448201526064016107b7565b6001600160a01b038216600090815260186020526040812080548392906117979084906120b9565b90915550506001600160a01b03821660009081526017602052604090204290555b6001600160a01b0383166000908152601960205260408120548190819060ff161580156117fe57506001600160a01b03851660009081526019602052604090205460ff16155b1561189c5760155415611829576127106015548561181c9190612102565b6118269190612119565b92505b601154600160a01b900460ff1680156118435750600f5415155b1561186657600f54612710906118599086612102565b6118639190612119565b91505b60135460ff168015611879575060125415155b1561189c576012546127109061188f9086612102565b6118999190612119565b90505b600081836118aa868861213b565b6118b4919061213b565b6118be919061213b565b905083156118d2576118d287600086611b44565b82156118e3576118e3873085611b44565b81156118fd576118f282611c6e565b6118fd873084611b44565b611908878783611b44565b50505050505050565b606060ff831461192b5761192483611cbb565b9050610787565b81805461193790612043565b80601f016020809104026020016040519081016040528092919081815260200182805461196390612043565b80156119b05780601f10611985576101008083540402835291602001916119b0565b820191906000526020600020905b81548152906001019060200180831161199357829003601f168201915b50505050509050610787565b600080807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08411156119f75750600091506003905082611a81565b604080516000808252602082018084528a905260ff891692820192909252606081018790526080810186905260019060a0016020604051602081039080840390855afa158015611a4b573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116611a7757506000925060019150829050611a81565b9250600091508190505b9450945094915050565b6000826003811115611a9f57611a9f61214e565b03611aa8575050565b6001826003811115611abc57611abc61214e565b03611ada5760405163f645eedf60e01b815260040160405180910390fd5b6002826003811115611aee57611aee61214e565b03611b0f5760405163fce698f760e01b8152600481018290526024016107b7565b6003826003811115611b2357611b2361214e565b03610afa576040516335e2f38360e21b8152600481018290526024016107b7565b6001600160a01b038316611b6f578060026000828254611b6491906120b9565b90915550611be19050565b6001600160a01b03831660009081526020819052604090205481811015611bc25760405163391434e360e21b81526001600160a01b038516600482015260248101829052604481018390526064016107b7565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b038216611bfd57600280548290039055611c1c565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051611c6191815260200190565b60405180910390a3505050565b80601b6000828254611c8091906120b9565b90915550506040518181527f3eeb9763473a030c467b8f096a99e1825a88c6a821c131e1fbb007246a80359c9060200160405180910390a150565b60606000611cc883611cfa565b604080516020808252818301909252919250600091906020820181803683375050509182525060208101929092525090565b600060ff8216601f81111561078757604051632cd44ac360e21b815260040160405180910390fd5b6000815180845260005b81811015611d4857602081850181015186830182015201611d2c565b506000602082860101526020601f19601f83011685010191505092915050565b602081526000611d7b6020830184611d22565b9392505050565b80356001600160a01b0381168114611d9957600080fd5b919050565b60008060408385031215611db157600080fd5b611dba83611d82565b946020939093013593505050565b600080600060608486031215611ddd57600080fd5b8335925060208401359150611df460408501611d82565b90509250925092565b80151581146109b957600080fd5b60008060408385031215611e1e57600080fd5b611e2783611d82565b91506020830135611e3781611dfd565b809150509250929050565b600060208284031215611e5457600080fd5b611d7b82611d82565b600080600060608486031215611e7257600080fd5b611e7b84611d82565b9250611e8960208501611d82565b9150604084013590509250925092565b600060208284031215611eab57600080fd5b5035919050565b60008060408385031215611ec557600080fd5b82359150611ed560208401611d82565b90509250929050565b60008060008060808587031215611ef457600080fd5b5050823594602084013594506040840135936060013592509050565b60ff60f81b881681526000602060e081840152611f3060e084018a611d22565b8381036040850152611f42818a611d22565b606085018990526001600160a01b038816608086015260a0850187905284810360c0860152855180825283870192509083019060005b81811015611f9457835183529284019291840191600101611f78565b50909c9b505050505050505050505050565b600080600080600080600060e0888a031215611fc157600080fd5b611fca88611d82565b9650611fd860208901611d82565b95506040880135945060608801359350608088013560ff81168114611ffc57600080fd5b9699959850939692959460a0840135945060c09093013592915050565b6000806040838503121561202c57600080fd5b61203583611d82565b9150611ed560208401611d82565b600181811c9082168061205757607f821691505b60208210810361207757634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252600c908201526b08ccaca40e8dede40d0d2ced60a31b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b80820180821115610787576107876120a3565b6000602082840312156120de57600080fd5b5051919050565b6000602082840312156120f757600080fd5b8151611d7b81611dfd565b8082028115828204841417610787576107876120a3565b60008261213657634e487b7160e01b600052601260045260246000fd5b500490565b81810381811115610787576107876120a3565b634e487b7160e01b600052602160045260246000fdfea2646970667358221220d342b553810e3093bbd250946e6d015330e6400f4be3ca3443af6ace45fb563e64736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x27F JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6D1D2159 GT PUSH2 0x15C JUMPI DUP1 PUSH4 0xA9277C0A GT PUSH2 0xCE JUMPI DUP1 PUSH4 0xD505ACCF GT PUSH2 0x87 JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x62B JUMPI DUP1 PUSH4 0xDB2E21BC EQ PUSH2 0x63E JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x646 JUMPI DUP1 PUSH4 0xE6375D3E EQ PUSH2 0x67F JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x6AB JUMPI DUP1 PUSH4 0xFE575A87 EQ PUSH2 0x6BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA9277C0A EQ PUSH2 0x5CC JUMPI DUP1 PUSH4 0xAE267735 EQ PUSH2 0x5D4 JUMPI DUP1 PUSH4 0xB2AF127C EQ PUSH2 0x5DC JUMPI DUP1 PUSH4 0xC0246668 EQ PUSH2 0x5EF JUMPI DUP1 PUSH4 0xC07473F6 EQ PUSH2 0x602 JUMPI DUP1 PUSH4 0xD00EFB2F EQ PUSH2 0x622 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x84B0196E GT PUSH2 0x120 JUMPI DUP1 PUSH4 0x84B0196E EQ PUSH2 0x51B JUMPI DUP1 PUSH4 0x8A8C523C EQ PUSH2 0x536 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x53E JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x559 JUMPI DUP1 PUSH4 0x9E7E42CD EQ PUSH2 0x561 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x5B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6D1D2159 EQ PUSH2 0x4B1 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x4C4 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x4ED JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x4F5 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x508 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3FECC2E2 GT PUSH2 0x1F5 JUMPI DUP1 PUSH4 0x4ADA218B GT PUSH2 0x1B9 JUMPI DUP1 PUSH4 0x4ADA218B EQ PUSH2 0x43F JUMPI DUP1 PUSH4 0x4BF2C7C9 EQ PUSH2 0x44C JUMPI DUP1 PUSH4 0x4E0856A7 EQ PUSH2 0x45F JUMPI DUP1 PUSH4 0x4FBEE193 EQ PUSH2 0x468 JUMPI DUP1 PUSH4 0x5C19A95C EQ PUSH2 0x48B JUMPI DUP1 PUSH4 0x6010BA34 EQ PUSH2 0x49E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3FECC2E2 EQ PUSH2 0x379 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x399 JUMPI DUP1 PUSH4 0x43859632 EQ PUSH2 0x3AC JUMPI DUP1 PUSH4 0x4663B1B2 EQ PUSH2 0x3D8 JUMPI DUP1 PUSH4 0x49A64D93 EQ PUSH2 0x3F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x180AA7C7 GT PUSH2 0x247 JUMPI DUP1 PUSH4 0x180AA7C7 EQ PUSH2 0x30E JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x334 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x33C JUMPI DUP1 PUSH4 0x25F25F4D EQ PUSH2 0x34F JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x362 JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x371 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x284 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x2A2 JUMPI DUP1 PUSH4 0xEDA5F32 EQ PUSH2 0x2C5 JUMPI DUP1 PUSH4 0x153B0D1E EQ PUSH2 0x2DA JUMPI DUP1 PUSH4 0x1682AA49 EQ PUSH2 0x2ED JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x28C PUSH2 0x6E1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x299 SWAP2 SWAP1 PUSH2 0x1D68 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B5 PUSH2 0x2B0 CALLDATASIZE PUSH1 0x4 PUSH2 0x1D9E JUMP JUMPDEST PUSH2 0x773 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x299 JUMP JUMPDEST PUSH2 0x2D8 PUSH2 0x2D3 CALLDATASIZE PUSH1 0x4 PUSH2 0x1DC8 JUMP JUMPDEST PUSH2 0x78D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2D8 PUSH2 0x2E8 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E0B JUMP JUMPDEST PUSH2 0x7F0 JUMP JUMPDEST PUSH2 0x300 PUSH2 0x2FB CALLDATASIZE PUSH1 0x4 PUSH2 0x1E42 JUMP JUMPDEST PUSH2 0x857 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x299 JUMP JUMPDEST PUSH1 0x12 SLOAD PUSH1 0x13 SLOAD PUSH2 0x31F SWAP2 SWAP1 PUSH1 0xFF AND DUP3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE SWAP1 ISZERO ISZERO PUSH1 0x20 DUP4 ADD MSTORE ADD PUSH2 0x299 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x300 JUMP JUMPDEST PUSH2 0x2B5 PUSH2 0x34A CALLDATASIZE PUSH1 0x4 PUSH2 0x1E5D JUMP JUMPDEST PUSH2 0x8B2 JUMP JUMPDEST PUSH2 0x2D8 PUSH2 0x35D CALLDATASIZE PUSH1 0x4 PUSH2 0x1E42 JUMP JUMPDEST PUSH2 0x8D6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x299 JUMP JUMPDEST PUSH2 0x300 PUSH2 0x9A0 JUMP JUMPDEST PUSH2 0x300 PUSH2 0x387 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E42 JUMP JUMPDEST PUSH1 0x17 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2D8 PUSH2 0x3A7 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E99 JUMP JUMPDEST PUSH2 0x9AF JUMP JUMPDEST PUSH2 0x2B5 PUSH2 0x3BA CALLDATASIZE PUSH1 0x4 PUSH2 0x1EB2 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP1 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x300 PUSH2 0x3E6 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E42 JUMP JUMPDEST PUSH1 0x18 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0xB SLOAD PUSH1 0xC SLOAD PUSH1 0xD SLOAD PUSH1 0xE SLOAD PUSH2 0x415 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH1 0xFF AND DUP6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP6 DUP7 MSTORE PUSH1 0x20 DUP7 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP3 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD PUSH2 0x299 JUMP JUMPDEST PUSH1 0x16 SLOAD PUSH2 0x2B5 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x2D8 PUSH2 0x45A CALLDATASIZE PUSH1 0x4 PUSH2 0x1E99 JUMP JUMPDEST PUSH2 0x9BC JUMP JUMPDEST PUSH2 0x300 PUSH1 0x15 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2B5 PUSH2 0x476 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E42 JUMP JUMPDEST PUSH1 0x19 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x2D8 PUSH2 0x499 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E42 JUMP JUMPDEST PUSH2 0x9EB JUMP JUMPDEST PUSH2 0x2D8 PUSH2 0x4AC CALLDATASIZE PUSH1 0x4 PUSH2 0x1E99 JUMP JUMPDEST PUSH2 0xA2B JUMP JUMPDEST PUSH2 0x2D8 PUSH2 0x4BF CALLDATASIZE PUSH1 0x4 PUSH2 0x1EDE JUMP JUMPDEST PUSH2 0xA67 JUMP JUMPDEST PUSH2 0x300 PUSH2 0x4D2 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E42 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x2D8 PUSH2 0xAD1 JUMP JUMPDEST PUSH2 0x2D8 PUSH2 0x503 CALLDATASIZE PUSH1 0x4 PUSH2 0x1D9E JUMP JUMPDEST PUSH2 0xAE5 JUMP JUMPDEST PUSH2 0x300 PUSH2 0x516 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E42 JUMP JUMPDEST PUSH2 0xAFE JUMP JUMPDEST PUSH2 0x523 PUSH2 0xB1C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x299 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1F10 JUMP JUMPDEST PUSH2 0x2D8 PUSH2 0xB62 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x299 JUMP JUMPDEST PUSH2 0x28C PUSH2 0xC0C JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0x10 SLOAD PUSH1 0x11 SLOAD PUSH2 0x588 SWAP3 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x299 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x40 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH2 0x2B5 PUSH2 0x5C7 CALLDATASIZE PUSH1 0x4 PUSH2 0x1D9E JUMP JUMPDEST PUSH2 0xC1B JUMP JUMPDEST PUSH2 0x2D8 PUSH2 0xC29 JUMP JUMPDEST PUSH1 0x1B SLOAD PUSH2 0x300 JUMP JUMPDEST PUSH2 0x2D8 PUSH2 0x5EA CALLDATASIZE PUSH1 0x4 PUSH2 0x1E42 JUMP JUMPDEST PUSH2 0xC3D JUMP JUMPDEST PUSH2 0x2D8 PUSH2 0x5FD CALLDATASIZE PUSH1 0x4 PUSH2 0x1E0B JUMP JUMPDEST PUSH2 0xDE9 JUMP JUMPDEST PUSH2 0x300 PUSH2 0x610 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E42 JUMP JUMPDEST PUSH1 0x1F PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x300 PUSH1 0x14 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2D8 PUSH2 0x639 CALLDATASIZE PUSH1 0x4 PUSH2 0x1FA6 JUMP JUMPDEST PUSH2 0xE1C JUMP JUMPDEST PUSH2 0x2D8 PUSH2 0xF56 JUMP JUMPDEST PUSH2 0x300 PUSH2 0x654 CALLDATASIZE PUSH1 0x4 PUSH2 0x2019 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x2B5 PUSH2 0x68D CALLDATASIZE PUSH1 0x4 PUSH2 0x1E42 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1D PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x2D8 PUSH2 0x6B9 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E42 JUMP JUMPDEST PUSH2 0xFDB JUMP JUMPDEST PUSH2 0x2B5 PUSH2 0x6CC CALLDATASIZE PUSH1 0x4 PUSH2 0x1E42 JUMP JUMPDEST PUSH1 0x1A PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x6F0 SWAP1 PUSH2 0x2043 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x71C SWAP1 PUSH2 0x2043 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x769 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x73E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x769 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x74C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x781 DUP2 DUP6 DUP6 PUSH2 0x1016 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x795 PUSH2 0x1023 JUMP JUMPDEST PUSH2 0x1F4 DUP4 GT ISZERO PUSH2 0x7C0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7B7 SWAP1 PUSH2 0x207D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xF SWAP3 SWAP1 SWAP3 SSTORE PUSH1 0x10 SSTORE PUSH1 0x11 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR PUSH1 0x1 PUSH1 0xA0 SHL OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x7F8 PUSH2 0x1023 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1A PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP6 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0xCF3473B85DF1594D47B6958F29A32BEA0ABFF9DD68296F7BF33443646793CFD8 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1D PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x896 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x787 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1C PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x8C0 DUP6 DUP3 DUP6 PUSH2 0x1050 JUMP JUMPDEST PUSH2 0x8CB DUP6 DUP6 DUP6 PUSH2 0x10CF JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x8DE PUSH2 0x1023 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1D PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x93A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x105B1C9958591E48195E18DB1D591959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7B7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1D PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x1E DUP1 SLOAD SWAP2 DUP3 ADD DUP2 SSTORE SWAP1 SWAP2 MSTORE PUSH32 0x50BB669A95C7B50B7E8A6F09454034B2B14CF2B85C730DCA9A539CA82CB6E350 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9AA PUSH2 0x112E JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x9B9 CALLER DUP3 PUSH2 0x1259 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x9C4 PUSH2 0x1023 JUMP JUMPDEST PUSH2 0x1F4 DUP2 GT ISZERO PUSH2 0x9E6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7B7 SWAP1 PUSH2 0x207D JUMP JUMPDEST PUSH1 0x15 SSTORE JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1F PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0xA23 SWAP1 DUP5 SWAP1 PUSH2 0x20B9 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP JUMP JUMPDEST PUSH2 0xA33 PUSH2 0x1023 JUMP JUMPDEST PUSH2 0x1F4 DUP2 GT ISZERO PUSH2 0xA55 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7B7 SWAP1 PUSH2 0x207D JUMP JUMPDEST PUSH1 0x12 SSTORE PUSH1 0x13 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0xA6F PUSH2 0x1023 JUMP JUMPDEST PUSH1 0xA DUP5 SWAP1 SSTORE PUSH1 0xB DUP4 SWAP1 SSTORE PUSH1 0xC DUP3 SWAP1 SSTORE PUSH1 0xD DUP2 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP6 SWAP1 MSTORE SWAP1 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP3 SWAP1 MSTORE PUSH32 0x28A38FF37EA5C05388A99B81090AE2D9A9230D695258AE73BF5765411CB80B8 SWAP1 PUSH1 0x80 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH2 0xAD9 PUSH2 0x1023 JUMP JUMPDEST PUSH2 0xAE3 PUSH1 0x0 PUSH2 0x128F JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xAF0 DUP3 CALLER DUP4 PUSH2 0x1050 JUMP JUMPDEST PUSH2 0xAFA DUP3 DUP3 PUSH2 0x1259 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x787 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 PUSH2 0xB30 PUSH2 0x12E1 JUMP JUMPDEST PUSH2 0xB38 PUSH2 0x130E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH1 0xF PUSH1 0xF8 SHL SWAP12 SWAP4 SWAP11 POP SWAP2 SWAP9 POP CHAINID SWAP8 POP ADDRESS SWAP7 POP SWAP5 POP SWAP3 POP SWAP1 POP JUMP JUMPDEST PUSH2 0xB6A PUSH2 0x1023 JUMP JUMPDEST PUSH1 0x16 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xBBD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54726164696E6720616C726561647920656E61626C6564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7B7 JUMP JUMPDEST PUSH1 0x16 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE NUMBER PUSH1 0x14 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0xB3DA2DB3DFC3778F99852546C6E9AB39EC253F9DE7B0847AFEC61BD27878E923 SWAP2 PUSH2 0xC02 SWAP2 SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x6F0 SWAP1 PUSH2 0x2043 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x781 DUP2 DUP6 DUP6 PUSH2 0x10CF JUMP JUMPDEST PUSH2 0xC31 PUSH2 0x1023 JUMP JUMPDEST PUSH1 0xE DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH2 0xC45 PUSH2 0x1023 JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SUB PUSH2 0xC9D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F74207769746864726177206F776E20746F6B656E73000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7B7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xCE4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD08 SWAP2 SWAP1 PUSH2 0x20CC JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0xD52 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x4E6F20746F6B656E7320746F207769746864726177 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7B7 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB PUSH2 0xD73 PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP5 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xDC0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDE4 SWAP2 SWAP1 PUSH2 0x20E5 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xDF1 PUSH2 0x1023 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x19 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0xE40 JUMPI PUSH1 0x40 MLOAD PUSH4 0x313C8981 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x7B7 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP9 DUP9 DUP9 PUSH2 0xE8D DUP13 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 ADD SWAP1 SWAP2 SSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP7 SWAP1 SWAP7 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND SWAP1 DUP7 ADD MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0xE0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0xEE8 DUP3 PUSH2 0x133B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xEF8 DUP3 DUP8 DUP8 DUP8 PUSH2 0x1368 JUMP JUMPDEST SWAP1 POP DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xF3F JUMPI PUSH1 0x40 MLOAD PUSH4 0x25C00723 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x4 DUP4 ADD MSTORE DUP12 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x7B7 JUMP JUMPDEST PUSH2 0xF4A DUP11 DUP11 DUP11 PUSH2 0x1016 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xF5E PUSH2 0x1023 JUMP JUMPDEST SELFBALANCE DUP1 PUSH2 0xFA1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x4E6F2045544820746F207769746864726177 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7B7 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP3 ISZERO PUSH2 0x8FC MUL SWAP1 DUP4 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xAFA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH2 0xFE3 PUSH2 0x1023 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x100D JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7B7 JUMP JUMPDEST PUSH2 0x9B9 DUP2 PUSH2 0x128F JUMP JUMPDEST PUSH2 0xDE4 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1396 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xAE3 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7B7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0x0 NOT DUP2 LT ISZERO PUSH2 0x10C9 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x10BA JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x7B7 JUMP JUMPDEST PUSH2 0x10C9 DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x1396 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x10F9 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7B7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1123 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7B7 JUMP JUMPDEST PUSH2 0xDE4 DUP4 DUP4 DUP4 PUSH2 0x146B JUMP JUMPDEST PUSH1 0x0 ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ DUP1 ISZERO PUSH2 0x1187 JUMPI POP PUSH32 0x0 CHAINID EQ JUMPDEST ISZERO PUSH2 0x11B1 JUMPI POP PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x9AA PUSH1 0x40 DUP1 MLOAD PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x0 SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x0 PUSH1 0x60 DUP3 ADD MSTORE CHAINID PUSH1 0x80 DUP3 ADD MSTORE ADDRESS PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0xC0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1283 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7B7 JUMP JUMPDEST PUSH2 0xAFA DUP3 PUSH1 0x0 DUP4 PUSH2 0x146B JUMP JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x9AA PUSH32 0x0 PUSH1 0x5 PUSH2 0x1911 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x9AA PUSH32 0x0 PUSH1 0x6 PUSH2 0x1911 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x787 PUSH2 0x1348 PUSH2 0x112E JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD PUSH2 0x1901 PUSH1 0xF0 SHL DUP2 MSTORE PUSH1 0x2 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x42 SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x137A DUP9 DUP9 DUP9 DUP9 PUSH2 0x19BC JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x138A DUP3 DUP3 PUSH2 0x1A8B JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x13C0 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7B7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x13EA JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7B7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x10C9 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x145D SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x16 SLOAD PUSH1 0xFF AND DUP1 PUSH2 0x1486 JUMPI POP PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST PUSH2 0x14C8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x151C98591A5B99C81B9BDD08195B98589B1959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7B7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1A PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x150A JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1A PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x1544 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x109B1858DADB1A5CDD1959 PUSH1 0xAA SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7B7 JUMP JUMPDEST PUSH1 0xE SLOAD PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x1564 JUMPI POP PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x157E JUMPI POP PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x17B8 JUMPI PUSH1 0x0 PUSH1 0x14 SLOAD GT DUP1 ISZERO PUSH2 0x15A4 JUMPI POP PUSH1 0xD SLOAD PUSH1 0x14 SLOAD PUSH2 0x15A0 SWAP2 SWAP1 PUSH2 0x20B9 JUMP JUMPDEST NUMBER GT ISZERO JUMPDEST ISZERO PUSH2 0x1616 JUMPI PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 AND EQ DUP1 PUSH2 0x15D2 JUMPI POP PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND EQ JUMPDEST PUSH2 0x1616 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x20B73A3496B9B734B83290383937BA32B1BA34B7B7 PUSH1 0x59 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7B7 JUMP JUMPDEST PUSH1 0x11 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND EQ DUP1 ISZERO PUSH2 0x163C JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ADDRESS EQ ISZERO JUMPDEST ISZERO PUSH2 0x17B8 JUMPI PUSH1 0xB SLOAD DUP2 GT ISZERO PUSH2 0x168C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x8AF0C6CACAC8E640DAC2F040C4EAF240E0CAE440E8F PUSH1 0x53 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7B7 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x18 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x16B3 SWAP1 DUP4 SWAP1 PUSH2 0x20B9 JUMP JUMPDEST GT ISZERO PUSH2 0x1701 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45786365656473206D617820627579207065722077616C6C6574000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7B7 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x17 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1727 SWAP2 SWAP1 PUSH2 0x20B9 JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x176F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x436F6F6C646F776E20706572696F6420616374697665 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7B7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x18 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x1797 SWAP1 DUP5 SWAP1 PUSH2 0x20B9 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x17 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 TIMESTAMP SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x19 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP2 SWAP1 DUP2 SWAP1 PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x17FE JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x19 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0x189C JUMPI PUSH1 0x15 SLOAD ISZERO PUSH2 0x1829 JUMPI PUSH2 0x2710 PUSH1 0x15 SLOAD DUP6 PUSH2 0x181C SWAP2 SWAP1 PUSH2 0x2102 JUMP JUMPDEST PUSH2 0x1826 SWAP2 SWAP1 PUSH2 0x2119 JUMP JUMPDEST SWAP3 POP JUMPDEST PUSH1 0x11 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x1843 JUMPI POP PUSH1 0xF SLOAD ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x1866 JUMPI PUSH1 0xF SLOAD PUSH2 0x2710 SWAP1 PUSH2 0x1859 SWAP1 DUP7 PUSH2 0x2102 JUMP JUMPDEST PUSH2 0x1863 SWAP2 SWAP1 PUSH2 0x2119 JUMP JUMPDEST SWAP2 POP JUMPDEST PUSH1 0x13 SLOAD PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x1879 JUMPI POP PUSH1 0x12 SLOAD ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x189C JUMPI PUSH1 0x12 SLOAD PUSH2 0x2710 SWAP1 PUSH2 0x188F SWAP1 DUP7 PUSH2 0x2102 JUMP JUMPDEST PUSH2 0x1899 SWAP2 SWAP1 PUSH2 0x2119 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x18AA DUP7 DUP9 PUSH2 0x213B JUMP JUMPDEST PUSH2 0x18B4 SWAP2 SWAP1 PUSH2 0x213B JUMP JUMPDEST PUSH2 0x18BE SWAP2 SWAP1 PUSH2 0x213B JUMP JUMPDEST SWAP1 POP DUP4 ISZERO PUSH2 0x18D2 JUMPI PUSH2 0x18D2 DUP8 PUSH1 0x0 DUP7 PUSH2 0x1B44 JUMP JUMPDEST DUP3 ISZERO PUSH2 0x18E3 JUMPI PUSH2 0x18E3 DUP8 ADDRESS DUP6 PUSH2 0x1B44 JUMP JUMPDEST DUP2 ISZERO PUSH2 0x18FD JUMPI PUSH2 0x18F2 DUP3 PUSH2 0x1C6E JUMP JUMPDEST PUSH2 0x18FD DUP8 ADDRESS DUP5 PUSH2 0x1B44 JUMP JUMPDEST PUSH2 0x1908 DUP8 DUP8 DUP4 PUSH2 0x1B44 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xFF DUP4 EQ PUSH2 0x192B JUMPI PUSH2 0x1924 DUP4 PUSH2 0x1CBB JUMP JUMPDEST SWAP1 POP PUSH2 0x787 JUMP JUMPDEST DUP2 DUP1 SLOAD PUSH2 0x1937 SWAP1 PUSH2 0x2043 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1963 SWAP1 PUSH2 0x2043 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x19B0 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1985 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x19B0 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1993 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH2 0x787 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 GT ISZERO PUSH2 0x19F7 JUMPI POP PUSH1 0x0 SWAP2 POP PUSH1 0x3 SWAP1 POP DUP3 PUSH2 0x1A81 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP1 DUP5 MSTORE DUP11 SWAP1 MSTORE PUSH1 0xFF DUP10 AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1A4B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1A77 JUMPI POP PUSH1 0x0 SWAP3 POP PUSH1 0x1 SWAP2 POP DUP3 SWAP1 POP PUSH2 0x1A81 JUMP JUMPDEST SWAP3 POP PUSH1 0x0 SWAP2 POP DUP2 SWAP1 POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1A9F JUMPI PUSH2 0x1A9F PUSH2 0x214E JUMP JUMPDEST SUB PUSH2 0x1AA8 JUMPI POP POP JUMP JUMPDEST PUSH1 0x1 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1ABC JUMPI PUSH2 0x1ABC PUSH2 0x214E JUMP JUMPDEST SUB PUSH2 0x1ADA JUMPI PUSH1 0x40 MLOAD PUSH4 0xF645EEDF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1AEE JUMPI PUSH2 0x1AEE PUSH2 0x214E JUMP JUMPDEST SUB PUSH2 0x1B0F JUMPI PUSH1 0x40 MLOAD PUSH4 0xFCE698F7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x7B7 JUMP JUMPDEST PUSH1 0x3 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1B23 JUMPI PUSH2 0x1B23 PUSH2 0x214E JUMP JUMPDEST SUB PUSH2 0xAFA JUMPI PUSH1 0x40 MLOAD PUSH4 0x35E2F383 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x7B7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1B6F JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1B64 SWAP2 SWAP1 PUSH2 0x20B9 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x1BE1 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x1BC2 JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x7B7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1BFD JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x1C1C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1C61 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x1B PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1C80 SWAP2 SWAP1 PUSH2 0x20B9 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0x3EEB9763473A030C467B8F096A99E1825A88C6A821C131E1FBB007246A80359C SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x1CC8 DUP4 PUSH2 0x1CFA JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY POP POP POP SWAP2 DUP3 MSTORE POP PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND PUSH1 0x1F DUP2 GT ISZERO PUSH2 0x787 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2CD44AC3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1D48 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x1D2C JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1D7B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1D22 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1D99 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1DB1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1DBA DUP4 PUSH2 0x1D82 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1DDD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH2 0x1DF4 PUSH1 0x40 DUP6 ADD PUSH2 0x1D82 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x9B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1E1E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1E27 DUP4 PUSH2 0x1D82 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x1E37 DUP2 PUSH2 0x1DFD JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1E54 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1D7B DUP3 PUSH2 0x1D82 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1E72 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1E7B DUP5 PUSH2 0x1D82 JUMP JUMPDEST SWAP3 POP PUSH2 0x1E89 PUSH1 0x20 DUP6 ADD PUSH2 0x1D82 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1EAB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1EC5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x1ED5 PUSH1 0x20 DUP5 ADD PUSH2 0x1D82 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1EF4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP3 CALLDATALOAD SWAP5 PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP5 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP4 PUSH1 0x60 ADD CALLDATALOAD SWAP3 POP SWAP1 POP JUMP JUMPDEST PUSH1 0xFF PUSH1 0xF8 SHL DUP9 AND DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 PUSH1 0xE0 DUP2 DUP5 ADD MSTORE PUSH2 0x1F30 PUSH1 0xE0 DUP5 ADD DUP11 PUSH2 0x1D22 JUMP JUMPDEST DUP4 DUP2 SUB PUSH1 0x40 DUP6 ADD MSTORE PUSH2 0x1F42 DUP2 DUP11 PUSH2 0x1D22 JUMP JUMPDEST PUSH1 0x60 DUP6 ADD DUP10 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x80 DUP7 ADD MSTORE PUSH1 0xA0 DUP6 ADD DUP8 SWAP1 MSTORE DUP5 DUP2 SUB PUSH1 0xC0 DUP7 ADD MSTORE DUP6 MLOAD DUP1 DUP3 MSTORE DUP4 DUP8 ADD SWAP3 POP SWAP1 DUP4 ADD SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1F94 JUMPI DUP4 MLOAD DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x1F78 JUMP JUMPDEST POP SWAP1 SWAP13 SWAP12 POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x1FC1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1FCA DUP9 PUSH2 0x1D82 JUMP JUMPDEST SWAP7 POP PUSH2 0x1FD8 PUSH1 0x20 DUP10 ADD PUSH2 0x1D82 JUMP JUMPDEST SWAP6 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x1FFC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 SWAP3 SWAP6 SWAP5 PUSH1 0xA0 DUP5 ADD CALLDATALOAD SWAP5 POP PUSH1 0xC0 SWAP1 SWAP4 ADD CALLDATALOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x202C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2035 DUP4 PUSH2 0x1D82 JUMP JUMPDEST SWAP2 POP PUSH2 0x1ED5 PUSH1 0x20 DUP5 ADD PUSH2 0x1D82 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x2057 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2077 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xC SWAP1 DUP3 ADD MSTORE PUSH12 0x8CCACA40E8DEDE40D0D2CED PUSH1 0xA3 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x787 JUMPI PUSH2 0x787 PUSH2 0x20A3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x20DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x20F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1D7B DUP2 PUSH2 0x1DFD JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x787 JUMPI PUSH2 0x787 PUSH2 0x20A3 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x2136 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x787 JUMPI PUSH2 0x787 PUSH2 0x20A3 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD3 TIMESTAMP 0xB5 MSTORE8 DUP2 0xE ADDRESS SWAP4 0xBB 0xD2 POP SWAP5 PUSH15 0x6D015330E6400F4BE3CA3443AF6ACE GASLIMIT 0xFB JUMP RETURNDATACOPY PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"503:10621:23:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1760:89:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3979:186;;;;;;:::i;:::-;;:::i;:::-;;;1269:14:25;;1262:22;1244:41;;1232:2;1217:18;3979:186:3;1104:187:25;4860:492:23;;;;;;:::i;:::-;;:::i;:::-;;6172:177;;;;;;:::i;:::-;;:::i;10651:207::-;;;;;;:::i;:::-;;:::i;:::-;;;2403:25:25;;;2391:2;2376:18;10651:207:23;2257:177:25;1764:40:23;;;;;;;;;;;;;;;;2607:25:25;;;2675:14;;2668:22;2663:2;2648:18;;2641:50;2580:18;1764:40:23;2439:258:25;2830:97:3;2908:12;;2830:97;;4757:244;;;;;;:::i;:::-;;:::i;5674:235:23:-;;;;;;:::i;:::-;;:::i;2688:82:3:-;;;2761:2;3177:36:25;;3165:2;3150:18;2688:82:3;3035:184:25;2659:112:6;;;:::i;1963:46:23:-;;;;;;:::i;:::-;;;;;;;;;;;;;;618:87:5;;;;;;:::i;:::-;;:::i;9865:60:23:-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;2015:46;;;;;;:::i;:::-;;;;;;;;;;;;;;1666:40;;;;;;;;;;;;;;;;;;;;;;;;;4103:25:25;;;4159:2;4144:18;;4137:34;;;;4187:18;;;4180:34;;;;4245:2;4230:18;;4223:34;4301:14;4294:22;4288:3;4273:19;;4266:51;4090:3;4075:19;1666:40:23;3850:473:25;1918:34:23;;;;;;;;;5950:180;;;;;;:::i;:::-;;:::i;1847:35::-;;;;;;2067:50;;;;;;:::i;:::-;;;;;;;;;;;;;;;;9936:110;;;;;;:::i;:::-;;:::i;5395:269::-;;;;;;:::i;:::-;;:::i;3880:595::-;;;;;;:::i;:::-;;:::i;2985:116:3:-;;;;;;:::i;:::-;-1:-1:-1;;;;;3076:18:3;3050:7;3076:18;;;;;;;;;;;;2985:116;2293:101:0;;;:::i;1021:158:5:-;;;;;;:::i;:::-;;:::i;2409:143:6:-;;;;;;:::i;:::-;;:::i;5243:557:18:-;;;:::i;:::-;;;;;;;;;;;;;:::i;4485:221:23:-;;;:::i;1638:85:0:-;1710:6;;1638:85;;-1:-1:-1;;;;;1710:6:0;;;6128:51:25;;6116:2;6101:18;1638:85:0;5982:203:25;1962:93:3;;;:::i;1712:46:23:-;;;;;;;;;;;-1:-1:-1;;;;;1712:46:23;;;-1:-1:-1;;;1712:46:23;;;;;;;;;;;;;;;6415:25:25;;;6471:2;6456:18;;6449:34;;;;-1:-1:-1;;;;;6519:32:25;6514:2;6499:18;;6492:60;6595:14;6588:22;6583:2;6568:18;;6561:50;6402:3;6387:19;;6190:427;3296:178:3;;;;;;:::i;:::-;;:::i;4716:97:23:-;;;:::i;10868:104::-;10948:17;;10868:104;;10298:316;;;;;;:::i;:::-;;:::i;6385:131::-;;;;;;:::i;:::-;;:::i;9813:46::-;;;;;;:::i;:::-;;;;;;;;;;;;;;1815:26;;;;;;1683:672:6;;;;;;:::i;:::-;;:::i;10088:200:23:-;;;:::i;3532:140:3:-;;;;;;:::i;:::-;-1:-1:-1;;;;;3638:18:3;;;3612:7;3638:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3532:140;10982::23;;;;;;:::i;:::-;-1:-1:-1;;;;;11080:35:23;11057:4;11080:35;;;:26;:35;;;;;;;;;10982:140;2543:215:0;;;;;;:::i;:::-;;:::i;2123:45:23:-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1760:89:3;1805:13;1837:5;1830:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1760:89;:::o;3979:186::-;4052:4;735:10:9;4106:31:3;735:10:9;4122:7:3;4131:5;4106:8;:31::i;:::-;4154:4;4147:11;;;3979:186;;;;;:::o;4860:492:23:-;1531:13:0;:11;:13::i;:::-;5067:3:23::1;5043:20;:27;;5035:52;;;;-1:-1:-1::0;;;5035:52:23::1;;;;;;;:::i;:::-;;;;;;;;;5107:19;:62:::0;;;;5179:39;:62;5251:33;:50;;-1:-1:-1;;;;;;5311:34:23;-1:-1:-1;;;;;5251:50:23;;::::1;5311:34:::0;;;;-1:-1:-1;;;5311:34:23::1;::::0;;4860:492::o;6172:177::-;1531:13:0;:11;:13::i;:::-;-1:-1:-1;;;;;6258:22:23;::::1;;::::0;;;:13:::1;:22;::::0;;;;;;;;:36;;-1:-1:-1;;6258:36:23::1;::::0;::::1;;::::0;;::::1;::::0;;;6309:33;;1244:41:25;;;6309:33:23::1;::::0;1217:18:25;6309:33:23::1;;;;;;;6172:177:::0;;:::o;10651:207::-;-1:-1:-1;;;;;10744:35:23;;10721:7;10744:35;;;:26;:35;;;;;;;;10740:66;;;-1:-1:-1;;;;;3076:18:3;;3050:7;3076:18;;;;;;;;;;;10788::23;2985:116:3;10740:66:23;-1:-1:-1;;;;;;10823:28:23;;;;;:19;:28;;;;;;;10651:207::o;4757:244:3:-;4844:4;735:10:9;4900:37:3;4916:4;735:10:9;4931:5:3;4900:15;:37::i;:::-;4947:26;4957:4;4963:2;4967:5;4947:9;:26::i;:::-;-1:-1:-1;4990:4:3;;4757:244;-1:-1:-1;;;;4757:244:3:o;5674:235:23:-;1531:13:0;:11;:13::i;:::-;-1:-1:-1;;;;;5761:35:23;::::1;;::::0;;;:26:::1;:35;::::0;;;;;::::1;;5760:36;5752:65;;;::::0;-1:-1:-1;;;5752:65:23;;8513:2:25;5752:65:23::1;::::0;::::1;8495:21:25::0;8552:2;8532:18;;;8525:30;-1:-1:-1;;;8571:18:25;;;8564:46;8627:18;;5752:65:23::1;8311:340:25::0;5752:65:23::1;-1:-1:-1::0;;;;;5827:35:23::1;;::::0;;;:26:::1;:35;::::0;;;;:42;;-1:-1:-1;;5827:42:23::1;5865:4;5827:42:::0;;::::1;::::0;;;5879:9:::1;:23:::0;;;;::::1;::::0;;;;;;::::1;::::0;;-1:-1:-1;;;;;;5879:23:23::1;::::0;;::::1;::::0;;5674:235::o;2659:112:6:-;2718:7;2744:20;:18;:20::i;:::-;2737:27;;2659:112;:::o;618:87:5:-;672:26;735:10:9;692:5:5;672;:26::i;:::-;618:87;:::o;5950:180:23:-;1531:13:0;:11;:13::i;:::-;6051:3:23::1;6032:15;:22;;6024:47;;;;-1:-1:-1::0;;;6024:47:23::1;;;;;;;:::i;:::-;6091:14;:32:::0;5950:180::o;9936:110::-;10028:10;3050:7:3;3076:18;;;;;;;;;;;-1:-1:-1;;;;;9992:22:23;;;;;;:11;:22;;;;;:47;;:22;;;:47;;;;;:::i;:::-;;;;-1:-1:-1;;;9936:110:23:o;5395:269::-;1531:13:0;:11;:13::i;:::-;5515:3:23::1;5490:21;:28;;5482:53;;;;-1:-1:-1::0;;;5482:53:23::1;;;;;;;:::i;:::-;5555:16;:61:::0;5626:24;:31;;-1:-1:-1;;5626:31:23::1;5653:4;5626:31;::::0;;5395:269::o;3880:595::-;1531:13:0;:11;:13::i;:::-;4075:16:23::1;:51:::0;;;4136:28;:43;;;4189:31;:49;;;4248:32;:51;;;4323:145:::1;::::0;;9149:25:25;;;9205:2;9190:18;;9183:34;;;9233:18;;;9226:34;;;9291:2;9276:18;;9269:34;;;4323:145:23::1;::::0;9136:3:25;9121:19;4323:145:23::1;;;;;;;3880:595:::0;;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1021:158:5:-;1096:45;1112:7;735:10:9;1135:5:5;1096:15;:45::i;:::-;1151:21;1157:7;1166:5;1151;:21::i;:::-;1021:158;;:::o;2409:143:6:-;-1:-1:-1;;;;;624:14:10;;2500:7:6;624:14:10;;;:7;:14;;;;;;2526:19:6;538:107:10;5243:557:18;5341:13;5368:18;5400:21;5435:15;5464:25;5503:12;5529:27;5632:13;:11;:13::i;:::-;5659:16;:14;:16::i;:::-;5767;;;5751:1;5767:16;;;;;;;;;-1:-1:-1;;;5581:212:18;;;-1:-1:-1;5581:212:18;;-1:-1:-1;5689:13:18;;-1:-1:-1;5724:4:18;;-1:-1:-1;5751:1:18;-1:-1:-1;5767:16:18;-1:-1:-1;5581:212:18;-1:-1:-1;5243:557:18:o;4485:221:23:-;1531:13:0;:11;:13::i;:::-;4548:14:23::1;::::0;::::1;;4547:15;4539:51;;;::::0;-1:-1:-1;;;4539:51:23;;9648:2:25;4539:51:23::1;::::0;::::1;9630:21:25::0;9687:2;9667:18;;;9660:30;9726:25;9706:18;;;9699:53;9769:18;;4539:51:23::1;9446:347:25::0;4539:51:23::1;4600:14;:21:::0;;-1:-1:-1;;4600:21:23::1;4617:4;4600:21;::::0;;4645:12:::1;4631:11;:26:::0;;;4672:27:::1;::::0;::::1;::::0;::::1;::::0;2403:25:25;;;2391:2;2376:18;;2257:177;4672:27:23::1;;;;;;;;4485:221::o:0;1962:93:3:-;2009:13;2041:7;2034:14;;;;;:::i;3296:178::-;3365:4;735:10:9;3419:27:3;735:10:9;3436:2:3;3440:5;3419:9;:27::i;4716:97:23:-;1531:13:0;:11;:13::i;:::-;4774:24:23;:32;;-1:-1:-1;;4774:32:23::1;::::0;;4716:97::o;10298:316::-;1531:13:0;:11;:13::i;:::-;10400:4:23::1;-1:-1:-1::0;;;;;10383:22:23;::::1;::::0;10375:61:::1;;;::::0;-1:-1:-1;;;10375:61:23;;10000:2:25;10375:61:23::1;::::0;::::1;9982:21:25::0;10039:2;10019:18;;;10012:30;10078:28;10058:18;;;10051:56;10124:18;;10375:61:23::1;9798:350:25::0;10375:61:23::1;10464:38;::::0;-1:-1:-1;;;10464:38:23;;10496:4:::1;10464:38;::::0;::::1;6128:51:25::0;10446:15:23::1;::::0;-1:-1:-1;;;;;10464:23:23;::::1;::::0;::::1;::::0;6101:18:25;;10464:38:23::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10446:56;;10530:1;10520:7;:11;10512:45;;;::::0;-1:-1:-1;;;10512:45:23;;10544:2:25;10512:45:23::1;::::0;::::1;10526:21:25::0;10583:2;10563:18;;;10556:30;-1:-1:-1;;;10602:18:25;;;10595:51;10663:18;;10512:45:23::1;10342:345:25::0;10512:45:23::1;10574:5;-1:-1:-1::0;;;;;10567:22:23::1;;10590:7;1710:6:0::0;;-1:-1:-1;;;;;1710:6:0;;1638:85;10590:7:23::1;10567:40;::::0;-1:-1:-1;;;;;;10567:40:23::1;::::0;;;;;;-1:-1:-1;;;;;10884:32:25;;;10567:40:23::1;::::0;::::1;10866:51:25::0;10933:18;;;10926:34;;;10839:18;;10567:40:23::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;10365:249;10298:316:::0;:::o;6385:131::-;1531:13:0;:11;:13::i;:::-;-1:-1:-1;;;;;6471:27:23;;;::::1;;::::0;;;:18:::1;:27;::::0;;;;:38;;-1:-1:-1;;6471:38:23::1;::::0;::::1;;::::0;;;::::1;::::0;;6385:131::o;1683:672:6:-;1904:8;1886:15;:26;1882:97;;;1935:33;;-1:-1:-1;;;1935:33:6;;;;;2403:25:25;;;2376:18;;1935:33:6;2257:177:25;1882:97:6;1989:18;1024:95;2048:5;2055:7;2064:5;2071:16;2081:5;-1:-1:-1;;;;;1121:14:10;819:7;1121:14;;;:7;:14;;;;;:16;;;;;;;;;759:395;2071:16:6;2020:78;;;;;;11508:25:25;;;;-1:-1:-1;;;;;11607:15:25;;;11587:18;;;11580:43;11659:15;;;;11639:18;;;11632:43;11691:18;;;11684:34;11734:19;;;11727:35;11778:19;;;11771:35;;;11480:19;;2020:78:6;;;;;;;;;;;;2010:89;;;;;;1989:110;;2110:12;2125:28;2142:10;2125:16;:28::i;:::-;2110:43;;2164:14;2181:28;2195:4;2201:1;2204;2207;2181:13;:28::i;:::-;2164:45;;2233:5;-1:-1:-1;;;;;2223:15:6;:6;-1:-1:-1;;;;;2223:15:6;;2219:88;;2261:35;;-1:-1:-1;;;2261:35:6;;-1:-1:-1;;;;;12047:15:25;;;2261:35:6;;;12029:34:25;12099:15;;12079:18;;;12072:43;11964:18;;2261:35:6;11817:304:25;2219:88:6;2317:31;2326:5;2333:7;2342:5;2317:8;:31::i;:::-;1872:483;;;1683:672;;;;;;;:::o;10088:200:23:-;1531:13:0;:11;:13::i;:::-;10164:21:23::1;10203:11:::0;10195:42:::1;;;::::0;-1:-1:-1;;;10195:42:23;;12328:2:25;10195:42:23::1;::::0;::::1;12310:21:25::0;12367:2;12347:18;;;12340:30;-1:-1:-1;;;12386:18:25;;;12379:48;12444:18;;10195:42:23::1;12126:342:25::0;10195:42:23::1;1710:6:0::0;;10247:34:23::1;::::0;-1:-1:-1;;;;;1710:6:0;;;;10247:34:23;::::1;;;::::0;10273:7;;10247:34:::1;::::0;;;10273:7;1710:6:0;10247:34:23;::::1;;;;;;;;;;;;;::::0;::::1;;;;2543:215:0::0;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:0;::::1;2623:91;;2672:31;::::0;-1:-1:-1;;;2672:31:0;;2700:1:::1;2672:31;::::0;::::1;6128:51:25::0;6101:18;;2672:31:0::1;5982:203:25::0;2623:91:0::1;2723:28;2742:8;2723:18;:28::i;8707:128:3:-:0;8791:37;8800:5;8807:7;8816:5;8823:4;8791:8;:37::i;1796:162:0:-;1710:6;;-1:-1:-1;;;;;1710:6:0;735:10:9;1855:23:0;1851:101;;1901:40;;-1:-1:-1;;;1901:40:0;;735:10:9;1901:40:0;;;6128:51:25;6101:18;;1901:40:0;5982:203:25;10396:476:3;-1:-1:-1;;;;;3638:18:3;;;10495:24;3638:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;-1:-1:-1;;10561:36:3;;10557:309;;;10636:5;10617:16;:24;10613:130;;;10668:60;;-1:-1:-1;;;10668:60:3;;-1:-1:-1;;;;;12693:32:25;;10668:60:3;;;12675:51:25;12742:18;;;12735:34;;;12785:18;;;12778:34;;;12648:18;;10668:60:3;12473:345:25;10613:130:3;10784:57;10793:5;10800:7;10828:5;10809:16;:24;10835:5;10784:8;:57::i;:::-;10485:387;10396:476;;;:::o;5374:300::-;-1:-1:-1;;;;;5457:18:3;;5453:86;;5498:30;;-1:-1:-1;;;5498:30:3;;5525:1;5498:30;;;6128:51:25;6101:18;;5498:30:3;5982:203:25;5453:86:3;-1:-1:-1;;;;;5552:16:3;;5548:86;;5591:32;;-1:-1:-1;;;5591:32:3;;5620:1;5591:32;;;6128:51:25;6101:18;;5591:32:3;5982:203:25;5548:86:3;5643:24;5651:4;5657:2;5661:5;5643:7;:24::i;3945:262:18:-;3998:7;4029:4;-1:-1:-1;;;;;4038:11:18;4021:28;;:63;;;;;4070:14;4053:13;:31;4021:63;4017:184;;;-1:-1:-1;4107:22:18;;3945:262::o;4017:184::-;4167:23;4304:80;;;2079:95;4304:80;;;15705:25:25;4326:11:18;15746:18:25;;;15739:34;;;;4339:14:18;15789:18:25;;;15782:34;4355:13:18;15832:18:25;;;15825:34;4378:4:18;15875:19:25;;;15868:61;4268:7:18;;15677:19:25;;4304:80:18;;;;;;;;;;;;4294:91;;;;;;4287:98;;4213:179;;7965:206:3;-1:-1:-1;;;;;8035:21:3;;8031:89;;8079:30;;-1:-1:-1;;;8079:30:3;;8106:1;8079:30;;;6128:51:25;6101:18;;8079:30:3;5982:203:25;8031:89:3;8129:35;8137:7;8154:1;8158:5;8129:7;:35::i;2912:187:0:-;3004:6;;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;;3052:40;;3004:6;;;3020:17;3004:6;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;6120:126:18:-;6166:13;6198:41;:5;6225:13;6198:26;:41::i;6572:135::-;6621:13;6653:47;:8;6683:16;6653:29;:47::i;5017:176::-;5094:7;5120:66;5153:20;:18;:20::i;:::-;5175:10;4049:4:19;4043:11;-1:-1:-1;;;4067:23:19;;4119:4;4110:14;;4103:39;;;;4171:4;4162:14;;4155:34;4227:4;4212:20;;;3874:374;6887:260:17;6972:7;6992:17;7011:18;7031:16;7051:25;7062:4;7068:1;7071;7074;7051:10;:25::i;:::-;6991:85;;;;;;7086:28;7098:5;7105:8;7086:11;:28::i;:::-;-1:-1:-1;7131:9:17;;6887:260;-1:-1:-1;;;;;;6887:260:17:o;9682:432:3:-;-1:-1:-1;;;;;9794:19:3;;9790:89;;9836:32;;-1:-1:-1;;;9836:32:3;;9865:1;9836:32;;;6128:51:25;6101:18;;9836:32:3;5982:203:25;9790:89:3;-1:-1:-1;;;;;9892:21:3;;9888:90;;9936:31;;-1:-1:-1;;;9936:31:3;;9964:1;9936:31;;;6128:51:25;6101:18;;9936:31:3;5982:203:25;9888:90:3;-1:-1:-1;;;;;9987:18:3;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;:35;;;10032:76;;;;10082:7;-1:-1:-1;;;;;10066:31:3;10075:5;-1:-1:-1;;;;;10066:31:3;;10091:5;10066:31;;;;2403:25:25;;2391:2;2376:18;;2257:177;10066:31:3;;;;;;;;9682:432;;;;:::o;6578:2997:23:-;2894:14;;;;;:39;;-1:-1:-1;1710:6:0;;-1:-1:-1;;;;;1710:6:0;2912:10:23;:21;2894:39;2886:71;;;;-1:-1:-1;;;2886:71:23;;13025:2:25;2886:71:23;;;13007:21:25;13064:2;13044:18;;;13037:30;-1:-1:-1;;;13083:18:25;;;13076:49;13142:18;;2886:71:23;12823:343:25;2886:71:23;-1:-1:-1;;;;;6720:19:23;::::1;;::::0;;;:13:::1;:19;::::0;;;;;::::1;;6719:20;:42:::0;::::1;;;-1:-1:-1::0;;;;;;6744:17:23;::::1;;::::0;;;:13:::1;:17;::::0;;;;;::::1;;6743:18;6719:42;6711:66;;;::::0;-1:-1:-1;;;6711:66:23;;13373:2:25;6711:66:23::1;::::0;::::1;13355:21:25::0;13412:2;13392:18;;;13385:30;-1:-1:-1;;;13431:18:25;;;13424:41;13482:18;;6711:66:23::1;13171:335:25::0;6711:66:23::1;6854:24:::0;;::::1;;:43:::0;::::1;;;-1:-1:-1::0;1710:6:0;;-1:-1:-1;;;;;6882:15:23;;::::1;1710:6:0::0;;6882:15:23::1;;6854:43;:60;;;;-1:-1:-1::0;1710:6:0;;-1:-1:-1;;;;;6901:13:23;;::::1;1710:6:0::0;;6901:13:23::1;;6854:60;6850:1193;;;6985:1;6971:11;;:15;:81;;;;-1:-1:-1::0;7020:32:23;;7006:11:::1;::::0;:46:::1;::::0;7020:32;7006:46:::1;:::i;:::-;6990:12;:62;;6971:81;6967:186;;;1710:6:0::0;;-1:-1:-1;;;;;7080:13:23;;::::1;1710:6:0::0;;7080:13:23::1;::::0;:32:::1;;-1:-1:-1::0;1710:6:0;;-1:-1:-1;;;;;7097:15:23;;::::1;1710:6:0::0;;7097:15:23::1;7080:32;7072:66;;;::::0;-1:-1:-1;;;7072:66:23;;13713:2:25;7072:66:23::1;::::0;::::1;13695:21:25::0;13752:2;13732:18;;;13725:30;-1:-1:-1;;;13771:18:25;;;13764:51;13832:18;;7072:66:23::1;13511:345:25::0;7072:66:23::1;7254:33:::0;;-1:-1:-1;;;;;7246:41:23;;::::1;7254:33:::0;::::1;7246:41;:64:::0;::::1;;;-1:-1:-1::0;;;;;;7291:19:23;::::1;7305:4;7291:19;;7246:64;7242:791;;;7391:28:::0;;7381:38;::::1;;7373:73;;;::::0;-1:-1:-1;;;7373:73:23;;14063:2:25;7373:73:23::1;::::0;::::1;14045:21:25::0;14102:2;14082:18;;;14075:30;-1:-1:-1;;;14121:18:25;;;14114:52;14183:18;;7373:73:23::1;13861:346:25::0;7373:73:23::1;7576:16;:32:::0;-1:-1:-1;;;;;7548:15:23;::::1;7576:32;7548:15:::0;;;:11:::1;:15;::::0;;;;;:24:::1;::::0;7566:6;;7548:24:::1;:::i;:::-;:60;;7519:157;;;::::0;-1:-1:-1;;;7519:157:23;;14414:2:25;7519:157:23::1;::::0;::::1;14396:21:25::0;14453:2;14433:18;;;14426:30;14492:28;14472:18;;;14465:56;14538:18;;7519:157:23::1;14212:350:25::0;7519:157:23::1;7812:31:::0;;-1:-1:-1;;;;;7794:15:23;::::1;;::::0;;;:11:::1;:15;::::0;;;;;:49:::1;::::0;7812:31;7794:49:::1;:::i;:::-;7775:15;:68;;7746:161;;;::::0;-1:-1:-1;;;7746:161:23;;14769:2:25;7746:161:23::1;::::0;::::1;14751:21:25::0;14808:2;14788:18;;;14781:30;-1:-1:-1;;;14827:18:25;;;14820:52;14889:18;;7746:161:23::1;14567:346:25::0;7746:161:23::1;-1:-1:-1::0;;;;;7942:15:23;::::1;;::::0;;;:11:::1;:15;::::0;;;;:25;;7961:6;;7942:15;:25:::1;::::0;7961:6;;7942:25:::1;:::i;:::-;::::0;;;-1:-1:-1;;;;;;;7985:15:23;::::1;;::::0;;;:11:::1;:15;::::0;;;;8003::::1;7985:33:::0;;7242:791:::1;-1:-1:-1::0;;;;;8208:24:23;::::1;8087:18;8208:24:::0;;;:18:::1;:24;::::0;;;;;8087:18;;;;8208:24:::1;;8207:25;:52:::0;::::1;;;-1:-1:-1::0;;;;;;8237:22:23;::::1;;::::0;;;:18:::1;:22;::::0;;;;;::::1;;8236:23;8207:52;8203:609;;;8279:14;::::0;:18;8275:103:::1;;8358:5;8340:14;;8331:6;:23;;;;:::i;:::-;8330:33;;;;:::i;:::-;8317:46;;8275:103;8408:27:::0;;-1:-1:-1;;;8408:27:23;::::1;;;:74:::0;::::1;;;-1:-1:-1::0;8439:19:23::1;:39:::0;:43;;8408:74:::1;8404:189;;;8530:19;:39:::0;8573:5:::1;::::0;8521:48:::1;::::0;:6;:48:::1;:::i;:::-;8520:58;;;;:::i;:::-;8502:76;;8404:189;8623:24:::0;;::::1;;:69:::0;::::1;;;-1:-1:-1::0;8651:16:23::1;:37:::0;:41;;8623:69:::1;8619:183;;;8741:16;:37:::0;8782:5:::1;::::0;8732:46:::1;::::0;:6;:46:::1;:::i;:::-;8731:56;;;;:::i;:::-;8712:75;;8619:183;8830:22;8895:16:::0;8877:15;8855:19:::1;8864:10:::0;8855:6;:19:::1;:::i;:::-;:37;;;;:::i;:::-;:56;;;;:::i;:::-;8830:81:::0;-1:-1:-1;8958:14:23;;8954:88:::1;;8988:43;9002:4;9016:1;9020:10;8988:13;:43::i;:::-;9097:19:::0;;9093:176:::1;;9132:51;9146:4;9160;9167:15;9132:13;:51::i;:::-;9321:20:::0;;9317:157:::1;;9357:40;9380:16;9357:22;:40::i;:::-;9411:52;9425:4;9439;9446:16;9411:13;:52::i;:::-;9529:39;9543:4;9549:2;9553:14;9529:13;:39::i;:::-;6701:2874;;;;6578:2997:::0;;;:::o;3368:267:14:-;3462:13;1390:66;3491:46;;3487:142;;3560:15;3569:5;3560:8;:15::i;:::-;3553:22;;;;3487:142;3613:5;3606:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5203:1551:17;5329:17;;;6283:66;6270:79;;6266:164;;;-1:-1:-1;6381:1:17;;-1:-1:-1;6385:30:17;;-1:-1:-1;6417:1:17;6365:54;;6266:164;6541:24;;;6524:14;6541:24;;;;;;;;;16167:25:25;;;16240:4;16228:17;;16208:18;;;16201:45;;;;16262:18;;;16255:34;;;16305:18;;;16298:34;;;6541:24:17;;16139:19:25;;6541:24:17;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6541:24:17;;-1:-1:-1;;6541:24:17;;;-1:-1:-1;;;;;;;6579:20:17;;6575:113;;-1:-1:-1;6631:1:17;;-1:-1:-1;6635:29:17;;-1:-1:-1;6631:1:17;;-1:-1:-1;6615:62:17;;6575:113;6706:6;-1:-1:-1;6714:20:17;;-1:-1:-1;6714:20:17;;-1:-1:-1;5203:1551:17;;;;;;;;;:::o;7280:532::-;7375:20;7366:5;:29;;;;;;;;:::i;:::-;;7362:444;;7280:532;;:::o;7362:444::-;7471:29;7462:5;:38;;;;;;;;:::i;:::-;;7458:348;;7523:23;;-1:-1:-1;;;7523:23:17;;;;;;;;;;;7458:348;7576:35;7567:5;:44;;;;;;;;:::i;:::-;;7563:243;;7634:46;;-1:-1:-1;;;7634:46:17;;;;;2403:25:25;;;2376:18;;7634:46:17;2257:177:25;7563:243:17;7710:30;7701:5;:39;;;;;;;;:::i;:::-;;7697:109;;7763:32;;-1:-1:-1;;;7763:32:17;;;;;2403:25:25;;;2376:18;;7763:32:17;2257:177:25;5989:1107:3;-1:-1:-1;;;;;6078:18:3;;6074:540;;6230:5;6214:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;6074:540:3;;-1:-1:-1;6074:540:3;;-1:-1:-1;;;;;6288:15:3;;6266:19;6288:15;;;;;;;;;;;6321:19;;;6317:115;;;6367:50;;-1:-1:-1;;;6367:50:3;;-1:-1:-1;;;;;12693:32:25;;6367:50:3;;;12675:51:25;12742:18;;;12735:34;;;12785:18;;;12778:34;;;12648:18;;6367:50:3;12473:345:25;6317:115:3;-1:-1:-1;;;;;6552:15:3;;:9;:15;;;;;;;;;;6570:19;;;;6552:37;;6074:540;-1:-1:-1;;;;;6628:16:3;;6624:425;;6791:12;:21;;;;;;;6624:425;;;-1:-1:-1;;;;;7002:13:3;;:9;:13;;;;;;;;;;:22;;;;;;6624:425;7079:2;-1:-1:-1;;;;;7064:25:3;7073:4;-1:-1:-1;;;;;7064:25:3;;7083:5;7064:25;;;;2403::25;;2391:2;2376:18;;2257:177;7064:25:3;;;;;;;;5989:1107;;;:::o;9585:145:23:-;9672:6;9651:17;;:27;;;;;;;:::i;:::-;;;;-1:-1:-1;;9693:30:23;;2403:25:25;;;9693:30:23;;2391:2:25;2376:18;9693:30:23;;;;;;;9585:145;:::o;2078:378:14:-;2137:13;2162:11;2176:16;2187:4;2176:10;:16::i;:::-;2300:14;;;2311:2;2300:14;;;;;;;;;2162:30;;-1:-1:-1;2280:17:14;;2300:14;;;;;;;;;-1:-1:-1;;;2363:16:14;;;-1:-1:-1;2408:4:14;2399:14;;2392:28;;;;-1:-1:-1;2363:16:14;2078:378::o;2528:245::-;2589:7;2661:4;2625:40;;2688:2;2679:11;;2675:69;;;2713:20;;-1:-1:-1;;;2713:20:14;;;;;;;;;;;14:423:25;56:3;94:5;88:12;121:6;116:3;109:19;146:1;156:162;170:6;167:1;164:13;156:162;;;232:4;288:13;;;284:22;;278:29;260:11;;;256:20;;249:59;185:12;156:162;;;160:3;363:1;356:4;347:6;342:3;338:16;334:27;327:38;426:4;419:2;415:7;410:2;402:6;398:15;394:29;389:3;385:39;381:50;374:57;;;14:423;;;;:::o;442:220::-;591:2;580:9;573:21;554:4;611:45;652:2;641:9;637:18;629:6;611:45;:::i;:::-;603:53;442:220;-1:-1:-1;;;442:220:25:o;667:173::-;735:20;;-1:-1:-1;;;;;784:31:25;;774:42;;764:70;;830:1;827;820:12;764:70;667:173;;;:::o;845:254::-;913:6;921;974:2;962:9;953:7;949:23;945:32;942:52;;;990:1;987;980:12;942:52;1013:29;1032:9;1013:29;:::i;:::-;1003:39;1089:2;1074:18;;;;1061:32;;-1:-1:-1;;;845:254:25:o;1296:322::-;1373:6;1381;1389;1442:2;1430:9;1421:7;1417:23;1413:32;1410:52;;;1458:1;1455;1448:12;1410:52;1494:9;1481:23;1471:33;;1551:2;1540:9;1536:18;1523:32;1513:42;;1574:38;1608:2;1597:9;1593:18;1574:38;:::i;:::-;1564:48;;1296:322;;;;;:::o;1623:118::-;1709:5;1702:13;1695:21;1688:5;1685:32;1675:60;;1731:1;1728;1721:12;1746:315;1811:6;1819;1872:2;1860:9;1851:7;1847:23;1843:32;1840:52;;;1888:1;1885;1878:12;1840:52;1911:29;1930:9;1911:29;:::i;:::-;1901:39;;1990:2;1979:9;1975:18;1962:32;2003:28;2025:5;2003:28;:::i;:::-;2050:5;2040:15;;;1746:315;;;;;:::o;2066:186::-;2125:6;2178:2;2166:9;2157:7;2153:23;2149:32;2146:52;;;2194:1;2191;2184:12;2146:52;2217:29;2236:9;2217:29;:::i;2702:328::-;2779:6;2787;2795;2848:2;2836:9;2827:7;2823:23;2819:32;2816:52;;;2864:1;2861;2854:12;2816:52;2887:29;2906:9;2887:29;:::i;:::-;2877:39;;2935:38;2969:2;2958:9;2954:18;2935:38;:::i;:::-;2925:48;;3020:2;3009:9;3005:18;2992:32;2982:42;;2702:328;;;;;:::o;3406:180::-;3465:6;3518:2;3506:9;3497:7;3493:23;3489:32;3486:52;;;3534:1;3531;3524:12;3486:52;-1:-1:-1;3557:23:25;;3406:180;-1:-1:-1;3406:180:25:o;3591:254::-;3659:6;3667;3720:2;3708:9;3699:7;3695:23;3691:32;3688:52;;;3736:1;3733;3726:12;3688:52;3772:9;3759:23;3749:33;;3801:38;3835:2;3824:9;3820:18;3801:38;:::i;:::-;3791:48;;3591:254;;;;;:::o;4328:385::-;4414:6;4422;4430;4438;4491:3;4479:9;4470:7;4466:23;4462:33;4459:53;;;4508:1;4505;4498:12;4459:53;-1:-1:-1;;4531:23:25;;;4601:2;4586:18;;4573:32;;-1:-1:-1;4652:2:25;4637:18;;4624:32;;4703:2;4688:18;4675:32;;-1:-1:-1;4328:385:25;-1:-1:-1;4328:385:25:o;4718:1259::-;5124:3;5119;5115:13;5107:6;5103:26;5092:9;5085:45;5066:4;5149:2;5187:3;5182:2;5171:9;5167:18;5160:31;5214:46;5255:3;5244:9;5240:19;5232:6;5214:46;:::i;:::-;5308:9;5300:6;5296:22;5291:2;5280:9;5276:18;5269:50;5342:33;5368:6;5360;5342:33;:::i;:::-;5406:2;5391:18;;5384:34;;;-1:-1:-1;;;;;5455:32:25;;5449:3;5434:19;;5427:61;5475:3;5504:19;;5497:35;;;5569:22;;;5563:3;5548:19;;5541:51;5641:13;;5663:22;;;5739:15;;;;-1:-1:-1;5701:15:25;;;;-1:-1:-1;5782:169:25;5796:6;5793:1;5790:13;5782:169;;;5857:13;;5845:26;;5926:15;;;;5891:12;;;;5818:1;5811:9;5782:169;;;-1:-1:-1;5968:3:25;;4718:1259;-1:-1:-1;;;;;;;;;;;;4718:1259:25:o;6622:693::-;6733:6;6741;6749;6757;6765;6773;6781;6834:3;6822:9;6813:7;6809:23;6805:33;6802:53;;;6851:1;6848;6841:12;6802:53;6874:29;6893:9;6874:29;:::i;:::-;6864:39;;6922:38;6956:2;6945:9;6941:18;6922:38;:::i;:::-;6912:48;;7007:2;6996:9;6992:18;6979:32;6969:42;;7058:2;7047:9;7043:18;7030:32;7020:42;;7112:3;7101:9;7097:19;7084:33;7157:4;7150:5;7146:16;7139:5;7136:27;7126:55;;7177:1;7174;7167:12;7126:55;6622:693;;;;-1:-1:-1;6622:693:25;;;;7200:5;7252:3;7237:19;;7224:33;;-1:-1:-1;7304:3:25;7289:19;;;7276:33;;6622:693;-1:-1:-1;;6622:693:25:o;7320:260::-;7388:6;7396;7449:2;7437:9;7428:7;7424:23;7420:32;7417:52;;;7465:1;7462;7455:12;7417:52;7488:29;7507:9;7488:29;:::i;:::-;7478:39;;7536:38;7570:2;7559:9;7555:18;7536:38;:::i;7585:380::-;7664:1;7660:12;;;;7707;;;7728:61;;7782:4;7774:6;7770:17;7760:27;;7728:61;7835:2;7827:6;7824:14;7804:18;7801:38;7798:161;;7881:10;7876:3;7872:20;7869:1;7862:31;7916:4;7913:1;7906:15;7944:4;7941:1;7934:15;7798:161;;7585:380;;;:::o;7970:336::-;8172:2;8154:21;;;8211:2;8191:18;;;8184:30;-1:-1:-1;;;8245:2:25;8230:18;;8223:42;8297:2;8282:18;;7970:336::o;8656:127::-;8717:10;8712:3;8708:20;8705:1;8698:31;8748:4;8745:1;8738:15;8772:4;8769:1;8762:15;8788:125;8853:9;;;8874:10;;;8871:36;;;8887:18;;:::i;10153:184::-;10223:6;10276:2;10264:9;10255:7;10251:23;10247:32;10244:52;;;10292:1;10289;10282:12;10244:52;-1:-1:-1;10315:16:25;;10153:184;-1:-1:-1;10153:184:25:o;10971:245::-;11038:6;11091:2;11079:9;11070:7;11066:23;11062:32;11059:52;;;11107:1;11104;11097:12;11059:52;11139:9;11133:16;11158:28;11180:5;11158:28;:::i;14918:168::-;14991:9;;;15022;;15039:15;;;15033:22;;15019:37;15009:71;;15060:18;;:::i;15091:217::-;15131:1;15157;15147:132;;15201:10;15196:3;15192:20;15189:1;15182:31;15236:4;15233:1;15226:15;15264:4;15261:1;15254:15;15147:132;-1:-1:-1;15293:9:25;;15091:217::o;15313:128::-;15380:9;;;15401:11;;;15398:37;;;15415:18;;:::i;16343:127::-;16404:10;16399:3;16395:20;16392:1;16385:31;16435:4;16432:1;16425:15;16459:4;16456:1;16449:15"},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","autoLiquidityConfig()":"9e7e42cd","balanceOf(address)":"70a08231","burn(uint256)":"42966c68","burnFeePercent()":"4e0856a7","burnFrom(address,uint256)":"79cc6790","configureAutoLiquidity(uint256,uint256,address)":"0eda5f32","configureFairLaunch(uint256,uint256,uint256,uint256)":"6d1d2159","decimals()":"313ce567","delegate(address)":"5c19a95c","disableFairLaunch()":"a9277c0a","eip712Domain()":"84b0196e","emergencyWithdraw()":"db2e21bc","emergencyWithdrawTokens(address)":"b2af127c","enableReflections(uint256)":"6010ba34","enableTrading()":"8a8c523c","excludeFromFees(address,bool)":"c0246668","excludeFromReflections(address)":"25f25f4d","fairLaunchConfig()":"49a64d93","getReflectionBalance(address)":"1682aa49","getTotalReflections()":"ae267735","hasVoted(uint256,address)":"43859632","isBlacklisted(address)":"fe575a87","isExcludedFromFees(address)":"4fbee193","isExcludedFromReflections(address)":"e6375d3e","lastBuyTime(address)":"3fecc2e2","launchBlock()":"d00efb2f","name()":"06fdde03","nonces(address)":"7ecebe00","owner()":"8da5cb5b","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf","reflectionConfig()":"180aa7c7","renounceOwnership()":"715018a6","setBlacklist(address,bool)":"153b0d1e","setBurnFee(uint256)":"4bf2c7c9","symbol()":"95d89b41","totalBought(address)":"4663b1b2","totalSupply()":"18160ddd","tradingEnabled()":"4ada218b","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd","transferOwnership(address)":"f2fde38b","votingPower(address)":"c07473f6"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"initialSupply\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"ERC2612ExpiredSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC2612InvalidSigner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokensSwapped\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"ethReceived\",\"type\":\"uint256\"}],\"name\":\"AutoLiquidityAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isBlacklisted\",\"type\":\"bool\"}],\"name\":\"Blacklisted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"maxBuyPerWallet\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"maxBuyPerTx\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"cooldownPeriod\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"antiSnipeBlocks\",\"type\":\"uint256\"}],\"name\":\"FairLaunchConfigured\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ReflectionsDistributed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"TradingEnabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"autoLiquidityConfig\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidityFeePercent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minTokensBeforeSwap\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"liquidityPair\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"burnFeePercent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_liquidityFeePercent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_minTokensBeforeSwap\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_liquidityPair\",\"type\":\"address\"}],\"name\":\"configureAutoLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_maxBuyPerWallet\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxBuyPerTx\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_cooldownPeriod\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_antiSnipeBlocks\",\"type\":\"uint256\"}],\"name\":\"configureFairLaunch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"}],\"name\":\"delegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"disableFairLaunch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"emergencyWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"emergencyWithdrawTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_reflectionFeePercent\",\"type\":\"uint256\"}],\"name\":\"enableReflections\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enableTrading\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"excluded\",\"type\":\"bool\"}],\"name\":\"excludeFromFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"excludeFromReflections\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fairLaunchConfig\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"maxBuyPerWallet\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxBuyPerTx\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"cooldownPeriod\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"antiSnipeBlocks\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getReflectionBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalReflections\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"hasVoted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isBlacklisted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isExcludedFromFees\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isExcludedFromReflections\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"lastBuyTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"launchBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reflectionConfig\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"reflectionFeePercent\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"blacklisted\",\"type\":\"bool\"}],\"name\":\"setBlacklist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_burnFeePercent\",\"type\":\"uint256\"}],\"name\":\"setBurnFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"totalBought\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tradingEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"votingPower\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Meme token with fair launch mechanisms, anti-snipe protection, and advanced features\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC2612ExpiredSignature(uint256)\":[{\"details\":\"Permit deadline has expired.\"}],\"ERC2612InvalidSigner(address,address)\":[{\"details\":\"Mismatched signature.\"}],\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"eip712Domain()\":{\"details\":\"returns the fields and values that describe the domain separator used by this contract for EIP-712 signature.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"FairLaunchToken\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FairLaunchToken.sol\":\"FairLaunchToken\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x2659248df25e34000ed214b3dc8da2160bc39874c992b477d9e2b1b3283dc073\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c345af1b0e7ea28d1216d6a04ab28f5534a5229b9edf9ca3cd0e84950ae58d26\",\"dweb:/ipfs/QmY63jtSrYpLRe8Gj1ep2vMDCKxGNNG3hnNVKBVnrs2nmA\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":{\"keccak256\":\"0xaa7f0646f49ebe2606eeca169f85c56451bbaeeeb06265fa076a03369a25d1d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ee931d4e832385765967efe6366dcc6d00d6a2d794f9c66ee38283c03882de9c\",\"dweb:/ipfs/QmR6SkuJGYxpQeLz38rBdghqaWqEPfzUsL9kBoXgEXKtbD\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x27dbc90e5136ffe46c04f7596fc2dbcc3acebd8d504da3d93fdb8496e6de04f6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea8b92e4245d75a5579c10f22f118f7b4ba07c57341f181f0b2a85ff8663de3\",\"dweb:/ipfs/Qme3Ss5ByjmkxxkMdLpyu7fQ1PCtjNFH1wEFszt2BZePiG\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Nonces.sol\":{\"keccak256\":\"0x0082767004fca261c332e9ad100868327a863a88ef724e844857128845ab350f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://132dce9686a54e025eb5ba5d2e48208f847a1ec3e60a3e527766d7bf53fb7f9e\",\"dweb:/ipfs/QmXn1a2nUZMpu2z6S88UoTfMVtY2YNh86iGrzJDYmMkKeZ\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x1fcf8cceb1a67e6c8512267e780933c4a3f63ef44756e6c818fda79be51c8402\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://617d7d57f6f9cd449068b4d23daf485676d083aae648e038d05eb3a13291de35\",\"dweb:/ipfs/QmPADWPiGaSzZDFNpFEUx4ZPqhzPkYncBpHyTfAGcfsqzy\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x81c274a60a7ae232ae3dc9ff3a4011b4849a853c13b0832cd3351bb1bb2f0dae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9da0c20dc74358a2a76330818f3bac9d1e2ce3371aec847b9cbf5d147fbae4f6\",\"dweb:/ipfs/QmeczhmnFv1hbXKGLwbYXY6Rrytc9a5A2YaRi5QMMgjPnb\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x0c60057e7351874f086db8dc9291b7ada9ad62cb7725befd2991430d04a74572\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33cdfd1fc36410d45046f88ff9864350146b194736c32834baa38d99b843ffbe\",\"dweb:/ipfs/QmdVmqgFKjgEBURy4KUwWDA6J1LEg1BKcHcXsx4nkeHAD2\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x26670fef37d4adf55570ba78815eec5f31cb017e708f61886add4fc4da665631\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b16d45febff462bafd8a5669f904796a835baf607df58a8461916d3bf4f08c59\",\"dweb:/ipfs/QmU2eJFpjmT4vxeJWJyLeQb8Xht1kdB8Y6MKLDPFA9WPux\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"contracts/FairLaunchToken.sol\":{\"keccak256\":\"0xb1a7dd30933f81d99b85fa08931e56d835b762dc6ad433358b3fff1992372318\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://37ab2788ea28cd1535fbfb69f4f6fc426679300222db579f64f33494c8e282ff\",\"dweb:/ipfs/QmZGg5PyJa4XkvbB2384s4Myw9aCr3W1QR5KixDAoNTswm\"]}},\"version\":1}"}},"contracts/MemeCoinWithFees.sol":{"MemeCoinWithFees":{"abi":[{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"symbol","type":"string"},{"internalType":"uint256","name":"initialSupply","type":"uint256"},{"internalType":"address","name":"_owner","type":"address"},{"internalType":"address","name":"_creator","type":"address"},{"internalType":"address","name":"_platformFeeRecipient","type":"address"},{"internalType":"bool","name":"_canMint","type":"bool"},{"internalType":"bool","name":"_canBurn","type":"bool"},{"internalType":"bool","name":"_startWithFeesEnabled","type":"bool"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"inputs":[],"name":"EnforcedPause","type":"error"},{"inputs":[],"name":"ExpectedPause","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"creator","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"CreatorFeesWithdrawn","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"bool","name":"exempt","type":"bool"}],"name":"FeeExemptionUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"creatorFee","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"platformFee","type":"uint256"}],"name":"FeesCollected","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bool","name":"enabled","type":"bool"}],"name":"FeesToggled","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"newRecipient","type":"address"}],"name":"PlatformFeeRecipientUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"recipient","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"PlatformFeesWithdrawn","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"inputs":[],"name":"BPS_DIVISOR","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"CREATOR_FEE_BPS","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"PLATFORM_FEE_BPS","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"TOTAL_FEE_BPS","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"burnFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"calculateFees","outputs":[{"internalType":"uint256","name":"creatorFee","type":"uint256"},{"internalType":"uint256","name":"platformFee","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"canBurn","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"canMint","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"creator","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"disableMinting","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"feeExempt","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"feesEnabled","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getFeeStats","outputs":[{"internalType":"uint256","name":"creatorPending","type":"uint256"},{"internalType":"uint256","name":"platformPending","type":"uint256"},{"internalType":"uint256","name":"creatorTotal","type":"uint256"},{"internalType":"uint256","name":"platformTotal","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"pendingCreatorFees","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"pendingPlatformFees","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"platformFeeRecipient","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"tokenAddress","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"recoverToken","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bool","name":"exempt","type":"bool"}],"name":"setFeeExempt","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"}],"name":"shouldTakeFees","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"toggleFees","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"totalCreatorFeesCollected","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalPlatformFeesCollected","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"unpause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newRecipient","type":"address"}],"name":"updatePlatformFeeRecipient","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"withdrawCreatorFees","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"withdrawPlatformFees","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_1444":{"entryPoint":null,"id":1444,"parameterSlots":0,"returnSlots":0},"@_361":{"entryPoint":null,"id":361,"parameterSlots":2,"returnSlots":0},"@_50":{"entryPoint":null,"id":50,"parameterSlots":1,"returnSlots":0},"@_8495":{"entryPoint":null,"id":8495,"parameterSlots":9,"returnSlots":0},"@_mint_664":{"entryPoint":609,"id":664,"parameterSlots":2,"returnSlots":0},"@_requireNotPaused_1376":{"entryPoint":1044,"id":1376,"parameterSlots":0,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":527,"id":146,"parameterSlots":1,"returnSlots":0},"@_update_631":{"entryPoint":1327,"id":631,"parameterSlots":3,"returnSlots":0},"@_update_8669":{"entryPoint":671,"id":8669,"parameterSlots":3,"returnSlots":0},"@calculateFees_8524":{"entryPoint":1259,"id":8524,"parameterSlots":1,"returnSlots":2},"@paused_1364":{"entryPoint":null,"id":1364,"parameterSlots":0,"returnSlots":1},"@shouldTakeFees_8568":{"entryPoint":1097,"id":8568,"parameterSlots":2,"returnSlots":1},"abi_decode_address_fromMemory":{"entryPoint":1831,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_bool_fromMemory":{"entryPoint":1860,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_string_fromMemory":{"entryPoint":1656,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256t_addresst_addresst_addresst_boolt_boolt_bool_fromMemory":{"entryPoint":1877,"id":null,"parameterSlots":2,"returnSlots":9},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0475c82d7c8af068c16284035332fff33ad7e4dce9cd4ac22f3356fa881f91bb__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d1c844379d3aa4fac459f0977b634b3ecd698d53154f9a4916336dfc9823566c__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"array_dataslot_string_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":2473,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":2543,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":2517,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":2495,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_string_storage":{"entryPoint":2165,"id":null,"parameterSlots":3,"returnSlots":0},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":2247,"id":null,"parameterSlots":2,"returnSlots":0},"extract_byte_array_length":{"entryPoint":2105,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":2451,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":1634,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:7607:25","statements":[{"nodeType":"YulBlock","src":"6:3:25","statements":[]},{"body":{"nodeType":"YulBlock","src":"46:95:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"63:1:25","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"70:3:25","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"75:10:25","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"66:3:25"},"nodeType":"YulFunctionCall","src":"66:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"56:6:25"},"nodeType":"YulFunctionCall","src":"56:31:25"},"nodeType":"YulExpressionStatement","src":"56:31:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"103:1:25","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"106:4:25","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"96:6:25"},"nodeType":"YulFunctionCall","src":"96:15:25"},"nodeType":"YulExpressionStatement","src":"96:15:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"127:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"130:4:25","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"120:6:25"},"nodeType":"YulFunctionCall","src":"120:15:25"},"nodeType":"YulExpressionStatement","src":"120:15:25"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"14:127:25"},{"body":{"nodeType":"YulBlock","src":"210:776:25","statements":[{"body":{"nodeType":"YulBlock","src":"259:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"268:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"271:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"261:6:25"},"nodeType":"YulFunctionCall","src":"261:12:25"},"nodeType":"YulExpressionStatement","src":"261:12:25"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"238:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"246:4:25","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"234:3:25"},"nodeType":"YulFunctionCall","src":"234:17:25"},{"name":"end","nodeType":"YulIdentifier","src":"253:3:25"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"230:3:25"},"nodeType":"YulFunctionCall","src":"230:27:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"223:6:25"},"nodeType":"YulFunctionCall","src":"223:35:25"},"nodeType":"YulIf","src":"220:55:25"},{"nodeType":"YulVariableDeclaration","src":"284:23:25","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"300:6:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"294:5:25"},"nodeType":"YulFunctionCall","src":"294:13:25"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"288:2:25","type":""}]},{"nodeType":"YulVariableDeclaration","src":"316:28:25","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"334:2:25","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"338:1:25","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"330:3:25"},"nodeType":"YulFunctionCall","src":"330:10:25"},{"kind":"number","nodeType":"YulLiteral","src":"342:1:25","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"326:3:25"},"nodeType":"YulFunctionCall","src":"326:18:25"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"320:2:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"367:22:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"369:16:25"},"nodeType":"YulFunctionCall","src":"369:18:25"},"nodeType":"YulExpressionStatement","src":"369:18:25"}]},"condition":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"359:2:25"},{"name":"_2","nodeType":"YulIdentifier","src":"363:2:25"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"356:2:25"},"nodeType":"YulFunctionCall","src":"356:10:25"},"nodeType":"YulIf","src":"353:36:25"},{"nodeType":"YulVariableDeclaration","src":"398:17:25","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"412:2:25","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"408:3:25"},"nodeType":"YulFunctionCall","src":"408:7:25"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"402:2:25","type":""}]},{"nodeType":"YulVariableDeclaration","src":"424:23:25","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"444:2:25","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"438:5:25"},"nodeType":"YulFunctionCall","src":"438:9:25"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"428:6:25","type":""}]},{"nodeType":"YulVariableDeclaration","src":"456:71:25","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"478:6:25"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"502:2:25"},{"kind":"number","nodeType":"YulLiteral","src":"506:4:25","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"498:3:25"},"nodeType":"YulFunctionCall","src":"498:13:25"},{"name":"_3","nodeType":"YulIdentifier","src":"513:2:25"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"494:3:25"},"nodeType":"YulFunctionCall","src":"494:22:25"},{"kind":"number","nodeType":"YulLiteral","src":"518:2:25","type":"","value":"63"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"490:3:25"},"nodeType":"YulFunctionCall","src":"490:31:25"},{"name":"_3","nodeType":"YulIdentifier","src":"523:2:25"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"486:3:25"},"nodeType":"YulFunctionCall","src":"486:40:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"474:3:25"},"nodeType":"YulFunctionCall","src":"474:53:25"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"460:10:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"586:22:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"588:16:25"},"nodeType":"YulFunctionCall","src":"588:18:25"},"nodeType":"YulExpressionStatement","src":"588:18:25"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"545:10:25"},{"name":"_2","nodeType":"YulIdentifier","src":"557:2:25"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"542:2:25"},"nodeType":"YulFunctionCall","src":"542:18:25"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"565:10:25"},{"name":"memPtr","nodeType":"YulIdentifier","src":"577:6:25"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"562:2:25"},"nodeType":"YulFunctionCall","src":"562:22:25"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"539:2:25"},"nodeType":"YulFunctionCall","src":"539:46:25"},"nodeType":"YulIf","src":"536:72:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"624:2:25","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"628:10:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"617:6:25"},"nodeType":"YulFunctionCall","src":"617:22:25"},"nodeType":"YulExpressionStatement","src":"617:22:25"},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"655:6:25"},{"name":"_1","nodeType":"YulIdentifier","src":"663:2:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"648:6:25"},"nodeType":"YulFunctionCall","src":"648:18:25"},"nodeType":"YulExpressionStatement","src":"648:18:25"},{"nodeType":"YulVariableDeclaration","src":"675:14:25","value":{"kind":"number","nodeType":"YulLiteral","src":"685:4:25","type":"","value":"0x20"},"variables":[{"name":"_4","nodeType":"YulTypedName","src":"679:2:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"735:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"744:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"747:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"737:6:25"},"nodeType":"YulFunctionCall","src":"737:12:25"},"nodeType":"YulExpressionStatement","src":"737:12:25"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"712:6:25"},{"name":"_1","nodeType":"YulIdentifier","src":"720:2:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"708:3:25"},"nodeType":"YulFunctionCall","src":"708:15:25"},{"name":"_4","nodeType":"YulIdentifier","src":"725:2:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"704:3:25"},"nodeType":"YulFunctionCall","src":"704:24:25"},{"name":"end","nodeType":"YulIdentifier","src":"730:3:25"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"701:2:25"},"nodeType":"YulFunctionCall","src":"701:33:25"},"nodeType":"YulIf","src":"698:53:25"},{"nodeType":"YulVariableDeclaration","src":"760:10:25","value":{"kind":"number","nodeType":"YulLiteral","src":"769:1:25","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"764:1:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"825:87:25","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"854:6:25"},{"name":"i","nodeType":"YulIdentifier","src":"862:1:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"850:3:25"},"nodeType":"YulFunctionCall","src":"850:14:25"},{"name":"_4","nodeType":"YulIdentifier","src":"866:2:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"846:3:25"},"nodeType":"YulFunctionCall","src":"846:23:25"},{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"885:6:25"},{"name":"i","nodeType":"YulIdentifier","src":"893:1:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"881:3:25"},"nodeType":"YulFunctionCall","src":"881:14:25"},{"name":"_4","nodeType":"YulIdentifier","src":"897:2:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"877:3:25"},"nodeType":"YulFunctionCall","src":"877:23:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"871:5:25"},"nodeType":"YulFunctionCall","src":"871:30:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"839:6:25"},"nodeType":"YulFunctionCall","src":"839:63:25"},"nodeType":"YulExpressionStatement","src":"839:63:25"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"790:1:25"},{"name":"_1","nodeType":"YulIdentifier","src":"793:2:25"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"787:2:25"},"nodeType":"YulFunctionCall","src":"787:9:25"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"797:19:25","statements":[{"nodeType":"YulAssignment","src":"799:15:25","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"808:1:25"},{"name":"_4","nodeType":"YulIdentifier","src":"811:2:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"804:3:25"},"nodeType":"YulFunctionCall","src":"804:10:25"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"799:1:25"}]}]},"pre":{"nodeType":"YulBlock","src":"783:3:25","statements":[]},"src":"779:133:25"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"936:6:25"},{"name":"_1","nodeType":"YulIdentifier","src":"944:2:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"932:3:25"},"nodeType":"YulFunctionCall","src":"932:15:25"},{"name":"_4","nodeType":"YulIdentifier","src":"949:2:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"928:3:25"},"nodeType":"YulFunctionCall","src":"928:24:25"},{"kind":"number","nodeType":"YulLiteral","src":"954:1:25","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"921:6:25"},"nodeType":"YulFunctionCall","src":"921:35:25"},"nodeType":"YulExpressionStatement","src":"921:35:25"},{"nodeType":"YulAssignment","src":"965:15:25","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"974:6:25"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"965:5:25"}]}]},"name":"abi_decode_string_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"184:6:25","type":""},{"name":"end","nodeType":"YulTypedName","src":"192:3:25","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"200:5:25","type":""}],"src":"146:840:25"},{"body":{"nodeType":"YulBlock","src":"1051:117:25","statements":[{"nodeType":"YulAssignment","src":"1061:22:25","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1076:6:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1070:5:25"},"nodeType":"YulFunctionCall","src":"1070:13:25"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1061:5:25"}]},{"body":{"nodeType":"YulBlock","src":"1146:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1155:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1158:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1148:6:25"},"nodeType":"YulFunctionCall","src":"1148:12:25"},"nodeType":"YulExpressionStatement","src":"1148:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1105:5:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1116:5:25"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1131:3:25","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"1136:1:25","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1127:3:25"},"nodeType":"YulFunctionCall","src":"1127:11:25"},{"kind":"number","nodeType":"YulLiteral","src":"1140:1:25","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1123:3:25"},"nodeType":"YulFunctionCall","src":"1123:19:25"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1112:3:25"},"nodeType":"YulFunctionCall","src":"1112:31:25"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1102:2:25"},"nodeType":"YulFunctionCall","src":"1102:42:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1095:6:25"},"nodeType":"YulFunctionCall","src":"1095:50:25"},"nodeType":"YulIf","src":"1092:70:25"}]},"name":"abi_decode_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1030:6:25","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1041:5:25","type":""}],"src":"991:177:25"},{"body":{"nodeType":"YulBlock","src":"1230:107:25","statements":[{"nodeType":"YulAssignment","src":"1240:22:25","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1255:6:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1249:5:25"},"nodeType":"YulFunctionCall","src":"1249:13:25"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1240:5:25"}]},{"body":{"nodeType":"YulBlock","src":"1315:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1324:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1327:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1317:6:25"},"nodeType":"YulFunctionCall","src":"1317:12:25"},"nodeType":"YulExpressionStatement","src":"1317:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1284:5:25"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1305:5:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1298:6:25"},"nodeType":"YulFunctionCall","src":"1298:13:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1291:6:25"},"nodeType":"YulFunctionCall","src":"1291:21:25"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1281:2:25"},"nodeType":"YulFunctionCall","src":"1281:32:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1274:6:25"},"nodeType":"YulFunctionCall","src":"1274:40:25"},"nodeType":"YulIf","src":"1271:60:25"}]},"name":"abi_decode_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1209:6:25","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1220:5:25","type":""}],"src":"1173:164:25"},{"body":{"nodeType":"YulBlock","src":"1570:893:25","statements":[{"body":{"nodeType":"YulBlock","src":"1617:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1626:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1629:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1619:6:25"},"nodeType":"YulFunctionCall","src":"1619:12:25"},"nodeType":"YulExpressionStatement","src":"1619:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1591:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"1600:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1587:3:25"},"nodeType":"YulFunctionCall","src":"1587:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"1612:3:25","type":"","value":"288"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1583:3:25"},"nodeType":"YulFunctionCall","src":"1583:33:25"},"nodeType":"YulIf","src":"1580:53:25"},{"nodeType":"YulVariableDeclaration","src":"1642:30:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1662:9:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1656:5:25"},"nodeType":"YulFunctionCall","src":"1656:16:25"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1646:6:25","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1681:28:25","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1699:2:25","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"1703:1:25","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1695:3:25"},"nodeType":"YulFunctionCall","src":"1695:10:25"},{"kind":"number","nodeType":"YulLiteral","src":"1707:1:25","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1691:3:25"},"nodeType":"YulFunctionCall","src":"1691:18:25"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"1685:2:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"1736:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1745:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1748:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1738:6:25"},"nodeType":"YulFunctionCall","src":"1738:12:25"},"nodeType":"YulExpressionStatement","src":"1738:12:25"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1724:6:25"},{"name":"_1","nodeType":"YulIdentifier","src":"1732:2:25"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1721:2:25"},"nodeType":"YulFunctionCall","src":"1721:14:25"},"nodeType":"YulIf","src":"1718:34:25"},{"nodeType":"YulAssignment","src":"1761:71:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1804:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"1815:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1800:3:25"},"nodeType":"YulFunctionCall","src":"1800:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1824:7:25"}],"functionName":{"name":"abi_decode_string_fromMemory","nodeType":"YulIdentifier","src":"1771:28:25"},"nodeType":"YulFunctionCall","src":"1771:61:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1761:6:25"}]},{"nodeType":"YulVariableDeclaration","src":"1841:41:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1867:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"1878:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1863:3:25"},"nodeType":"YulFunctionCall","src":"1863:18:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1857:5:25"},"nodeType":"YulFunctionCall","src":"1857:25:25"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"1845:8:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"1911:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1920:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1923:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1913:6:25"},"nodeType":"YulFunctionCall","src":"1913:12:25"},"nodeType":"YulExpressionStatement","src":"1913:12:25"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"1897:8:25"},{"name":"_1","nodeType":"YulIdentifier","src":"1907:2:25"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1894:2:25"},"nodeType":"YulFunctionCall","src":"1894:16:25"},"nodeType":"YulIf","src":"1891:36:25"},{"nodeType":"YulAssignment","src":"1936:73:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1979:9:25"},{"name":"offset_1","nodeType":"YulIdentifier","src":"1990:8:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1975:3:25"},"nodeType":"YulFunctionCall","src":"1975:24:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2001:7:25"}],"functionName":{"name":"abi_decode_string_fromMemory","nodeType":"YulIdentifier","src":"1946:28:25"},"nodeType":"YulFunctionCall","src":"1946:63:25"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1936:6:25"}]},{"nodeType":"YulAssignment","src":"2018:35:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2038:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"2049:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2034:3:25"},"nodeType":"YulFunctionCall","src":"2034:18:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2028:5:25"},"nodeType":"YulFunctionCall","src":"2028:25:25"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"2018:6:25"}]},{"nodeType":"YulAssignment","src":"2062:59:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2106:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"2117:2:25","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2102:3:25"},"nodeType":"YulFunctionCall","src":"2102:18:25"}],"functionName":{"name":"abi_decode_address_fromMemory","nodeType":"YulIdentifier","src":"2072:29:25"},"nodeType":"YulFunctionCall","src":"2072:49:25"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"2062:6:25"}]},{"nodeType":"YulAssignment","src":"2130:60:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2174:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"2185:3:25","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2170:3:25"},"nodeType":"YulFunctionCall","src":"2170:19:25"}],"functionName":{"name":"abi_decode_address_fromMemory","nodeType":"YulIdentifier","src":"2140:29:25"},"nodeType":"YulFunctionCall","src":"2140:50:25"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"2130:6:25"}]},{"nodeType":"YulAssignment","src":"2199:60:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2243:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"2254:3:25","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2239:3:25"},"nodeType":"YulFunctionCall","src":"2239:19:25"}],"functionName":{"name":"abi_decode_address_fromMemory","nodeType":"YulIdentifier","src":"2209:29:25"},"nodeType":"YulFunctionCall","src":"2209:50:25"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"2199:6:25"}]},{"nodeType":"YulAssignment","src":"2268:57:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2309:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"2320:3:25","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2305:3:25"},"nodeType":"YulFunctionCall","src":"2305:19:25"}],"functionName":{"name":"abi_decode_bool_fromMemory","nodeType":"YulIdentifier","src":"2278:26:25"},"nodeType":"YulFunctionCall","src":"2278:47:25"},"variableNames":[{"name":"value6","nodeType":"YulIdentifier","src":"2268:6:25"}]},{"nodeType":"YulAssignment","src":"2334:57:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2375:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"2386:3:25","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2371:3:25"},"nodeType":"YulFunctionCall","src":"2371:19:25"}],"functionName":{"name":"abi_decode_bool_fromMemory","nodeType":"YulIdentifier","src":"2344:26:25"},"nodeType":"YulFunctionCall","src":"2344:47:25"},"variableNames":[{"name":"value7","nodeType":"YulIdentifier","src":"2334:6:25"}]},{"nodeType":"YulAssignment","src":"2400:57:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2441:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"2452:3:25","type":"","value":"256"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2437:3:25"},"nodeType":"YulFunctionCall","src":"2437:19:25"}],"functionName":{"name":"abi_decode_bool_fromMemory","nodeType":"YulIdentifier","src":"2410:26:25"},"nodeType":"YulFunctionCall","src":"2410:47:25"},"variableNames":[{"name":"value8","nodeType":"YulIdentifier","src":"2400:6:25"}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256t_addresst_addresst_addresst_boolt_boolt_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1472:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1483:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1495:6:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1503:6:25","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1511:6:25","type":""},{"name":"value3","nodeType":"YulTypedName","src":"1519:6:25","type":""},{"name":"value4","nodeType":"YulTypedName","src":"1527:6:25","type":""},{"name":"value5","nodeType":"YulTypedName","src":"1535:6:25","type":""},{"name":"value6","nodeType":"YulTypedName","src":"1543:6:25","type":""},{"name":"value7","nodeType":"YulTypedName","src":"1551:6:25","type":""},{"name":"value8","nodeType":"YulTypedName","src":"1559:6:25","type":""}],"src":"1342:1121:25"},{"body":{"nodeType":"YulBlock","src":"2523:325:25","statements":[{"nodeType":"YulAssignment","src":"2533:22:25","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2547:1:25","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"2550:4:25"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2543:3:25"},"nodeType":"YulFunctionCall","src":"2543:12:25"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2533:6:25"}]},{"nodeType":"YulVariableDeclaration","src":"2564:38:25","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2594:4:25"},{"kind":"number","nodeType":"YulLiteral","src":"2600:1:25","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2590:3:25"},"nodeType":"YulFunctionCall","src":"2590:12:25"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"2568:18:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"2641:31:25","statements":[{"nodeType":"YulAssignment","src":"2643:27:25","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2657:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"2665:4:25","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2653:3:25"},"nodeType":"YulFunctionCall","src":"2653:17:25"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2643:6:25"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"2621:18:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2614:6:25"},"nodeType":"YulFunctionCall","src":"2614:26:25"},"nodeType":"YulIf","src":"2611:61:25"},{"body":{"nodeType":"YulBlock","src":"2731:111:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2752:1:25","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2759:3:25","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"2764:10:25","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2755:3:25"},"nodeType":"YulFunctionCall","src":"2755:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2745:6:25"},"nodeType":"YulFunctionCall","src":"2745:31:25"},"nodeType":"YulExpressionStatement","src":"2745:31:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2796:1:25","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"2799:4:25","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2789:6:25"},"nodeType":"YulFunctionCall","src":"2789:15:25"},"nodeType":"YulExpressionStatement","src":"2789:15:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2824:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2827:4:25","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2817:6:25"},"nodeType":"YulFunctionCall","src":"2817:15:25"},"nodeType":"YulExpressionStatement","src":"2817:15:25"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"2687:18:25"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2710:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"2718:2:25","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2707:2:25"},"nodeType":"YulFunctionCall","src":"2707:14:25"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2684:2:25"},"nodeType":"YulFunctionCall","src":"2684:38:25"},"nodeType":"YulIf","src":"2681:161:25"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"2503:4:25","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"2512:6:25","type":""}],"src":"2468:380:25"},{"body":{"nodeType":"YulBlock","src":"2909:65:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2926:1:25","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"2929:3:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2919:6:25"},"nodeType":"YulFunctionCall","src":"2919:14:25"},"nodeType":"YulExpressionStatement","src":"2919:14:25"},{"nodeType":"YulAssignment","src":"2942:26:25","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2960:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2963:4:25","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"2950:9:25"},"nodeType":"YulFunctionCall","src":"2950:18:25"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"2942:4:25"}]}]},"name":"array_dataslot_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"2892:3:25","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"2900:4:25","type":""}],"src":"2853:121:25"},{"body":{"nodeType":"YulBlock","src":"3060:464:25","statements":[{"body":{"nodeType":"YulBlock","src":"3093:425:25","statements":[{"nodeType":"YulVariableDeclaration","src":"3107:11:25","value":{"kind":"number","nodeType":"YulLiteral","src":"3117:1:25","type":"","value":"0"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"3111:2:25","type":""}]},{"expression":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"3138:2:25"},{"name":"array","nodeType":"YulIdentifier","src":"3142:5:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3131:6:25"},"nodeType":"YulFunctionCall","src":"3131:17:25"},"nodeType":"YulExpressionStatement","src":"3131:17:25"},{"nodeType":"YulVariableDeclaration","src":"3161:31:25","value":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"3183:2:25"},{"kind":"number","nodeType":"YulLiteral","src":"3187:4:25","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"3173:9:25"},"nodeType":"YulFunctionCall","src":"3173:19:25"},"variables":[{"name":"data","nodeType":"YulTypedName","src":"3165:4:25","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3205:57:25","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3228:4:25"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3238:1:25","type":"","value":"5"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"3245:10:25"},{"kind":"number","nodeType":"YulLiteral","src":"3257:2:25","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3241:3:25"},"nodeType":"YulFunctionCall","src":"3241:19:25"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"3234:3:25"},"nodeType":"YulFunctionCall","src":"3234:27:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3224:3:25"},"nodeType":"YulFunctionCall","src":"3224:38:25"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"3209:11:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"3299:23:25","statements":[{"nodeType":"YulAssignment","src":"3301:19:25","value":{"name":"data","nodeType":"YulIdentifier","src":"3316:4:25"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"3301:11:25"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"3281:10:25"},{"kind":"number","nodeType":"YulLiteral","src":"3293:4:25","type":"","value":"0x20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3278:2:25"},"nodeType":"YulFunctionCall","src":"3278:20:25"},"nodeType":"YulIf","src":"3275:47:25"},{"nodeType":"YulVariableDeclaration","src":"3335:41:25","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3349:4:25"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3359:1:25","type":"","value":"5"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"3366:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"3371:2:25","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3362:3:25"},"nodeType":"YulFunctionCall","src":"3362:12:25"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"3355:3:25"},"nodeType":"YulFunctionCall","src":"3355:20:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3345:3:25"},"nodeType":"YulFunctionCall","src":"3345:31:25"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"3339:2:25","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3389:24:25","value":{"name":"deleteStart","nodeType":"YulIdentifier","src":"3402:11:25"},"variables":[{"name":"start","nodeType":"YulTypedName","src":"3393:5:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"3487:21:25","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"3496:5:25"},{"name":"_1","nodeType":"YulIdentifier","src":"3503:2:25"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"3489:6:25"},"nodeType":"YulFunctionCall","src":"3489:17:25"},"nodeType":"YulExpressionStatement","src":"3489:17:25"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"3437:5:25"},{"name":"_2","nodeType":"YulIdentifier","src":"3444:2:25"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3434:2:25"},"nodeType":"YulFunctionCall","src":"3434:13:25"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"3448:26:25","statements":[{"nodeType":"YulAssignment","src":"3450:22:25","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"3463:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"3470:1:25","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3459:3:25"},"nodeType":"YulFunctionCall","src":"3459:13:25"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"3450:5:25"}]}]},"pre":{"nodeType":"YulBlock","src":"3430:3:25","statements":[]},"src":"3426:82:25"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"3076:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"3081:2:25","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3073:2:25"},"nodeType":"YulFunctionCall","src":"3073:11:25"},"nodeType":"YulIf","src":"3070:448:25"}]},"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"3032:5:25","type":""},{"name":"len","nodeType":"YulTypedName","src":"3039:3:25","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"3044:10:25","type":""}],"src":"2979:545:25"},{"body":{"nodeType":"YulBlock","src":"3614:81:25","statements":[{"nodeType":"YulAssignment","src":"3624:65:25","value":{"arguments":[{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3639:4:25"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3657:1:25","type":"","value":"3"},{"name":"len","nodeType":"YulIdentifier","src":"3660:3:25"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3653:3:25"},"nodeType":"YulFunctionCall","src":"3653:11:25"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3670:1:25","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3666:3:25"},"nodeType":"YulFunctionCall","src":"3666:6:25"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"3649:3:25"},"nodeType":"YulFunctionCall","src":"3649:24:25"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3645:3:25"},"nodeType":"YulFunctionCall","src":"3645:29:25"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3635:3:25"},"nodeType":"YulFunctionCall","src":"3635:40:25"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3681:1:25","type":"","value":"1"},{"name":"len","nodeType":"YulIdentifier","src":"3684:3:25"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3677:3:25"},"nodeType":"YulFunctionCall","src":"3677:11:25"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"3632:2:25"},"nodeType":"YulFunctionCall","src":"3632:57:25"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"3624:4:25"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"3591:4:25","type":""},{"name":"len","nodeType":"YulTypedName","src":"3597:3:25","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"3605:4:25","type":""}],"src":"3529:166:25"},{"body":{"nodeType":"YulBlock","src":"3796:1256:25","statements":[{"nodeType":"YulVariableDeclaration","src":"3806:24:25","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3826:3:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3820:5:25"},"nodeType":"YulFunctionCall","src":"3820:10:25"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"3810:6:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"3873:22:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"3875:16:25"},"nodeType":"YulFunctionCall","src":"3875:18:25"},"nodeType":"YulExpressionStatement","src":"3875:18:25"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"3845:6:25"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3861:2:25","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"3865:1:25","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3857:3:25"},"nodeType":"YulFunctionCall","src":"3857:10:25"},{"kind":"number","nodeType":"YulLiteral","src":"3869:1:25","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3853:3:25"},"nodeType":"YulFunctionCall","src":"3853:18:25"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3842:2:25"},"nodeType":"YulFunctionCall","src":"3842:30:25"},"nodeType":"YulIf","src":"3839:56:25"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3948:4:25"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3986:4:25"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"3980:5:25"},"nodeType":"YulFunctionCall","src":"3980:11:25"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"3954:25:25"},"nodeType":"YulFunctionCall","src":"3954:38:25"},{"name":"newLen","nodeType":"YulIdentifier","src":"3994:6:25"}],"functionName":{"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulIdentifier","src":"3904:43:25"},"nodeType":"YulFunctionCall","src":"3904:97:25"},"nodeType":"YulExpressionStatement","src":"3904:97:25"},{"nodeType":"YulVariableDeclaration","src":"4010:18:25","value":{"kind":"number","nodeType":"YulLiteral","src":"4027:1:25","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"4014:9:25","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4037:23:25","value":{"kind":"number","nodeType":"YulLiteral","src":"4056:4:25","type":"","value":"0x20"},"variables":[{"name":"srcOffset_1","nodeType":"YulTypedName","src":"4041:11:25","type":""}]},{"nodeType":"YulAssignment","src":"4069:24:25","value":{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"4082:11:25"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"4069:9:25"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"4139:656:25","statements":[{"nodeType":"YulVariableDeclaration","src":"4153:35:25","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"4172:6:25"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4184:2:25","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4180:3:25"},"nodeType":"YulFunctionCall","src":"4180:7:25"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4168:3:25"},"nodeType":"YulFunctionCall","src":"4168:20:25"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"4157:7:25","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4201:49:25","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"4245:4:25"}],"functionName":{"name":"array_dataslot_string_storage","nodeType":"YulIdentifier","src":"4215:29:25"},"nodeType":"YulFunctionCall","src":"4215:35:25"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"4205:6:25","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4263:10:25","value":{"kind":"number","nodeType":"YulLiteral","src":"4272:1:25","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"4267:1:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"4350:172:25","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"4375:6:25"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4393:3:25"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"4398:9:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4389:3:25"},"nodeType":"YulFunctionCall","src":"4389:19:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4383:5:25"},"nodeType":"YulFunctionCall","src":"4383:26:25"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"4368:6:25"},"nodeType":"YulFunctionCall","src":"4368:42:25"},"nodeType":"YulExpressionStatement","src":"4368:42:25"},{"nodeType":"YulAssignment","src":"4427:24:25","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"4441:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"4449:1:25","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4437:3:25"},"nodeType":"YulFunctionCall","src":"4437:14:25"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"4427:6:25"}]},{"nodeType":"YulAssignment","src":"4468:40:25","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"4485:9:25"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"4496:11:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4481:3:25"},"nodeType":"YulFunctionCall","src":"4481:27:25"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"4468:9:25"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"4297:1:25"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"4300:7:25"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4294:2:25"},"nodeType":"YulFunctionCall","src":"4294:14:25"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"4309:28:25","statements":[{"nodeType":"YulAssignment","src":"4311:24:25","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"4320:1:25"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"4323:11:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4316:3:25"},"nodeType":"YulFunctionCall","src":"4316:19:25"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"4311:1:25"}]}]},"pre":{"nodeType":"YulBlock","src":"4290:3:25","statements":[]},"src":"4286:236:25"},{"body":{"nodeType":"YulBlock","src":"4570:166:25","statements":[{"nodeType":"YulVariableDeclaration","src":"4588:43:25","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4615:3:25"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"4620:9:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4611:3:25"},"nodeType":"YulFunctionCall","src":"4611:19:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4605:5:25"},"nodeType":"YulFunctionCall","src":"4605:26:25"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"4592:9:25","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"4655:6:25"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"4667:9:25"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4694:1:25","type":"","value":"3"},{"name":"newLen","nodeType":"YulIdentifier","src":"4697:6:25"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4690:3:25"},"nodeType":"YulFunctionCall","src":"4690:14:25"},{"kind":"number","nodeType":"YulLiteral","src":"4706:3:25","type":"","value":"248"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4686:3:25"},"nodeType":"YulFunctionCall","src":"4686:24:25"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4716:1:25","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4712:3:25"},"nodeType":"YulFunctionCall","src":"4712:6:25"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"4682:3:25"},"nodeType":"YulFunctionCall","src":"4682:37:25"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4678:3:25"},"nodeType":"YulFunctionCall","src":"4678:42:25"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4663:3:25"},"nodeType":"YulFunctionCall","src":"4663:58:25"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"4648:6:25"},"nodeType":"YulFunctionCall","src":"4648:74:25"},"nodeType":"YulExpressionStatement","src":"4648:74:25"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"4541:7:25"},{"name":"newLen","nodeType":"YulIdentifier","src":"4550:6:25"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4538:2:25"},"nodeType":"YulFunctionCall","src":"4538:19:25"},"nodeType":"YulIf","src":"4535:201:25"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"4756:4:25"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4770:1:25","type":"","value":"1"},{"name":"newLen","nodeType":"YulIdentifier","src":"4773:6:25"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4766:3:25"},"nodeType":"YulFunctionCall","src":"4766:14:25"},{"kind":"number","nodeType":"YulLiteral","src":"4782:1:25","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4762:3:25"},"nodeType":"YulFunctionCall","src":"4762:22:25"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"4749:6:25"},"nodeType":"YulFunctionCall","src":"4749:36:25"},"nodeType":"YulExpressionStatement","src":"4749:36:25"}]},"nodeType":"YulCase","src":"4132:663:25","value":{"kind":"number","nodeType":"YulLiteral","src":"4137:1:25","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"4812:234:25","statements":[{"nodeType":"YulVariableDeclaration","src":"4826:14:25","value":{"kind":"number","nodeType":"YulLiteral","src":"4839:1:25","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"4830:5:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"4875:67:25","statements":[{"nodeType":"YulAssignment","src":"4893:35:25","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4912:3:25"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"4917:9:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4908:3:25"},"nodeType":"YulFunctionCall","src":"4908:19:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4902:5:25"},"nodeType":"YulFunctionCall","src":"4902:26:25"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"4893:5:25"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"4856:6:25"},"nodeType":"YulIf","src":"4853:89:25"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"4962:4:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5021:5:25"},{"name":"newLen","nodeType":"YulIdentifier","src":"5028:6:25"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"4968:52:25"},"nodeType":"YulFunctionCall","src":"4968:67:25"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"4955:6:25"},"nodeType":"YulFunctionCall","src":"4955:81:25"},"nodeType":"YulExpressionStatement","src":"4955:81:25"}]},"nodeType":"YulCase","src":"4804:242:25","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"4112:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"4120:2:25","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4109:2:25"},"nodeType":"YulFunctionCall","src":"4109:14:25"},"nodeType":"YulSwitch","src":"4102:944:25"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"3781:4:25","type":""},{"name":"src","nodeType":"YulTypedName","src":"3787:3:25","type":""}],"src":"3700:1352:25"},{"body":{"nodeType":"YulBlock","src":"5158:102:25","statements":[{"nodeType":"YulAssignment","src":"5168:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5180:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"5191:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5176:3:25"},"nodeType":"YulFunctionCall","src":"5176:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5168:4:25"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5210:9:25"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5225:6:25"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5241:3:25","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"5246:1:25","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5237:3:25"},"nodeType":"YulFunctionCall","src":"5237:11:25"},{"kind":"number","nodeType":"YulLiteral","src":"5250:1:25","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5233:3:25"},"nodeType":"YulFunctionCall","src":"5233:19:25"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5221:3:25"},"nodeType":"YulFunctionCall","src":"5221:32:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5203:6:25"},"nodeType":"YulFunctionCall","src":"5203:51:25"},"nodeType":"YulExpressionStatement","src":"5203:51:25"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5127:9:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5138:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5149:4:25","type":""}],"src":"5057:203:25"},{"body":{"nodeType":"YulBlock","src":"5439:165:25","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5456:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"5467:2:25","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5449:6:25"},"nodeType":"YulFunctionCall","src":"5449:21:25"},"nodeType":"YulExpressionStatement","src":"5449:21:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5490:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"5501:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5486:3:25"},"nodeType":"YulFunctionCall","src":"5486:18:25"},{"kind":"number","nodeType":"YulLiteral","src":"5506:2:25","type":"","value":"15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5479:6:25"},"nodeType":"YulFunctionCall","src":"5479:30:25"},"nodeType":"YulExpressionStatement","src":"5479:30:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5529:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"5540:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5525:3:25"},"nodeType":"YulFunctionCall","src":"5525:18:25"},{"hexValue":"496e76616c69642063726561746f72","kind":"string","nodeType":"YulLiteral","src":"5545:17:25","type":"","value":"Invalid creator"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5518:6:25"},"nodeType":"YulFunctionCall","src":"5518:45:25"},"nodeType":"YulExpressionStatement","src":"5518:45:25"},{"nodeType":"YulAssignment","src":"5572:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5584:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"5595:2:25","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5580:3:25"},"nodeType":"YulFunctionCall","src":"5580:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5572:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_0475c82d7c8af068c16284035332fff33ad7e4dce9cd4ac22f3356fa881f91bb__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5416:9:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5430:4:25","type":""}],"src":"5265:339:25"},{"body":{"nodeType":"YulBlock","src":"5783:176:25","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5800:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"5811:2:25","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5793:6:25"},"nodeType":"YulFunctionCall","src":"5793:21:25"},"nodeType":"YulExpressionStatement","src":"5793:21:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5834:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"5845:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5830:3:25"},"nodeType":"YulFunctionCall","src":"5830:18:25"},{"kind":"number","nodeType":"YulLiteral","src":"5850:2:25","type":"","value":"26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5823:6:25"},"nodeType":"YulFunctionCall","src":"5823:30:25"},"nodeType":"YulExpressionStatement","src":"5823:30:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5873:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"5884:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5869:3:25"},"nodeType":"YulFunctionCall","src":"5869:18:25"},{"hexValue":"496e76616c696420706c6174666f726d20726563697069656e74","kind":"string","nodeType":"YulLiteral","src":"5889:28:25","type":"","value":"Invalid platform recipient"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5862:6:25"},"nodeType":"YulFunctionCall","src":"5862:56:25"},"nodeType":"YulExpressionStatement","src":"5862:56:25"},{"nodeType":"YulAssignment","src":"5927:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5939:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"5950:2:25","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5935:3:25"},"nodeType":"YulFunctionCall","src":"5935:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5927:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_d1c844379d3aa4fac459f0977b634b3ecd698d53154f9a4916336dfc9823566c__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5760:9:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5774:4:25","type":""}],"src":"5609:350:25"},{"body":{"nodeType":"YulBlock","src":"5996:95:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6013:1:25","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6020:3:25","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"6025:10:25","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"6016:3:25"},"nodeType":"YulFunctionCall","src":"6016:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6006:6:25"},"nodeType":"YulFunctionCall","src":"6006:31:25"},"nodeType":"YulExpressionStatement","src":"6006:31:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6053:1:25","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"6056:4:25","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6046:6:25"},"nodeType":"YulFunctionCall","src":"6046:15:25"},"nodeType":"YulExpressionStatement","src":"6046:15:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6077:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6080:4:25","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6070:6:25"},"nodeType":"YulFunctionCall","src":"6070:15:25"},"nodeType":"YulExpressionStatement","src":"6070:15:25"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"5964:127:25"},{"body":{"nodeType":"YulBlock","src":"6144:77:25","statements":[{"nodeType":"YulAssignment","src":"6154:16:25","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6165:1:25"},{"name":"y","nodeType":"YulIdentifier","src":"6168:1:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6161:3:25"},"nodeType":"YulFunctionCall","src":"6161:9:25"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"6154:3:25"}]},{"body":{"nodeType":"YulBlock","src":"6193:22:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"6195:16:25"},"nodeType":"YulFunctionCall","src":"6195:18:25"},"nodeType":"YulExpressionStatement","src":"6195:18:25"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6185:1:25"},{"name":"sum","nodeType":"YulIdentifier","src":"6188:3:25"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6182:2:25"},"nodeType":"YulFunctionCall","src":"6182:10:25"},"nodeType":"YulIf","src":"6179:36:25"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"6127:1:25","type":""},{"name":"y","nodeType":"YulTypedName","src":"6130:1:25","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"6136:3:25","type":""}],"src":"6096:125:25"},{"body":{"nodeType":"YulBlock","src":"6275:79:25","statements":[{"nodeType":"YulAssignment","src":"6285:17:25","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6297:1:25"},{"name":"y","nodeType":"YulIdentifier","src":"6300:1:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6293:3:25"},"nodeType":"YulFunctionCall","src":"6293:9:25"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"6285:4:25"}]},{"body":{"nodeType":"YulBlock","src":"6326:22:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"6328:16:25"},"nodeType":"YulFunctionCall","src":"6328:18:25"},"nodeType":"YulExpressionStatement","src":"6328:18:25"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"6317:4:25"},{"name":"x","nodeType":"YulIdentifier","src":"6323:1:25"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6314:2:25"},"nodeType":"YulFunctionCall","src":"6314:11:25"},"nodeType":"YulIf","src":"6311:37:25"}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"6257:1:25","type":""},{"name":"y","nodeType":"YulTypedName","src":"6260:1:25","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"6266:4:25","type":""}],"src":"6226:128:25"},{"body":{"nodeType":"YulBlock","src":"6516:162:25","statements":[{"nodeType":"YulAssignment","src":"6526:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6538:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"6549:2:25","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6534:3:25"},"nodeType":"YulFunctionCall","src":"6534:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6526:4:25"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6568:9:25"},{"name":"value0","nodeType":"YulIdentifier","src":"6579:6:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6561:6:25"},"nodeType":"YulFunctionCall","src":"6561:25:25"},"nodeType":"YulExpressionStatement","src":"6561:25:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6606:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"6617:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6602:3:25"},"nodeType":"YulFunctionCall","src":"6602:18:25"},{"name":"value1","nodeType":"YulIdentifier","src":"6622:6:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6595:6:25"},"nodeType":"YulFunctionCall","src":"6595:34:25"},"nodeType":"YulExpressionStatement","src":"6595:34:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6649:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"6660:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6645:3:25"},"nodeType":"YulFunctionCall","src":"6645:18:25"},{"name":"value2","nodeType":"YulIdentifier","src":"6665:6:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6638:6:25"},"nodeType":"YulFunctionCall","src":"6638:34:25"},"nodeType":"YulExpressionStatement","src":"6638:34:25"}]},"name":"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6469:9:25","type":""},{"name":"value2","nodeType":"YulTypedName","src":"6480:6:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6488:6:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6496:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6507:4:25","type":""}],"src":"6359:319:25"},{"body":{"nodeType":"YulBlock","src":"6735:116:25","statements":[{"nodeType":"YulAssignment","src":"6745:20:25","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6760:1:25"},{"name":"y","nodeType":"YulIdentifier","src":"6763:1:25"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"6756:3:25"},"nodeType":"YulFunctionCall","src":"6756:9:25"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"6745:7:25"}]},{"body":{"nodeType":"YulBlock","src":"6823:22:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"6825:16:25"},"nodeType":"YulFunctionCall","src":"6825:18:25"},"nodeType":"YulExpressionStatement","src":"6825:18:25"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6794:1:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6787:6:25"},"nodeType":"YulFunctionCall","src":"6787:9:25"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"6801:1:25"},{"arguments":[{"name":"product","nodeType":"YulIdentifier","src":"6808:7:25"},{"name":"x","nodeType":"YulIdentifier","src":"6817:1:25"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"6804:3:25"},"nodeType":"YulFunctionCall","src":"6804:15:25"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"6798:2:25"},"nodeType":"YulFunctionCall","src":"6798:22:25"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"6784:2:25"},"nodeType":"YulFunctionCall","src":"6784:37:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6777:6:25"},"nodeType":"YulFunctionCall","src":"6777:45:25"},"nodeType":"YulIf","src":"6774:71:25"}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"6714:1:25","type":""},{"name":"y","nodeType":"YulTypedName","src":"6717:1:25","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"6723:7:25","type":""}],"src":"6683:168:25"},{"body":{"nodeType":"YulBlock","src":"6902:171:25","statements":[{"body":{"nodeType":"YulBlock","src":"6933:111:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6954:1:25","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6961:3:25","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"6966:10:25","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"6957:3:25"},"nodeType":"YulFunctionCall","src":"6957:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6947:6:25"},"nodeType":"YulFunctionCall","src":"6947:31:25"},"nodeType":"YulExpressionStatement","src":"6947:31:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6998:1:25","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"7001:4:25","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6991:6:25"},"nodeType":"YulFunctionCall","src":"6991:15:25"},"nodeType":"YulExpressionStatement","src":"6991:15:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7026:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7029:4:25","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7019:6:25"},"nodeType":"YulFunctionCall","src":"7019:15:25"},"nodeType":"YulExpressionStatement","src":"7019:15:25"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"6922:1:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6915:6:25"},"nodeType":"YulFunctionCall","src":"6915:9:25"},"nodeType":"YulIf","src":"6912:132:25"},{"nodeType":"YulAssignment","src":"7053:14:25","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"7062:1:25"},{"name":"y","nodeType":"YulIdentifier","src":"7065:1:25"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"7058:3:25"},"nodeType":"YulFunctionCall","src":"7058:9:25"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"7053:1:25"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"6887:1:25","type":""},{"name":"y","nodeType":"YulTypedName","src":"6890:1:25","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"6896:1:25","type":""}],"src":"6856:217:25"},{"body":{"nodeType":"YulBlock","src":"7235:188:25","statements":[{"nodeType":"YulAssignment","src":"7245:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7257:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"7268:2:25","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7253:3:25"},"nodeType":"YulFunctionCall","src":"7253:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7245:4:25"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7287:9:25"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7302:6:25"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7318:3:25","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"7323:1:25","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"7314:3:25"},"nodeType":"YulFunctionCall","src":"7314:11:25"},{"kind":"number","nodeType":"YulLiteral","src":"7327:1:25","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7310:3:25"},"nodeType":"YulFunctionCall","src":"7310:19:25"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7298:3:25"},"nodeType":"YulFunctionCall","src":"7298:32:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7280:6:25"},"nodeType":"YulFunctionCall","src":"7280:51:25"},"nodeType":"YulExpressionStatement","src":"7280:51:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7351:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"7362:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7347:3:25"},"nodeType":"YulFunctionCall","src":"7347:18:25"},{"name":"value1","nodeType":"YulIdentifier","src":"7367:6:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7340:6:25"},"nodeType":"YulFunctionCall","src":"7340:34:25"},"nodeType":"YulExpressionStatement","src":"7340:34:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7394:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"7405:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7390:3:25"},"nodeType":"YulFunctionCall","src":"7390:18:25"},{"name":"value2","nodeType":"YulIdentifier","src":"7410:6:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7383:6:25"},"nodeType":"YulFunctionCall","src":"7383:34:25"},"nodeType":"YulExpressionStatement","src":"7383:34:25"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7188:9:25","type":""},{"name":"value2","nodeType":"YulTypedName","src":"7199:6:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7207:6:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7215:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7226:4:25","type":""}],"src":"7078:345:25"},{"body":{"nodeType":"YulBlock","src":"7529:76:25","statements":[{"nodeType":"YulAssignment","src":"7539:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7551:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"7562:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7547:3:25"},"nodeType":"YulFunctionCall","src":"7547:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7539:4:25"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7581:9:25"},{"name":"value0","nodeType":"YulIdentifier","src":"7592:6:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7574:6:25"},"nodeType":"YulFunctionCall","src":"7574:25:25"},"nodeType":"YulExpressionStatement","src":"7574:25:25"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7498:9:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7509:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7520:4:25","type":""}],"src":"7428:177:25"}]},"contents":"{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        let _4 := 0x20\n        if gt(add(add(offset, _1), _4), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _1) { i := add(i, _4) }\n        {\n            mstore(add(add(memPtr, i), _4), mload(add(add(offset, i), _4)))\n        }\n        mstore(add(add(memPtr, _1), _4), 0)\n        array := memPtr\n    }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_bool_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256t_addresst_addresst_addresst_boolt_boolt_bool_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6, value7, value8\n    {\n        if slt(sub(dataEnd, headStart), 288) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n        value2 := mload(add(headStart, 64))\n        value3 := abi_decode_address_fromMemory(add(headStart, 96))\n        value4 := abi_decode_address_fromMemory(add(headStart, 128))\n        value5 := abi_decode_address_fromMemory(add(headStart, 160))\n        value6 := abi_decode_bool_fromMemory(add(headStart, 192))\n        value7 := abi_decode_bool_fromMemory(add(headStart, 224))\n        value8 := abi_decode_bool_fromMemory(add(headStart, 256))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_0475c82d7c8af068c16284035332fff33ad7e4dce9cd4ac22f3356fa881f91bb__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 15)\n        mstore(add(headStart, 64), \"Invalid creator\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_d1c844379d3aa4fac459f0977b634b3ecd698d53154f9a4916336dfc9823566c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"Invalid platform recipient\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n}","id":25,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60c06040523480156200001157600080fd5b506040516200219538038062002195833981016040819052620000349162000755565b8589896003620000458382620008c7565b506004620000548282620008c7565b5050506001600160a01b0381166200008757604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b62000092816200020f565b5060016006556001600160a01b038516620000e25760405162461bcd60e51b815260206004820152600f60248201526e24b73b30b634b21031b932b0ba37b960891b60448201526064016200007e565b6001600160a01b0384166200013a5760405162461bcd60e51b815260206004820152601a60248201527f496e76616c696420706c6174666f726d20726563697069656e7400000000000060448201526064016200007e565b6001600160a01b03858116608052600780546001600160a01b031916918616919091179055600d805483151560a05261ffff191684151561ff00191617610100831515021790556200018d868862000261565b505050506001600160a01b039182166000908152600c60205260408082208054600160ff19918216811790925593909416825280822080548416851790553082528120805483168417905580527f13649b2456f1b42fef0f0040b3aaeabcd21a76a0f3f5defd4f583839455116e8805490911690911790555062000a12915050565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b0382166200028d5760405163ec442f0560e01b8152600060048201526024016200007e565b6200029b600083836200029f565b5050565b620002a962000414565b620002b5838362000449565b156200040257600080620002c983620004eb565b90925090506000620002dc8284620009a9565b90506000620002ec8286620009bf565b90508115620003ec57620003028730846200052f565b6080516001600160a01b03166000908152600a6020526040812080548692906200032e908490620009a9565b90915550506007546001600160a01b03166000908152600b6020526040812080548592906200035f908490620009a9565b9250508190555083600860008282546200037a9190620009a9565b925050819055508260096000828254620003959190620009a9565b909155505060408051868152602081018690529081018490526001600160a01b0380881691908916907fde5d657c00d557886c53e267ff792a157187bc1c5947bd02cb62159550edb08e9060600160405180910390a35b620003f98787836200052f565b50505050505050565b6200040f8383836200052f565b505050565b62000428600554600160a01b900460ff1690565b15620004475760405163d93c066560e01b815260040160405180910390fd5b565b600d54600090610100900460ff166200046557506000620004e5565b6001600160a01b0383166000908152600c602052604090205460ff1680620004a557506001600160a01b0382166000908152600c602052604090205460ff165b15620004b457506000620004e5565b6001600160a01b0383161580620004d257506001600160a01b038216155b15620004e157506000620004e5565b5060015b92915050565b600080612710620004fe606485620009d5565b6200050a9190620009ef565b91506127106200051c606485620009d5565b620005289190620009ef565b9050915091565b6001600160a01b0383166200055e578060026000828254620005529190620009a9565b90915550620005d29050565b6001600160a01b03831660009081526020819052604090205481811015620005b35760405163391434e360e21b81526001600160a01b038516600482015260248101829052604481018390526064016200007e565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b038216620005f0576002805482900390556200060f565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516200065591815260200190565b60405180910390a3505050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200068a57600080fd5b81516001600160401b0380821115620006a757620006a762000662565b604051601f8301601f19908116603f01168101908282118183101715620006d257620006d262000662565b81604052838152602092508683858801011115620006ef57600080fd5b600091505b83821015620007135785820183015181830184015290820190620006f4565b600093810190920192909252949350505050565b80516001600160a01b03811681146200073f57600080fd5b919050565b805180151581146200073f57600080fd5b60008060008060008060008060006101208a8c0312156200077557600080fd5b89516001600160401b03808211156200078d57600080fd5b6200079b8d838e0162000678565b9a5060208c0151915080821115620007b257600080fd5b50620007c18c828d0162000678565b98505060408a01519650620007d960608b0162000727565b9550620007e960808b0162000727565b9450620007f960a08b0162000727565b93506200080960c08b0162000744565b92506200081960e08b0162000744565b91506200082a6101008b0162000744565b90509295985092959850929598565b600181811c908216806200084e57607f821691505b6020821081036200086f57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200040f57600081815260208120601f850160051c810160208610156200089e5750805b601f850160051c820191505b81811015620008bf57828155600101620008aa565b505050505050565b81516001600160401b03811115620008e357620008e362000662565b620008fb81620008f4845462000839565b8462000875565b602080601f8311600181146200093357600084156200091a5750858301515b600019600386901b1c1916600185901b178555620008bf565b600085815260208120601f198616915b82811015620009645788860151825594840194600190910190840162000943565b5085821015620009835787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052601160045260246000fd5b80820180821115620004e557620004e562000993565b81810381811115620004e557620004e562000993565b8082028115828204841417620004e557620004e562000993565b60008262000a0d57634e487b7160e01b600052601260045260246000fd5b500490565b60805160a05161173362000a6260003960006104c80152600081816102680152818161057801528181610bb701528181610c1d01528181610c9101528181610cd7015261121a01526117336000f3fe608060405234801561001057600080fd5b506004361061025e5760003560e01c80637e5cd5c111610146578063c1eb1840116100c3578063ddf5451211610087578063ddf545121461054b578063e1cd04b414610553578063eb13554f1461055b578063f28ab2be1461056e578063f2fde38b146105e1578063f5fe7f71146105f457600080fd5b8063c1eb1840146104c3578063c598b2f9146104ea578063cc3cbd2a146103d3578063d0b7830b1461050a578063dd62ed3e1461051257600080fd5b806395d89b411161010a57806395d89b4114610476578063a64e4f8a1461047e578063a9059cbb14610490578063b29a8140146104a3578063beb9716d146104b657600080fd5b80637e5cd5c11461043957806382c3188c146104415780638456cb591461044a5780638da5cb5b146104525780638ebfc7961461046357600080fd5b80633f4ba83a116101df578063539aa77f116101a3578063539aa77f146103d35780635c975abb146103db5780636f28507c146103ed57806370a08231146103f5578063715018a61461041e57806379cc67901461042657600080fd5b80633f4ba83a1461035b57806340c10f191461036557806342966c68146103785780635146fcd51461038b57806352238fdd146103ab57600080fd5b806323b872dd1161022657806323b872dd146102fa578063313ce5671461030d578063338dd3b11461031c578063398daa851461032f5780633b4b93991461035257600080fd5b806302d05d3f1461026357806306fdde03146102a7578063095ea7b3146102bc57806318160ddd146102df578063191fe1ed146102f1575b600080fd5b61028a7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b6102af610607565b60405161029e91906114ae565b6102cf6102ca366004611518565b610699565b604051901515815260200161029e565b6002545b60405190815260200161029e565b6102e361271081565b6102cf610308366004611542565b6106b3565b6040516012815260200161029e565b6102cf61032a36600461157e565b6106d7565b6102cf61033d3660046115b1565b600c6020526000908152604090205460ff1681565b6102e360085481565b610363610770565b005b610363610373366004611518565b610782565b6103636103863660046115d3565b6107e2565b6102e36103993660046115b1565b600b6020526000908152604090205481565b6103be6103b93660046115d3565b6107ef565b6040805192835260208301919091520161029e565b6102e3606481565b600554600160a01b900460ff166102cf565b6102e361082b565b6102e36104033660046115b1565b6001600160a01b031660009081526020819052604090205490565b610363610839565b610363610434366004611518565b61084b565b610363610860565b6102e360095481565b610363610874565b6005546001600160a01b031661028a565b6103636104713660046115fa565b610884565b6102af6108eb565b600d546102cf90610100900460ff1681565b6102cf61049e366004611518565b6108fa565b6103636104b1366004611518565b610908565b600d546102cf9060ff1681565b6102cf7f000000000000000000000000000000000000000000000000000000000000000081565b6102e36104f83660046115b1565b600a6020526000908152604090205481565b6103636109ff565b6102e361052036600461157e565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b610363610b3a565b610363610ba4565b60075461028a906001600160a01b031681565b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166000908152600a60209081526040808320546007549094168352600b90915290205460085460095460408051948552602085019390935291830152606082015260800161029e565b6103636105ef3660046115b1565b610d30565b6103636106023660046115b1565b610d6b565b60606003805461061690611631565b80601f016020809104026020016040519081016040528092919081815260200182805461064290611631565b801561068f5780601f106106645761010080835404028352916020019161068f565b820191906000526020600020905b81548152906001019060200180831161067257829003601f168201915b5050505050905090565b6000336106a7818585610e53565b60019150505b92915050565b6000336106c1858285610e60565b6106cc858585610edf565b506001949350505050565b600d54600090610100900460ff166106f1575060006106ad565b6001600160a01b0383166000908152600c602052604090205460ff168061073057506001600160a01b0382166000908152600c602052604090205460ff165b1561073d575060006106ad565b6001600160a01b038316158061075a57506001600160a01b038216155b15610767575060006106ad565b50600192915050565b610778610f3e565b610780610f6b565b565b61078a610f3e565b600d5460ff166107d45760405162461bcd60e51b815260206004820152601060248201526f135a5b9d1a5b99c8191a5cd8589b195960821b60448201526064015b60405180910390fd5b6107de8282610fbb565b5050565b6107ec3382610ff1565b50565b600080612710610800606485611681565b61080a9190611698565b915061271061081a606485611681565b6108249190611698565b9050915091565b6108366064806116ba565b81565b610841610f3e565b6107806000611027565b610856823383610e60565b6107de8282610ff1565b610868610f3e565b600d805460ff19169055565b61087c610f3e565b610780611079565b61088c610f3e565b6001600160a01b0382166000818152600c6020908152604091829020805460ff191685151590811790915591519182527f69e34a174b4a0cce59950c4c852317e9797bdcae125fbf8b5dd8b4311384412f910160405180910390a25050565b60606004805461061690611631565b6000336106a7818585610edf565b610910610f3e565b306001600160a01b038316036109685760405162461bcd60e51b815260206004820152601b60248201527f43616e6e6f74207265636f766572206e617469766520746f6b656e000000000060448201526064016107cb565b816001600160a01b031663a9059cbb6109896005546001600160a01b031690565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602481018490526044016020604051808303816000875af11580156109d6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109fa91906116cd565b505050565b610a076110bc565b6007546001600160a01b03163314610a615760405162461bcd60e51b815260206004820152601760248201527f4f6e6c7920706c6174666f726d20726563697069656e7400000000000000000060448201526064016107cb565b6007546001600160a01b03166000908152600b602052604090205480610abf5760405162461bcd60e51b81526020600482015260136024820152724e6f206665657320746f20776974686472617760681b60448201526064016107cb565b600780546001600160a01b039081166000908152600b60205260408120559054610aec9130911683610edf565b6007546040518281526001600160a01b03909116907ffc7ad544ff6a06d6499925723d25b6fe70457a42939995b1d3d6f560fe336333906020015b60405180910390a2506107806001600655565b610b42610f3e565b600d805460ff610100808304821615810261ff001990931692909217928390556040517fc97260ffb3df6b903cdfd59e3b5b21a896404903a8e8a83bf60ba3fca365fbe593610b9a9390049091161515815260200190565b60405180910390a1565b610bac6110bc565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610c135760405162461bcd60e51b815260206004820152600c60248201526b27b7363c9031b932b0ba37b960a11b60448201526064016107cb565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166000908152600a602052604090205480610c8f5760405162461bcd60e51b81526020600482015260136024820152724e6f206665657320746f20776974686472617760681b60448201526064016107cb565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0381166000908152600a6020526040812055610cd590309083610edf565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03167f7f0b212761a7abe7ec4d2adea5a7fa1fea58234aabf0c01c0e63403fe62013ff82604051610b2791815260200190565b610d38610f3e565b6001600160a01b038116610d6257604051631e4fbdf760e01b8152600060048201526024016107cb565b6107ec81611027565b610d73610f3e565b6001600160a01b038116610dbd5760405162461bcd60e51b8152602060048201526011602482015270125b9d985b1a59081c9958da5c1a595b9d607a1b60448201526064016107cb565b6007546001600160a01b03166000908152600b60205260409020548015610e08576007546001600160a01b039081166000908152600b60205260408082208290559184168152208190555b600780546001600160a01b0319166001600160a01b0384169081179091556040517fba887708e7d4436dd36b62187bdced03e0b9abe66caf392a66dd84386641b20990600090a25050565b6109fa83838360016110e6565b6001600160a01b03838116600090815260016020908152604080832093861683529290522054600019811015610ed95781811015610eca57604051637dc7a0d960e11b81526001600160a01b038416600482015260248101829052604481018390526064016107cb565b610ed9848484840360006110e6565b50505050565b6001600160a01b038316610f0957604051634b637e8f60e11b8152600060048201526024016107cb565b6001600160a01b038216610f335760405163ec442f0560e01b8152600060048201526024016107cb565b6109fa8383836111bb565b6005546001600160a01b031633146107805760405163118cdaa760e01b81523360048201526024016107cb565b610f7361132f565b6005805460ff60a01b191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b039091168152602001610b9a565b6001600160a01b038216610fe55760405163ec442f0560e01b8152600060048201526024016107cb565b6107de600083836111bb565b6001600160a01b03821661101b57604051634b637e8f60e11b8152600060048201526024016107cb565b6107de826000836111bb565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b611081611359565b6005805460ff60a01b1916600160a01b1790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610fa33390565b6002600654036110df57604051633ee5aeb560e01b815260040160405180910390fd5b6002600655565b6001600160a01b0384166111105760405163e602df0560e01b8152600060048201526024016107cb565b6001600160a01b03831661113a57604051634a1406b160e11b8152600060048201526024016107cb565b6001600160a01b0380851660009081526001602090815260408083209387168352929052208290558015610ed957826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516111ad91815260200190565b60405180910390a350505050565b6111c3611359565b6111cd83836106d7565b15611324576000806111de836107ef565b909250905060006111ef82846116ba565b905060006111fd82866116ea565b9050811561131057611210873084611384565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166000908152600a6020526040812080548692906112589084906116ba565b90915550506007546001600160a01b03166000908152600b6020526040812080548592906112879084906116ba565b9250508190555083600860008282546112a091906116ba565b9250508190555082600960008282546112b991906116ba565b909155505060408051868152602081018690529081018490526001600160a01b0380881691908916907fde5d657c00d557886c53e267ff792a157187bc1c5947bd02cb62159550edb08e9060600160405180910390a35b61131b878783611384565b50505050505050565b6109fa838383611384565b600554600160a01b900460ff1661078057604051638dfc202b60e01b815260040160405180910390fd5b600554600160a01b900460ff16156107805760405163d93c066560e01b815260040160405180910390fd5b6001600160a01b0383166113af5780600260008282546113a491906116ba565b909155506114219050565b6001600160a01b038316600090815260208190526040902054818110156114025760405163391434e360e21b81526001600160a01b038516600482015260248101829052604481018390526064016107cb565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b03821661143d5760028054829003905561145c565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516114a191815260200190565b60405180910390a3505050565b600060208083528351808285015260005b818110156114db578581018301518582016040015282016114bf565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461151357600080fd5b919050565b6000806040838503121561152b57600080fd5b611534836114fc565b946020939093013593505050565b60008060006060848603121561155757600080fd5b611560846114fc565b925061156e602085016114fc565b9150604084013590509250925092565b6000806040838503121561159157600080fd5b61159a836114fc565b91506115a8602084016114fc565b90509250929050565b6000602082840312156115c357600080fd5b6115cc826114fc565b9392505050565b6000602082840312156115e557600080fd5b5035919050565b80151581146107ec57600080fd5b6000806040838503121561160d57600080fd5b611616836114fc565b91506020830135611626816115ec565b809150509250929050565b600181811c9082168061164557607f821691505b60208210810361166557634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b80820281158282048414176106ad576106ad61166b565b6000826116b557634e487b7160e01b600052601260045260246000fd5b500490565b808201808211156106ad576106ad61166b565b6000602082840312156116df57600080fd5b81516115cc816115ec565b818103818111156106ad576106ad61166b56fea2646970667358221220d9f0d3ee8b951a6f4b2bb2dfab36b50b0e51888a74bab1e3ee1f05695895e4e664736f6c63430008140033","opcodes":"PUSH1 0xC0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x2195 CODESIZE SUB DUP1 PUSH3 0x2195 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x755 JUMP JUMPDEST DUP6 DUP10 DUP10 PUSH1 0x3 PUSH3 0x45 DUP4 DUP3 PUSH3 0x8C7 JUMP JUMPDEST POP PUSH1 0x4 PUSH3 0x54 DUP3 DUP3 PUSH3 0x8C7 JUMP JUMPDEST POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH3 0x87 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x92 DUP2 PUSH3 0x20F JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x6 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH3 0xE2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x24B73B30B634B21031B932B0BA37B9 PUSH1 0x89 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH3 0x7E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH3 0x13A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420706C6174666F726D20726563697069656E74000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH3 0x7E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x80 MSTORE PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP2 DUP7 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0xD DUP1 SLOAD DUP4 ISZERO ISZERO PUSH1 0xA0 MSTORE PUSH2 0xFFFF NOT AND DUP5 ISZERO ISZERO PUSH2 0xFF00 NOT AND OR PUSH2 0x100 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE PUSH3 0x18D DUP7 DUP9 PUSH3 0x261 JUMP JUMPDEST POP POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0xFF NOT SWAP2 DUP3 AND DUP2 OR SWAP1 SWAP3 SSTORE SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE DUP1 DUP3 KECCAK256 DUP1 SLOAD DUP5 AND DUP6 OR SWAP1 SSTORE ADDRESS DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP4 AND DUP5 OR SWAP1 SSTORE DUP1 MSTORE PUSH32 0x13649B2456F1B42FEF0F0040B3AAEABCD21A76A0F3F5DEFD4F583839455116E8 DUP1 SLOAD SWAP1 SWAP2 AND SWAP1 SWAP2 OR SWAP1 SSTORE POP PUSH3 0xA12 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH3 0x28D JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH3 0x7E JUMP JUMPDEST PUSH3 0x29B PUSH1 0x0 DUP4 DUP4 PUSH3 0x29F JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH3 0x2A9 PUSH3 0x414 JUMP JUMPDEST PUSH3 0x2B5 DUP4 DUP4 PUSH3 0x449 JUMP JUMPDEST ISZERO PUSH3 0x402 JUMPI PUSH1 0x0 DUP1 PUSH3 0x2C9 DUP4 PUSH3 0x4EB JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP PUSH1 0x0 PUSH3 0x2DC DUP3 DUP5 PUSH3 0x9A9 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH3 0x2EC DUP3 DUP7 PUSH3 0x9BF JUMP JUMPDEST SWAP1 POP DUP2 ISZERO PUSH3 0x3EC JUMPI PUSH3 0x302 DUP8 ADDRESS DUP5 PUSH3 0x52F JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP7 SWAP3 SWAP1 PUSH3 0x32E SWAP1 DUP5 SWAP1 PUSH3 0x9A9 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP6 SWAP3 SWAP1 PUSH3 0x35F SWAP1 DUP5 SWAP1 PUSH3 0x9A9 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP4 PUSH1 0x8 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH3 0x37A SWAP2 SWAP1 PUSH3 0x9A9 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x9 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH3 0x395 SWAP2 SWAP1 PUSH3 0x9A9 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP7 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP7 SWAP1 MSTORE SWAP1 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP9 AND SWAP2 SWAP1 DUP10 AND SWAP1 PUSH32 0xDE5D657C00D557886C53E267FF792A157187BC1C5947BD02CB62159550EDB08E SWAP1 PUSH1 0x60 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST PUSH3 0x3F9 DUP8 DUP8 DUP4 PUSH3 0x52F JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH3 0x40F DUP4 DUP4 DUP4 PUSH3 0x52F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH3 0x428 PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND SWAP1 JUMP JUMPDEST ISZERO PUSH3 0x447 JUMPI PUSH1 0x40 MLOAD PUSH4 0xD93C0665 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x0 SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH3 0x465 JUMPI POP PUSH1 0x0 PUSH3 0x4E5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 PUSH3 0x4A5 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST ISZERO PUSH3 0x4B4 JUMPI POP PUSH1 0x0 PUSH3 0x4E5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 PUSH3 0x4D2 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO JUMPDEST ISZERO PUSH3 0x4E1 JUMPI POP PUSH1 0x0 PUSH3 0x4E5 JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2710 PUSH3 0x4FE PUSH1 0x64 DUP6 PUSH3 0x9D5 JUMP JUMPDEST PUSH3 0x50A SWAP2 SWAP1 PUSH3 0x9EF JUMP JUMPDEST SWAP2 POP PUSH2 0x2710 PUSH3 0x51C PUSH1 0x64 DUP6 PUSH3 0x9D5 JUMP JUMPDEST PUSH3 0x528 SWAP2 SWAP1 PUSH3 0x9EF JUMP JUMPDEST SWAP1 POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH3 0x55E JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH3 0x552 SWAP2 SWAP1 PUSH3 0x9A9 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH3 0x5D2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH3 0x5B3 JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH3 0x7E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH3 0x5F0 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH3 0x60F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH3 0x655 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x68A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x6A7 JUMPI PUSH3 0x6A7 PUSH3 0x662 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0x6D2 JUMPI PUSH3 0x6D2 PUSH3 0x662 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 SWAP3 POP DUP7 DUP4 DUP6 DUP9 ADD ADD GT ISZERO PUSH3 0x6EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 POP JUMPDEST DUP4 DUP3 LT ISZERO PUSH3 0x713 JUMPI DUP6 DUP3 ADD DUP4 ADD MLOAD DUP2 DUP4 ADD DUP5 ADD MSTORE SWAP1 DUP3 ADD SWAP1 PUSH3 0x6F4 JUMP JUMPDEST PUSH1 0x0 SWAP4 DUP2 ADD SWAP1 SWAP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x73F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH3 0x73F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x120 DUP11 DUP13 SUB SLT ISZERO PUSH3 0x775 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP10 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x78D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x79B DUP14 DUP4 DUP15 ADD PUSH3 0x678 JUMP JUMPDEST SWAP11 POP PUSH1 0x20 DUP13 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x7B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x7C1 DUP13 DUP3 DUP14 ADD PUSH3 0x678 JUMP JUMPDEST SWAP9 POP POP PUSH1 0x40 DUP11 ADD MLOAD SWAP7 POP PUSH3 0x7D9 PUSH1 0x60 DUP12 ADD PUSH3 0x727 JUMP JUMPDEST SWAP6 POP PUSH3 0x7E9 PUSH1 0x80 DUP12 ADD PUSH3 0x727 JUMP JUMPDEST SWAP5 POP PUSH3 0x7F9 PUSH1 0xA0 DUP12 ADD PUSH3 0x727 JUMP JUMPDEST SWAP4 POP PUSH3 0x809 PUSH1 0xC0 DUP12 ADD PUSH3 0x744 JUMP JUMPDEST SWAP3 POP PUSH3 0x819 PUSH1 0xE0 DUP12 ADD PUSH3 0x744 JUMP JUMPDEST SWAP2 POP PUSH3 0x82A PUSH2 0x100 DUP12 ADD PUSH3 0x744 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x84E JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x86F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x40F JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0x89E JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x8BF JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x8AA JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x8E3 JUMPI PUSH3 0x8E3 PUSH3 0x662 JUMP JUMPDEST PUSH3 0x8FB DUP2 PUSH3 0x8F4 DUP5 SLOAD PUSH3 0x839 JUMP JUMPDEST DUP5 PUSH3 0x875 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x933 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x91A JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x8BF JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x964 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x943 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x983 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH3 0x4E5 JUMPI PUSH3 0x4E5 PUSH3 0x993 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH3 0x4E5 JUMPI PUSH3 0x4E5 PUSH3 0x993 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH3 0x4E5 JUMPI PUSH3 0x4E5 PUSH3 0x993 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH3 0xA0D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH2 0x1733 PUSH3 0xA62 PUSH1 0x0 CODECOPY PUSH1 0x0 PUSH2 0x4C8 ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x268 ADD MSTORE DUP2 DUP2 PUSH2 0x578 ADD MSTORE DUP2 DUP2 PUSH2 0xBB7 ADD MSTORE DUP2 DUP2 PUSH2 0xC1D ADD MSTORE DUP2 DUP2 PUSH2 0xC91 ADD MSTORE DUP2 DUP2 PUSH2 0xCD7 ADD MSTORE PUSH2 0x121A ADD MSTORE PUSH2 0x1733 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x25E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7E5CD5C1 GT PUSH2 0x146 JUMPI DUP1 PUSH4 0xC1EB1840 GT PUSH2 0xC3 JUMPI DUP1 PUSH4 0xDDF54512 GT PUSH2 0x87 JUMPI DUP1 PUSH4 0xDDF54512 EQ PUSH2 0x54B JUMPI DUP1 PUSH4 0xE1CD04B4 EQ PUSH2 0x553 JUMPI DUP1 PUSH4 0xEB13554F EQ PUSH2 0x55B JUMPI DUP1 PUSH4 0xF28AB2BE EQ PUSH2 0x56E JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x5E1 JUMPI DUP1 PUSH4 0xF5FE7F71 EQ PUSH2 0x5F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xC1EB1840 EQ PUSH2 0x4C3 JUMPI DUP1 PUSH4 0xC598B2F9 EQ PUSH2 0x4EA JUMPI DUP1 PUSH4 0xCC3CBD2A EQ PUSH2 0x3D3 JUMPI DUP1 PUSH4 0xD0B7830B EQ PUSH2 0x50A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x512 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x95D89B41 GT PUSH2 0x10A JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x476 JUMPI DUP1 PUSH4 0xA64E4F8A EQ PUSH2 0x47E JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x490 JUMPI DUP1 PUSH4 0xB29A8140 EQ PUSH2 0x4A3 JUMPI DUP1 PUSH4 0xBEB9716D EQ PUSH2 0x4B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x7E5CD5C1 EQ PUSH2 0x439 JUMPI DUP1 PUSH4 0x82C3188C EQ PUSH2 0x441 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x44A JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x452 JUMPI DUP1 PUSH4 0x8EBFC796 EQ PUSH2 0x463 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3F4BA83A GT PUSH2 0x1DF JUMPI DUP1 PUSH4 0x539AA77F GT PUSH2 0x1A3 JUMPI DUP1 PUSH4 0x539AA77F EQ PUSH2 0x3D3 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x3DB JUMPI DUP1 PUSH4 0x6F28507C EQ PUSH2 0x3ED JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x3F5 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x41E JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x426 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x35B JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x365 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x378 JUMPI DUP1 PUSH4 0x5146FCD5 EQ PUSH2 0x38B JUMPI DUP1 PUSH4 0x52238FDD EQ PUSH2 0x3AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0x226 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x2FA JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x30D JUMPI DUP1 PUSH4 0x338DD3B1 EQ PUSH2 0x31C JUMPI DUP1 PUSH4 0x398DAA85 EQ PUSH2 0x32F JUMPI DUP1 PUSH4 0x3B4B9399 EQ PUSH2 0x352 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2D05D3F EQ PUSH2 0x263 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x2A7 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x2BC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x2DF JUMPI DUP1 PUSH4 0x191FE1ED EQ PUSH2 0x2F1 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x28A PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2AF PUSH2 0x607 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29E SWAP2 SWAP1 PUSH2 0x14AE JUMP JUMPDEST PUSH2 0x2CF PUSH2 0x2CA CALLDATASIZE PUSH1 0x4 PUSH2 0x1518 JUMP JUMPDEST PUSH2 0x699 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x29E JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x29E JUMP JUMPDEST PUSH2 0x2E3 PUSH2 0x2710 DUP2 JUMP JUMPDEST PUSH2 0x2CF PUSH2 0x308 CALLDATASIZE PUSH1 0x4 PUSH2 0x1542 JUMP JUMPDEST PUSH2 0x6B3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x29E JUMP JUMPDEST PUSH2 0x2CF PUSH2 0x32A CALLDATASIZE PUSH1 0x4 PUSH2 0x157E JUMP JUMPDEST PUSH2 0x6D7 JUMP JUMPDEST PUSH2 0x2CF PUSH2 0x33D CALLDATASIZE PUSH1 0x4 PUSH2 0x15B1 JUMP JUMPDEST PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x2E3 PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x363 PUSH2 0x770 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x363 PUSH2 0x373 CALLDATASIZE PUSH1 0x4 PUSH2 0x1518 JUMP JUMPDEST PUSH2 0x782 JUMP JUMPDEST PUSH2 0x363 PUSH2 0x386 CALLDATASIZE PUSH1 0x4 PUSH2 0x15D3 JUMP JUMPDEST PUSH2 0x7E2 JUMP JUMPDEST PUSH2 0x2E3 PUSH2 0x399 CALLDATASIZE PUSH1 0x4 PUSH2 0x15B1 JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x3BE PUSH2 0x3B9 CALLDATASIZE PUSH1 0x4 PUSH2 0x15D3 JUMP JUMPDEST PUSH2 0x7EF JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x29E JUMP JUMPDEST PUSH2 0x2E3 PUSH1 0x64 DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x2CF JUMP JUMPDEST PUSH2 0x2E3 PUSH2 0x82B JUMP JUMPDEST PUSH2 0x2E3 PUSH2 0x403 CALLDATASIZE PUSH1 0x4 PUSH2 0x15B1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x363 PUSH2 0x839 JUMP JUMPDEST PUSH2 0x363 PUSH2 0x434 CALLDATASIZE PUSH1 0x4 PUSH2 0x1518 JUMP JUMPDEST PUSH2 0x84B JUMP JUMPDEST PUSH2 0x363 PUSH2 0x860 JUMP JUMPDEST PUSH2 0x2E3 PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x363 PUSH2 0x874 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x28A JUMP JUMPDEST PUSH2 0x363 PUSH2 0x471 CALLDATASIZE PUSH1 0x4 PUSH2 0x15FA JUMP JUMPDEST PUSH2 0x884 JUMP JUMPDEST PUSH2 0x2AF PUSH2 0x8EB JUMP JUMPDEST PUSH1 0xD SLOAD PUSH2 0x2CF SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x2CF PUSH2 0x49E CALLDATASIZE PUSH1 0x4 PUSH2 0x1518 JUMP JUMPDEST PUSH2 0x8FA JUMP JUMPDEST PUSH2 0x363 PUSH2 0x4B1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1518 JUMP JUMPDEST PUSH2 0x908 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH2 0x2CF SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x2CF PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x2E3 PUSH2 0x4F8 CALLDATASIZE PUSH1 0x4 PUSH2 0x15B1 JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x363 PUSH2 0x9FF JUMP JUMPDEST PUSH2 0x2E3 PUSH2 0x520 CALLDATASIZE PUSH1 0x4 PUSH2 0x157E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x363 PUSH2 0xB3A JUMP JUMPDEST PUSH2 0x363 PUSH2 0xBA4 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x28A SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x7 SLOAD SWAP1 SWAP5 AND DUP4 MSTORE PUSH1 0xB SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0x8 SLOAD PUSH1 0x9 SLOAD PUSH1 0x40 DUP1 MLOAD SWAP5 DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD PUSH2 0x29E JUMP JUMPDEST PUSH2 0x363 PUSH2 0x5EF CALLDATASIZE PUSH1 0x4 PUSH2 0x15B1 JUMP JUMPDEST PUSH2 0xD30 JUMP JUMPDEST PUSH2 0x363 PUSH2 0x602 CALLDATASIZE PUSH1 0x4 PUSH2 0x15B1 JUMP JUMPDEST PUSH2 0xD6B JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x616 SWAP1 PUSH2 0x1631 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x642 SWAP1 PUSH2 0x1631 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x68F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x664 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x68F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x672 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x6A7 DUP2 DUP6 DUP6 PUSH2 0xE53 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x6C1 DUP6 DUP3 DUP6 PUSH2 0xE60 JUMP JUMPDEST PUSH2 0x6CC DUP6 DUP6 DUP6 PUSH2 0xEDF JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x0 SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x6F1 JUMPI POP PUSH1 0x0 PUSH2 0x6AD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 PUSH2 0x730 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0x73D JUMPI POP PUSH1 0x0 PUSH2 0x6AD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 PUSH2 0x75A JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO JUMPDEST ISZERO PUSH2 0x767 JUMPI POP PUSH1 0x0 PUSH2 0x6AD JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x778 PUSH2 0xF3E JUMP JUMPDEST PUSH2 0x780 PUSH2 0xF6B JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x78A PUSH2 0xF3E JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0xFF AND PUSH2 0x7D4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x135A5B9D1A5B99C8191A5CD8589B1959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7DE DUP3 DUP3 PUSH2 0xFBB JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x7EC CALLER DUP3 PUSH2 0xFF1 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2710 PUSH2 0x800 PUSH1 0x64 DUP6 PUSH2 0x1681 JUMP JUMPDEST PUSH2 0x80A SWAP2 SWAP1 PUSH2 0x1698 JUMP JUMPDEST SWAP2 POP PUSH2 0x2710 PUSH2 0x81A PUSH1 0x64 DUP6 PUSH2 0x1681 JUMP JUMPDEST PUSH2 0x824 SWAP2 SWAP1 PUSH2 0x1698 JUMP JUMPDEST SWAP1 POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH2 0x836 PUSH1 0x64 DUP1 PUSH2 0x16BA JUMP JUMPDEST DUP2 JUMP JUMPDEST PUSH2 0x841 PUSH2 0xF3E JUMP JUMPDEST PUSH2 0x780 PUSH1 0x0 PUSH2 0x1027 JUMP JUMPDEST PUSH2 0x856 DUP3 CALLER DUP4 PUSH2 0xE60 JUMP JUMPDEST PUSH2 0x7DE DUP3 DUP3 PUSH2 0xFF1 JUMP JUMPDEST PUSH2 0x868 PUSH2 0xF3E JUMP JUMPDEST PUSH1 0xD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x87C PUSH2 0xF3E JUMP JUMPDEST PUSH2 0x780 PUSH2 0x1079 JUMP JUMPDEST PUSH2 0x88C PUSH2 0xF3E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP6 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x69E34A174B4A0CCE59950C4C852317E9797BDCAE125FBF8B5DD8B4311384412F SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x616 SWAP1 PUSH2 0x1631 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x6A7 DUP2 DUP6 DUP6 PUSH2 0xEDF JUMP JUMPDEST PUSH2 0x910 PUSH2 0xF3E JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SUB PUSH2 0x968 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F74207265636F766572206E617469766520746F6B656E0000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7CB JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB PUSH2 0x989 PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP5 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x9D6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9FA SWAP2 SWAP1 PUSH2 0x16CD JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xA07 PUSH2 0x10BC JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xA61 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920706C6174666F726D20726563697069656E74000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7CB JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP1 PUSH2 0xABF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x4E6F206665657320746F207769746864726177 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7CB JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SSTORE SWAP1 SLOAD PUSH2 0xAEC SWAP2 ADDRESS SWAP2 AND DUP4 PUSH2 0xEDF JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0xFC7AD544FF6A06D6499925723D25B6FE70457A42939995B1D3D6F560FE336333 SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH2 0x780 PUSH1 0x1 PUSH1 0x6 SSTORE JUMP JUMPDEST PUSH2 0xB42 PUSH2 0xF3E JUMP JUMPDEST PUSH1 0xD DUP1 SLOAD PUSH1 0xFF PUSH2 0x100 DUP1 DUP4 DIV DUP3 AND ISZERO DUP2 MUL PUSH2 0xFF00 NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP3 DUP4 SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0xC97260FFB3DF6B903CDFD59E3B5B21A896404903A8E8A83BF60BA3FCA365FBE5 SWAP4 PUSH2 0xB9A SWAP4 SWAP1 DIV SWAP1 SWAP2 AND ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH2 0xBAC PUSH2 0x10BC JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0xC13 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x27B7363C9031B932B0BA37B9 PUSH1 0xA1 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7CB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP1 PUSH2 0xC8F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x4E6F206665657320746F207769746864726177 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7CB JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SSTORE PUSH2 0xCD5 SWAP1 ADDRESS SWAP1 DUP4 PUSH2 0xEDF JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x7F0B212761A7ABE7EC4D2ADEA5A7FA1FEA58234AABF0C01C0E63403FE62013FF DUP3 PUSH1 0x40 MLOAD PUSH2 0xB27 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH2 0xD38 PUSH2 0xF3E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xD62 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7CB JUMP JUMPDEST PUSH2 0x7EC DUP2 PUSH2 0x1027 JUMP JUMPDEST PUSH2 0xD73 PUSH2 0xF3E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xDBD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x125B9D985B1A59081C9958DA5C1A595B9D PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7CB JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0xE08 JUMPI PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP3 SWAP1 SSTORE SWAP2 DUP5 AND DUP2 MSTORE KECCAK256 DUP2 SWAP1 SSTORE JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0xBA887708E7D4436DD36B62187BDCED03E0B9ABE66CAF392A66DD84386641B209 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH2 0x9FA DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x10E6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0x0 NOT DUP2 LT ISZERO PUSH2 0xED9 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xECA JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x7CB JUMP JUMPDEST PUSH2 0xED9 DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x10E6 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xF09 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7CB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xF33 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7CB JUMP JUMPDEST PUSH2 0x9FA DUP4 DUP4 DUP4 PUSH2 0x11BB JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x780 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7CB JUMP JUMPDEST PUSH2 0xF73 PUSH2 0x132F JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xB9A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xFE5 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7CB JUMP JUMPDEST PUSH2 0x7DE PUSH1 0x0 DUP4 DUP4 PUSH2 0x11BB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x101B JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7CB JUMP JUMPDEST PUSH2 0x7DE DUP3 PUSH1 0x0 DUP4 PUSH2 0x11BB JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x1081 PUSH2 0x1359 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0xFA3 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x6 SLOAD SUB PUSH2 0x10DF JUMPI PUSH1 0x40 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x6 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x1110 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7CB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x113A JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7CB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0xED9 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x11AD SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH2 0x11C3 PUSH2 0x1359 JUMP JUMPDEST PUSH2 0x11CD DUP4 DUP4 PUSH2 0x6D7 JUMP JUMPDEST ISZERO PUSH2 0x1324 JUMPI PUSH1 0x0 DUP1 PUSH2 0x11DE DUP4 PUSH2 0x7EF JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP PUSH1 0x0 PUSH2 0x11EF DUP3 DUP5 PUSH2 0x16BA JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x11FD DUP3 DUP7 PUSH2 0x16EA JUMP JUMPDEST SWAP1 POP DUP2 ISZERO PUSH2 0x1310 JUMPI PUSH2 0x1210 DUP8 ADDRESS DUP5 PUSH2 0x1384 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP7 SWAP3 SWAP1 PUSH2 0x1258 SWAP1 DUP5 SWAP1 PUSH2 0x16BA JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP6 SWAP3 SWAP1 PUSH2 0x1287 SWAP1 DUP5 SWAP1 PUSH2 0x16BA JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP4 PUSH1 0x8 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x12A0 SWAP2 SWAP1 PUSH2 0x16BA JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x9 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x12B9 SWAP2 SWAP1 PUSH2 0x16BA JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP7 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP7 SWAP1 MSTORE SWAP1 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP9 AND SWAP2 SWAP1 DUP10 AND SWAP1 PUSH32 0xDE5D657C00D557886C53E267FF792A157187BC1C5947BD02CB62159550EDB08E SWAP1 PUSH1 0x60 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST PUSH2 0x131B DUP8 DUP8 DUP4 PUSH2 0x1384 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x9FA DUP4 DUP4 DUP4 PUSH2 0x1384 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x780 JUMPI PUSH1 0x40 MLOAD PUSH4 0x8DFC202B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x780 JUMPI PUSH1 0x40 MLOAD PUSH4 0xD93C0665 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x13AF JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x13A4 SWAP2 SWAP1 PUSH2 0x16BA JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x1421 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x1402 JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x7CB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x143D JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x145C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x14A1 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x14DB JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x14BF JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1513 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x152B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1534 DUP4 PUSH2 0x14FC JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1557 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1560 DUP5 PUSH2 0x14FC JUMP JUMPDEST SWAP3 POP PUSH2 0x156E PUSH1 0x20 DUP6 ADD PUSH2 0x14FC JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1591 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x159A DUP4 PUSH2 0x14FC JUMP JUMPDEST SWAP2 POP PUSH2 0x15A8 PUSH1 0x20 DUP5 ADD PUSH2 0x14FC JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x15C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x15CC DUP3 PUSH2 0x14FC JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x15E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x7EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x160D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1616 DUP4 PUSH2 0x14FC JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x1626 DUP2 PUSH2 0x15EC JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1645 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1665 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x6AD JUMPI PUSH2 0x6AD PUSH2 0x166B JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x16B5 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x6AD JUMPI PUSH2 0x6AD PUSH2 0x166B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x15CC DUP2 PUSH2 0x15EC JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x6AD JUMPI PUSH2 0x6AD PUSH2 0x166B JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD9 CREATE 0xD3 0xEE DUP12 SWAP6 BYTE PUSH16 0x4B2BB2DFAB36B50B0E51888A74BAB1E3 0xEE 0x1F SDIV PUSH10 0x5895E4E664736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"458:7819:24:-:0;;;2037:950;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2343:6;2321:4;2327:6;1648:5:3;:13;2321:4:24;1648:5:3;:13;:::i;:::-;-1:-1:-1;1671:7:3;:17;1681:7;1671;:17;:::i;:::-;-1:-1:-1;;;;;;;;1273:26:0;;1269:95;;1322:31;;-1:-1:-1;;;1322:31:0;;1350:1;1322:31;;;5203:51:25;5176:18;;1322:31:0;;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;-1:-1:-1;1857:1:13;2061:7;:21;-1:-1:-1;;;;;2369:22:24;::::2;2361:50;;;::::0;-1:-1:-1;;;2361:50:24;;5467:2:25;2361:50:24::2;::::0;::::2;5449:21:25::0;5506:2;5486:18;;;5479:30;-1:-1:-1;;;5525:18:25;;;5518:45;5580:18;;2361:50:24::2;5265:339:25::0;2361:50:24::2;-1:-1:-1::0;;;;;2429:35:24;::::2;2421:74;;;::::0;-1:-1:-1;;;2421:74:24;;5811:2:25;2421:74:24::2;::::0;::::2;5793:21:25::0;5850:2;5830:18;;;5823:30;5889:28;5869:18;;;5862:56;5935:18;;2421:74:24::2;5609:350:25::0;2421:74:24::2;-1:-1:-1::0;;;;;2514:18:24;;::::2;;::::0;2542:20:::2;:44:::0;;-1:-1:-1;;;;;;2542:44:24::2;::::0;;::::2;::::0;;;::::2;::::0;;2596:7:::2;:18:::0;;2624;::::2;;;::::0;-1:-1:-1;;2652:35:24;2596:18;::::2;;-1:-1:-1::0;;2652:35:24;;2542:44:::2;2652:35:::0;::::2;;;;::::0;;2746:28:::2;2752:6:::0;2760:13;2746:5:::2;:28::i;:::-;-1:-1:-1::0;;;;;;;;;2841:17:24;;::::2;;::::0;;;:9:::2;:17;::::0;;;;;:24;;2861:4:::2;-1:-1:-1::0;;2841:24:24;;::::2;::::0;::::2;::::0;;;2875:19;;;::::2;::::0;;;;;:26;;;::::2;::::0;::::2;::::0;;2929:4:::2;2911:24:::0;;;;:31;;;::::2;::::0;::::2;::::0;;2952:21;;;:28;;;;::::2;::::0;;::::2;::::0;;-1:-1:-1;458:7819:24;;-1:-1:-1;;458:7819:24;2912:187:0;3004:6;;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;;3052:40;;3004:6;;;3020:17;3004:6;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;7439:208:3:-;-1:-1:-1;;;;;7509:21:3;;7505:91;;7553:32;;-1:-1:-1;;;7553:32:3;;7582:1;7553:32;;;5203:51:25;5176:18;;7553:32:3;5057:203:25;7505:91:3;7605:35;7621:1;7625:7;7634:5;7605:7;:35::i;:::-;7439:208;;:::o;3744:1173:24:-;1350:19:12;:17;:19::i;:::-;3887:24:24::1;3902:4:::0;3908:2;3887:14:::1;:24::i;:::-;3883:1028;;;3928:18;::::0;3971:21:::1;3985:6:::0;3971:13:::1;:21::i;:::-;3927:65:::0;;-1:-1:-1;3927:65:24;-1:-1:-1;4006:17:24::1;4026:24;3927:65:::0;;4026:24:::1;:::i;:::-;4006:44:::0;-1:-1:-1;4064:22:24::1;4089:18;4006:44:::0;4089:6;:18:::1;:::i;:::-;4064:43:::0;-1:-1:-1;4184:13:24;;4180:497:::1;;4217:45;4231:4:::0;4245::::1;4252:9:::0;4217:13:::1;:45::i;:::-;4354:7;::::0;-1:-1:-1;;;;;4335:27:24::1;;::::0;;;:18:::1;:27;::::0;;;;:41;;4366:10;;4335:27;:41:::1;::::0;4366:10;;4335:41:::1;:::i;:::-;::::0;;;-1:-1:-1;;4414:20:24::1;::::0;-1:-1:-1;;;;;4414:20:24::1;4394:41;::::0;;;:19:::1;:41;::::0;;;;:56;;4439:11;;4394:41;:56:::1;::::0;4439:11;;4394:56:::1;:::i;:::-;;;;;;;;4497:10;4468:25;;:39;;;;;;;:::i;:::-;;;;;;;;4555:11;4525:26;;:41;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;4606:56:24::1;::::0;;6561:25:25;;;6617:2;6602:18;;6595:34;;;6645:18;;;6638:34;;;-1:-1:-1;;;;;4606:56:24;;::::1;::::0;;;::::1;::::0;::::1;::::0;6549:2:25;6534:18;4606:56:24::1;;;;;;;4180:497;4757:39;4771:4:::0;4777:2;4781:14;4757:13:::1;:39::i;:::-;3913:894;;;;3744:1173:::0;;;:::o;3883:1028::-:1;4869:31;4883:4:::0;4889:2;4893:6;4869:13:::1;:31::i;:::-;3744:1173:::0;;;:::o;1878:128:12:-;1943:8;1796:7;;-1:-1:-1;;;1796:7:12;;;;;1726:84;1943:8;1939:61;;;1974:15;;-1:-1:-1;;;1974:15:12;;;;;;;;;;;1939:61;1878:128::o;3377:290:24:-;3469:11;;3448:4;;3469:11;;;;;3464:30;;-1:-1:-1;3489:5:24;3482:12;;3464:30;-1:-1:-1;;;;;3508:15:24;;;;;;:9;:15;;;;;;;;;:32;;-1:-1:-1;;;;;;3527:13:24;;;;;;:9;:13;;;;;;;;3508:32;3504:50;;;-1:-1:-1;3549:5:24;3542:12;;3504:50;-1:-1:-1;;;;;3568:18:24;;;;:38;;-1:-1:-1;;;;;;3590:16:24;;;3568:38;3564:56;;;-1:-1:-1;3615:5:24;3608:12;;3564:56;-1:-1:-1;3656:4:24;3377:290;;;;;:::o;3058:236::-;3118:18;;852:5;3183:24;617:3;3183:6;:24;:::i;:::-;3182:40;;;;:::i;:::-;3169:53;-1:-1:-1;852:5:24;3247:25;691:3;3247:6;:25;:::i;:::-;3246:41;;;;:::i;:::-;3232:55;;3058:236;;;:::o;5989:1107:3:-;-1:-1:-1;;;;;6078:18:3;;6074:540;;6230:5;6214:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;6074:540:3;;-1:-1:-1;6074:540:3;;-1:-1:-1;;;;;6288:15:3;;6266:19;6288:15;;;;;;;;;;;6321:19;;;6317:115;;;6367:50;;-1:-1:-1;;;6367:50:3;;-1:-1:-1;;;;;7298:32:25;;6367:50:3;;;7280:51:25;7347:18;;;7340:34;;;7390:18;;;7383:34;;;7253:18;;6367:50:3;7078:345:25;6317:115:3;-1:-1:-1;;;;;6552:15:3;;:9;:15;;;;;;;;;;6570:19;;;;6552:37;;6074:540;-1:-1:-1;;;;;6628:16:3;;6624:425;;6791:12;:21;;;;;;;6624:425;;;-1:-1:-1;;;;;7002:13:3;;:9;:13;;;;;;;;;;:22;;;;;;6624:425;7079:2;-1:-1:-1;;;;;7064:25:3;7073:4;-1:-1:-1;;;;;7064:25:3;;7083:5;7064:25;;;;7574::25;;7562:2;7547:18;;7428:177;7064:25:3;;;;;;;;5989:1107;;;:::o;14:127:25:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:840;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:25;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:25;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;954:1;932:15;;;928:24;;;921:35;;;;936:6;146:840;-1:-1:-1;;;;146:840:25:o;991:177::-;1070:13;;-1:-1:-1;;;;;1112:31:25;;1102:42;;1092:70;;1158:1;1155;1148:12;1092:70;991:177;;;:::o;1173:164::-;1249:13;;1298;;1291:21;1281:32;;1271:60;;1327:1;1324;1317:12;1342:1121;1495:6;1503;1511;1519;1527;1535;1543;1551;1559;1612:3;1600:9;1591:7;1587:23;1583:33;1580:53;;;1629:1;1626;1619:12;1580:53;1656:16;;-1:-1:-1;;;;;1721:14:25;;;1718:34;;;1748:1;1745;1738:12;1718:34;1771:61;1824:7;1815:6;1804:9;1800:22;1771:61;:::i;:::-;1761:71;;1878:2;1867:9;1863:18;1857:25;1841:41;;1907:2;1897:8;1894:16;1891:36;;;1923:1;1920;1913:12;1891:36;;1946:63;2001:7;1990:8;1979:9;1975:24;1946:63;:::i;:::-;1936:73;;;2049:2;2038:9;2034:18;2028:25;2018:35;;2072:49;2117:2;2106:9;2102:18;2072:49;:::i;:::-;2062:59;;2140:50;2185:3;2174:9;2170:19;2140:50;:::i;:::-;2130:60;;2209:50;2254:3;2243:9;2239:19;2209:50;:::i;:::-;2199:60;;2278:47;2320:3;2309:9;2305:19;2278:47;:::i;:::-;2268:57;;2344:47;2386:3;2375:9;2371:19;2344:47;:::i;:::-;2334:57;;2410:47;2452:3;2441:9;2437:19;2410:47;:::i;:::-;2400:57;;1342:1121;;;;;;;;;;;:::o;2468:380::-;2547:1;2543:12;;;;2590;;;2611:61;;2665:4;2657:6;2653:17;2643:27;;2611:61;2718:2;2710:6;2707:14;2687:18;2684:38;2681:161;;2764:10;2759:3;2755:20;2752:1;2745:31;2799:4;2796:1;2789:15;2827:4;2824:1;2817:15;2681:161;;2468:380;;;:::o;2979:545::-;3081:2;3076:3;3073:11;3070:448;;;3117:1;3142:5;3138:2;3131:17;3187:4;3183:2;3173:19;3257:2;3245:10;3241:19;3238:1;3234:27;3228:4;3224:38;3293:4;3281:10;3278:20;3275:47;;;-1:-1:-1;3316:4:25;3275:47;3371:2;3366:3;3362:12;3359:1;3355:20;3349:4;3345:31;3335:41;;3426:82;3444:2;3437:5;3434:13;3426:82;;;3489:17;;;3470:1;3459:13;3426:82;;;3430:3;;;2979:545;;;:::o;3700:1352::-;3820:10;;-1:-1:-1;;;;;3842:30:25;;3839:56;;;3875:18;;:::i;:::-;3904:97;3994:6;3954:38;3986:4;3980:11;3954:38;:::i;:::-;3948:4;3904:97;:::i;:::-;4056:4;;4120:2;4109:14;;4137:1;4132:663;;;;4839:1;4856:6;4853:89;;;-1:-1:-1;4908:19:25;;;4902:26;4853:89;-1:-1:-1;;3657:1:25;3653:11;;;3649:24;3645:29;3635:40;3681:1;3677:11;;;3632:57;4955:81;;4102:944;;4132:663;2926:1;2919:14;;;2963:4;2950:18;;-1:-1:-1;;4168:20:25;;;4286:236;4300:7;4297:1;4294:14;4286:236;;;4389:19;;;4383:26;4368:42;;4481:27;;;;4449:1;4437:14;;;;4316:19;;4286:236;;;4290:3;4550:6;4541:7;4538:19;4535:201;;;4611:19;;;4605:26;-1:-1:-1;;4694:1:25;4690:14;;;4706:3;4686:24;4682:37;4678:42;4663:58;4648:74;;4535:201;-1:-1:-1;;;;;4782:1:25;4766:14;;;4762:22;4749:36;;-1:-1:-1;3700:1352:25:o;5964:127::-;6025:10;6020:3;6016:20;6013:1;6006:31;6056:4;6053:1;6046:15;6080:4;6077:1;6070:15;6096:125;6161:9;;;6182:10;;;6179:36;;;6195:18;;:::i;6226:128::-;6293:9;;;6314:11;;;6311:37;;;6328:18;;:::i;6683:168::-;6756:9;;;6787;;6804:15;;;6798:22;;6784:37;6774:71;;6825:18;;:::i;6856:217::-;6896:1;6922;6912:132;;6966:10;6961:3;6957:20;6954:1;6947:31;7001:4;6998:1;6991:15;7029:4;7026:1;7019:15;6912:132;-1:-1:-1;7058:9:25;;6856:217::o;7428:177::-;458:7819:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@BPS_DIVISOR_8315":{"entryPoint":null,"id":8315,"parameterSlots":0,"returnSlots":0},"@CREATOR_FEE_BPS_8304":{"entryPoint":null,"id":8304,"parameterSlots":0,"returnSlots":0},"@PLATFORM_FEE_BPS_8307":{"entryPoint":null,"id":8307,"parameterSlots":0,"returnSlots":0},"@TOTAL_FEE_BPS_8312":{"entryPoint":2091,"id":8312,"parameterSlots":0,"returnSlots":0},"@_approve_715":{"entryPoint":3667,"id":715,"parameterSlots":3,"returnSlots":0},"@_approve_775":{"entryPoint":4326,"id":775,"parameterSlots":4,"returnSlots":0},"@_burn_697":{"entryPoint":4081,"id":697,"parameterSlots":2,"returnSlots":0},"@_checkOwner_84":{"entryPoint":3902,"id":84,"parameterSlots":0,"returnSlots":0},"@_mint_664":{"entryPoint":4027,"id":664,"parameterSlots":2,"returnSlots":0},"@_msgSender_1176":{"entryPoint":null,"id":1176,"parameterSlots":0,"returnSlots":1},"@_nonReentrantAfter_1479":{"entryPoint":null,"id":1479,"parameterSlots":0,"returnSlots":0},"@_nonReentrantBefore_1471":{"entryPoint":4284,"id":1471,"parameterSlots":0,"returnSlots":0},"@_pause_1405":{"entryPoint":4217,"id":1405,"parameterSlots":0,"returnSlots":0},"@_requireNotPaused_1376":{"entryPoint":4953,"id":1376,"parameterSlots":0,"returnSlots":0},"@_requirePaused_1389":{"entryPoint":4911,"id":1389,"parameterSlots":0,"returnSlots":0},"@_spendAllowance_823":{"entryPoint":3680,"id":823,"parameterSlots":3,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":4135,"id":146,"parameterSlots":1,"returnSlots":0},"@_transfer_554":{"entryPoint":3807,"id":554,"parameterSlots":3,"returnSlots":0},"@_unpause_1421":{"entryPoint":3947,"id":1421,"parameterSlots":0,"returnSlots":0},"@_update_631":{"entryPoint":4996,"id":631,"parameterSlots":3,"returnSlots":0},"@_update_8669":{"entryPoint":4539,"id":8669,"parameterSlots":3,"returnSlots":0},"@allowance_451":{"entryPoint":null,"id":451,"parameterSlots":2,"returnSlots":1},"@approve_475":{"entryPoint":1689,"id":475,"parameterSlots":2,"returnSlots":1},"@balanceOf_410":{"entryPoint":null,"id":410,"parameterSlots":1,"returnSlots":1},"@burnFrom_947":{"entryPoint":2123,"id":947,"parameterSlots":2,"returnSlots":0},"@burn_926":{"entryPoint":2018,"id":926,"parameterSlots":1,"returnSlots":0},"@calculateFees_8524":{"entryPoint":2031,"id":8524,"parameterSlots":1,"returnSlots":2},"@canBurn_8339":{"entryPoint":null,"id":8339,"parameterSlots":0,"returnSlots":0},"@canMint_8337":{"entryPoint":null,"id":8337,"parameterSlots":0,"returnSlots":0},"@creator_8317":{"entryPoint":null,"id":8317,"parameterSlots":0,"returnSlots":0},"@decimals_388":{"entryPoint":null,"id":388,"parameterSlots":0,"returnSlots":1},"@disableMinting_8932":{"entryPoint":2144,"id":8932,"parameterSlots":0,"returnSlots":0},"@feeExempt_8335":{"entryPoint":null,"id":8335,"parameterSlots":0,"returnSlots":0},"@feesEnabled_8341":{"entryPoint":null,"id":8341,"parameterSlots":0,"returnSlots":0},"@getFeeStats_8792":{"entryPoint":null,"id":8792,"parameterSlots":0,"returnSlots":4},"@mint_8901":{"entryPoint":1922,"id":8901,"parameterSlots":2,"returnSlots":0},"@name_370":{"entryPoint":1543,"id":370,"parameterSlots":0,"returnSlots":1},"@owner_67":{"entryPoint":null,"id":67,"parameterSlots":0,"returnSlots":1},"@pause_8911":{"entryPoint":2164,"id":8911,"parameterSlots":0,"returnSlots":0},"@paused_1364":{"entryPoint":null,"id":1364,"parameterSlots":0,"returnSlots":1},"@pendingCreatorFees_8327":{"entryPoint":null,"id":8327,"parameterSlots":0,"returnSlots":0},"@pendingPlatformFees_8331":{"entryPoint":null,"id":8331,"parameterSlots":0,"returnSlots":0},"@platformFeeRecipient_8319":{"entryPoint":null,"id":8319,"parameterSlots":0,"returnSlots":0},"@recoverToken_8962":{"entryPoint":2312,"id":8962,"parameterSlots":2,"returnSlots":0},"@renounceOwnership_98":{"entryPoint":2105,"id":98,"parameterSlots":0,"returnSlots":0},"@setFeeExempt_8814":{"entryPoint":2180,"id":8814,"parameterSlots":2,"returnSlots":0},"@shouldTakeFees_8568":{"entryPoint":1751,"id":8568,"parameterSlots":2,"returnSlots":1},"@symbol_379":{"entryPoint":2283,"id":379,"parameterSlots":0,"returnSlots":1},"@toggleFees_8830":{"entryPoint":2874,"id":8830,"parameterSlots":0,"returnSlots":0},"@totalCreatorFeesCollected_8321":{"entryPoint":null,"id":8321,"parameterSlots":0,"returnSlots":0},"@totalPlatformFeesCollected_8323":{"entryPoint":null,"id":8323,"parameterSlots":0,"returnSlots":0},"@totalSupply_397":{"entryPoint":null,"id":397,"parameterSlots":0,"returnSlots":1},"@transferFrom_507":{"entryPoint":1715,"id":507,"parameterSlots":3,"returnSlots":1},"@transferOwnership_126":{"entryPoint":3376,"id":126,"parameterSlots":1,"returnSlots":0},"@transfer_434":{"entryPoint":2298,"id":434,"parameterSlots":2,"returnSlots":1},"@unpause_8921":{"entryPoint":1904,"id":8921,"parameterSlots":0,"returnSlots":0},"@updatePlatformFeeRecipient_8880":{"entryPoint":3435,"id":8880,"parameterSlots":1,"returnSlots":0},"@withdrawCreatorFees_8711":{"entryPoint":2980,"id":8711,"parameterSlots":0,"returnSlots":0},"@withdrawPlatformFees_8759":{"entryPoint":2559,"id":8759,"parameterSlots":0,"returnSlots":0},"abi_decode_address":{"entryPoint":5372,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":5553,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":5502,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":5442,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_bool":{"entryPoint":5626,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":5400,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":5837,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":5587,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":5294,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_1496af23f8dd45e8abdb8830c807d6f3b297eae4c90319afa913a92c3e5df070__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_514a4e26a6b9dc2b3904a938d1fd7cd126580f477e8deed57e1726e6534c3fba__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_524becf2bd3d6f3c74c4c55f46993b5de22a6261a1a6108cc85fed135e73299c__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_5ef47a64a76e9df06e9af857032fb649b745ad528d183c35aeb77ffd676f0cfe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9dc314731a2c8965068716b51a74d383c5485fe34630c16f5621cb0575192124__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_a6664b97aef19c137d44ec81dfc0c0cc28a2c3470357b125208345a2c048425d__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":5818,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":5784,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":5761,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":5866,"id":null,"parameterSlots":2,"returnSlots":1},"extract_byte_array_length":{"entryPoint":5681,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":5739,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_bool":{"entryPoint":5612,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:8304:25","statements":[{"nodeType":"YulBlock","src":"6:3:25","statements":[]},{"body":{"nodeType":"YulBlock","src":"115:102:25","statements":[{"nodeType":"YulAssignment","src":"125:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"137:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"148:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"133:3:25"},"nodeType":"YulFunctionCall","src":"133:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"125:4:25"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"167:9:25"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"182:6:25"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"198:3:25","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"203:1:25","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"194:3:25"},"nodeType":"YulFunctionCall","src":"194:11:25"},{"kind":"number","nodeType":"YulLiteral","src":"207:1:25","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"190:3:25"},"nodeType":"YulFunctionCall","src":"190:19:25"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"178:3:25"},"nodeType":"YulFunctionCall","src":"178:32:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"160:6:25"},"nodeType":"YulFunctionCall","src":"160:51:25"},"nodeType":"YulExpressionStatement","src":"160:51:25"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"84:9:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"95:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"106:4:25","type":""}],"src":"14:203:25"},{"body":{"nodeType":"YulBlock","src":"343:427:25","statements":[{"nodeType":"YulVariableDeclaration","src":"353:12:25","value":{"kind":"number","nodeType":"YulLiteral","src":"363:2:25","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"357:2:25","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"381:9:25"},{"name":"_1","nodeType":"YulIdentifier","src":"392:2:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"374:6:25"},"nodeType":"YulFunctionCall","src":"374:21:25"},"nodeType":"YulExpressionStatement","src":"374:21:25"},{"nodeType":"YulVariableDeclaration","src":"404:27:25","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"424:6:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"418:5:25"},"nodeType":"YulFunctionCall","src":"418:13:25"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"408:6:25","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"451:9:25"},{"name":"_1","nodeType":"YulIdentifier","src":"462:2:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"447:3:25"},"nodeType":"YulFunctionCall","src":"447:18:25"},{"name":"length","nodeType":"YulIdentifier","src":"467:6:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"440:6:25"},"nodeType":"YulFunctionCall","src":"440:34:25"},"nodeType":"YulExpressionStatement","src":"440:34:25"},{"nodeType":"YulVariableDeclaration","src":"483:10:25","value":{"kind":"number","nodeType":"YulLiteral","src":"492:1:25","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"487:1:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"552:90:25","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"581:9:25"},{"name":"i","nodeType":"YulIdentifier","src":"592:1:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"577:3:25"},"nodeType":"YulFunctionCall","src":"577:17:25"},{"kind":"number","nodeType":"YulLiteral","src":"596:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"573:3:25"},"nodeType":"YulFunctionCall","src":"573:26:25"},{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"615:6:25"},{"name":"i","nodeType":"YulIdentifier","src":"623:1:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"611:3:25"},"nodeType":"YulFunctionCall","src":"611:14:25"},{"name":"_1","nodeType":"YulIdentifier","src":"627:2:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"607:3:25"},"nodeType":"YulFunctionCall","src":"607:23:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"601:5:25"},"nodeType":"YulFunctionCall","src":"601:30:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"566:6:25"},"nodeType":"YulFunctionCall","src":"566:66:25"},"nodeType":"YulExpressionStatement","src":"566:66:25"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"513:1:25"},{"name":"length","nodeType":"YulIdentifier","src":"516:6:25"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"510:2:25"},"nodeType":"YulFunctionCall","src":"510:13:25"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"524:19:25","statements":[{"nodeType":"YulAssignment","src":"526:15:25","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"535:1:25"},{"name":"_1","nodeType":"YulIdentifier","src":"538:2:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"531:3:25"},"nodeType":"YulFunctionCall","src":"531:10:25"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"526:1:25"}]}]},"pre":{"nodeType":"YulBlock","src":"506:3:25","statements":[]},"src":"502:140:25"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"666:9:25"},{"name":"length","nodeType":"YulIdentifier","src":"677:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"662:3:25"},"nodeType":"YulFunctionCall","src":"662:22:25"},{"kind":"number","nodeType":"YulLiteral","src":"686:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"658:3:25"},"nodeType":"YulFunctionCall","src":"658:31:25"},{"kind":"number","nodeType":"YulLiteral","src":"691:1:25","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"651:6:25"},"nodeType":"YulFunctionCall","src":"651:42:25"},"nodeType":"YulExpressionStatement","src":"651:42:25"},{"nodeType":"YulAssignment","src":"702:62:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"718:9:25"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"737:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"745:2:25","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"733:3:25"},"nodeType":"YulFunctionCall","src":"733:15:25"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"754:2:25","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"750:3:25"},"nodeType":"YulFunctionCall","src":"750:7:25"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"729:3:25"},"nodeType":"YulFunctionCall","src":"729:29:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"714:3:25"},"nodeType":"YulFunctionCall","src":"714:45:25"},{"kind":"number","nodeType":"YulLiteral","src":"761:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"710:3:25"},"nodeType":"YulFunctionCall","src":"710:54:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"702:4:25"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"312:9:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"323:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"334:4:25","type":""}],"src":"222:548:25"},{"body":{"nodeType":"YulBlock","src":"824:124:25","statements":[{"nodeType":"YulAssignment","src":"834:29:25","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"856:6:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"843:12:25"},"nodeType":"YulFunctionCall","src":"843:20:25"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"834:5:25"}]},{"body":{"nodeType":"YulBlock","src":"926:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"935:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"938:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"928:6:25"},"nodeType":"YulFunctionCall","src":"928:12:25"},"nodeType":"YulExpressionStatement","src":"928:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"885:5:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"896:5:25"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"911:3:25","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"916:1:25","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"907:3:25"},"nodeType":"YulFunctionCall","src":"907:11:25"},{"kind":"number","nodeType":"YulLiteral","src":"920:1:25","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"903:3:25"},"nodeType":"YulFunctionCall","src":"903:19:25"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"892:3:25"},"nodeType":"YulFunctionCall","src":"892:31:25"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"882:2:25"},"nodeType":"YulFunctionCall","src":"882:42:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"875:6:25"},"nodeType":"YulFunctionCall","src":"875:50:25"},"nodeType":"YulIf","src":"872:70:25"}]},"name":"abi_decode_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"803:6:25","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"814:5:25","type":""}],"src":"775:173:25"},{"body":{"nodeType":"YulBlock","src":"1040:167:25","statements":[{"body":{"nodeType":"YulBlock","src":"1086:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1095:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1098:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1088:6:25"},"nodeType":"YulFunctionCall","src":"1088:12:25"},"nodeType":"YulExpressionStatement","src":"1088:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1061:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"1070:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1057:3:25"},"nodeType":"YulFunctionCall","src":"1057:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"1082:2:25","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1053:3:25"},"nodeType":"YulFunctionCall","src":"1053:32:25"},"nodeType":"YulIf","src":"1050:52:25"},{"nodeType":"YulAssignment","src":"1111:39:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1140:9:25"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"1121:18:25"},"nodeType":"YulFunctionCall","src":"1121:29:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1111:6:25"}]},{"nodeType":"YulAssignment","src":"1159:42:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1186:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"1197:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1182:3:25"},"nodeType":"YulFunctionCall","src":"1182:18:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1169:12:25"},"nodeType":"YulFunctionCall","src":"1169:32:25"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1159:6:25"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"998:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1009:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1021:6:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1029:6:25","type":""}],"src":"953:254:25"},{"body":{"nodeType":"YulBlock","src":"1307:92:25","statements":[{"nodeType":"YulAssignment","src":"1317:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1329:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"1340:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1325:3:25"},"nodeType":"YulFunctionCall","src":"1325:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1317:4:25"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1359:9:25"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1384:6:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1377:6:25"},"nodeType":"YulFunctionCall","src":"1377:14:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1370:6:25"},"nodeType":"YulFunctionCall","src":"1370:22:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1352:6:25"},"nodeType":"YulFunctionCall","src":"1352:41:25"},"nodeType":"YulExpressionStatement","src":"1352:41:25"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1276:9:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1287:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1298:4:25","type":""}],"src":"1212:187:25"},{"body":{"nodeType":"YulBlock","src":"1505:76:25","statements":[{"nodeType":"YulAssignment","src":"1515:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1527:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"1538:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1523:3:25"},"nodeType":"YulFunctionCall","src":"1523:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1515:4:25"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1557:9:25"},{"name":"value0","nodeType":"YulIdentifier","src":"1568:6:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1550:6:25"},"nodeType":"YulFunctionCall","src":"1550:25:25"},"nodeType":"YulExpressionStatement","src":"1550:25:25"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1474:9:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1485:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1496:4:25","type":""}],"src":"1404:177:25"},{"body":{"nodeType":"YulBlock","src":"1690:224:25","statements":[{"body":{"nodeType":"YulBlock","src":"1736:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1745:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1748:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1738:6:25"},"nodeType":"YulFunctionCall","src":"1738:12:25"},"nodeType":"YulExpressionStatement","src":"1738:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1711:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"1720:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1707:3:25"},"nodeType":"YulFunctionCall","src":"1707:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"1732:2:25","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1703:3:25"},"nodeType":"YulFunctionCall","src":"1703:32:25"},"nodeType":"YulIf","src":"1700:52:25"},{"nodeType":"YulAssignment","src":"1761:39:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1790:9:25"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"1771:18:25"},"nodeType":"YulFunctionCall","src":"1771:29:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1761:6:25"}]},{"nodeType":"YulAssignment","src":"1809:48:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1842:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"1853:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1838:3:25"},"nodeType":"YulFunctionCall","src":"1838:18:25"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"1819:18:25"},"nodeType":"YulFunctionCall","src":"1819:38:25"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1809:6:25"}]},{"nodeType":"YulAssignment","src":"1866:42:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1893:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"1904:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1889:3:25"},"nodeType":"YulFunctionCall","src":"1889:18:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1876:12:25"},"nodeType":"YulFunctionCall","src":"1876:32:25"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1866:6:25"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1640:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1651:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1663:6:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1671:6:25","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1679:6:25","type":""}],"src":"1586:328:25"},{"body":{"nodeType":"YulBlock","src":"2016:87:25","statements":[{"nodeType":"YulAssignment","src":"2026:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2038:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"2049:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2034:3:25"},"nodeType":"YulFunctionCall","src":"2034:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2026:4:25"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2068:9:25"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2083:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"2091:4:25","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2079:3:25"},"nodeType":"YulFunctionCall","src":"2079:17:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2061:6:25"},"nodeType":"YulFunctionCall","src":"2061:36:25"},"nodeType":"YulExpressionStatement","src":"2061:36:25"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1985:9:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1996:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2007:4:25","type":""}],"src":"1919:184:25"},{"body":{"nodeType":"YulBlock","src":"2195:173:25","statements":[{"body":{"nodeType":"YulBlock","src":"2241:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2250:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2253:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2243:6:25"},"nodeType":"YulFunctionCall","src":"2243:12:25"},"nodeType":"YulExpressionStatement","src":"2243:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2216:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"2225:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2212:3:25"},"nodeType":"YulFunctionCall","src":"2212:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"2237:2:25","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2208:3:25"},"nodeType":"YulFunctionCall","src":"2208:32:25"},"nodeType":"YulIf","src":"2205:52:25"},{"nodeType":"YulAssignment","src":"2266:39:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2295:9:25"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2276:18:25"},"nodeType":"YulFunctionCall","src":"2276:29:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2266:6:25"}]},{"nodeType":"YulAssignment","src":"2314:48:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2347:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"2358:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2343:3:25"},"nodeType":"YulFunctionCall","src":"2343:18:25"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2324:18:25"},"nodeType":"YulFunctionCall","src":"2324:38:25"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2314:6:25"}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2153:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2164:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2176:6:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2184:6:25","type":""}],"src":"2108:260:25"},{"body":{"nodeType":"YulBlock","src":"2443:116:25","statements":[{"body":{"nodeType":"YulBlock","src":"2489:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2498:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2501:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2491:6:25"},"nodeType":"YulFunctionCall","src":"2491:12:25"},"nodeType":"YulExpressionStatement","src":"2491:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2464:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"2473:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2460:3:25"},"nodeType":"YulFunctionCall","src":"2460:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"2485:2:25","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2456:3:25"},"nodeType":"YulFunctionCall","src":"2456:32:25"},"nodeType":"YulIf","src":"2453:52:25"},{"nodeType":"YulAssignment","src":"2514:39:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2543:9:25"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2524:18:25"},"nodeType":"YulFunctionCall","src":"2524:29:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2514:6:25"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2409:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2420:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2432:6:25","type":""}],"src":"2373:186:25"},{"body":{"nodeType":"YulBlock","src":"2634:110:25","statements":[{"body":{"nodeType":"YulBlock","src":"2680:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2689:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2692:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2682:6:25"},"nodeType":"YulFunctionCall","src":"2682:12:25"},"nodeType":"YulExpressionStatement","src":"2682:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2655:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"2664:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2651:3:25"},"nodeType":"YulFunctionCall","src":"2651:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"2676:2:25","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2647:3:25"},"nodeType":"YulFunctionCall","src":"2647:32:25"},"nodeType":"YulIf","src":"2644:52:25"},{"nodeType":"YulAssignment","src":"2705:33:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2728:9:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2715:12:25"},"nodeType":"YulFunctionCall","src":"2715:23:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2705:6:25"}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2600:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2611:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2623:6:25","type":""}],"src":"2564:180:25"},{"body":{"nodeType":"YulBlock","src":"2878:119:25","statements":[{"nodeType":"YulAssignment","src":"2888:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2900:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"2911:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2896:3:25"},"nodeType":"YulFunctionCall","src":"2896:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2888:4:25"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2930:9:25"},{"name":"value0","nodeType":"YulIdentifier","src":"2941:6:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2923:6:25"},"nodeType":"YulFunctionCall","src":"2923:25:25"},"nodeType":"YulExpressionStatement","src":"2923:25:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2968:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"2979:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2964:3:25"},"nodeType":"YulFunctionCall","src":"2964:18:25"},{"name":"value1","nodeType":"YulIdentifier","src":"2984:6:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2957:6:25"},"nodeType":"YulFunctionCall","src":"2957:34:25"},"nodeType":"YulExpressionStatement","src":"2957:34:25"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2839:9:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2850:6:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2858:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2869:4:25","type":""}],"src":"2749:248:25"},{"body":{"nodeType":"YulBlock","src":"3044:76:25","statements":[{"body":{"nodeType":"YulBlock","src":"3098:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3107:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3110:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3100:6:25"},"nodeType":"YulFunctionCall","src":"3100:12:25"},"nodeType":"YulExpressionStatement","src":"3100:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3067:5:25"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3088:5:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3081:6:25"},"nodeType":"YulFunctionCall","src":"3081:13:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3074:6:25"},"nodeType":"YulFunctionCall","src":"3074:21:25"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3064:2:25"},"nodeType":"YulFunctionCall","src":"3064:32:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3057:6:25"},"nodeType":"YulFunctionCall","src":"3057:40:25"},"nodeType":"YulIf","src":"3054:60:25"}]},"name":"validator_revert_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3033:5:25","type":""}],"src":"3002:118:25"},{"body":{"nodeType":"YulBlock","src":"3209:231:25","statements":[{"body":{"nodeType":"YulBlock","src":"3255:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3264:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3267:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3257:6:25"},"nodeType":"YulFunctionCall","src":"3257:12:25"},"nodeType":"YulExpressionStatement","src":"3257:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3230:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"3239:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3226:3:25"},"nodeType":"YulFunctionCall","src":"3226:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"3251:2:25","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3222:3:25"},"nodeType":"YulFunctionCall","src":"3222:32:25"},"nodeType":"YulIf","src":"3219:52:25"},{"nodeType":"YulAssignment","src":"3280:39:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3309:9:25"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"3290:18:25"},"nodeType":"YulFunctionCall","src":"3290:29:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3280:6:25"}]},{"nodeType":"YulVariableDeclaration","src":"3328:45:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3358:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"3369:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3354:3:25"},"nodeType":"YulFunctionCall","src":"3354:18:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3341:12:25"},"nodeType":"YulFunctionCall","src":"3341:32:25"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"3332:5:25","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3404:5:25"}],"functionName":{"name":"validator_revert_bool","nodeType":"YulIdentifier","src":"3382:21:25"},"nodeType":"YulFunctionCall","src":"3382:28:25"},"nodeType":"YulExpressionStatement","src":"3382:28:25"},{"nodeType":"YulAssignment","src":"3419:15:25","value":{"name":"value","nodeType":"YulIdentifier","src":"3429:5:25"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3419:6:25"}]}]},"name":"abi_decode_tuple_t_addresst_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3167:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3178:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3190:6:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3198:6:25","type":""}],"src":"3125:315:25"},{"body":{"nodeType":"YulBlock","src":"3630:206:25","statements":[{"nodeType":"YulAssignment","src":"3640:27:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3652:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"3663:3:25","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3648:3:25"},"nodeType":"YulFunctionCall","src":"3648:19:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3640:4:25"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3683:9:25"},{"name":"value0","nodeType":"YulIdentifier","src":"3694:6:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3676:6:25"},"nodeType":"YulFunctionCall","src":"3676:25:25"},"nodeType":"YulExpressionStatement","src":"3676:25:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3721:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"3732:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3717:3:25"},"nodeType":"YulFunctionCall","src":"3717:18:25"},{"name":"value1","nodeType":"YulIdentifier","src":"3737:6:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3710:6:25"},"nodeType":"YulFunctionCall","src":"3710:34:25"},"nodeType":"YulExpressionStatement","src":"3710:34:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3764:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"3775:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3760:3:25"},"nodeType":"YulFunctionCall","src":"3760:18:25"},{"name":"value2","nodeType":"YulIdentifier","src":"3780:6:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3753:6:25"},"nodeType":"YulFunctionCall","src":"3753:34:25"},"nodeType":"YulExpressionStatement","src":"3753:34:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3807:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"3818:2:25","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3803:3:25"},"nodeType":"YulFunctionCall","src":"3803:18:25"},{"name":"value3","nodeType":"YulIdentifier","src":"3823:6:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3796:6:25"},"nodeType":"YulFunctionCall","src":"3796:34:25"},"nodeType":"YulExpressionStatement","src":"3796:34:25"}]},"name":"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3575:9:25","type":""},{"name":"value3","nodeType":"YulTypedName","src":"3586:6:25","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3594:6:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3602:6:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3610:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3621:4:25","type":""}],"src":"3445:391:25"},{"body":{"nodeType":"YulBlock","src":"3896:325:25","statements":[{"nodeType":"YulAssignment","src":"3906:22:25","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3920:1:25","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"3923:4:25"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"3916:3:25"},"nodeType":"YulFunctionCall","src":"3916:12:25"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"3906:6:25"}]},{"nodeType":"YulVariableDeclaration","src":"3937:38:25","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3967:4:25"},{"kind":"number","nodeType":"YulLiteral","src":"3973:1:25","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3963:3:25"},"nodeType":"YulFunctionCall","src":"3963:12:25"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"3941:18:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"4014:31:25","statements":[{"nodeType":"YulAssignment","src":"4016:27:25","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4030:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"4038:4:25","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4026:3:25"},"nodeType":"YulFunctionCall","src":"4026:17:25"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"4016:6:25"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"3994:18:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3987:6:25"},"nodeType":"YulFunctionCall","src":"3987:26:25"},"nodeType":"YulIf","src":"3984:61:25"},{"body":{"nodeType":"YulBlock","src":"4104:111:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4125:1:25","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4132:3:25","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"4137:10:25","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4128:3:25"},"nodeType":"YulFunctionCall","src":"4128:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4118:6:25"},"nodeType":"YulFunctionCall","src":"4118:31:25"},"nodeType":"YulExpressionStatement","src":"4118:31:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4169:1:25","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"4172:4:25","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4162:6:25"},"nodeType":"YulFunctionCall","src":"4162:15:25"},"nodeType":"YulExpressionStatement","src":"4162:15:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4197:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4200:4:25","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4190:6:25"},"nodeType":"YulFunctionCall","src":"4190:15:25"},"nodeType":"YulExpressionStatement","src":"4190:15:25"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"4060:18:25"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4083:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"4091:2:25","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4080:2:25"},"nodeType":"YulFunctionCall","src":"4080:14:25"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4057:2:25"},"nodeType":"YulFunctionCall","src":"4057:38:25"},"nodeType":"YulIf","src":"4054:161:25"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"3876:4:25","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"3885:6:25","type":""}],"src":"3841:380:25"},{"body":{"nodeType":"YulBlock","src":"4400:166:25","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4417:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"4428:2:25","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4410:6:25"},"nodeType":"YulFunctionCall","src":"4410:21:25"},"nodeType":"YulExpressionStatement","src":"4410:21:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4451:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"4462:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4447:3:25"},"nodeType":"YulFunctionCall","src":"4447:18:25"},{"kind":"number","nodeType":"YulLiteral","src":"4467:2:25","type":"","value":"16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4440:6:25"},"nodeType":"YulFunctionCall","src":"4440:30:25"},"nodeType":"YulExpressionStatement","src":"4440:30:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4490:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"4501:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4486:3:25"},"nodeType":"YulFunctionCall","src":"4486:18:25"},{"hexValue":"4d696e74696e672064697361626c6564","kind":"string","nodeType":"YulLiteral","src":"4506:18:25","type":"","value":"Minting disabled"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4479:6:25"},"nodeType":"YulFunctionCall","src":"4479:46:25"},"nodeType":"YulExpressionStatement","src":"4479:46:25"},{"nodeType":"YulAssignment","src":"4534:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4546:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"4557:2:25","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4542:3:25"},"nodeType":"YulFunctionCall","src":"4542:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4534:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_9dc314731a2c8965068716b51a74d383c5485fe34630c16f5621cb0575192124__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4377:9:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4391:4:25","type":""}],"src":"4226:340:25"},{"body":{"nodeType":"YulBlock","src":"4603:95:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4620:1:25","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4627:3:25","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"4632:10:25","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4623:3:25"},"nodeType":"YulFunctionCall","src":"4623:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4613:6:25"},"nodeType":"YulFunctionCall","src":"4613:31:25"},"nodeType":"YulExpressionStatement","src":"4613:31:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4660:1:25","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"4663:4:25","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4653:6:25"},"nodeType":"YulFunctionCall","src":"4653:15:25"},"nodeType":"YulExpressionStatement","src":"4653:15:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4684:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4687:4:25","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4677:6:25"},"nodeType":"YulFunctionCall","src":"4677:15:25"},"nodeType":"YulExpressionStatement","src":"4677:15:25"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"4571:127:25"},{"body":{"nodeType":"YulBlock","src":"4755:116:25","statements":[{"nodeType":"YulAssignment","src":"4765:20:25","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"4780:1:25"},{"name":"y","nodeType":"YulIdentifier","src":"4783:1:25"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"4776:3:25"},"nodeType":"YulFunctionCall","src":"4776:9:25"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"4765:7:25"}]},{"body":{"nodeType":"YulBlock","src":"4843:22:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"4845:16:25"},"nodeType":"YulFunctionCall","src":"4845:18:25"},"nodeType":"YulExpressionStatement","src":"4845:18:25"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"4814:1:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4807:6:25"},"nodeType":"YulFunctionCall","src":"4807:9:25"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"4821:1:25"},{"arguments":[{"name":"product","nodeType":"YulIdentifier","src":"4828:7:25"},{"name":"x","nodeType":"YulIdentifier","src":"4837:1:25"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4824:3:25"},"nodeType":"YulFunctionCall","src":"4824:15:25"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4818:2:25"},"nodeType":"YulFunctionCall","src":"4818:22:25"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"4804:2:25"},"nodeType":"YulFunctionCall","src":"4804:37:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4797:6:25"},"nodeType":"YulFunctionCall","src":"4797:45:25"},"nodeType":"YulIf","src":"4794:71:25"}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"4734:1:25","type":""},{"name":"y","nodeType":"YulTypedName","src":"4737:1:25","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"4743:7:25","type":""}],"src":"4703:168:25"},{"body":{"nodeType":"YulBlock","src":"4922:171:25","statements":[{"body":{"nodeType":"YulBlock","src":"4953:111:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4974:1:25","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4981:3:25","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"4986:10:25","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4977:3:25"},"nodeType":"YulFunctionCall","src":"4977:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4967:6:25"},"nodeType":"YulFunctionCall","src":"4967:31:25"},"nodeType":"YulExpressionStatement","src":"4967:31:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5018:1:25","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"5021:4:25","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5011:6:25"},"nodeType":"YulFunctionCall","src":"5011:15:25"},"nodeType":"YulExpressionStatement","src":"5011:15:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5046:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5049:4:25","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5039:6:25"},"nodeType":"YulFunctionCall","src":"5039:15:25"},"nodeType":"YulExpressionStatement","src":"5039:15:25"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"4942:1:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4935:6:25"},"nodeType":"YulFunctionCall","src":"4935:9:25"},"nodeType":"YulIf","src":"4932:132:25"},{"nodeType":"YulAssignment","src":"5073:14:25","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"5082:1:25"},{"name":"y","nodeType":"YulIdentifier","src":"5085:1:25"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"5078:3:25"},"nodeType":"YulFunctionCall","src":"5078:9:25"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"5073:1:25"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"4907:1:25","type":""},{"name":"y","nodeType":"YulTypedName","src":"4910:1:25","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"4916:1:25","type":""}],"src":"4876:217:25"},{"body":{"nodeType":"YulBlock","src":"5146:77:25","statements":[{"nodeType":"YulAssignment","src":"5156:16:25","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"5167:1:25"},{"name":"y","nodeType":"YulIdentifier","src":"5170:1:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5163:3:25"},"nodeType":"YulFunctionCall","src":"5163:9:25"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"5156:3:25"}]},{"body":{"nodeType":"YulBlock","src":"5195:22:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"5197:16:25"},"nodeType":"YulFunctionCall","src":"5197:18:25"},"nodeType":"YulExpressionStatement","src":"5197:18:25"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"5187:1:25"},{"name":"sum","nodeType":"YulIdentifier","src":"5190:3:25"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5184:2:25"},"nodeType":"YulFunctionCall","src":"5184:10:25"},"nodeType":"YulIf","src":"5181:36:25"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"5129:1:25","type":""},{"name":"y","nodeType":"YulTypedName","src":"5132:1:25","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"5138:3:25","type":""}],"src":"5098:125:25"},{"body":{"nodeType":"YulBlock","src":"5402:177:25","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5419:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"5430:2:25","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5412:6:25"},"nodeType":"YulFunctionCall","src":"5412:21:25"},"nodeType":"YulExpressionStatement","src":"5412:21:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5453:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"5464:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5449:3:25"},"nodeType":"YulFunctionCall","src":"5449:18:25"},{"kind":"number","nodeType":"YulLiteral","src":"5469:2:25","type":"","value":"27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5442:6:25"},"nodeType":"YulFunctionCall","src":"5442:30:25"},"nodeType":"YulExpressionStatement","src":"5442:30:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5492:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"5503:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5488:3:25"},"nodeType":"YulFunctionCall","src":"5488:18:25"},{"hexValue":"43616e6e6f74207265636f766572206e617469766520746f6b656e","kind":"string","nodeType":"YulLiteral","src":"5508:29:25","type":"","value":"Cannot recover native token"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5481:6:25"},"nodeType":"YulFunctionCall","src":"5481:57:25"},"nodeType":"YulExpressionStatement","src":"5481:57:25"},{"nodeType":"YulAssignment","src":"5547:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5559:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"5570:2:25","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5555:3:25"},"nodeType":"YulFunctionCall","src":"5555:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5547:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_1496af23f8dd45e8abdb8830c807d6f3b297eae4c90319afa913a92c3e5df070__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5379:9:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5393:4:25","type":""}],"src":"5228:351:25"},{"body":{"nodeType":"YulBlock","src":"5713:145:25","statements":[{"nodeType":"YulAssignment","src":"5723:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5735:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"5746:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5731:3:25"},"nodeType":"YulFunctionCall","src":"5731:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5723:4:25"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5765:9:25"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5780:6:25"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5796:3:25","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"5801:1:25","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5792:3:25"},"nodeType":"YulFunctionCall","src":"5792:11:25"},{"kind":"number","nodeType":"YulLiteral","src":"5805:1:25","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5788:3:25"},"nodeType":"YulFunctionCall","src":"5788:19:25"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5776:3:25"},"nodeType":"YulFunctionCall","src":"5776:32:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5758:6:25"},"nodeType":"YulFunctionCall","src":"5758:51:25"},"nodeType":"YulExpressionStatement","src":"5758:51:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5829:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"5840:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5825:3:25"},"nodeType":"YulFunctionCall","src":"5825:18:25"},{"name":"value1","nodeType":"YulIdentifier","src":"5845:6:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5818:6:25"},"nodeType":"YulFunctionCall","src":"5818:34:25"},"nodeType":"YulExpressionStatement","src":"5818:34:25"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5674:9:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5685:6:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5693:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5704:4:25","type":""}],"src":"5584:274:25"},{"body":{"nodeType":"YulBlock","src":"5941:167:25","statements":[{"body":{"nodeType":"YulBlock","src":"5987:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5996:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5999:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5989:6:25"},"nodeType":"YulFunctionCall","src":"5989:12:25"},"nodeType":"YulExpressionStatement","src":"5989:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5962:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"5971:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5958:3:25"},"nodeType":"YulFunctionCall","src":"5958:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"5983:2:25","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5954:3:25"},"nodeType":"YulFunctionCall","src":"5954:32:25"},"nodeType":"YulIf","src":"5951:52:25"},{"nodeType":"YulVariableDeclaration","src":"6012:29:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6031:9:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6025:5:25"},"nodeType":"YulFunctionCall","src":"6025:16:25"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"6016:5:25","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6072:5:25"}],"functionName":{"name":"validator_revert_bool","nodeType":"YulIdentifier","src":"6050:21:25"},"nodeType":"YulFunctionCall","src":"6050:28:25"},"nodeType":"YulExpressionStatement","src":"6050:28:25"},{"nodeType":"YulAssignment","src":"6087:15:25","value":{"name":"value","nodeType":"YulIdentifier","src":"6097:5:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6087:6:25"}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5907:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5918:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5930:6:25","type":""}],"src":"5863:245:25"},{"body":{"nodeType":"YulBlock","src":"6287:173:25","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6304:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"6315:2:25","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6297:6:25"},"nodeType":"YulFunctionCall","src":"6297:21:25"},"nodeType":"YulExpressionStatement","src":"6297:21:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6338:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"6349:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6334:3:25"},"nodeType":"YulFunctionCall","src":"6334:18:25"},{"kind":"number","nodeType":"YulLiteral","src":"6354:2:25","type":"","value":"23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6327:6:25"},"nodeType":"YulFunctionCall","src":"6327:30:25"},"nodeType":"YulExpressionStatement","src":"6327:30:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6377:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"6388:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6373:3:25"},"nodeType":"YulFunctionCall","src":"6373:18:25"},{"hexValue":"4f6e6c7920706c6174666f726d20726563697069656e74","kind":"string","nodeType":"YulLiteral","src":"6393:25:25","type":"","value":"Only platform recipient"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6366:6:25"},"nodeType":"YulFunctionCall","src":"6366:53:25"},"nodeType":"YulExpressionStatement","src":"6366:53:25"},{"nodeType":"YulAssignment","src":"6428:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6440:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"6451:2:25","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6436:3:25"},"nodeType":"YulFunctionCall","src":"6436:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6428:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_514a4e26a6b9dc2b3904a938d1fd7cd126580f477e8deed57e1726e6534c3fba__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6264:9:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6278:4:25","type":""}],"src":"6113:347:25"},{"body":{"nodeType":"YulBlock","src":"6639:169:25","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6656:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"6667:2:25","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6649:6:25"},"nodeType":"YulFunctionCall","src":"6649:21:25"},"nodeType":"YulExpressionStatement","src":"6649:21:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6690:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"6701:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6686:3:25"},"nodeType":"YulFunctionCall","src":"6686:18:25"},{"kind":"number","nodeType":"YulLiteral","src":"6706:2:25","type":"","value":"19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6679:6:25"},"nodeType":"YulFunctionCall","src":"6679:30:25"},"nodeType":"YulExpressionStatement","src":"6679:30:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6729:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"6740:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6725:3:25"},"nodeType":"YulFunctionCall","src":"6725:18:25"},{"hexValue":"4e6f206665657320746f207769746864726177","kind":"string","nodeType":"YulLiteral","src":"6745:21:25","type":"","value":"No fees to withdraw"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6718:6:25"},"nodeType":"YulFunctionCall","src":"6718:49:25"},"nodeType":"YulExpressionStatement","src":"6718:49:25"},{"nodeType":"YulAssignment","src":"6776:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6788:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"6799:2:25","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6784:3:25"},"nodeType":"YulFunctionCall","src":"6784:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6776:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_524becf2bd3d6f3c74c4c55f46993b5de22a6261a1a6108cc85fed135e73299c__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6616:9:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6630:4:25","type":""}],"src":"6465:343:25"},{"body":{"nodeType":"YulBlock","src":"6987:162:25","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7004:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"7015:2:25","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6997:6:25"},"nodeType":"YulFunctionCall","src":"6997:21:25"},"nodeType":"YulExpressionStatement","src":"6997:21:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7038:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"7049:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7034:3:25"},"nodeType":"YulFunctionCall","src":"7034:18:25"},{"kind":"number","nodeType":"YulLiteral","src":"7054:2:25","type":"","value":"12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7027:6:25"},"nodeType":"YulFunctionCall","src":"7027:30:25"},"nodeType":"YulExpressionStatement","src":"7027:30:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7077:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"7088:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7073:3:25"},"nodeType":"YulFunctionCall","src":"7073:18:25"},{"hexValue":"4f6e6c792063726561746f72","kind":"string","nodeType":"YulLiteral","src":"7093:14:25","type":"","value":"Only creator"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7066:6:25"},"nodeType":"YulFunctionCall","src":"7066:42:25"},"nodeType":"YulExpressionStatement","src":"7066:42:25"},{"nodeType":"YulAssignment","src":"7117:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7129:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"7140:2:25","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7125:3:25"},"nodeType":"YulFunctionCall","src":"7125:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7117:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_5ef47a64a76e9df06e9af857032fb649b745ad528d183c35aeb77ffd676f0cfe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6964:9:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6978:4:25","type":""}],"src":"6813:336:25"},{"body":{"nodeType":"YulBlock","src":"7328:167:25","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7345:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"7356:2:25","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7338:6:25"},"nodeType":"YulFunctionCall","src":"7338:21:25"},"nodeType":"YulExpressionStatement","src":"7338:21:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7379:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"7390:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7375:3:25"},"nodeType":"YulFunctionCall","src":"7375:18:25"},{"kind":"number","nodeType":"YulLiteral","src":"7395:2:25","type":"","value":"17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7368:6:25"},"nodeType":"YulFunctionCall","src":"7368:30:25"},"nodeType":"YulExpressionStatement","src":"7368:30:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7418:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"7429:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7414:3:25"},"nodeType":"YulFunctionCall","src":"7414:18:25"},{"hexValue":"496e76616c696420726563697069656e74","kind":"string","nodeType":"YulLiteral","src":"7434:19:25","type":"","value":"Invalid recipient"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7407:6:25"},"nodeType":"YulFunctionCall","src":"7407:47:25"},"nodeType":"YulExpressionStatement","src":"7407:47:25"},{"nodeType":"YulAssignment","src":"7463:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7475:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"7486:2:25","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7471:3:25"},"nodeType":"YulFunctionCall","src":"7471:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7463:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_a6664b97aef19c137d44ec81dfc0c0cc28a2c3470357b125208345a2c048425d__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7305:9:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7319:4:25","type":""}],"src":"7154:341:25"},{"body":{"nodeType":"YulBlock","src":"7657:188:25","statements":[{"nodeType":"YulAssignment","src":"7667:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7679:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"7690:2:25","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7675:3:25"},"nodeType":"YulFunctionCall","src":"7675:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7667:4:25"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7709:9:25"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7724:6:25"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7740:3:25","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"7745:1:25","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"7736:3:25"},"nodeType":"YulFunctionCall","src":"7736:11:25"},{"kind":"number","nodeType":"YulLiteral","src":"7749:1:25","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7732:3:25"},"nodeType":"YulFunctionCall","src":"7732:19:25"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7720:3:25"},"nodeType":"YulFunctionCall","src":"7720:32:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7702:6:25"},"nodeType":"YulFunctionCall","src":"7702:51:25"},"nodeType":"YulExpressionStatement","src":"7702:51:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7773:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"7784:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7769:3:25"},"nodeType":"YulFunctionCall","src":"7769:18:25"},{"name":"value1","nodeType":"YulIdentifier","src":"7789:6:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7762:6:25"},"nodeType":"YulFunctionCall","src":"7762:34:25"},"nodeType":"YulExpressionStatement","src":"7762:34:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7816:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"7827:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7812:3:25"},"nodeType":"YulFunctionCall","src":"7812:18:25"},{"name":"value2","nodeType":"YulIdentifier","src":"7832:6:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7805:6:25"},"nodeType":"YulFunctionCall","src":"7805:34:25"},"nodeType":"YulExpressionStatement","src":"7805:34:25"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7610:9:25","type":""},{"name":"value2","nodeType":"YulTypedName","src":"7621:6:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7629:6:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7637:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7648:4:25","type":""}],"src":"7500:345:25"},{"body":{"nodeType":"YulBlock","src":"7899:79:25","statements":[{"nodeType":"YulAssignment","src":"7909:17:25","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"7921:1:25"},{"name":"y","nodeType":"YulIdentifier","src":"7924:1:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7917:3:25"},"nodeType":"YulFunctionCall","src":"7917:9:25"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"7909:4:25"}]},{"body":{"nodeType":"YulBlock","src":"7950:22:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"7952:16:25"},"nodeType":"YulFunctionCall","src":"7952:18:25"},"nodeType":"YulExpressionStatement","src":"7952:18:25"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"7941:4:25"},{"name":"x","nodeType":"YulIdentifier","src":"7947:1:25"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7938:2:25"},"nodeType":"YulFunctionCall","src":"7938:11:25"},"nodeType":"YulIf","src":"7935:37:25"}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"7881:1:25","type":""},{"name":"y","nodeType":"YulTypedName","src":"7884:1:25","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"7890:4:25","type":""}],"src":"7850:128:25"},{"body":{"nodeType":"YulBlock","src":"8140:162:25","statements":[{"nodeType":"YulAssignment","src":"8150:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8162:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"8173:2:25","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8158:3:25"},"nodeType":"YulFunctionCall","src":"8158:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8150:4:25"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8192:9:25"},{"name":"value0","nodeType":"YulIdentifier","src":"8203:6:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8185:6:25"},"nodeType":"YulFunctionCall","src":"8185:25:25"},"nodeType":"YulExpressionStatement","src":"8185:25:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8230:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"8241:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8226:3:25"},"nodeType":"YulFunctionCall","src":"8226:18:25"},{"name":"value1","nodeType":"YulIdentifier","src":"8246:6:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8219:6:25"},"nodeType":"YulFunctionCall","src":"8219:34:25"},"nodeType":"YulExpressionStatement","src":"8219:34:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8273:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"8284:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8269:3:25"},"nodeType":"YulFunctionCall","src":"8269:18:25"},{"name":"value2","nodeType":"YulIdentifier","src":"8289:6:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8262:6:25"},"nodeType":"YulFunctionCall","src":"8262:34:25"},"nodeType":"YulExpressionStatement","src":"8262:34:25"}]},"name":"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8093:9:25","type":""},{"name":"value2","nodeType":"YulTypedName","src":"8104:6:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"8112:6:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8120:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8131:4:25","type":""}],"src":"7983:319:25"}]},"contents":"{\n    { }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function validator_revert_bool(value)\n    {\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        validator_revert_bool(value)\n        value1 := value\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_9dc314731a2c8965068716b51a74d383c5485fe34630c16f5621cb0575192124__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Minting disabled\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_1496af23f8dd45e8abdb8830c807d6f3b297eae4c90319afa913a92c3e5df070__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"Cannot recover native token\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bool(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_514a4e26a6b9dc2b3904a938d1fd7cd126580f477e8deed57e1726e6534c3fba__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"Only platform recipient\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_524becf2bd3d6f3c74c4c55f46993b5de22a6261a1a6108cc85fed135e73299c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"No fees to withdraw\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_5ef47a64a76e9df06e9af857032fb649b745ad528d183c35aeb77ffd676f0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 12)\n        mstore(add(headStart, 64), \"Only creator\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_a6664b97aef19c137d44ec81dfc0c0cc28a2c3470357b125208345a2c048425d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"Invalid recipient\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n}","id":25,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"8317":[{"length":32,"start":616},{"length":32,"start":1400},{"length":32,"start":2999},{"length":32,"start":3101},{"length":32,"start":3217},{"length":32,"start":3287},{"length":32,"start":4634}],"8339":[{"length":32,"start":1224}]},"linkReferences":{},"object":"608060405234801561001057600080fd5b506004361061025e5760003560e01c80637e5cd5c111610146578063c1eb1840116100c3578063ddf5451211610087578063ddf545121461054b578063e1cd04b414610553578063eb13554f1461055b578063f28ab2be1461056e578063f2fde38b146105e1578063f5fe7f71146105f457600080fd5b8063c1eb1840146104c3578063c598b2f9146104ea578063cc3cbd2a146103d3578063d0b7830b1461050a578063dd62ed3e1461051257600080fd5b806395d89b411161010a57806395d89b4114610476578063a64e4f8a1461047e578063a9059cbb14610490578063b29a8140146104a3578063beb9716d146104b657600080fd5b80637e5cd5c11461043957806382c3188c146104415780638456cb591461044a5780638da5cb5b146104525780638ebfc7961461046357600080fd5b80633f4ba83a116101df578063539aa77f116101a3578063539aa77f146103d35780635c975abb146103db5780636f28507c146103ed57806370a08231146103f5578063715018a61461041e57806379cc67901461042657600080fd5b80633f4ba83a1461035b57806340c10f191461036557806342966c68146103785780635146fcd51461038b57806352238fdd146103ab57600080fd5b806323b872dd1161022657806323b872dd146102fa578063313ce5671461030d578063338dd3b11461031c578063398daa851461032f5780633b4b93991461035257600080fd5b806302d05d3f1461026357806306fdde03146102a7578063095ea7b3146102bc57806318160ddd146102df578063191fe1ed146102f1575b600080fd5b61028a7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b6102af610607565b60405161029e91906114ae565b6102cf6102ca366004611518565b610699565b604051901515815260200161029e565b6002545b60405190815260200161029e565b6102e361271081565b6102cf610308366004611542565b6106b3565b6040516012815260200161029e565b6102cf61032a36600461157e565b6106d7565b6102cf61033d3660046115b1565b600c6020526000908152604090205460ff1681565b6102e360085481565b610363610770565b005b610363610373366004611518565b610782565b6103636103863660046115d3565b6107e2565b6102e36103993660046115b1565b600b6020526000908152604090205481565b6103be6103b93660046115d3565b6107ef565b6040805192835260208301919091520161029e565b6102e3606481565b600554600160a01b900460ff166102cf565b6102e361082b565b6102e36104033660046115b1565b6001600160a01b031660009081526020819052604090205490565b610363610839565b610363610434366004611518565b61084b565b610363610860565b6102e360095481565b610363610874565b6005546001600160a01b031661028a565b6103636104713660046115fa565b610884565b6102af6108eb565b600d546102cf90610100900460ff1681565b6102cf61049e366004611518565b6108fa565b6103636104b1366004611518565b610908565b600d546102cf9060ff1681565b6102cf7f000000000000000000000000000000000000000000000000000000000000000081565b6102e36104f83660046115b1565b600a6020526000908152604090205481565b6103636109ff565b6102e361052036600461157e565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b610363610b3a565b610363610ba4565b60075461028a906001600160a01b031681565b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166000908152600a60209081526040808320546007549094168352600b90915290205460085460095460408051948552602085019390935291830152606082015260800161029e565b6103636105ef3660046115b1565b610d30565b6103636106023660046115b1565b610d6b565b60606003805461061690611631565b80601f016020809104026020016040519081016040528092919081815260200182805461064290611631565b801561068f5780601f106106645761010080835404028352916020019161068f565b820191906000526020600020905b81548152906001019060200180831161067257829003601f168201915b5050505050905090565b6000336106a7818585610e53565b60019150505b92915050565b6000336106c1858285610e60565b6106cc858585610edf565b506001949350505050565b600d54600090610100900460ff166106f1575060006106ad565b6001600160a01b0383166000908152600c602052604090205460ff168061073057506001600160a01b0382166000908152600c602052604090205460ff165b1561073d575060006106ad565b6001600160a01b038316158061075a57506001600160a01b038216155b15610767575060006106ad565b50600192915050565b610778610f3e565b610780610f6b565b565b61078a610f3e565b600d5460ff166107d45760405162461bcd60e51b815260206004820152601060248201526f135a5b9d1a5b99c8191a5cd8589b195960821b60448201526064015b60405180910390fd5b6107de8282610fbb565b5050565b6107ec3382610ff1565b50565b600080612710610800606485611681565b61080a9190611698565b915061271061081a606485611681565b6108249190611698565b9050915091565b6108366064806116ba565b81565b610841610f3e565b6107806000611027565b610856823383610e60565b6107de8282610ff1565b610868610f3e565b600d805460ff19169055565b61087c610f3e565b610780611079565b61088c610f3e565b6001600160a01b0382166000818152600c6020908152604091829020805460ff191685151590811790915591519182527f69e34a174b4a0cce59950c4c852317e9797bdcae125fbf8b5dd8b4311384412f910160405180910390a25050565b60606004805461061690611631565b6000336106a7818585610edf565b610910610f3e565b306001600160a01b038316036109685760405162461bcd60e51b815260206004820152601b60248201527f43616e6e6f74207265636f766572206e617469766520746f6b656e000000000060448201526064016107cb565b816001600160a01b031663a9059cbb6109896005546001600160a01b031690565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602481018490526044016020604051808303816000875af11580156109d6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109fa91906116cd565b505050565b610a076110bc565b6007546001600160a01b03163314610a615760405162461bcd60e51b815260206004820152601760248201527f4f6e6c7920706c6174666f726d20726563697069656e7400000000000000000060448201526064016107cb565b6007546001600160a01b03166000908152600b602052604090205480610abf5760405162461bcd60e51b81526020600482015260136024820152724e6f206665657320746f20776974686472617760681b60448201526064016107cb565b600780546001600160a01b039081166000908152600b60205260408120559054610aec9130911683610edf565b6007546040518281526001600160a01b03909116907ffc7ad544ff6a06d6499925723d25b6fe70457a42939995b1d3d6f560fe336333906020015b60405180910390a2506107806001600655565b610b42610f3e565b600d805460ff610100808304821615810261ff001990931692909217928390556040517fc97260ffb3df6b903cdfd59e3b5b21a896404903a8e8a83bf60ba3fca365fbe593610b9a9390049091161515815260200190565b60405180910390a1565b610bac6110bc565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610c135760405162461bcd60e51b815260206004820152600c60248201526b27b7363c9031b932b0ba37b960a11b60448201526064016107cb565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166000908152600a602052604090205480610c8f5760405162461bcd60e51b81526020600482015260136024820152724e6f206665657320746f20776974686472617760681b60448201526064016107cb565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0381166000908152600a6020526040812055610cd590309083610edf565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03167f7f0b212761a7abe7ec4d2adea5a7fa1fea58234aabf0c01c0e63403fe62013ff82604051610b2791815260200190565b610d38610f3e565b6001600160a01b038116610d6257604051631e4fbdf760e01b8152600060048201526024016107cb565b6107ec81611027565b610d73610f3e565b6001600160a01b038116610dbd5760405162461bcd60e51b8152602060048201526011602482015270125b9d985b1a59081c9958da5c1a595b9d607a1b60448201526064016107cb565b6007546001600160a01b03166000908152600b60205260409020548015610e08576007546001600160a01b039081166000908152600b60205260408082208290559184168152208190555b600780546001600160a01b0319166001600160a01b0384169081179091556040517fba887708e7d4436dd36b62187bdced03e0b9abe66caf392a66dd84386641b20990600090a25050565b6109fa83838360016110e6565b6001600160a01b03838116600090815260016020908152604080832093861683529290522054600019811015610ed95781811015610eca57604051637dc7a0d960e11b81526001600160a01b038416600482015260248101829052604481018390526064016107cb565b610ed9848484840360006110e6565b50505050565b6001600160a01b038316610f0957604051634b637e8f60e11b8152600060048201526024016107cb565b6001600160a01b038216610f335760405163ec442f0560e01b8152600060048201526024016107cb565b6109fa8383836111bb565b6005546001600160a01b031633146107805760405163118cdaa760e01b81523360048201526024016107cb565b610f7361132f565b6005805460ff60a01b191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b039091168152602001610b9a565b6001600160a01b038216610fe55760405163ec442f0560e01b8152600060048201526024016107cb565b6107de600083836111bb565b6001600160a01b03821661101b57604051634b637e8f60e11b8152600060048201526024016107cb565b6107de826000836111bb565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b611081611359565b6005805460ff60a01b1916600160a01b1790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610fa33390565b6002600654036110df57604051633ee5aeb560e01b815260040160405180910390fd5b6002600655565b6001600160a01b0384166111105760405163e602df0560e01b8152600060048201526024016107cb565b6001600160a01b03831661113a57604051634a1406b160e11b8152600060048201526024016107cb565b6001600160a01b0380851660009081526001602090815260408083209387168352929052208290558015610ed957826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516111ad91815260200190565b60405180910390a350505050565b6111c3611359565b6111cd83836106d7565b15611324576000806111de836107ef565b909250905060006111ef82846116ba565b905060006111fd82866116ea565b9050811561131057611210873084611384565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166000908152600a6020526040812080548692906112589084906116ba565b90915550506007546001600160a01b03166000908152600b6020526040812080548592906112879084906116ba565b9250508190555083600860008282546112a091906116ba565b9250508190555082600960008282546112b991906116ba565b909155505060408051868152602081018690529081018490526001600160a01b0380881691908916907fde5d657c00d557886c53e267ff792a157187bc1c5947bd02cb62159550edb08e9060600160405180910390a35b61131b878783611384565b50505050505050565b6109fa838383611384565b600554600160a01b900460ff1661078057604051638dfc202b60e01b815260040160405180910390fd5b600554600160a01b900460ff16156107805760405163d93c066560e01b815260040160405180910390fd5b6001600160a01b0383166113af5780600260008282546113a491906116ba565b909155506114219050565b6001600160a01b038316600090815260208190526040902054818110156114025760405163391434e360e21b81526001600160a01b038516600482015260248101829052604481018390526064016107cb565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b03821661143d5760028054829003905561145c565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516114a191815260200190565b60405180910390a3505050565b600060208083528351808285015260005b818110156114db578581018301518582016040015282016114bf565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461151357600080fd5b919050565b6000806040838503121561152b57600080fd5b611534836114fc565b946020939093013593505050565b60008060006060848603121561155757600080fd5b611560846114fc565b925061156e602085016114fc565b9150604084013590509250925092565b6000806040838503121561159157600080fd5b61159a836114fc565b91506115a8602084016114fc565b90509250929050565b6000602082840312156115c357600080fd5b6115cc826114fc565b9392505050565b6000602082840312156115e557600080fd5b5035919050565b80151581146107ec57600080fd5b6000806040838503121561160d57600080fd5b611616836114fc565b91506020830135611626816115ec565b809150509250929050565b600181811c9082168061164557607f821691505b60208210810361166557634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b80820281158282048414176106ad576106ad61166b565b6000826116b557634e487b7160e01b600052601260045260246000fd5b500490565b808201808211156106ad576106ad61166b565b6000602082840312156116df57600080fd5b81516115cc816115ec565b818103818111156106ad576106ad61166b56fea2646970667358221220d9f0d3ee8b951a6f4b2bb2dfab36b50b0e51888a74bab1e3ee1f05695895e4e664736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x25E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7E5CD5C1 GT PUSH2 0x146 JUMPI DUP1 PUSH4 0xC1EB1840 GT PUSH2 0xC3 JUMPI DUP1 PUSH4 0xDDF54512 GT PUSH2 0x87 JUMPI DUP1 PUSH4 0xDDF54512 EQ PUSH2 0x54B JUMPI DUP1 PUSH4 0xE1CD04B4 EQ PUSH2 0x553 JUMPI DUP1 PUSH4 0xEB13554F EQ PUSH2 0x55B JUMPI DUP1 PUSH4 0xF28AB2BE EQ PUSH2 0x56E JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x5E1 JUMPI DUP1 PUSH4 0xF5FE7F71 EQ PUSH2 0x5F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xC1EB1840 EQ PUSH2 0x4C3 JUMPI DUP1 PUSH4 0xC598B2F9 EQ PUSH2 0x4EA JUMPI DUP1 PUSH4 0xCC3CBD2A EQ PUSH2 0x3D3 JUMPI DUP1 PUSH4 0xD0B7830B EQ PUSH2 0x50A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x512 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x95D89B41 GT PUSH2 0x10A JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x476 JUMPI DUP1 PUSH4 0xA64E4F8A EQ PUSH2 0x47E JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x490 JUMPI DUP1 PUSH4 0xB29A8140 EQ PUSH2 0x4A3 JUMPI DUP1 PUSH4 0xBEB9716D EQ PUSH2 0x4B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x7E5CD5C1 EQ PUSH2 0x439 JUMPI DUP1 PUSH4 0x82C3188C EQ PUSH2 0x441 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x44A JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x452 JUMPI DUP1 PUSH4 0x8EBFC796 EQ PUSH2 0x463 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3F4BA83A GT PUSH2 0x1DF JUMPI DUP1 PUSH4 0x539AA77F GT PUSH2 0x1A3 JUMPI DUP1 PUSH4 0x539AA77F EQ PUSH2 0x3D3 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x3DB JUMPI DUP1 PUSH4 0x6F28507C EQ PUSH2 0x3ED JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x3F5 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x41E JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x426 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x35B JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x365 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x378 JUMPI DUP1 PUSH4 0x5146FCD5 EQ PUSH2 0x38B JUMPI DUP1 PUSH4 0x52238FDD EQ PUSH2 0x3AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0x226 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x2FA JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x30D JUMPI DUP1 PUSH4 0x338DD3B1 EQ PUSH2 0x31C JUMPI DUP1 PUSH4 0x398DAA85 EQ PUSH2 0x32F JUMPI DUP1 PUSH4 0x3B4B9399 EQ PUSH2 0x352 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2D05D3F EQ PUSH2 0x263 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x2A7 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x2BC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x2DF JUMPI DUP1 PUSH4 0x191FE1ED EQ PUSH2 0x2F1 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x28A PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2AF PUSH2 0x607 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29E SWAP2 SWAP1 PUSH2 0x14AE JUMP JUMPDEST PUSH2 0x2CF PUSH2 0x2CA CALLDATASIZE PUSH1 0x4 PUSH2 0x1518 JUMP JUMPDEST PUSH2 0x699 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x29E JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x29E JUMP JUMPDEST PUSH2 0x2E3 PUSH2 0x2710 DUP2 JUMP JUMPDEST PUSH2 0x2CF PUSH2 0x308 CALLDATASIZE PUSH1 0x4 PUSH2 0x1542 JUMP JUMPDEST PUSH2 0x6B3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x29E JUMP JUMPDEST PUSH2 0x2CF PUSH2 0x32A CALLDATASIZE PUSH1 0x4 PUSH2 0x157E JUMP JUMPDEST PUSH2 0x6D7 JUMP JUMPDEST PUSH2 0x2CF PUSH2 0x33D CALLDATASIZE PUSH1 0x4 PUSH2 0x15B1 JUMP JUMPDEST PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x2E3 PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x363 PUSH2 0x770 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x363 PUSH2 0x373 CALLDATASIZE PUSH1 0x4 PUSH2 0x1518 JUMP JUMPDEST PUSH2 0x782 JUMP JUMPDEST PUSH2 0x363 PUSH2 0x386 CALLDATASIZE PUSH1 0x4 PUSH2 0x15D3 JUMP JUMPDEST PUSH2 0x7E2 JUMP JUMPDEST PUSH2 0x2E3 PUSH2 0x399 CALLDATASIZE PUSH1 0x4 PUSH2 0x15B1 JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x3BE PUSH2 0x3B9 CALLDATASIZE PUSH1 0x4 PUSH2 0x15D3 JUMP JUMPDEST PUSH2 0x7EF JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x29E JUMP JUMPDEST PUSH2 0x2E3 PUSH1 0x64 DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x2CF JUMP JUMPDEST PUSH2 0x2E3 PUSH2 0x82B JUMP JUMPDEST PUSH2 0x2E3 PUSH2 0x403 CALLDATASIZE PUSH1 0x4 PUSH2 0x15B1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x363 PUSH2 0x839 JUMP JUMPDEST PUSH2 0x363 PUSH2 0x434 CALLDATASIZE PUSH1 0x4 PUSH2 0x1518 JUMP JUMPDEST PUSH2 0x84B JUMP JUMPDEST PUSH2 0x363 PUSH2 0x860 JUMP JUMPDEST PUSH2 0x2E3 PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x363 PUSH2 0x874 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x28A JUMP JUMPDEST PUSH2 0x363 PUSH2 0x471 CALLDATASIZE PUSH1 0x4 PUSH2 0x15FA JUMP JUMPDEST PUSH2 0x884 JUMP JUMPDEST PUSH2 0x2AF PUSH2 0x8EB JUMP JUMPDEST PUSH1 0xD SLOAD PUSH2 0x2CF SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x2CF PUSH2 0x49E CALLDATASIZE PUSH1 0x4 PUSH2 0x1518 JUMP JUMPDEST PUSH2 0x8FA JUMP JUMPDEST PUSH2 0x363 PUSH2 0x4B1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1518 JUMP JUMPDEST PUSH2 0x908 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH2 0x2CF SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x2CF PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x2E3 PUSH2 0x4F8 CALLDATASIZE PUSH1 0x4 PUSH2 0x15B1 JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x363 PUSH2 0x9FF JUMP JUMPDEST PUSH2 0x2E3 PUSH2 0x520 CALLDATASIZE PUSH1 0x4 PUSH2 0x157E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x363 PUSH2 0xB3A JUMP JUMPDEST PUSH2 0x363 PUSH2 0xBA4 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x28A SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x7 SLOAD SWAP1 SWAP5 AND DUP4 MSTORE PUSH1 0xB SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0x8 SLOAD PUSH1 0x9 SLOAD PUSH1 0x40 DUP1 MLOAD SWAP5 DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD PUSH2 0x29E JUMP JUMPDEST PUSH2 0x363 PUSH2 0x5EF CALLDATASIZE PUSH1 0x4 PUSH2 0x15B1 JUMP JUMPDEST PUSH2 0xD30 JUMP JUMPDEST PUSH2 0x363 PUSH2 0x602 CALLDATASIZE PUSH1 0x4 PUSH2 0x15B1 JUMP JUMPDEST PUSH2 0xD6B JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x616 SWAP1 PUSH2 0x1631 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x642 SWAP1 PUSH2 0x1631 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x68F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x664 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x68F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x672 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x6A7 DUP2 DUP6 DUP6 PUSH2 0xE53 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x6C1 DUP6 DUP3 DUP6 PUSH2 0xE60 JUMP JUMPDEST PUSH2 0x6CC DUP6 DUP6 DUP6 PUSH2 0xEDF JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x0 SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x6F1 JUMPI POP PUSH1 0x0 PUSH2 0x6AD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 PUSH2 0x730 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0x73D JUMPI POP PUSH1 0x0 PUSH2 0x6AD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 PUSH2 0x75A JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO JUMPDEST ISZERO PUSH2 0x767 JUMPI POP PUSH1 0x0 PUSH2 0x6AD JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x778 PUSH2 0xF3E JUMP JUMPDEST PUSH2 0x780 PUSH2 0xF6B JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x78A PUSH2 0xF3E JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0xFF AND PUSH2 0x7D4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x135A5B9D1A5B99C8191A5CD8589B1959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7DE DUP3 DUP3 PUSH2 0xFBB JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x7EC CALLER DUP3 PUSH2 0xFF1 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2710 PUSH2 0x800 PUSH1 0x64 DUP6 PUSH2 0x1681 JUMP JUMPDEST PUSH2 0x80A SWAP2 SWAP1 PUSH2 0x1698 JUMP JUMPDEST SWAP2 POP PUSH2 0x2710 PUSH2 0x81A PUSH1 0x64 DUP6 PUSH2 0x1681 JUMP JUMPDEST PUSH2 0x824 SWAP2 SWAP1 PUSH2 0x1698 JUMP JUMPDEST SWAP1 POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH2 0x836 PUSH1 0x64 DUP1 PUSH2 0x16BA JUMP JUMPDEST DUP2 JUMP JUMPDEST PUSH2 0x841 PUSH2 0xF3E JUMP JUMPDEST PUSH2 0x780 PUSH1 0x0 PUSH2 0x1027 JUMP JUMPDEST PUSH2 0x856 DUP3 CALLER DUP4 PUSH2 0xE60 JUMP JUMPDEST PUSH2 0x7DE DUP3 DUP3 PUSH2 0xFF1 JUMP JUMPDEST PUSH2 0x868 PUSH2 0xF3E JUMP JUMPDEST PUSH1 0xD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x87C PUSH2 0xF3E JUMP JUMPDEST PUSH2 0x780 PUSH2 0x1079 JUMP JUMPDEST PUSH2 0x88C PUSH2 0xF3E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP6 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x69E34A174B4A0CCE59950C4C852317E9797BDCAE125FBF8B5DD8B4311384412F SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x616 SWAP1 PUSH2 0x1631 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x6A7 DUP2 DUP6 DUP6 PUSH2 0xEDF JUMP JUMPDEST PUSH2 0x910 PUSH2 0xF3E JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SUB PUSH2 0x968 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F74207265636F766572206E617469766520746F6B656E0000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7CB JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB PUSH2 0x989 PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP5 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x9D6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9FA SWAP2 SWAP1 PUSH2 0x16CD JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xA07 PUSH2 0x10BC JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xA61 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920706C6174666F726D20726563697069656E74000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7CB JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP1 PUSH2 0xABF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x4E6F206665657320746F207769746864726177 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7CB JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SSTORE SWAP1 SLOAD PUSH2 0xAEC SWAP2 ADDRESS SWAP2 AND DUP4 PUSH2 0xEDF JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0xFC7AD544FF6A06D6499925723D25B6FE70457A42939995B1D3D6F560FE336333 SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH2 0x780 PUSH1 0x1 PUSH1 0x6 SSTORE JUMP JUMPDEST PUSH2 0xB42 PUSH2 0xF3E JUMP JUMPDEST PUSH1 0xD DUP1 SLOAD PUSH1 0xFF PUSH2 0x100 DUP1 DUP4 DIV DUP3 AND ISZERO DUP2 MUL PUSH2 0xFF00 NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP3 DUP4 SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0xC97260FFB3DF6B903CDFD59E3B5B21A896404903A8E8A83BF60BA3FCA365FBE5 SWAP4 PUSH2 0xB9A SWAP4 SWAP1 DIV SWAP1 SWAP2 AND ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH2 0xBAC PUSH2 0x10BC JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0xC13 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x27B7363C9031B932B0BA37B9 PUSH1 0xA1 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7CB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP1 PUSH2 0xC8F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x4E6F206665657320746F207769746864726177 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7CB JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SSTORE PUSH2 0xCD5 SWAP1 ADDRESS SWAP1 DUP4 PUSH2 0xEDF JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x7F0B212761A7ABE7EC4D2ADEA5A7FA1FEA58234AABF0C01C0E63403FE62013FF DUP3 PUSH1 0x40 MLOAD PUSH2 0xB27 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH2 0xD38 PUSH2 0xF3E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xD62 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7CB JUMP JUMPDEST PUSH2 0x7EC DUP2 PUSH2 0x1027 JUMP JUMPDEST PUSH2 0xD73 PUSH2 0xF3E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xDBD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x125B9D985B1A59081C9958DA5C1A595B9D PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7CB JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0xE08 JUMPI PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP3 SWAP1 SSTORE SWAP2 DUP5 AND DUP2 MSTORE KECCAK256 DUP2 SWAP1 SSTORE JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0xBA887708E7D4436DD36B62187BDCED03E0B9ABE66CAF392A66DD84386641B209 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH2 0x9FA DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x10E6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0x0 NOT DUP2 LT ISZERO PUSH2 0xED9 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xECA JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x7CB JUMP JUMPDEST PUSH2 0xED9 DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x10E6 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xF09 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7CB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xF33 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7CB JUMP JUMPDEST PUSH2 0x9FA DUP4 DUP4 DUP4 PUSH2 0x11BB JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x780 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7CB JUMP JUMPDEST PUSH2 0xF73 PUSH2 0x132F JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xB9A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xFE5 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7CB JUMP JUMPDEST PUSH2 0x7DE PUSH1 0x0 DUP4 DUP4 PUSH2 0x11BB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x101B JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7CB JUMP JUMPDEST PUSH2 0x7DE DUP3 PUSH1 0x0 DUP4 PUSH2 0x11BB JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x1081 PUSH2 0x1359 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0xFA3 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x6 SLOAD SUB PUSH2 0x10DF JUMPI PUSH1 0x40 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x6 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x1110 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7CB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x113A JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7CB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0xED9 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x11AD SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH2 0x11C3 PUSH2 0x1359 JUMP JUMPDEST PUSH2 0x11CD DUP4 DUP4 PUSH2 0x6D7 JUMP JUMPDEST ISZERO PUSH2 0x1324 JUMPI PUSH1 0x0 DUP1 PUSH2 0x11DE DUP4 PUSH2 0x7EF JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP PUSH1 0x0 PUSH2 0x11EF DUP3 DUP5 PUSH2 0x16BA JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x11FD DUP3 DUP7 PUSH2 0x16EA JUMP JUMPDEST SWAP1 POP DUP2 ISZERO PUSH2 0x1310 JUMPI PUSH2 0x1210 DUP8 ADDRESS DUP5 PUSH2 0x1384 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP7 SWAP3 SWAP1 PUSH2 0x1258 SWAP1 DUP5 SWAP1 PUSH2 0x16BA JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP6 SWAP3 SWAP1 PUSH2 0x1287 SWAP1 DUP5 SWAP1 PUSH2 0x16BA JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP4 PUSH1 0x8 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x12A0 SWAP2 SWAP1 PUSH2 0x16BA JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x9 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x12B9 SWAP2 SWAP1 PUSH2 0x16BA JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP7 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP7 SWAP1 MSTORE SWAP1 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP9 AND SWAP2 SWAP1 DUP10 AND SWAP1 PUSH32 0xDE5D657C00D557886C53E267FF792A157187BC1C5947BD02CB62159550EDB08E SWAP1 PUSH1 0x60 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST PUSH2 0x131B DUP8 DUP8 DUP4 PUSH2 0x1384 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x9FA DUP4 DUP4 DUP4 PUSH2 0x1384 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x780 JUMPI PUSH1 0x40 MLOAD PUSH4 0x8DFC202B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x780 JUMPI PUSH1 0x40 MLOAD PUSH4 0xD93C0665 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x13AF JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x13A4 SWAP2 SWAP1 PUSH2 0x16BA JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x1421 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x1402 JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x7CB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x143D JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x145C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x14A1 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x14DB JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x14BF JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1513 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x152B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1534 DUP4 PUSH2 0x14FC JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1557 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1560 DUP5 PUSH2 0x14FC JUMP JUMPDEST SWAP3 POP PUSH2 0x156E PUSH1 0x20 DUP6 ADD PUSH2 0x14FC JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1591 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x159A DUP4 PUSH2 0x14FC JUMP JUMPDEST SWAP2 POP PUSH2 0x15A8 PUSH1 0x20 DUP5 ADD PUSH2 0x14FC JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x15C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x15CC DUP3 PUSH2 0x14FC JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x15E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x7EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x160D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1616 DUP4 PUSH2 0x14FC JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x1626 DUP2 PUSH2 0x15EC JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1645 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1665 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x6AD JUMPI PUSH2 0x6AD PUSH2 0x166B JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x16B5 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x6AD JUMPI PUSH2 0x6AD PUSH2 0x166B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x15CC DUP2 PUSH2 0x15EC JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x6AD JUMPI PUSH2 0x6AD PUSH2 0x166B JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD9 CREATE 0xD3 0xEE DUP12 SWAP6 BYTE PUSH16 0x4B2BB2DFAB36B50B0E51888A74BAB1E3 0xEE 0x1F SDIV PUSH10 0x5895E4E664736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"458:7819:24:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;910:32;;;;;;;;-1:-1:-1;;;;;178:32:25;;;160:51;;148:2;133:18;910:32:24;;;;;;;;1760:89:3;;;:::i;:::-;;;;;;;:::i;3979:186::-;;;;;;:::i;:::-;;:::i;:::-;;;1377:14:25;;1370:22;1352:41;;1340:2;1325:18;3979:186:3;1212:187:25;2830:97:3;2908:12;;2830:97;;;1550:25:25;;;1538:2;1523:18;2830:97:3;1404:177:25;814:43:24;;852:5;814:43;;4757:244:3;;;;;;:::i;:::-;;:::i;2688:82::-;;;2761:2;2061:36:25;;2049:2;2034:18;2688:82:3;1919:184:25;3377:290:24;;;;;;:::i;:::-;;:::i;1253:41::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1014:40;;;;;;7750:65;;;:::i;:::-;;7434:141;;;;;;:::i;:::-;;:::i;618:87:5:-;;;;;;:::i;:::-;;:::i;1166:54:24:-;;;;;;:::i;:::-;;;;;;;;;;;;;;3058:236;;;;;;:::i;:::-;;:::i;:::-;;;;2923:25:25;;;2979:2;2964:18;;2957:34;;;;2896:18;3058:236:24;2749:248:25;648:46:24;;691:3;648:46;;1726:84:12;1796:7;;-1:-1:-1;;;1796:7:12;;;;1726:84;;722:74:24;;;:::i;2985:116:3:-;;;;;;:::i;:::-;-1:-1:-1;;;;;3076:18:3;3050:7;3076:18;;;;;;;;;;;;2985:116;2293:101:0;;;:::i;1021:158:5:-;;;;;;:::i;:::-;;:::i;7877:77:24:-;;;:::i;1060:41::-;;;;;;7631:61;;;:::i;1638:85:0:-;1710:6;;-1:-1:-1;;;;;1710:6:0;1638:85;;6392:166:24;;;;;;:::i;:::-;;:::i;1962:93:3:-;;;:::i;1386:23:24:-;;;;;;;;;;;;3296:178:3;;;;;;:::i;:::-;;:::i;8054:221:24:-;;;;;;:::i;:::-;;:::i;1326:19::-;;;;;;;;;1351:29;;;;;1107:53;;;;;;:::i;:::-;;;;;;;;;;;;;;5394:473;;;:::i;3532:140:3:-;;;;;;:::i;:::-;-1:-1:-1;;;;;3638:18:3;;;3612:7;3638:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3532:140;6611:123:24;;;:::i;4985:340::-;;;:::i;948:35::-;;;;;-1:-1:-1;;;;;948:35:24;;;5920:410;-1:-1:-1;;;;;6144:7:24;6125:27;;5975:22;6125:27;;;:18;:27;;;;;;;;;6200:20;;;;;6180:41;;:19;:41;;;;;;6246:25;;6297:26;;5920:410;;;3676:25:25;;;3732:2;3717:18;;3710:34;;;;3760:18;;;3753:34;3818:2;3803:18;;3796:34;3663:3;3648:19;5920:410:24;3445:391:25;2543:215:0;;;;;;:::i;:::-;;:::i;6798:573:24:-;;;;;;:::i;:::-;;:::i;1760:89:3:-;1805:13;1837:5;1830:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1760:89;:::o;3979:186::-;4052:4;735:10:9;4106:31:3;735:10:9;4122:7:3;4131:5;4106:8;:31::i;:::-;4154:4;4147:11;;;3979:186;;;;;:::o;4757:244::-;4844:4;735:10:9;4900:37:3;4916:4;735:10:9;4931:5:3;4900:15;:37::i;:::-;4947:26;4957:4;4963:2;4967:5;4947:9;:26::i;:::-;-1:-1:-1;4990:4:3;;4757:244;-1:-1:-1;;;;4757:244:3:o;3377:290:24:-;3469:11;;3448:4;;3469:11;;;;;3464:30;;-1:-1:-1;3489:5:24;3482:12;;3464:30;-1:-1:-1;;;;;3508:15:24;;;;;;:9;:15;;;;;;;;;:32;;-1:-1:-1;;;;;;3527:13:24;;;;;;:9;:13;;;;;;;;3508:32;3504:50;;;-1:-1:-1;3549:5:24;3542:12;;3504:50;-1:-1:-1;;;;;3568:18:24;;;;:38;;-1:-1:-1;;;;;;3590:16:24;;;3568:38;3564:56;;;-1:-1:-1;3615:5:24;3608:12;;3564:56;-1:-1:-1;3656:4:24;3377:290;;;;:::o;7750:65::-;1531:13:0;:11;:13::i;:::-;7798:10:24::1;:8;:10::i;:::-;7750:65::o:0;7434:141::-;1531:13:0;:11;:13::i;:::-;7513:7:24::1;::::0;::::1;;7505:36;;;::::0;-1:-1:-1;;;7505:36:24;;4428:2:25;7505:36:24::1;::::0;::::1;4410:21:25::0;4467:2;4447:18;;;4440:30;-1:-1:-1;;;4486:18:25;;;4479:46;4542:18;;7505:36:24::1;;;;;;;;;7551:17;7557:2;7561:6;7551:5;:17::i;:::-;7434:141:::0;;:::o;618:87:5:-;672:26;735:10:9;692:5:5;672;:26::i;:::-;618:87;:::o;3058:236:24:-;3118:18;;852:5;3183:24;617:3;3183:6;:24;:::i;:::-;3182:40;;;;:::i;:::-;3169:53;-1:-1:-1;852:5:24;3247:25;691:3;3247:6;:25;:::i;:::-;3246:41;;;;:::i;:::-;3232:55;;3058:236;;;:::o;722:74::-;762:34;691:3;;762:34;:::i;:::-;722:74;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;1021:158:5:-:0;1096:45;1112:7;735:10:9;1135:5:5;1096:15;:45::i;:::-;1151:21;1157:7;1166:5;1151;:21::i;7877:77:24:-;1531:13:0;:11;:13::i;:::-;7932:7:24::1;:15:::0;;-1:-1:-1;;7932:15:24::1;::::0;;7877:77::o;7631:61::-;1531:13:0;:11;:13::i;:::-;7677:8:24::1;:6;:8::i;6392:166::-:0;1531:13:0;:11;:13::i;:::-;-1:-1:-1;;;;;6473:18:24;::::1;;::::0;;;:9:::1;:18;::::0;;;;;;;;:27;;-1:-1:-1;;6473:27:24::1;::::0;::::1;;::::0;;::::1;::::0;;;6515:36;;1352:41:25;;;6515:36:24::1;::::0;1325:18:25;6515:36:24::1;;;;;;;6392:166:::0;;:::o;1962:93:3:-;2009:13;2041:7;2034:14;;;;;:::i;3296:178::-;3365:4;735:10:9;3419:27:3;735:10:9;3436:2:3;3440:5;3419:9;:27::i;8054:221:24:-;1531:13:0;:11;:13::i;:::-;8175:4:24::1;-1:-1:-1::0;;;;;8151:29:24;::::1;::::0;8143:69:::1;;;::::0;-1:-1:-1;;;8143:69:24;;5430:2:25;8143:69:24::1;::::0;::::1;5412:21:25::0;5469:2;5449:18;;;5442:30;5508:29;5488:18;;;5481:57;5555:18;;8143:69:24::1;5228:351:25::0;8143:69:24::1;8229:12;-1:-1:-1::0;;;;;8222:29:24::1;;8252:7;1710:6:0::0;;-1:-1:-1;;;;;1710:6:0;;1638:85;8252:7:24::1;8222:46;::::0;-1:-1:-1;;;;;;8222:46:24::1;::::0;;;;;;-1:-1:-1;;;;;5776:32:25;;;8222:46:24::1;::::0;::::1;5758:51:25::0;5825:18;;;5818:34;;;5731:18;;8222:46:24::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;8054:221:::0;;:::o;5394:473::-;2500:21:13;:19;:21::i;:::-;5480:20:24::1;::::0;-1:-1:-1;;;;;5480:20:24::1;5466:10;:34;5458:70;;;::::0;-1:-1:-1;;;5458:70:24;;6315:2:25;5458:70:24::1;::::0;::::1;6297:21:25::0;6354:2;6334:18;;;6327:30;6393:25;6373:18;;;6366:53;6436:18;;5458:70:24::1;6113:347:25::0;5458:70:24::1;5584:20;::::0;-1:-1:-1;;;;;5584:20:24::1;5547:14;5564:41:::0;;;:19:::1;:41;::::0;;;;;5623:10;5615:42:::1;;;::::0;-1:-1:-1;;;5615:42:24;;6667:2:25;5615:42:24::1;::::0;::::1;6649:21:25::0;6706:2;6686:18;;;6679:30;-1:-1:-1;;;6725:18:25;;;6718:49;6784:18;;5615:42:24::1;6465:343:25::0;5615:42:24::1;5696:20;::::0;;-1:-1:-1;;;;;5696:20:24;;::::1;5720:1;5676:41:::0;;;:19:::1;:41;::::0;;;;:45;5756:20;;5731:54:::1;::::0;5749:4:::1;::::0;5756:20:::1;5778:6:::0;5731:9:::1;:54::i;:::-;5831:20;::::0;5809:51:::1;::::0;1550:25:25;;;-1:-1:-1;;;;;5831:20:24;;::::1;::::0;5809:51:::1;::::0;1538:2:25;1523:18;5809:51:24::1;;;;;;;;5448:419;2542:20:13::0;1857:1;3068:7;:21;2888:208;6611:123:24;1531:13:0;:11;:13::i;:::-;6677:11:24::1;::::0;;::::1;;::::0;;::::1;::::0;::::1;6676:12;6662:26:::0;::::1;-1:-1:-1::0;;6662:26:24;;::::1;::::0;;;::::1;::::0;;;;6703:24:::1;::::0;::::1;::::0;::::1;::::0;6715:11;::::1;::::0;;::::1;1377:14:25::0;1370:22;1352:41;;1340:2;1325:18;;1212:187;6703:24:24::1;;;;;;;;6611:123::o:0;4985:340::-;2500:21:13;:19;:21::i;:::-;1975:10:24::1;-1:-1:-1::0;;;;;1989:7:24::1;1975:21;;1967:46;;;::::0;-1:-1:-1;;;1967:46:24;;7015:2:25;1967:46:24::1;::::0;::::1;6997:21:25::0;7054:2;7034:18;;;7027:30;-1:-1:-1;;;7073:18:25;;;7066:42;7125:18;;1967:46:24::1;6813:336:25::0;1967:46:24::1;-1:-1:-1::0;;;;;5096:7:24::2;5077:27;5060:14;5077:27:::0;;;:18:::2;:27;::::0;;;;;5122:10;5114:42:::2;;;::::0;-1:-1:-1;;;5114:42:24;;6667:2:25;5114:42:24::2;::::0;::::2;6649:21:25::0;6706:2;6686:18;;;6679:30;-1:-1:-1;;;6725:18:25;;;6718:49;6784:18;;5114:42:24::2;6465:343:25::0;5114:42:24::2;5194:7;-1:-1:-1::0;;;;;5175:27:24;::::2;5205:1;5175:27:::0;;;:18:::2;:27;::::0;;;;:31;5216:41:::2;::::0;5234:4:::2;::::0;5250:6;5216:9:::2;:41::i;:::-;5302:7;-1:-1:-1::0;;;;;5281:37:24::2;;5311:6;5281:37;;;;1550:25:25::0;;1538:2;1523:18;;1404:177;2543:215:0;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:0;::::1;2623:91;;2672:31;::::0;-1:-1:-1;;;2672:31:0;;2700:1:::1;2672:31;::::0;::::1;160:51:25::0;133:18;;2672:31:0::1;14:203:25::0;2623:91:0::1;2723:28;2742:8;2723:18;:28::i;6798:573:24:-:0;1531:13:0;:11;:13::i;:::-;-1:-1:-1;;;;;6893:26:24;::::1;6885:56;;;::::0;-1:-1:-1;;;6885:56:24;;7356:2:25;6885:56:24::1;::::0;::::1;7338:21:25::0;7395:2;7375:18;;;7368:30;-1:-1:-1;;;7414:18:25;;;7407:47;7471:18;;6885:56:24::1;7154:341:25::0;6885:56:24::1;7068:20;::::0;-1:-1:-1;;;;;7068:20:24::1;7024:21;7048:41:::0;;;:19:::1;:41;::::0;;;;;7103:17;;7099:156:::1;;7156:20;::::0;-1:-1:-1;;;;;7156:20:24;;::::1;7180:1;7136:41:::0;;;:19:::1;:41;::::0;;;;;:45;;;7195:33;;::::1;::::0;;;:49;;;7099:156:::1;7273:20;:35:::0;;-1:-1:-1;;;;;;7273:35:24::1;-1:-1:-1::0;;;;;7273:35:24;::::1;::::0;;::::1;::::0;;;7323:41:::1;::::0;::::1;::::0;-1:-1:-1;;7323:41:24::1;6875:496;6798:573:::0;:::o;8707:128:3:-;8791:37;8800:5;8807:7;8816:5;8823:4;8791:8;:37::i;10396:476::-;-1:-1:-1;;;;;3638:18:3;;;10495:24;3638:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;-1:-1:-1;;10561:36:3;;10557:309;;;10636:5;10617:16;:24;10613:130;;;10668:60;;-1:-1:-1;;;10668:60:3;;-1:-1:-1;;;;;7720:32:25;;10668:60:3;;;7702:51:25;7769:18;;;7762:34;;;7812:18;;;7805:34;;;7675:18;;10668:60:3;7500:345:25;10613:130:3;10784:57;10793:5;10800:7;10828:5;10809:16;:24;10835:5;10784:8;:57::i;:::-;10485:387;10396:476;;;:::o;5374:300::-;-1:-1:-1;;;;;5457:18:3;;5453:86;;5498:30;;-1:-1:-1;;;5498:30:3;;5525:1;5498:30;;;160:51:25;133:18;;5498:30:3;14:203:25;5453:86:3;-1:-1:-1;;;;;5552:16:3;;5548:86;;5591:32;;-1:-1:-1;;;5591:32:3;;5620:1;5591:32;;;160:51:25;133:18;;5591:32:3;14:203:25;5548:86:3;5643:24;5651:4;5657:2;5661:5;5643:7;:24::i;1796:162:0:-;1710:6;;-1:-1:-1;;;;;1710:6:0;735:10:9;1855:23:0;1851:101;;1901:40;;-1:-1:-1;;;1901:40:0;;735:10:9;1901:40:0;;;160:51:25;133:18;;1901:40:0;14:203:25;2586:117:12;1597:16;:14;:16::i;:::-;2644:7:::1;:15:::0;;-1:-1:-1;;;;2644:15:12::1;::::0;;2674:22:::1;735:10:9::0;2683:12:12::1;2674:22;::::0;-1:-1:-1;;;;;178:32:25;;;160:51;;148:2;133:18;2674:22:12::1;14:203:25::0;7439:208:3;-1:-1:-1;;;;;7509:21:3;;7505:91;;7553:32;;-1:-1:-1;;;7553:32:3;;7582:1;7553:32;;;160:51:25;133:18;;7553:32:3;14:203:25;7505:91:3;7605:35;7621:1;7625:7;7634:5;7605:7;:35::i;7965:206::-;-1:-1:-1;;;;;8035:21:3;;8031:89;;8079:30;;-1:-1:-1;;;8079:30:3;;8106:1;8079:30;;;160:51:25;133:18;;8079:30:3;14:203:25;8031:89:3;8129:35;8137:7;8154:1;8158:5;8129:7;:35::i;2912:187:0:-;3004:6;;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;;3052:40;;3004:6;;;3020:17;3004:6;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;2339:115:12:-;1350:19;:17;:19::i;:::-;2398:7:::1;:14:::0;;-1:-1:-1;;;;2398:14:12::1;-1:-1:-1::0;;;2398:14:12::1;::::0;;2427:20:::1;2434:12;735:10:9::0;;656:96;2575:307:13;1899:1;2702:7;;:18;2698:86;;2743:30;;-1:-1:-1;;;2743:30:13;;;;;;;;;;;2698:86;1899:1;2858:7;:17;2575:307::o;9682:432:3:-;-1:-1:-1;;;;;9794:19:3;;9790:89;;9836:32;;-1:-1:-1;;;9836:32:3;;9865:1;9836:32;;;160:51:25;133:18;;9836:32:3;14:203:25;9790:89:3;-1:-1:-1;;;;;9892:21:3;;9888:90;;9936:31;;-1:-1:-1;;;9936:31:3;;9964:1;9936:31;;;160:51:25;133:18;;9936:31:3;14:203:25;9888:90:3;-1:-1:-1;;;;;9987:18:3;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;:35;;;10032:76;;;;10082:7;-1:-1:-1;;;;;10066:31:3;10075:5;-1:-1:-1;;;;;10066:31:3;;10091:5;10066:31;;;;1550:25:25;;1538:2;1523:18;;1404:177;10066:31:3;;;;;;;;9682:432;;;;:::o;3744:1173:24:-;1350:19:12;:17;:19::i;:::-;3887:24:24::1;3902:4;3908:2;3887:14;:24::i;:::-;3883:1028;;;3928:18;3948:19:::0;3971:21:::1;3985:6;3971:13;:21::i;:::-;3927:65:::0;;-1:-1:-1;3927:65:24;-1:-1:-1;4006:17:24::1;4026:24;3927:65:::0;;4026:24:::1;:::i;:::-;4006:44:::0;-1:-1:-1;4064:22:24::1;4089:18;4006:44:::0;4089:6;:18:::1;:::i;:::-;4064:43:::0;-1:-1:-1;4184:13:24;;4180:497:::1;;4217:45;4231:4;4245;4252:9;4217:13;:45::i;:::-;-1:-1:-1::0;;;;;4354:7:24::1;4335:27;;::::0;;;:18:::1;:27;::::0;;;;:41;;4366:10;;4335:27;:41:::1;::::0;4366:10;;4335:41:::1;:::i;:::-;::::0;;;-1:-1:-1;;4414:20:24::1;::::0;-1:-1:-1;;;;;4414:20:24::1;4394:41;::::0;;;:19:::1;:41;::::0;;;;:56;;4439:11;;4394:41;:56:::1;::::0;4439:11;;4394:56:::1;:::i;:::-;;;;;;;;4497:10;4468:25;;:39;;;;;;;:::i;:::-;;;;;;;;4555:11;4525:26;;:41;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;4606:56:24::1;::::0;;8185:25:25;;;8241:2;8226:18;;8219:34;;;8269:18;;;8262:34;;;-1:-1:-1;;;;;4606:56:24;;::::1;::::0;;;::::1;::::0;::::1;::::0;8173:2:25;8158:18;4606:56:24::1;;;;;;;4180:497;4757:39;4771:4;4777:2;4781:14;4757:13;:39::i;:::-;3913:894;;;;8222:46;8054:221:::0;;:::o;3883:1028::-:1;4869:31;4883:4;4889:2;4893:6;4869:13;:31::i;2078:126:12:-:0;1796:7;;-1:-1:-1;;;1796:7:12;;;;2136:62;;2172:15;;-1:-1:-1;;;2172:15:12;;;;;;;;;;;1878:128;1796:7;;-1:-1:-1;;;1796:7:12;;;;1939:61;;;1974:15;;-1:-1:-1;;;1974:15:12;;;;;;;;;;;5989:1107:3;-1:-1:-1;;;;;6078:18:3;;6074:540;;6230:5;6214:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;6074:540:3;;-1:-1:-1;6074:540:3;;-1:-1:-1;;;;;6288:15:3;;6266:19;6288:15;;;;;;;;;;;6321:19;;;6317:115;;;6367:50;;-1:-1:-1;;;6367:50:3;;-1:-1:-1;;;;;7720:32:25;;6367:50:3;;;7702:51:25;7769:18;;;7762:34;;;7812:18;;;7805:34;;;7675:18;;6367:50:3;7500:345:25;6317:115:3;-1:-1:-1;;;;;6552:15:3;;:9;:15;;;;;;;;;;6570:19;;;;6552:37;;6074:540;-1:-1:-1;;;;;6628:16:3;;6624:425;;6791:12;:21;;;;;;;6624:425;;;-1:-1:-1;;;;;7002:13:3;;:9;:13;;;;;;;;;;:22;;;;;;6624:425;7079:2;-1:-1:-1;;;;;7064:25:3;7073:4;-1:-1:-1;;;;;7064:25:3;;7083:5;7064:25;;;;1550::25;;1538:2;1523:18;;1404:177;7064:25:3;;;;;;;;5989:1107;;;:::o;222:548:25:-;334:4;363:2;392;381:9;374:21;424:6;418:13;467:6;462:2;451:9;447:18;440:34;492:1;502:140;516:6;513:1;510:13;502:140;;;611:14;;;607:23;;601:30;577:17;;;596:2;573:26;566:66;531:10;;502:140;;;506:3;691:1;686:2;677:6;666:9;662:22;658:31;651:42;761:2;754;750:7;745:2;737:6;733:15;729:29;718:9;714:45;710:54;702:62;;;;222:548;;;;:::o;775:173::-;843:20;;-1:-1:-1;;;;;892:31:25;;882:42;;872:70;;938:1;935;928:12;872:70;775:173;;;:::o;953:254::-;1021:6;1029;1082:2;1070:9;1061:7;1057:23;1053:32;1050:52;;;1098:1;1095;1088:12;1050:52;1121:29;1140:9;1121:29;:::i;:::-;1111:39;1197:2;1182:18;;;;1169:32;;-1:-1:-1;;;953:254:25:o;1586:328::-;1663:6;1671;1679;1732:2;1720:9;1711:7;1707:23;1703:32;1700:52;;;1748:1;1745;1738:12;1700:52;1771:29;1790:9;1771:29;:::i;:::-;1761:39;;1819:38;1853:2;1842:9;1838:18;1819:38;:::i;:::-;1809:48;;1904:2;1893:9;1889:18;1876:32;1866:42;;1586:328;;;;;:::o;2108:260::-;2176:6;2184;2237:2;2225:9;2216:7;2212:23;2208:32;2205:52;;;2253:1;2250;2243:12;2205:52;2276:29;2295:9;2276:29;:::i;:::-;2266:39;;2324:38;2358:2;2347:9;2343:18;2324:38;:::i;:::-;2314:48;;2108:260;;;;;:::o;2373:186::-;2432:6;2485:2;2473:9;2464:7;2460:23;2456:32;2453:52;;;2501:1;2498;2491:12;2453:52;2524:29;2543:9;2524:29;:::i;:::-;2514:39;2373:186;-1:-1:-1;;;2373:186:25:o;2564:180::-;2623:6;2676:2;2664:9;2655:7;2651:23;2647:32;2644:52;;;2692:1;2689;2682:12;2644:52;-1:-1:-1;2715:23:25;;2564:180;-1:-1:-1;2564:180:25:o;3002:118::-;3088:5;3081:13;3074:21;3067:5;3064:32;3054:60;;3110:1;3107;3100:12;3125:315;3190:6;3198;3251:2;3239:9;3230:7;3226:23;3222:32;3219:52;;;3267:1;3264;3257:12;3219:52;3290:29;3309:9;3290:29;:::i;:::-;3280:39;;3369:2;3358:9;3354:18;3341:32;3382:28;3404:5;3382:28;:::i;:::-;3429:5;3419:15;;;3125:315;;;;;:::o;3841:380::-;3920:1;3916:12;;;;3963;;;3984:61;;4038:4;4030:6;4026:17;4016:27;;3984:61;4091:2;4083:6;4080:14;4060:18;4057:38;4054:161;;4137:10;4132:3;4128:20;4125:1;4118:31;4172:4;4169:1;4162:15;4200:4;4197:1;4190:15;4054:161;;3841:380;;;:::o;4571:127::-;4632:10;4627:3;4623:20;4620:1;4613:31;4663:4;4660:1;4653:15;4687:4;4684:1;4677:15;4703:168;4776:9;;;4807;;4824:15;;;4818:22;;4804:37;4794:71;;4845:18;;:::i;4876:217::-;4916:1;4942;4932:132;;4986:10;4981:3;4977:20;4974:1;4967:31;5021:4;5018:1;5011:15;5049:4;5046:1;5039:15;4932:132;-1:-1:-1;5078:9:25;;4876:217::o;5098:125::-;5163:9;;;5184:10;;;5181:36;;;5197:18;;:::i;5863:245::-;5930:6;5983:2;5971:9;5962:7;5958:23;5954:32;5951:52;;;5999:1;5996;5989:12;5951:52;6031:9;6025:16;6050:28;6072:5;6050:28;:::i;7850:128::-;7917:9;;;7938:11;;;7935:37;;;7952:18;;:::i"},"methodIdentifiers":{"BPS_DIVISOR()":"191fe1ed","CREATOR_FEE_BPS()":"cc3cbd2a","PLATFORM_FEE_BPS()":"539aa77f","TOTAL_FEE_BPS()":"6f28507c","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","burn(uint256)":"42966c68","burnFrom(address,uint256)":"79cc6790","calculateFees(uint256)":"52238fdd","canBurn()":"c1eb1840","canMint()":"beb9716d","creator()":"02d05d3f","decimals()":"313ce567","disableMinting()":"7e5cd5c1","feeExempt(address)":"398daa85","feesEnabled()":"a64e4f8a","getFeeStats()":"f28ab2be","mint(address,uint256)":"40c10f19","name()":"06fdde03","owner()":"8da5cb5b","pause()":"8456cb59","paused()":"5c975abb","pendingCreatorFees(address)":"c598b2f9","pendingPlatformFees(address)":"5146fcd5","platformFeeRecipient()":"eb13554f","recoverToken(address,uint256)":"b29a8140","renounceOwnership()":"715018a6","setFeeExempt(address,bool)":"8ebfc796","shouldTakeFees(address,address)":"338dd3b1","symbol()":"95d89b41","toggleFees()":"ddf54512","totalCreatorFeesCollected()":"3b4b9399","totalPlatformFeesCollected()":"82c3188c","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd","transferOwnership(address)":"f2fde38b","unpause()":"3f4ba83a","updatePlatformFeeRecipient(address)":"f5fe7f71","withdrawCreatorFees()":"e1cd04b4","withdrawPlatformFees()":"d0b7830b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"initialSupply\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_creator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_platformFeeRecipient\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_canMint\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"_canBurn\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"_startWithFeesEnabled\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"CreatorFeesWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"exempt\",\"type\":\"bool\"}],\"name\":\"FeeExemptionUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"creatorFee\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"platformFee\",\"type\":\"uint256\"}],\"name\":\"FeesCollected\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"}],\"name\":\"FeesToggled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newRecipient\",\"type\":\"address\"}],\"name\":\"PlatformFeeRecipientUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"PlatformFeesWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BPS_DIVISOR\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"CREATOR_FEE_BPS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PLATFORM_FEE_BPS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TOTAL_FEE_BPS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"calculateFees\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"creatorFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"platformFee\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"canBurn\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"canMint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"creator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"disableMinting\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"feeExempt\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feesEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getFeeStats\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"creatorPending\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"platformPending\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"creatorTotal\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"platformTotal\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"pendingCreatorFees\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"pendingPlatformFees\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"platformFeeRecipient\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"recoverToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"exempt\",\"type\":\"bool\"}],\"name\":\"setFeeExempt\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"shouldTakeFees\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"toggleFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalCreatorFeesCollected\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalPlatformFeesCollected\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newRecipient\",\"type\":\"address\"}],\"name\":\"updatePlatformFeeRecipient\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawCreatorFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawPlatformFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC20 token with creator fee mechanism for revenue sharing\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`.\"},\"calculateFees(uint256)\":{\"details\":\"Calculate fee amounts for a transfer\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"disableMinting()\":{\"details\":\"Disable minting permanently\"},\"getFeeStats()\":{\"details\":\"Get fee statistics\"},\"mint(address,uint256)\":{\"details\":\"Mint new tokens (if enabled)\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"pause()\":{\"details\":\"Pause token transfers\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"recoverToken(address,uint256)\":{\"details\":\"Emergency function to recover stuck tokens (not the token itself)\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"setFeeExempt(address,bool)\":{\"details\":\"Update fee exemption status\"},\"shouldTakeFees(address,address)\":{\"details\":\"Check if fees should be applied to this transfer\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"toggleFees()\":{\"details\":\"Toggle fees on/off\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"unpause()\":{\"details\":\"Unpause token transfers\"},\"updatePlatformFeeRecipient(address)\":{\"details\":\"Update platform fee recipient\"},\"withdrawCreatorFees()\":{\"details\":\"Withdraw accumulated creator fees\"},\"withdrawPlatformFees()\":{\"details\":\"Withdraw accumulated platform fees\"}},\"title\":\"MemeCoinWithFees\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MemeCoinWithFees.sol\":\"MemeCoinWithFees\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x2659248df25e34000ed214b3dc8da2160bc39874c992b477d9e2b1b3283dc073\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c345af1b0e7ea28d1216d6a04ab28f5534a5229b9edf9ca3cd0e84950ae58d26\",\"dweb:/ipfs/QmY63jtSrYpLRe8Gj1ep2vMDCKxGNNG3hnNVKBVnrs2nmA\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xdb484371dfbb848cb6f5d70464e9ac9b2900e4164ead76bbce4fef0b44bcc68f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f9d6f6f6600a2bec622f699081b58350873b5e63ce05464d17d674a290bb8a7c\",\"dweb:/ipfs/QmQKVzSQY1PM3Bid4QhgVVZyx6B4Jx7XgaQzLKHj38vJz8\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]},\"contracts/MemeCoinWithFees.sol\":{\"keccak256\":\"0xd601f02a54eb772be0ed0a69a7d641add4f972091f391ab26575e6e18d006517\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3579318c7e664abde3afb922bab8df586b2261c31af3ce354075d45e6708ef95\",\"dweb:/ipfs/QmeMYo5LFi6gxvUCU3BvASBNBhtUxcgF3qj5N1EZyAif92\"]}},\"version\":1}"}}}}}